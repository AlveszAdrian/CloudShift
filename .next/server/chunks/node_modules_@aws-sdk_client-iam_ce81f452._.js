module.exports = {

"[project]/node_modules/@aws-sdk/client-iam/dist-es/auth/httpAuthSchemeProvider.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "defaultIAMHttpAuthSchemeParametersProvider": (()=>defaultIAMHttpAuthSchemeParametersProvider),
    "defaultIAMHttpAuthSchemeProvider": (()=>defaultIAMHttpAuthSchemeProvider),
    "resolveHttpAuthSchemeConfig": (()=>resolveHttpAuthSchemeConfig)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$httpAuthSchemes$2f$aws_sdk$2f$resolveAwsSdkSigV4Config$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/resolveAwsSdkSigV4Config.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$util$2d$middleware$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/util-middleware/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$util$2d$middleware$2f$dist$2d$es$2f$getSmithyContext$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/util-middleware/dist-es/getSmithyContext.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$util$2d$middleware$2f$dist$2d$es$2f$normalizeProvider$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/util-middleware/dist-es/normalizeProvider.js [app-route] (ecmascript)");
;
;
const defaultIAMHttpAuthSchemeParametersProvider = async (config, context, input)=>{
    return {
        operation: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$util$2d$middleware$2f$dist$2d$es$2f$getSmithyContext$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getSmithyContext"])(context).operation,
        region: await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$util$2d$middleware$2f$dist$2d$es$2f$normalizeProvider$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["normalizeProvider"])(config.region)() || (()=>{
            throw new Error("expected `region` to be configured for `aws.auth#sigv4`");
        })()
    };
};
function createAwsAuthSigv4HttpAuthOption(authParameters) {
    return {
        schemeId: "aws.auth#sigv4",
        signingProperties: {
            name: "iam",
            region: authParameters.region
        },
        propertiesExtractor: (config, context)=>({
                signingProperties: {
                    config,
                    context
                }
            })
    };
}
const defaultIAMHttpAuthSchemeProvider = (authParameters)=>{
    const options = [];
    switch(authParameters.operation){
        default:
            {
                options.push(createAwsAuthSigv4HttpAuthOption(authParameters));
            }
    }
    return options;
};
const resolveHttpAuthSchemeConfig = (config)=>{
    const config_0 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$httpAuthSchemes$2f$aws_sdk$2f$resolveAwsSdkSigV4Config$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["resolveAwsSdkSigV4Config"])(config);
    return Object.assign(config_0, {});
};
}}),
"[project]/node_modules/@aws-sdk/client-iam/dist-es/endpoint/EndpointParameters.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "commonParams": (()=>commonParams),
    "resolveClientEndpointParameters": (()=>resolveClientEndpointParameters)
});
const resolveClientEndpointParameters = (options)=>{
    return Object.assign(options, {
        useDualstackEndpoint: options.useDualstackEndpoint ?? false,
        useFipsEndpoint: options.useFipsEndpoint ?? false,
        defaultSigningName: "iam"
    });
};
const commonParams = {
    UseFIPS: {
        type: "builtInParams",
        name: "useFipsEndpoint"
    },
    Endpoint: {
        type: "builtInParams",
        name: "endpoint"
    },
    Region: {
        type: "builtInParams",
        name: "region"
    },
    UseDualStack: {
        type: "builtInParams",
        name: "useDualstackEndpoint"
    }
};
}}),
"[project]/node_modules/@aws-sdk/client-iam/package.json (json)": ((__turbopack_context__) => {

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.v(JSON.parse("{\"name\":\"@aws-sdk/client-iam\",\"description\":\"AWS SDK for JavaScript Iam Client for Node.js, Browser and React Native\",\"version\":\"3.787.0\",\"scripts\":{\"build\":\"concurrently 'yarn:build:cjs' 'yarn:build:es' 'yarn:build:types'\",\"build:cjs\":\"node ../../scripts/compilation/inline client-iam\",\"build:es\":\"tsc -p tsconfig.es.json\",\"build:include:deps\":\"lerna run --scope $npm_package_name --include-dependencies build\",\"build:types\":\"tsc -p tsconfig.types.json\",\"build:types:downlevel\":\"downlevel-dts dist-types dist-types/ts3.4\",\"clean\":\"rimraf ./dist-* && rimraf *.tsbuildinfo\",\"extract:docs\":\"api-extractor run --local\",\"generate:client\":\"node ../../scripts/generate-clients/single-service --solo iam\"},\"main\":\"./dist-cjs/index.js\",\"types\":\"./dist-types/index.d.ts\",\"module\":\"./dist-es/index.js\",\"sideEffects\":false,\"dependencies\":{\"@aws-crypto/sha256-browser\":\"5.2.0\",\"@aws-crypto/sha256-js\":\"5.2.0\",\"@aws-sdk/core\":\"3.775.0\",\"@aws-sdk/credential-provider-node\":\"3.787.0\",\"@aws-sdk/middleware-host-header\":\"3.775.0\",\"@aws-sdk/middleware-logger\":\"3.775.0\",\"@aws-sdk/middleware-recursion-detection\":\"3.775.0\",\"@aws-sdk/middleware-user-agent\":\"3.787.0\",\"@aws-sdk/region-config-resolver\":\"3.775.0\",\"@aws-sdk/types\":\"3.775.0\",\"@aws-sdk/util-endpoints\":\"3.787.0\",\"@aws-sdk/util-user-agent-browser\":\"3.775.0\",\"@aws-sdk/util-user-agent-node\":\"3.787.0\",\"@smithy/config-resolver\":\"^4.1.0\",\"@smithy/core\":\"^3.2.0\",\"@smithy/fetch-http-handler\":\"^5.0.2\",\"@smithy/hash-node\":\"^4.0.2\",\"@smithy/invalid-dependency\":\"^4.0.2\",\"@smithy/middleware-content-length\":\"^4.0.2\",\"@smithy/middleware-endpoint\":\"^4.1.0\",\"@smithy/middleware-retry\":\"^4.1.0\",\"@smithy/middleware-serde\":\"^4.0.3\",\"@smithy/middleware-stack\":\"^4.0.2\",\"@smithy/node-config-provider\":\"^4.0.2\",\"@smithy/node-http-handler\":\"^4.0.4\",\"@smithy/protocol-http\":\"^5.1.0\",\"@smithy/smithy-client\":\"^4.2.0\",\"@smithy/types\":\"^4.2.0\",\"@smithy/url-parser\":\"^4.0.2\",\"@smithy/util-base64\":\"^4.0.0\",\"@smithy/util-body-length-browser\":\"^4.0.0\",\"@smithy/util-body-length-node\":\"^4.0.0\",\"@smithy/util-defaults-mode-browser\":\"^4.0.8\",\"@smithy/util-defaults-mode-node\":\"^4.0.8\",\"@smithy/util-endpoints\":\"^3.0.2\",\"@smithy/util-middleware\":\"^4.0.2\",\"@smithy/util-retry\":\"^4.0.2\",\"@smithy/util-utf8\":\"^4.0.0\",\"@smithy/util-waiter\":\"^4.0.3\",\"tslib\":\"^2.6.2\"},\"devDependencies\":{\"@tsconfig/node18\":\"18.2.4\",\"@types/node\":\"^18.19.69\",\"concurrently\":\"7.0.0\",\"downlevel-dts\":\"0.10.1\",\"rimraf\":\"3.0.2\",\"typescript\":\"~5.2.2\"},\"engines\":{\"node\":\">=18.0.0\"},\"typesVersions\":{\"<4.0\":{\"dist-types/*\":[\"dist-types/ts3.4/*\"]}},\"files\":[\"dist-*/**\"],\"author\":{\"name\":\"AWS SDK for JavaScript Team\",\"url\":\"https://aws.amazon.com/javascript/\"},\"license\":\"Apache-2.0\",\"browser\":{\"./dist-es/runtimeConfig\":\"./dist-es/runtimeConfig.browser\"},\"react-native\":{\"./dist-es/runtimeConfig\":\"./dist-es/runtimeConfig.native\"},\"homepage\":\"https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-iam\",\"repository\":{\"type\":\"git\",\"url\":\"https://github.com/aws/aws-sdk-js-v3.git\",\"directory\":\"clients/client-iam\"}}"));}}),
"[project]/node_modules/@aws-sdk/client-iam/dist-es/endpoint/ruleset.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "ruleSet": (()=>ruleSet)
});
const H = "required", I = "fn", J = "argv", K = "ref", L = "properties", M = "headers", N = "authSchemes", O = "name", P = "signingRegion";
const a = true, b = "isSet", c = "booleanEquals", d = "error", e = "endpoint", f = "tree", g = "PartitionResult", h = "stringEquals", i = "sigv4", j = {
    [H]: true,
    "default": false,
    "type": "Boolean"
}, k = {
    [H]: false,
    "type": "String"
}, l = {
    [K]: "Endpoint"
}, m = {
    [I]: c,
    [J]: [
        {
            [K]: "UseFIPS"
        },
        true
    ]
}, n = {
    [I]: c,
    [J]: [
        {
            [K]: "UseDualStack"
        },
        true
    ]
}, o = {}, p = {
    [I]: h,
    [J]: [
        {
            [I]: "getAttr",
            [J]: [
                {
                    [K]: g
                },
                "name"
            ]
        },
        "aws"
    ]
}, q = {
    [I]: "getAttr",
    [J]: [
        {
            [K]: g
        },
        "name"
    ]
}, r = {
    [I]: c,
    [J]: [
        {
            [K]: "UseFIPS"
        },
        false
    ]
}, s = {
    [N]: [
        {
            [O]: i,
            [P]: "us-east-1"
        }
    ]
}, t = {
    [I]: h,
    [J]: [
        q,
        "aws-cn"
    ]
}, u = {
    [N]: [
        {
            [O]: i,
            [P]: "cn-north-1"
        }
    ]
}, v = {
    [I]: c,
    [J]: [
        {
            [K]: "UseDualStack"
        },
        false
    ]
}, w = {
    [I]: h,
    [J]: [
        q,
        "aws-us-gov"
    ]
}, x = {
    "url": "https://iam.us-gov.api.aws",
    [L]: {
        [N]: [
            {
                [O]: i,
                [P]: "us-gov-west-1"
            }
        ]
    },
    [M]: {}
}, y = {
    "url": "https://iam.us-gov.amazonaws.com",
    [L]: {
        [N]: [
            {
                [O]: i,
                [P]: "us-gov-west-1"
            }
        ]
    },
    [M]: {}
}, z = {
    [I]: h,
    [J]: [
        q,
        "aws-iso"
    ]
}, A = {
    [N]: [
        {
            [O]: i,
            [P]: "us-iso-east-1"
        }
    ]
}, B = {
    [I]: h,
    [J]: [
        q,
        "aws-iso-b"
    ]
}, C = {
    [N]: [
        {
            [O]: i,
            [P]: "us-isob-east-1"
        }
    ]
}, D = {
    [I]: "getAttr",
    [J]: [
        {
            [K]: g
        },
        "supportsFIPS"
    ]
}, E = {
    [I]: c,
    [J]: [
        true,
        {
            [I]: "getAttr",
            [J]: [
                {
                    [K]: g
                },
                "supportsDualStack"
            ]
        }
    ]
}, F = {
    [N]: [
        {
            [O]: i,
            [P]: "{PartitionResult#implicitGlobalRegion}"
        }
    ]
}, G = [
    {
        [K]: "Region"
    }
];
const _data = {
    version: "1.0",
    parameters: {
        UseDualStack: j,
        UseFIPS: j,
        Endpoint: k,
        Region: k
    },
    rules: [
        {
            conditions: [
                {
                    [I]: b,
                    [J]: [
                        l
                    ]
                }
            ],
            rules: [
                {
                    conditions: [
                        m
                    ],
                    error: "Invalid Configuration: FIPS and custom endpoint are not supported",
                    type: d
                },
                {
                    rules: [
                        {
                            conditions: [
                                n
                            ],
                            error: "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            type: d
                        },
                        {
                            endpoint: {
                                url: l,
                                [L]: o,
                                [M]: o
                            },
                            type: e
                        }
                    ],
                    type: f
                }
            ],
            type: f
        },
        {
            rules: [
                {
                    conditions: [
                        {
                            [I]: b,
                            [J]: G
                        }
                    ],
                    rules: [
                        {
                            conditions: [
                                {
                                    [I]: "aws.partition",
                                    [J]: G,
                                    assign: g
                                }
                            ],
                            rules: [
                                {
                                    conditions: [
                                        p,
                                        r,
                                        n
                                    ],
                                    endpoint: {
                                        url: "https://iam.global.api.aws",
                                        [L]: s,
                                        [M]: o
                                    },
                                    type: e
                                },
                                {
                                    conditions: [
                                        p,
                                        m,
                                        n
                                    ],
                                    endpoint: {
                                        url: "https://iam-fips.global.api.aws",
                                        [L]: s,
                                        [M]: o
                                    },
                                    type: e
                                },
                                {
                                    conditions: [
                                        t,
                                        r,
                                        n
                                    ],
                                    endpoint: {
                                        url: "https://iam.global.api.amazonwebservices.com.cn",
                                        [L]: u,
                                        [M]: o
                                    },
                                    type: e
                                },
                                {
                                    conditions: [
                                        t,
                                        r,
                                        v
                                    ],
                                    endpoint: {
                                        url: "https://iam.cn-north-1.amazonaws.com.cn",
                                        [L]: u,
                                        [M]: o
                                    },
                                    type: e
                                },
                                {
                                    conditions: [
                                        w,
                                        r,
                                        n
                                    ],
                                    endpoint: x,
                                    type: e
                                },
                                {
                                    conditions: [
                                        w,
                                        m,
                                        n
                                    ],
                                    endpoint: x,
                                    type: e
                                },
                                {
                                    conditions: [
                                        w,
                                        r,
                                        v
                                    ],
                                    endpoint: y,
                                    type: e
                                },
                                {
                                    conditions: [
                                        w,
                                        m,
                                        v
                                    ],
                                    endpoint: y,
                                    type: e
                                },
                                {
                                    conditions: [
                                        z,
                                        r,
                                        v
                                    ],
                                    endpoint: {
                                        url: "https://iam.us-iso-east-1.c2s.ic.gov",
                                        [L]: A,
                                        [M]: o
                                    },
                                    type: e
                                },
                                {
                                    conditions: [
                                        z,
                                        m,
                                        v
                                    ],
                                    endpoint: {
                                        url: "https://iam-fips.us-iso-east-1.c2s.ic.gov",
                                        [L]: A,
                                        [M]: o
                                    },
                                    type: e
                                },
                                {
                                    conditions: [
                                        B,
                                        r,
                                        v
                                    ],
                                    endpoint: {
                                        url: "https://iam.us-isob-east-1.sc2s.sgov.gov",
                                        [L]: C,
                                        [M]: o
                                    },
                                    type: e
                                },
                                {
                                    conditions: [
                                        B,
                                        m,
                                        v
                                    ],
                                    endpoint: {
                                        url: "https://iam-fips.us-isob-east-1.sc2s.sgov.gov",
                                        [L]: C,
                                        [M]: o
                                    },
                                    type: e
                                },
                                {
                                    conditions: [
                                        {
                                            [I]: h,
                                            [J]: [
                                                q,
                                                "aws-iso-e"
                                            ]
                                        },
                                        r,
                                        v
                                    ],
                                    endpoint: {
                                        url: "https://iam.eu-isoe-west-1.cloud.adc-e.uk",
                                        [L]: {
                                            [N]: [
                                                {
                                                    [O]: i,
                                                    [P]: "eu-isoe-west-1"
                                                }
                                            ]
                                        },
                                        [M]: o
                                    },
                                    type: e
                                },
                                {
                                    conditions: [
                                        {
                                            [I]: h,
                                            [J]: [
                                                q,
                                                "aws-iso-f"
                                            ]
                                        },
                                        r,
                                        v
                                    ],
                                    endpoint: {
                                        url: "https://iam.us-isof-south-1.csp.hci.ic.gov",
                                        [L]: {
                                            [N]: [
                                                {
                                                    [O]: i,
                                                    [P]: "us-isof-south-1"
                                                }
                                            ]
                                        },
                                        [M]: o
                                    },
                                    type: e
                                },
                                {
                                    conditions: [
                                        m,
                                        n
                                    ],
                                    rules: [
                                        {
                                            conditions: [
                                                {
                                                    [I]: c,
                                                    [J]: [
                                                        a,
                                                        D
                                                    ]
                                                },
                                                E
                                            ],
                                            rules: [
                                                {
                                                    endpoint: {
                                                        url: "https://iam-fips.{PartitionResult#dualStackDnsSuffix}",
                                                        [L]: F,
                                                        [M]: o
                                                    },
                                                    type: e
                                                }
                                            ],
                                            type: f
                                        },
                                        {
                                            error: "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            type: d
                                        }
                                    ],
                                    type: f
                                },
                                {
                                    conditions: [
                                        m,
                                        v
                                    ],
                                    rules: [
                                        {
                                            conditions: [
                                                {
                                                    [I]: c,
                                                    [J]: [
                                                        D,
                                                        a
                                                    ]
                                                }
                                            ],
                                            rules: [
                                                {
                                                    endpoint: {
                                                        url: "https://iam-fips.{PartitionResult#dnsSuffix}",
                                                        [L]: F,
                                                        [M]: o
                                                    },
                                                    type: e
                                                }
                                            ],
                                            type: f
                                        },
                                        {
                                            error: "FIPS is enabled but this partition does not support FIPS",
                                            type: d
                                        }
                                    ],
                                    type: f
                                },
                                {
                                    conditions: [
                                        r,
                                        n
                                    ],
                                    rules: [
                                        {
                                            conditions: [
                                                E
                                            ],
                                            rules: [
                                                {
                                                    endpoint: {
                                                        url: "https://iam.{PartitionResult#dualStackDnsSuffix}",
                                                        [L]: F,
                                                        [M]: o
                                                    },
                                                    type: e
                                                }
                                            ],
                                            type: f
                                        },
                                        {
                                            error: "DualStack is enabled but this partition does not support DualStack",
                                            type: d
                                        }
                                    ],
                                    type: f
                                },
                                {
                                    endpoint: {
                                        url: "https://iam.{PartitionResult#dnsSuffix}",
                                        [L]: F,
                                        [M]: o
                                    },
                                    type: e
                                }
                            ],
                            type: f
                        }
                    ],
                    type: f
                },
                {
                    error: "Invalid Configuration: Missing Region",
                    type: d
                }
            ],
            type: f
        }
    ]
};
const ruleSet = _data;
}}),
"[project]/node_modules/@aws-sdk/client-iam/dist-es/endpoint/endpointResolver.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "defaultEndpointResolver": (()=>defaultEndpointResolver)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$util$2d$endpoints$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/util-endpoints/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$util$2d$endpoints$2f$dist$2d$es$2f$aws$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/util-endpoints/dist-es/aws.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$util$2d$endpoints$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/util-endpoints/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$util$2d$endpoints$2f$dist$2d$es$2f$utils$2f$customEndpointFunctions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/util-endpoints/dist-es/utils/customEndpointFunctions.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$util$2d$endpoints$2f$dist$2d$es$2f$cache$2f$EndpointCache$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/util-endpoints/dist-es/cache/EndpointCache.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$util$2d$endpoints$2f$dist$2d$es$2f$resolveEndpoint$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/util-endpoints/dist-es/resolveEndpoint.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$endpoint$2f$ruleset$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/client-iam/dist-es/endpoint/ruleset.js [app-route] (ecmascript)");
;
;
;
const cache = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$util$2d$endpoints$2f$dist$2d$es$2f$cache$2f$EndpointCache$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["EndpointCache"]({
    size: 50,
    params: [
        "Endpoint",
        "Region",
        "UseDualStack",
        "UseFIPS"
    ]
});
const defaultEndpointResolver = (endpointParams, context = {})=>{
    return cache.get(endpointParams, ()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$util$2d$endpoints$2f$dist$2d$es$2f$resolveEndpoint$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["resolveEndpoint"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$endpoint$2f$ruleset$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["ruleSet"], {
            endpointParams: endpointParams,
            logger: context.logger
        }));
};
__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$util$2d$endpoints$2f$dist$2d$es$2f$utils$2f$customEndpointFunctions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["customEndpointFunctions"].aws = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$util$2d$endpoints$2f$dist$2d$es$2f$aws$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["awsEndpointFunctions"];
}}),
"[project]/node_modules/@aws-sdk/client-iam/dist-es/runtimeConfig.shared.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "getRuntimeConfig": (()=>getRuntimeConfig)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$httpAuthSchemes$2f$aws_sdk$2f$AwsSdkSigV4Signer$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/AwsSdkSigV4Signer.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/smithy-client/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$NoOpLogger$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/smithy-client/dist-es/NoOpLogger.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$url$2d$parser$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/url-parser/dist-es/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$util$2d$base64$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/util-base64/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$util$2d$base64$2f$dist$2d$es$2f$fromBase64$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/util-base64/dist-es/fromBase64.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$util$2d$base64$2f$dist$2d$es$2f$toBase64$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/util-base64/dist-es/toBase64.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$util$2d$utf8$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/util-utf8/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$util$2d$utf8$2f$dist$2d$es$2f$fromUtf8$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/util-utf8/dist-es/fromUtf8.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$util$2d$utf8$2f$dist$2d$es$2f$toUtf8$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/util-utf8/dist-es/toUtf8.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$auth$2f$httpAuthSchemeProvider$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/client-iam/dist-es/auth/httpAuthSchemeProvider.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$endpoint$2f$endpointResolver$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/client-iam/dist-es/endpoint/endpointResolver.js [app-route] (ecmascript)");
;
;
;
;
;
;
;
const getRuntimeConfig = (config)=>{
    return {
        apiVersion: "2010-05-08",
        base64Decoder: config?.base64Decoder ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$util$2d$base64$2f$dist$2d$es$2f$fromBase64$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["fromBase64"],
        base64Encoder: config?.base64Encoder ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$util$2d$base64$2f$dist$2d$es$2f$toBase64$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["toBase64"],
        disableHostPrefix: config?.disableHostPrefix ?? false,
        endpointProvider: config?.endpointProvider ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$endpoint$2f$endpointResolver$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["defaultEndpointResolver"],
        extensions: config?.extensions ?? [],
        httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$auth$2f$httpAuthSchemeProvider$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["defaultIAMHttpAuthSchemeProvider"],
        httpAuthSchemes: config?.httpAuthSchemes ?? [
            {
                schemeId: "aws.auth#sigv4",
                identityProvider: (ipc)=>ipc.getIdentityProvider("aws.auth#sigv4"),
                signer: new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$httpAuthSchemes$2f$aws_sdk$2f$AwsSdkSigV4Signer$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AwsSdkSigV4Signer"]()
            }
        ],
        logger: config?.logger ?? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$NoOpLogger$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["NoOpLogger"](),
        serviceId: config?.serviceId ?? "IAM",
        urlParser: config?.urlParser ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$url$2d$parser$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseUrl"],
        utf8Decoder: config?.utf8Decoder ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$util$2d$utf8$2f$dist$2d$es$2f$fromUtf8$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["fromUtf8"],
        utf8Encoder: config?.utf8Encoder ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$util$2d$utf8$2f$dist$2d$es$2f$toUtf8$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["toUtf8"]
    };
};
}}),
"[project]/node_modules/@aws-sdk/client-iam/dist-es/runtimeConfig.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "getRuntimeConfig": (()=>getRuntimeConfig)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$package$2e$json__$28$json$29$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/client-iam/package.json (json)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$client$2f$emitWarningIfUnsupportedVersion$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/core/dist-es/submodules/client/emitWarningIfUnsupportedVersion.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$credential$2d$provider$2d$node$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/credential-provider-node/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$credential$2d$provider$2d$node$2f$dist$2d$es$2f$defaultProvider$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/credential-provider-node/dist-es/defaultProvider.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$util$2d$user$2d$agent$2d$node$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/util-user-agent-node/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$util$2d$user$2d$agent$2d$node$2f$dist$2d$es$2f$nodeAppIdConfigOptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/util-user-agent-node/dist-es/nodeAppIdConfigOptions.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$util$2d$user$2d$agent$2d$node$2f$dist$2d$es$2f$defaultUserAgent$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/util-user-agent-node/dist-es/defaultUserAgent.js [app-route] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$config$2d$resolver$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/config-resolver/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$config$2d$resolver$2f$dist$2d$es$2f$regionConfig$2f$config$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/config-resolver/dist-es/regionConfig/config.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$config$2d$resolver$2f$dist$2d$es$2f$endpointsConfig$2f$NodeUseDualstackEndpointConfigOptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/config-resolver/dist-es/endpointsConfig/NodeUseDualstackEndpointConfigOptions.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$config$2d$resolver$2f$dist$2d$es$2f$endpointsConfig$2f$NodeUseFipsEndpointConfigOptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/config-resolver/dist-es/endpointsConfig/NodeUseFipsEndpointConfigOptions.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$hash$2d$node$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/hash-node/dist-es/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$retry$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/middleware-retry/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$retry$2f$dist$2d$es$2f$configurations$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/middleware-retry/dist-es/configurations.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$node$2d$config$2d$provider$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/node-config-provider/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$node$2d$config$2d$provider$2f$dist$2d$es$2f$configLoader$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/node-config-provider/dist-es/configLoader.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$node$2d$http$2d$handler$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/node-http-handler/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$node$2d$http$2d$handler$2f$dist$2d$es$2f$node$2d$http$2d$handler$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/node-http-handler/dist-es/node-http-handler.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$node$2d$http$2d$handler$2f$dist$2d$es$2f$stream$2d$collector$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/node-http-handler/dist-es/stream-collector/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$util$2d$body$2d$length$2d$node$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/util-body-length-node/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$util$2d$body$2d$length$2d$node$2f$dist$2d$es$2f$calculateBodyLength$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/util-body-length-node/dist-es/calculateBodyLength.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$util$2d$retry$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/util-retry/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$util$2d$retry$2f$dist$2d$es$2f$config$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/util-retry/dist-es/config.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$runtimeConfig$2e$shared$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/client-iam/dist-es/runtimeConfig.shared.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/smithy-client/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$defaults$2d$mode$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/smithy-client/dist-es/defaults-mode.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$util$2d$defaults$2d$mode$2d$node$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/util-defaults-mode-node/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$util$2d$defaults$2d$mode$2d$node$2f$dist$2d$es$2f$resolveDefaultsModeConfig$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/util-defaults-mode-node/dist-es/resolveDefaultsModeConfig.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$emitWarningIfUnsupportedVersion$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/smithy-client/dist-es/emitWarningIfUnsupportedVersion.js [app-route] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
const getRuntimeConfig = (config)=>{
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$emitWarningIfUnsupportedVersion$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["emitWarningIfUnsupportedVersion"])(process.version);
    const defaultsMode = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$util$2d$defaults$2d$mode$2d$node$2f$dist$2d$es$2f$resolveDefaultsModeConfig$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["resolveDefaultsModeConfig"])(config);
    const defaultConfigProvider = ()=>defaultsMode().then(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$defaults$2d$mode$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["loadConfigsForDefaultMode"]);
    const clientSharedValues = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$runtimeConfig$2e$shared$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getRuntimeConfig"])(config);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$client$2f$emitWarningIfUnsupportedVersion$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["emitWarningIfUnsupportedVersion"])(process.version);
    const profileConfig = {
        profile: config?.profile
    };
    return {
        ...clientSharedValues,
        ...config,
        runtime: "node",
        defaultsMode,
        bodyLengthChecker: config?.bodyLengthChecker ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$util$2d$body$2d$length$2d$node$2f$dist$2d$es$2f$calculateBodyLength$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["calculateBodyLength"],
        credentialDefaultProvider: config?.credentialDefaultProvider ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$credential$2d$provider$2d$node$2f$dist$2d$es$2f$defaultProvider$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["defaultProvider"],
        defaultUserAgentProvider: config?.defaultUserAgentProvider ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$util$2d$user$2d$agent$2d$node$2f$dist$2d$es$2f$defaultUserAgent$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["createDefaultUserAgentProvider"])({
            serviceId: clientSharedValues.serviceId,
            clientVersion: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$package$2e$json__$28$json$29$__["default"].version
        }),
        maxAttempts: config?.maxAttempts ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$node$2d$config$2d$provider$2f$dist$2d$es$2f$configLoader$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["loadConfig"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$retry$2f$dist$2d$es$2f$configurations$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["NODE_MAX_ATTEMPT_CONFIG_OPTIONS"], config),
        region: config?.region ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$node$2d$config$2d$provider$2f$dist$2d$es$2f$configLoader$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["loadConfig"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$config$2d$resolver$2f$dist$2d$es$2f$regionConfig$2f$config$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["NODE_REGION_CONFIG_OPTIONS"], {
            ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$config$2d$resolver$2f$dist$2d$es$2f$regionConfig$2f$config$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["NODE_REGION_CONFIG_FILE_OPTIONS"],
            ...profileConfig
        }),
        requestHandler: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$node$2d$http$2d$handler$2f$dist$2d$es$2f$node$2d$http$2d$handler$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["NodeHttpHandler"].create(config?.requestHandler ?? defaultConfigProvider),
        retryMode: config?.retryMode ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$node$2d$config$2d$provider$2f$dist$2d$es$2f$configLoader$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["loadConfig"])({
            ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$retry$2f$dist$2d$es$2f$configurations$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["NODE_RETRY_MODE_CONFIG_OPTIONS"],
            default: async ()=>(await defaultConfigProvider()).retryMode || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$util$2d$retry$2f$dist$2d$es$2f$config$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["DEFAULT_RETRY_MODE"]
        }, config),
        sha256: config?.sha256 ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$hash$2d$node$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Hash"].bind(null, "sha256"),
        streamCollector: config?.streamCollector ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$node$2d$http$2d$handler$2f$dist$2d$es$2f$stream$2d$collector$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["streamCollector"],
        useDualstackEndpoint: config?.useDualstackEndpoint ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$node$2d$config$2d$provider$2f$dist$2d$es$2f$configLoader$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["loadConfig"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$config$2d$resolver$2f$dist$2d$es$2f$endpointsConfig$2f$NodeUseDualstackEndpointConfigOptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS"], profileConfig),
        useFipsEndpoint: config?.useFipsEndpoint ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$node$2d$config$2d$provider$2f$dist$2d$es$2f$configLoader$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["loadConfig"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$config$2d$resolver$2f$dist$2d$es$2f$endpointsConfig$2f$NodeUseFipsEndpointConfigOptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS"], profileConfig),
        userAgentAppId: config?.userAgentAppId ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$node$2d$config$2d$provider$2f$dist$2d$es$2f$configLoader$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["loadConfig"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$util$2d$user$2d$agent$2d$node$2f$dist$2d$es$2f$nodeAppIdConfigOptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["NODE_APP_ID_CONFIG_OPTIONS"], profileConfig)
    };
};
}}),
"[project]/node_modules/@aws-sdk/client-iam/dist-es/auth/httpAuthExtensionConfiguration.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "getHttpAuthExtensionConfiguration": (()=>getHttpAuthExtensionConfiguration),
    "resolveHttpAuthRuntimeConfig": (()=>resolveHttpAuthRuntimeConfig)
});
const getHttpAuthExtensionConfiguration = (runtimeConfig)=>{
    const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
    let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
    let _credentials = runtimeConfig.credentials;
    return {
        setHttpAuthScheme (httpAuthScheme) {
            const index = _httpAuthSchemes.findIndex((scheme)=>scheme.schemeId === httpAuthScheme.schemeId);
            if (index === -1) {
                _httpAuthSchemes.push(httpAuthScheme);
            } else {
                _httpAuthSchemes.splice(index, 1, httpAuthScheme);
            }
        },
        httpAuthSchemes () {
            return _httpAuthSchemes;
        },
        setHttpAuthSchemeProvider (httpAuthSchemeProvider) {
            _httpAuthSchemeProvider = httpAuthSchemeProvider;
        },
        httpAuthSchemeProvider () {
            return _httpAuthSchemeProvider;
        },
        setCredentials (credentials) {
            _credentials = credentials;
        },
        credentials () {
            return _credentials;
        }
    };
};
const resolveHttpAuthRuntimeConfig = (config)=>{
    return {
        httpAuthSchemes: config.httpAuthSchemes(),
        httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
        credentials: config.credentials()
    };
};
}}),
"[project]/node_modules/@aws-sdk/client-iam/dist-es/runtimeExtensions.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "resolveRuntimeExtensions": (()=>resolveRuntimeExtensions)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$region$2d$config$2d$resolver$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/region-config-resolver/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$region$2d$config$2d$resolver$2f$dist$2d$es$2f$extensions$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/region-config-resolver/dist-es/extensions/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$protocol$2d$http$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/protocol-http/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$protocol$2d$http$2f$dist$2d$es$2f$extensions$2f$httpExtensionConfiguration$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/protocol-http/dist-es/extensions/httpExtensionConfiguration.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/smithy-client/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$extensions$2f$defaultExtensionConfiguration$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/smithy-client/dist-es/extensions/defaultExtensionConfiguration.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$auth$2f$httpAuthExtensionConfiguration$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/client-iam/dist-es/auth/httpAuthExtensionConfiguration.js [app-route] (ecmascript)");
;
;
;
;
const resolveRuntimeExtensions = (runtimeConfig, extensions)=>{
    const extensionConfiguration = Object.assign((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$region$2d$config$2d$resolver$2f$dist$2d$es$2f$extensions$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getAwsRegionExtensionConfiguration"])(runtimeConfig), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$extensions$2f$defaultExtensionConfiguration$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getDefaultExtensionConfiguration"])(runtimeConfig), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$protocol$2d$http$2f$dist$2d$es$2f$extensions$2f$httpExtensionConfiguration$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getHttpHandlerExtensionConfiguration"])(runtimeConfig), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$auth$2f$httpAuthExtensionConfiguration$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getHttpAuthExtensionConfiguration"])(runtimeConfig));
    extensions.forEach((extension)=>extension.configure(extensionConfiguration));
    return Object.assign(runtimeConfig, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$region$2d$config$2d$resolver$2f$dist$2d$es$2f$extensions$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["resolveAwsRegionExtensionConfiguration"])(extensionConfiguration), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$extensions$2f$defaultExtensionConfiguration$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["resolveDefaultRuntimeConfig"])(extensionConfiguration), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$protocol$2d$http$2f$dist$2d$es$2f$extensions$2f$httpExtensionConfiguration$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["resolveHttpHandlerRuntimeConfig"])(extensionConfiguration), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$auth$2f$httpAuthExtensionConfiguration$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["resolveHttpAuthRuntimeConfig"])(extensionConfiguration));
};
}}),
"[project]/node_modules/@aws-sdk/client-iam/dist-es/IAMClient.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "IAMClient": (()=>IAMClient)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$middleware$2d$host$2d$header$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/middleware-host-header/dist-es/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$middleware$2d$logger$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/middleware-logger/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$middleware$2d$logger$2f$dist$2d$es$2f$loggerMiddleware$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/middleware-logger/dist-es/loggerMiddleware.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$middleware$2d$recursion$2d$detection$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/middleware-recursion-detection/dist-es/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$middleware$2d$user$2d$agent$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/middleware-user-agent/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$middleware$2d$user$2d$agent$2f$dist$2d$es$2f$user$2d$agent$2d$middleware$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/middleware-user-agent/dist-es/user-agent-middleware.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$middleware$2d$user$2d$agent$2f$dist$2d$es$2f$configurations$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/middleware-user-agent/dist-es/configurations.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$config$2d$resolver$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/config-resolver/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$config$2d$resolver$2f$dist$2d$es$2f$regionConfig$2f$resolveRegionConfig$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/config-resolver/dist-es/regionConfig/resolveRegionConfig.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/core/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$util$2d$identity$2d$and$2d$auth$2f$DefaultIdentityProviderConfig$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/core/dist-es/util-identity-and-auth/DefaultIdentityProviderConfig.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$middleware$2d$http$2d$auth$2d$scheme$2f$getHttpAuthSchemeEndpointRuleSetPlugin$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/core/dist-es/middleware-http-auth-scheme/getHttpAuthSchemeEndpointRuleSetPlugin.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$middleware$2d$http$2d$signing$2f$getHttpSigningMiddleware$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/core/dist-es/middleware-http-signing/getHttpSigningMiddleware.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$content$2d$length$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/middleware-content-length/dist-es/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$endpoint$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/middleware-endpoint/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$endpoint$2f$dist$2d$es$2f$resolveEndpointConfig$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/middleware-endpoint/dist-es/resolveEndpointConfig.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$retry$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/middleware-retry/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$retry$2f$dist$2d$es$2f$retryMiddleware$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/middleware-retry/dist-es/retryMiddleware.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$retry$2f$dist$2d$es$2f$configurations$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/middleware-retry/dist-es/configurations.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/smithy-client/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$client$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/smithy-client/dist-es/client.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$auth$2f$httpAuthSchemeProvider$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/client-iam/dist-es/auth/httpAuthSchemeProvider.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$endpoint$2f$EndpointParameters$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/client-iam/dist-es/endpoint/EndpointParameters.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$runtimeConfig$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/client-iam/dist-es/runtimeConfig.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$runtimeExtensions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/client-iam/dist-es/runtimeExtensions.js [app-route] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
class IAMClient extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$client$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Client"] {
    config;
    constructor(...[configuration]){
        const _config_0 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$runtimeConfig$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getRuntimeConfig"])(configuration || {});
        super(_config_0);
        this.initConfig = _config_0;
        const _config_1 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$endpoint$2f$EndpointParameters$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["resolveClientEndpointParameters"])(_config_0);
        const _config_2 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$middleware$2d$user$2d$agent$2f$dist$2d$es$2f$configurations$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["resolveUserAgentConfig"])(_config_1);
        const _config_3 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$retry$2f$dist$2d$es$2f$configurations$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["resolveRetryConfig"])(_config_2);
        const _config_4 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$config$2d$resolver$2f$dist$2d$es$2f$regionConfig$2f$resolveRegionConfig$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["resolveRegionConfig"])(_config_3);
        const _config_5 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$middleware$2d$host$2d$header$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["resolveHostHeaderConfig"])(_config_4);
        const _config_6 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$endpoint$2f$dist$2d$es$2f$resolveEndpointConfig$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["resolveEndpointConfig"])(_config_5);
        const _config_7 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$auth$2f$httpAuthSchemeProvider$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["resolveHttpAuthSchemeConfig"])(_config_6);
        const _config_8 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$runtimeExtensions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["resolveRuntimeExtensions"])(_config_7, configuration?.extensions || []);
        this.config = _config_8;
        this.middlewareStack.use((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$middleware$2d$user$2d$agent$2f$dist$2d$es$2f$user$2d$agent$2d$middleware$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getUserAgentPlugin"])(this.config));
        this.middlewareStack.use((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$retry$2f$dist$2d$es$2f$retryMiddleware$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getRetryPlugin"])(this.config));
        this.middlewareStack.use((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$content$2d$length$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getContentLengthPlugin"])(this.config));
        this.middlewareStack.use((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$middleware$2d$host$2d$header$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getHostHeaderPlugin"])(this.config));
        this.middlewareStack.use((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$middleware$2d$logger$2f$dist$2d$es$2f$loggerMiddleware$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getLoggerPlugin"])(this.config));
        this.middlewareStack.use((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$middleware$2d$recursion$2d$detection$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getRecursionDetectionPlugin"])(this.config));
        this.middlewareStack.use((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$middleware$2d$http$2d$auth$2d$scheme$2f$getHttpAuthSchemeEndpointRuleSetPlugin$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getHttpAuthSchemeEndpointRuleSetPlugin"])(this.config, {
            httpAuthSchemeParametersProvider: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$auth$2f$httpAuthSchemeProvider$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["defaultIAMHttpAuthSchemeParametersProvider"],
            identityProviderConfigProvider: async (config)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$util$2d$identity$2d$and$2d$auth$2f$DefaultIdentityProviderConfig$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["DefaultIdentityProviderConfig"]({
                    "aws.auth#sigv4": config.credentials
                })
        }));
        this.middlewareStack.use((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$middleware$2d$http$2d$signing$2f$getHttpSigningMiddleware$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getHttpSigningPlugin"])(this.config));
    }
    destroy() {
        super.destroy();
    }
}
}}),
"[project]/node_modules/@aws-sdk/client-iam/dist-es/models/IAMServiceException.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "IAMServiceException": (()=>IAMServiceException)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/smithy-client/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$exceptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/smithy-client/dist-es/exceptions.js [app-route] (ecmascript)");
;
;
class IAMServiceException extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$exceptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["ServiceException"] {
    constructor(options){
        super(options);
        Object.setPrototypeOf(this, IAMServiceException.prototype);
    }
}
}}),
"[project]/node_modules/@aws-sdk/client-iam/dist-es/models/models_0.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "AccessAdvisorUsageGranularityType": (()=>AccessAdvisorUsageGranularityType),
    "AccessKeyFilterSensitiveLog": (()=>AccessKeyFilterSensitiveLog),
    "AccountNotManagementOrDelegatedAdministratorException": (()=>AccountNotManagementOrDelegatedAdministratorException),
    "AssertionEncryptionModeType": (()=>AssertionEncryptionModeType),
    "AssignmentStatusType": (()=>AssignmentStatusType),
    "CallerIsNotManagementAccountException": (()=>CallerIsNotManagementAccountException),
    "ChangePasswordRequestFilterSensitiveLog": (()=>ChangePasswordRequestFilterSensitiveLog),
    "ConcurrentModificationException": (()=>ConcurrentModificationException),
    "ContextKeyTypeEnum": (()=>ContextKeyTypeEnum),
    "CreateAccessKeyResponseFilterSensitiveLog": (()=>CreateAccessKeyResponseFilterSensitiveLog),
    "CreateLoginProfileRequestFilterSensitiveLog": (()=>CreateLoginProfileRequestFilterSensitiveLog),
    "CreateSAMLProviderRequestFilterSensitiveLog": (()=>CreateSAMLProviderRequestFilterSensitiveLog),
    "CreateServiceSpecificCredentialResponseFilterSensitiveLog": (()=>CreateServiceSpecificCredentialResponseFilterSensitiveLog),
    "CreateVirtualMFADeviceResponseFilterSensitiveLog": (()=>CreateVirtualMFADeviceResponseFilterSensitiveLog),
    "CredentialReportExpiredException": (()=>CredentialReportExpiredException),
    "CredentialReportNotPresentException": (()=>CredentialReportNotPresentException),
    "CredentialReportNotReadyException": (()=>CredentialReportNotReadyException),
    "DeleteConflictException": (()=>DeleteConflictException),
    "DeletionTaskStatusType": (()=>DeletionTaskStatusType),
    "EncodingType": (()=>EncodingType),
    "EntityAlreadyExistsException": (()=>EntityAlreadyExistsException),
    "EntityTemporarilyUnmodifiableException": (()=>EntityTemporarilyUnmodifiableException),
    "EntityType": (()=>EntityType),
    "FeatureType": (()=>FeatureType),
    "GlobalEndpointTokenVersion": (()=>GlobalEndpointTokenVersion),
    "InvalidAuthenticationCodeException": (()=>InvalidAuthenticationCodeException),
    "InvalidInputException": (()=>InvalidInputException),
    "InvalidUserTypeException": (()=>InvalidUserTypeException),
    "JobStatusType": (()=>JobStatusType),
    "LimitExceededException": (()=>LimitExceededException),
    "ListVirtualMFADevicesResponseFilterSensitiveLog": (()=>ListVirtualMFADevicesResponseFilterSensitiveLog),
    "MalformedPolicyDocumentException": (()=>MalformedPolicyDocumentException),
    "NoSuchEntityException": (()=>NoSuchEntityException),
    "OpenIdIdpCommunicationErrorException": (()=>OpenIdIdpCommunicationErrorException),
    "OrganizationNotFoundException": (()=>OrganizationNotFoundException),
    "OrganizationNotInAllFeaturesModeException": (()=>OrganizationNotInAllFeaturesModeException),
    "PasswordPolicyViolationException": (()=>PasswordPolicyViolationException),
    "PermissionsBoundaryAttachmentType": (()=>PermissionsBoundaryAttachmentType),
    "PolicyEvaluationException": (()=>PolicyEvaluationException),
    "PolicyNotAttachableException": (()=>PolicyNotAttachableException),
    "PolicyOwnerEntityType": (()=>PolicyOwnerEntityType),
    "PolicyScopeType": (()=>PolicyScopeType),
    "PolicyType": (()=>PolicyType),
    "PolicyUsageType": (()=>PolicyUsageType),
    "ReportFormatType": (()=>ReportFormatType),
    "ReportGenerationLimitExceededException": (()=>ReportGenerationLimitExceededException),
    "ReportStateType": (()=>ReportStateType),
    "ResetServiceSpecificCredentialResponseFilterSensitiveLog": (()=>ResetServiceSpecificCredentialResponseFilterSensitiveLog),
    "ServiceAccessNotEnabledException": (()=>ServiceAccessNotEnabledException),
    "ServiceFailureException": (()=>ServiceFailureException),
    "ServiceNotSupportedException": (()=>ServiceNotSupportedException),
    "ServiceSpecificCredentialFilterSensitiveLog": (()=>ServiceSpecificCredentialFilterSensitiveLog),
    "SortKeyType": (()=>SortKeyType),
    "StatusType": (()=>StatusType),
    "SummaryKeyType": (()=>SummaryKeyType),
    "UnmodifiableEntityException": (()=>UnmodifiableEntityException),
    "UnrecognizedPublicKeyEncodingException": (()=>UnrecognizedPublicKeyEncodingException),
    "VirtualMFADeviceFilterSensitiveLog": (()=>VirtualMFADeviceFilterSensitiveLog)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/smithy-client/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$constants$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/smithy-client/dist-es/constants.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$IAMServiceException$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/client-iam/dist-es/models/IAMServiceException.js [app-route] (ecmascript) <locals>");
;
;
const AccessAdvisorUsageGranularityType = {
    ACTION_LEVEL: "ACTION_LEVEL",
    SERVICE_LEVEL: "SERVICE_LEVEL"
};
const StatusType = {
    Active: "Active",
    Inactive: "Inactive"
};
class AccountNotManagementOrDelegatedAdministratorException extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$IAMServiceException$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["IAMServiceException"] {
    name = "AccountNotManagementOrDelegatedAdministratorException";
    $fault = "client";
    Message;
    constructor(opts){
        super({
            name: "AccountNotManagementOrDelegatedAdministratorException",
            $fault: "client",
            ...opts
        });
        Object.setPrototypeOf(this, AccountNotManagementOrDelegatedAdministratorException.prototype);
        this.Message = opts.Message;
    }
}
class InvalidInputException extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$IAMServiceException$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["IAMServiceException"] {
    name = "InvalidInputException";
    $fault = "client";
    constructor(opts){
        super({
            name: "InvalidInputException",
            $fault: "client",
            ...opts
        });
        Object.setPrototypeOf(this, InvalidInputException.prototype);
    }
}
class LimitExceededException extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$IAMServiceException$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["IAMServiceException"] {
    name = "LimitExceededException";
    $fault = "client";
    constructor(opts){
        super({
            name: "LimitExceededException",
            $fault: "client",
            ...opts
        });
        Object.setPrototypeOf(this, LimitExceededException.prototype);
    }
}
class NoSuchEntityException extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$IAMServiceException$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["IAMServiceException"] {
    name = "NoSuchEntityException";
    $fault = "client";
    constructor(opts){
        super({
            name: "NoSuchEntityException",
            $fault: "client",
            ...opts
        });
        Object.setPrototypeOf(this, NoSuchEntityException.prototype);
    }
}
class ServiceFailureException extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$IAMServiceException$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["IAMServiceException"] {
    name = "ServiceFailureException";
    $fault = "server";
    constructor(opts){
        super({
            name: "ServiceFailureException",
            $fault: "server",
            ...opts
        });
        Object.setPrototypeOf(this, ServiceFailureException.prototype);
    }
}
class EntityAlreadyExistsException extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$IAMServiceException$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["IAMServiceException"] {
    name = "EntityAlreadyExistsException";
    $fault = "client";
    constructor(opts){
        super({
            name: "EntityAlreadyExistsException",
            $fault: "client",
            ...opts
        });
        Object.setPrototypeOf(this, EntityAlreadyExistsException.prototype);
    }
}
class UnmodifiableEntityException extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$IAMServiceException$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["IAMServiceException"] {
    name = "UnmodifiableEntityException";
    $fault = "client";
    constructor(opts){
        super({
            name: "UnmodifiableEntityException",
            $fault: "client",
            ...opts
        });
        Object.setPrototypeOf(this, UnmodifiableEntityException.prototype);
    }
}
const AssertionEncryptionModeType = {
    Allowed: "Allowed",
    Required: "Required"
};
const AssignmentStatusType = {
    Any: "Any",
    Assigned: "Assigned",
    Unassigned: "Unassigned"
};
const PermissionsBoundaryAttachmentType = {
    Policy: "PermissionsBoundaryPolicy"
};
class PolicyNotAttachableException extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$IAMServiceException$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["IAMServiceException"] {
    name = "PolicyNotAttachableException";
    $fault = "client";
    constructor(opts){
        super({
            name: "PolicyNotAttachableException",
            $fault: "client",
            ...opts
        });
        Object.setPrototypeOf(this, PolicyNotAttachableException.prototype);
    }
}
class EntityTemporarilyUnmodifiableException extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$IAMServiceException$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["IAMServiceException"] {
    name = "EntityTemporarilyUnmodifiableException";
    $fault = "client";
    constructor(opts){
        super({
            name: "EntityTemporarilyUnmodifiableException",
            $fault: "client",
            ...opts
        });
        Object.setPrototypeOf(this, EntityTemporarilyUnmodifiableException.prototype);
    }
}
class InvalidUserTypeException extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$IAMServiceException$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["IAMServiceException"] {
    name = "InvalidUserTypeException";
    $fault = "client";
    constructor(opts){
        super({
            name: "InvalidUserTypeException",
            $fault: "client",
            ...opts
        });
        Object.setPrototypeOf(this, InvalidUserTypeException.prototype);
    }
}
class PasswordPolicyViolationException extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$IAMServiceException$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["IAMServiceException"] {
    name = "PasswordPolicyViolationException";
    $fault = "client";
    constructor(opts){
        super({
            name: "PasswordPolicyViolationException",
            $fault: "client",
            ...opts
        });
        Object.setPrototypeOf(this, PasswordPolicyViolationException.prototype);
    }
}
class ConcurrentModificationException extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$IAMServiceException$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["IAMServiceException"] {
    name = "ConcurrentModificationException";
    $fault = "client";
    constructor(opts){
        super({
            name: "ConcurrentModificationException",
            $fault: "client",
            ...opts
        });
        Object.setPrototypeOf(this, ConcurrentModificationException.prototype);
    }
}
class OpenIdIdpCommunicationErrorException extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$IAMServiceException$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["IAMServiceException"] {
    name = "OpenIdIdpCommunicationErrorException";
    $fault = "client";
    constructor(opts){
        super({
            name: "OpenIdIdpCommunicationErrorException",
            $fault: "client",
            ...opts
        });
        Object.setPrototypeOf(this, OpenIdIdpCommunicationErrorException.prototype);
    }
}
class MalformedPolicyDocumentException extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$IAMServiceException$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["IAMServiceException"] {
    name = "MalformedPolicyDocumentException";
    $fault = "client";
    constructor(opts){
        super({
            name: "MalformedPolicyDocumentException",
            $fault: "client",
            ...opts
        });
        Object.setPrototypeOf(this, MalformedPolicyDocumentException.prototype);
    }
}
class ServiceNotSupportedException extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$IAMServiceException$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["IAMServiceException"] {
    name = "ServiceNotSupportedException";
    $fault = "client";
    constructor(opts){
        super({
            name: "ServiceNotSupportedException",
            $fault: "client",
            ...opts
        });
        Object.setPrototypeOf(this, ServiceNotSupportedException.prototype);
    }
}
class DeleteConflictException extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$IAMServiceException$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["IAMServiceException"] {
    name = "DeleteConflictException";
    $fault = "client";
    constructor(opts){
        super({
            name: "DeleteConflictException",
            $fault: "client",
            ...opts
        });
        Object.setPrototypeOf(this, DeleteConflictException.prototype);
    }
}
const FeatureType = {
    ROOT_CREDENTIALS_MANAGEMENT: "RootCredentialsManagement",
    ROOT_SESSIONS: "RootSessions"
};
class OrganizationNotFoundException extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$IAMServiceException$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["IAMServiceException"] {
    name = "OrganizationNotFoundException";
    $fault = "client";
    Message;
    constructor(opts){
        super({
            name: "OrganizationNotFoundException",
            $fault: "client",
            ...opts
        });
        Object.setPrototypeOf(this, OrganizationNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
class OrganizationNotInAllFeaturesModeException extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$IAMServiceException$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["IAMServiceException"] {
    name = "OrganizationNotInAllFeaturesModeException";
    $fault = "client";
    Message;
    constructor(opts){
        super({
            name: "OrganizationNotInAllFeaturesModeException",
            $fault: "client",
            ...opts
        });
        Object.setPrototypeOf(this, OrganizationNotInAllFeaturesModeException.prototype);
        this.Message = opts.Message;
    }
}
class ServiceAccessNotEnabledException extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$IAMServiceException$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["IAMServiceException"] {
    name = "ServiceAccessNotEnabledException";
    $fault = "client";
    Message;
    constructor(opts){
        super({
            name: "ServiceAccessNotEnabledException",
            $fault: "client",
            ...opts
        });
        Object.setPrototypeOf(this, ServiceAccessNotEnabledException.prototype);
        this.Message = opts.Message;
    }
}
class InvalidAuthenticationCodeException extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$IAMServiceException$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["IAMServiceException"] {
    name = "InvalidAuthenticationCodeException";
    $fault = "client";
    constructor(opts){
        super({
            name: "InvalidAuthenticationCodeException",
            $fault: "client",
            ...opts
        });
        Object.setPrototypeOf(this, InvalidAuthenticationCodeException.prototype);
    }
}
class CallerIsNotManagementAccountException extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$IAMServiceException$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["IAMServiceException"] {
    name = "CallerIsNotManagementAccountException";
    $fault = "client";
    Message;
    constructor(opts){
        super({
            name: "CallerIsNotManagementAccountException",
            $fault: "client",
            ...opts
        });
        Object.setPrototypeOf(this, CallerIsNotManagementAccountException.prototype);
        this.Message = opts.Message;
    }
}
const ReportStateType = {
    COMPLETE: "COMPLETE",
    INPROGRESS: "INPROGRESS",
    STARTED: "STARTED"
};
class ReportGenerationLimitExceededException extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$IAMServiceException$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["IAMServiceException"] {
    name = "ReportGenerationLimitExceededException";
    $fault = "client";
    constructor(opts){
        super({
            name: "ReportGenerationLimitExceededException",
            $fault: "client",
            ...opts
        });
        Object.setPrototypeOf(this, ReportGenerationLimitExceededException.prototype);
    }
}
const EntityType = {
    AWSManagedPolicy: "AWSManagedPolicy",
    Group: "Group",
    LocalManagedPolicy: "LocalManagedPolicy",
    Role: "Role",
    User: "User"
};
const SummaryKeyType = {
    AccessKeysPerUserQuota: "AccessKeysPerUserQuota",
    AccountAccessKeysPresent: "AccountAccessKeysPresent",
    AccountMFAEnabled: "AccountMFAEnabled",
    AccountPasswordPresent: "AccountPasswordPresent",
    AccountSigningCertificatesPresent: "AccountSigningCertificatesPresent",
    AttachedPoliciesPerGroupQuota: "AttachedPoliciesPerGroupQuota",
    AttachedPoliciesPerRoleQuota: "AttachedPoliciesPerRoleQuota",
    AttachedPoliciesPerUserQuota: "AttachedPoliciesPerUserQuota",
    GlobalEndpointTokenVersion: "GlobalEndpointTokenVersion",
    GroupPolicySizeQuota: "GroupPolicySizeQuota",
    Groups: "Groups",
    GroupsPerUserQuota: "GroupsPerUserQuota",
    GroupsQuota: "GroupsQuota",
    MFADevices: "MFADevices",
    MFADevicesInUse: "MFADevicesInUse",
    Policies: "Policies",
    PoliciesQuota: "PoliciesQuota",
    PolicySizeQuota: "PolicySizeQuota",
    PolicyVersionsInUse: "PolicyVersionsInUse",
    PolicyVersionsInUseQuota: "PolicyVersionsInUseQuota",
    ServerCertificates: "ServerCertificates",
    ServerCertificatesQuota: "ServerCertificatesQuota",
    SigningCertificatesPerUserQuota: "SigningCertificatesPerUserQuota",
    UserPolicySizeQuota: "UserPolicySizeQuota",
    Users: "Users",
    UsersQuota: "UsersQuota",
    VersionsPerPolicyQuota: "VersionsPerPolicyQuota"
};
class CredentialReportExpiredException extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$IAMServiceException$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["IAMServiceException"] {
    name = "CredentialReportExpiredException";
    $fault = "client";
    constructor(opts){
        super({
            name: "CredentialReportExpiredException",
            $fault: "client",
            ...opts
        });
        Object.setPrototypeOf(this, CredentialReportExpiredException.prototype);
    }
}
class CredentialReportNotPresentException extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$IAMServiceException$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["IAMServiceException"] {
    name = "CredentialReportNotPresentException";
    $fault = "client";
    constructor(opts){
        super({
            name: "CredentialReportNotPresentException",
            $fault: "client",
            ...opts
        });
        Object.setPrototypeOf(this, CredentialReportNotPresentException.prototype);
    }
}
class CredentialReportNotReadyException extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$IAMServiceException$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["IAMServiceException"] {
    name = "CredentialReportNotReadyException";
    $fault = "client";
    constructor(opts){
        super({
            name: "CredentialReportNotReadyException",
            $fault: "client",
            ...opts
        });
        Object.setPrototypeOf(this, CredentialReportNotReadyException.prototype);
    }
}
const ReportFormatType = {
    text_csv: "text/csv"
};
const SortKeyType = {
    LAST_AUTHENTICATED_TIME_ASCENDING: "LAST_AUTHENTICATED_TIME_ASCENDING",
    LAST_AUTHENTICATED_TIME_DESCENDING: "LAST_AUTHENTICATED_TIME_DESCENDING",
    SERVICE_NAMESPACE_ASCENDING: "SERVICE_NAMESPACE_ASCENDING",
    SERVICE_NAMESPACE_DESCENDING: "SERVICE_NAMESPACE_DESCENDING"
};
const JobStatusType = {
    COMPLETED: "COMPLETED",
    FAILED: "FAILED",
    IN_PROGRESS: "IN_PROGRESS"
};
const PolicyOwnerEntityType = {
    GROUP: "GROUP",
    ROLE: "ROLE",
    USER: "USER"
};
const DeletionTaskStatusType = {
    FAILED: "FAILED",
    IN_PROGRESS: "IN_PROGRESS",
    NOT_STARTED: "NOT_STARTED",
    SUCCEEDED: "SUCCEEDED"
};
const EncodingType = {
    PEM: "PEM",
    SSH: "SSH"
};
class UnrecognizedPublicKeyEncodingException extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$IAMServiceException$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["IAMServiceException"] {
    name = "UnrecognizedPublicKeyEncodingException";
    $fault = "client";
    constructor(opts){
        super({
            name: "UnrecognizedPublicKeyEncodingException",
            $fault: "client",
            ...opts
        });
        Object.setPrototypeOf(this, UnrecognizedPublicKeyEncodingException.prototype);
    }
}
const PolicyUsageType = {
    PermissionsBoundary: "PermissionsBoundary",
    PermissionsPolicy: "PermissionsPolicy"
};
const PolicyScopeType = {
    AWS: "AWS",
    All: "All",
    Local: "Local"
};
const PolicyType = {
    INLINE: "INLINE",
    MANAGED: "MANAGED"
};
const GlobalEndpointTokenVersion = {
    v1Token: "v1Token",
    v2Token: "v2Token"
};
class PolicyEvaluationException extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$IAMServiceException$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["IAMServiceException"] {
    name = "PolicyEvaluationException";
    $fault = "server";
    constructor(opts){
        super({
            name: "PolicyEvaluationException",
            $fault: "server",
            ...opts
        });
        Object.setPrototypeOf(this, PolicyEvaluationException.prototype);
    }
}
const ContextKeyTypeEnum = {
    BINARY: "binary",
    BINARY_LIST: "binaryList",
    BOOLEAN: "boolean",
    BOOLEAN_LIST: "booleanList",
    DATE: "date",
    DATE_LIST: "dateList",
    IP: "ip",
    IP_LIST: "ipList",
    NUMERIC: "numeric",
    NUMERIC_LIST: "numericList",
    STRING: "string",
    STRING_LIST: "stringList"
};
const AccessKeyFilterSensitiveLog = (obj)=>({
        ...obj,
        ...obj.SecretAccessKey && {
            SecretAccessKey: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$constants$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["SENSITIVE_STRING"]
        }
    });
const ChangePasswordRequestFilterSensitiveLog = (obj)=>({
        ...obj,
        ...obj.OldPassword && {
            OldPassword: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$constants$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["SENSITIVE_STRING"]
        },
        ...obj.NewPassword && {
            NewPassword: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$constants$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["SENSITIVE_STRING"]
        }
    });
const CreateAccessKeyResponseFilterSensitiveLog = (obj)=>({
        ...obj,
        ...obj.AccessKey && {
            AccessKey: AccessKeyFilterSensitiveLog(obj.AccessKey)
        }
    });
const CreateLoginProfileRequestFilterSensitiveLog = (obj)=>({
        ...obj,
        ...obj.Password && {
            Password: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$constants$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["SENSITIVE_STRING"]
        }
    });
const CreateSAMLProviderRequestFilterSensitiveLog = (obj)=>({
        ...obj,
        ...obj.AddPrivateKey && {
            AddPrivateKey: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$constants$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["SENSITIVE_STRING"]
        }
    });
const ServiceSpecificCredentialFilterSensitiveLog = (obj)=>({
        ...obj,
        ...obj.ServicePassword && {
            ServicePassword: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$constants$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["SENSITIVE_STRING"]
        }
    });
const CreateServiceSpecificCredentialResponseFilterSensitiveLog = (obj)=>({
        ...obj,
        ...obj.ServiceSpecificCredential && {
            ServiceSpecificCredential: ServiceSpecificCredentialFilterSensitiveLog(obj.ServiceSpecificCredential)
        }
    });
const VirtualMFADeviceFilterSensitiveLog = (obj)=>({
        ...obj,
        ...obj.Base32StringSeed && {
            Base32StringSeed: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$constants$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["SENSITIVE_STRING"]
        },
        ...obj.QRCodePNG && {
            QRCodePNG: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$constants$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["SENSITIVE_STRING"]
        }
    });
const CreateVirtualMFADeviceResponseFilterSensitiveLog = (obj)=>({
        ...obj,
        ...obj.VirtualMFADevice && {
            VirtualMFADevice: VirtualMFADeviceFilterSensitiveLog(obj.VirtualMFADevice)
        }
    });
const ListVirtualMFADevicesResponseFilterSensitiveLog = (obj)=>({
        ...obj,
        ...obj.VirtualMFADevices && {
            VirtualMFADevices: obj.VirtualMFADevices.map((item)=>VirtualMFADeviceFilterSensitiveLog(item))
        }
    });
const ResetServiceSpecificCredentialResponseFilterSensitiveLog = (obj)=>({
        ...obj,
        ...obj.ServiceSpecificCredential && {
            ServiceSpecificCredential: ServiceSpecificCredentialFilterSensitiveLog(obj.ServiceSpecificCredential)
        }
    });
}}),
"[project]/node_modules/@aws-sdk/client-iam/dist-es/models/models_1.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "DuplicateCertificateException": (()=>DuplicateCertificateException),
    "DuplicateSSHPublicKeyException": (()=>DuplicateSSHPublicKeyException),
    "InvalidCertificateException": (()=>InvalidCertificateException),
    "InvalidPublicKeyException": (()=>InvalidPublicKeyException),
    "KeyPairMismatchException": (()=>KeyPairMismatchException),
    "MalformedCertificateException": (()=>MalformedCertificateException),
    "PolicyEvaluationDecisionType": (()=>PolicyEvaluationDecisionType),
    "PolicySourceType": (()=>PolicySourceType),
    "UpdateLoginProfileRequestFilterSensitiveLog": (()=>UpdateLoginProfileRequestFilterSensitiveLog),
    "UpdateSAMLProviderRequestFilterSensitiveLog": (()=>UpdateSAMLProviderRequestFilterSensitiveLog),
    "UploadServerCertificateRequestFilterSensitiveLog": (()=>UploadServerCertificateRequestFilterSensitiveLog)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/smithy-client/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$constants$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/smithy-client/dist-es/constants.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$IAMServiceException$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/client-iam/dist-es/models/IAMServiceException.js [app-route] (ecmascript) <locals>");
;
;
const PolicyEvaluationDecisionType = {
    ALLOWED: "allowed",
    EXPLICIT_DENY: "explicitDeny",
    IMPLICIT_DENY: "implicitDeny"
};
const PolicySourceType = {
    AWS_MANAGED: "aws-managed",
    GROUP: "group",
    NONE: "none",
    RESOURCE: "resource",
    ROLE: "role",
    USER: "user",
    USER_MANAGED: "user-managed"
};
class KeyPairMismatchException extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$IAMServiceException$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["IAMServiceException"] {
    name = "KeyPairMismatchException";
    $fault = "client";
    constructor(opts){
        super({
            name: "KeyPairMismatchException",
            $fault: "client",
            ...opts
        });
        Object.setPrototypeOf(this, KeyPairMismatchException.prototype);
    }
}
class MalformedCertificateException extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$IAMServiceException$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["IAMServiceException"] {
    name = "MalformedCertificateException";
    $fault = "client";
    constructor(opts){
        super({
            name: "MalformedCertificateException",
            $fault: "client",
            ...opts
        });
        Object.setPrototypeOf(this, MalformedCertificateException.prototype);
    }
}
class DuplicateCertificateException extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$IAMServiceException$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["IAMServiceException"] {
    name = "DuplicateCertificateException";
    $fault = "client";
    constructor(opts){
        super({
            name: "DuplicateCertificateException",
            $fault: "client",
            ...opts
        });
        Object.setPrototypeOf(this, DuplicateCertificateException.prototype);
    }
}
class InvalidCertificateException extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$IAMServiceException$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["IAMServiceException"] {
    name = "InvalidCertificateException";
    $fault = "client";
    constructor(opts){
        super({
            name: "InvalidCertificateException",
            $fault: "client",
            ...opts
        });
        Object.setPrototypeOf(this, InvalidCertificateException.prototype);
    }
}
class DuplicateSSHPublicKeyException extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$IAMServiceException$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["IAMServiceException"] {
    name = "DuplicateSSHPublicKeyException";
    $fault = "client";
    constructor(opts){
        super({
            name: "DuplicateSSHPublicKeyException",
            $fault: "client",
            ...opts
        });
        Object.setPrototypeOf(this, DuplicateSSHPublicKeyException.prototype);
    }
}
class InvalidPublicKeyException extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$IAMServiceException$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["IAMServiceException"] {
    name = "InvalidPublicKeyException";
    $fault = "client";
    constructor(opts){
        super({
            name: "InvalidPublicKeyException",
            $fault: "client",
            ...opts
        });
        Object.setPrototypeOf(this, InvalidPublicKeyException.prototype);
    }
}
const UpdateLoginProfileRequestFilterSensitiveLog = (obj)=>({
        ...obj,
        ...obj.Password && {
            Password: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$constants$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["SENSITIVE_STRING"]
        }
    });
const UpdateSAMLProviderRequestFilterSensitiveLog = (obj)=>({
        ...obj,
        ...obj.AddPrivateKey && {
            AddPrivateKey: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$constants$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["SENSITIVE_STRING"]
        }
    });
const UploadServerCertificateRequestFilterSensitiveLog = (obj)=>({
        ...obj,
        ...obj.PrivateKey && {
            PrivateKey: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$constants$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["SENSITIVE_STRING"]
        }
    });
}}),
"[project]/node_modules/@aws-sdk/client-iam/dist-es/protocols/Aws_query.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "de_AddClientIDToOpenIDConnectProviderCommand": (()=>de_AddClientIDToOpenIDConnectProviderCommand),
    "de_AddRoleToInstanceProfileCommand": (()=>de_AddRoleToInstanceProfileCommand),
    "de_AddUserToGroupCommand": (()=>de_AddUserToGroupCommand),
    "de_AttachGroupPolicyCommand": (()=>de_AttachGroupPolicyCommand),
    "de_AttachRolePolicyCommand": (()=>de_AttachRolePolicyCommand),
    "de_AttachUserPolicyCommand": (()=>de_AttachUserPolicyCommand),
    "de_ChangePasswordCommand": (()=>de_ChangePasswordCommand),
    "de_CreateAccessKeyCommand": (()=>de_CreateAccessKeyCommand),
    "de_CreateAccountAliasCommand": (()=>de_CreateAccountAliasCommand),
    "de_CreateGroupCommand": (()=>de_CreateGroupCommand),
    "de_CreateInstanceProfileCommand": (()=>de_CreateInstanceProfileCommand),
    "de_CreateLoginProfileCommand": (()=>de_CreateLoginProfileCommand),
    "de_CreateOpenIDConnectProviderCommand": (()=>de_CreateOpenIDConnectProviderCommand),
    "de_CreatePolicyCommand": (()=>de_CreatePolicyCommand),
    "de_CreatePolicyVersionCommand": (()=>de_CreatePolicyVersionCommand),
    "de_CreateRoleCommand": (()=>de_CreateRoleCommand),
    "de_CreateSAMLProviderCommand": (()=>de_CreateSAMLProviderCommand),
    "de_CreateServiceLinkedRoleCommand": (()=>de_CreateServiceLinkedRoleCommand),
    "de_CreateServiceSpecificCredentialCommand": (()=>de_CreateServiceSpecificCredentialCommand),
    "de_CreateUserCommand": (()=>de_CreateUserCommand),
    "de_CreateVirtualMFADeviceCommand": (()=>de_CreateVirtualMFADeviceCommand),
    "de_DeactivateMFADeviceCommand": (()=>de_DeactivateMFADeviceCommand),
    "de_DeleteAccessKeyCommand": (()=>de_DeleteAccessKeyCommand),
    "de_DeleteAccountAliasCommand": (()=>de_DeleteAccountAliasCommand),
    "de_DeleteAccountPasswordPolicyCommand": (()=>de_DeleteAccountPasswordPolicyCommand),
    "de_DeleteGroupCommand": (()=>de_DeleteGroupCommand),
    "de_DeleteGroupPolicyCommand": (()=>de_DeleteGroupPolicyCommand),
    "de_DeleteInstanceProfileCommand": (()=>de_DeleteInstanceProfileCommand),
    "de_DeleteLoginProfileCommand": (()=>de_DeleteLoginProfileCommand),
    "de_DeleteOpenIDConnectProviderCommand": (()=>de_DeleteOpenIDConnectProviderCommand),
    "de_DeletePolicyCommand": (()=>de_DeletePolicyCommand),
    "de_DeletePolicyVersionCommand": (()=>de_DeletePolicyVersionCommand),
    "de_DeleteRoleCommand": (()=>de_DeleteRoleCommand),
    "de_DeleteRolePermissionsBoundaryCommand": (()=>de_DeleteRolePermissionsBoundaryCommand),
    "de_DeleteRolePolicyCommand": (()=>de_DeleteRolePolicyCommand),
    "de_DeleteSAMLProviderCommand": (()=>de_DeleteSAMLProviderCommand),
    "de_DeleteSSHPublicKeyCommand": (()=>de_DeleteSSHPublicKeyCommand),
    "de_DeleteServerCertificateCommand": (()=>de_DeleteServerCertificateCommand),
    "de_DeleteServiceLinkedRoleCommand": (()=>de_DeleteServiceLinkedRoleCommand),
    "de_DeleteServiceSpecificCredentialCommand": (()=>de_DeleteServiceSpecificCredentialCommand),
    "de_DeleteSigningCertificateCommand": (()=>de_DeleteSigningCertificateCommand),
    "de_DeleteUserCommand": (()=>de_DeleteUserCommand),
    "de_DeleteUserPermissionsBoundaryCommand": (()=>de_DeleteUserPermissionsBoundaryCommand),
    "de_DeleteUserPolicyCommand": (()=>de_DeleteUserPolicyCommand),
    "de_DeleteVirtualMFADeviceCommand": (()=>de_DeleteVirtualMFADeviceCommand),
    "de_DetachGroupPolicyCommand": (()=>de_DetachGroupPolicyCommand),
    "de_DetachRolePolicyCommand": (()=>de_DetachRolePolicyCommand),
    "de_DetachUserPolicyCommand": (()=>de_DetachUserPolicyCommand),
    "de_DisableOrganizationsRootCredentialsManagementCommand": (()=>de_DisableOrganizationsRootCredentialsManagementCommand),
    "de_DisableOrganizationsRootSessionsCommand": (()=>de_DisableOrganizationsRootSessionsCommand),
    "de_EnableMFADeviceCommand": (()=>de_EnableMFADeviceCommand),
    "de_EnableOrganizationsRootCredentialsManagementCommand": (()=>de_EnableOrganizationsRootCredentialsManagementCommand),
    "de_EnableOrganizationsRootSessionsCommand": (()=>de_EnableOrganizationsRootSessionsCommand),
    "de_GenerateCredentialReportCommand": (()=>de_GenerateCredentialReportCommand),
    "de_GenerateOrganizationsAccessReportCommand": (()=>de_GenerateOrganizationsAccessReportCommand),
    "de_GenerateServiceLastAccessedDetailsCommand": (()=>de_GenerateServiceLastAccessedDetailsCommand),
    "de_GetAccessKeyLastUsedCommand": (()=>de_GetAccessKeyLastUsedCommand),
    "de_GetAccountAuthorizationDetailsCommand": (()=>de_GetAccountAuthorizationDetailsCommand),
    "de_GetAccountPasswordPolicyCommand": (()=>de_GetAccountPasswordPolicyCommand),
    "de_GetAccountSummaryCommand": (()=>de_GetAccountSummaryCommand),
    "de_GetContextKeysForCustomPolicyCommand": (()=>de_GetContextKeysForCustomPolicyCommand),
    "de_GetContextKeysForPrincipalPolicyCommand": (()=>de_GetContextKeysForPrincipalPolicyCommand),
    "de_GetCredentialReportCommand": (()=>de_GetCredentialReportCommand),
    "de_GetGroupCommand": (()=>de_GetGroupCommand),
    "de_GetGroupPolicyCommand": (()=>de_GetGroupPolicyCommand),
    "de_GetInstanceProfileCommand": (()=>de_GetInstanceProfileCommand),
    "de_GetLoginProfileCommand": (()=>de_GetLoginProfileCommand),
    "de_GetMFADeviceCommand": (()=>de_GetMFADeviceCommand),
    "de_GetOpenIDConnectProviderCommand": (()=>de_GetOpenIDConnectProviderCommand),
    "de_GetOrganizationsAccessReportCommand": (()=>de_GetOrganizationsAccessReportCommand),
    "de_GetPolicyCommand": (()=>de_GetPolicyCommand),
    "de_GetPolicyVersionCommand": (()=>de_GetPolicyVersionCommand),
    "de_GetRoleCommand": (()=>de_GetRoleCommand),
    "de_GetRolePolicyCommand": (()=>de_GetRolePolicyCommand),
    "de_GetSAMLProviderCommand": (()=>de_GetSAMLProviderCommand),
    "de_GetSSHPublicKeyCommand": (()=>de_GetSSHPublicKeyCommand),
    "de_GetServerCertificateCommand": (()=>de_GetServerCertificateCommand),
    "de_GetServiceLastAccessedDetailsCommand": (()=>de_GetServiceLastAccessedDetailsCommand),
    "de_GetServiceLastAccessedDetailsWithEntitiesCommand": (()=>de_GetServiceLastAccessedDetailsWithEntitiesCommand),
    "de_GetServiceLinkedRoleDeletionStatusCommand": (()=>de_GetServiceLinkedRoleDeletionStatusCommand),
    "de_GetUserCommand": (()=>de_GetUserCommand),
    "de_GetUserPolicyCommand": (()=>de_GetUserPolicyCommand),
    "de_ListAccessKeysCommand": (()=>de_ListAccessKeysCommand),
    "de_ListAccountAliasesCommand": (()=>de_ListAccountAliasesCommand),
    "de_ListAttachedGroupPoliciesCommand": (()=>de_ListAttachedGroupPoliciesCommand),
    "de_ListAttachedRolePoliciesCommand": (()=>de_ListAttachedRolePoliciesCommand),
    "de_ListAttachedUserPoliciesCommand": (()=>de_ListAttachedUserPoliciesCommand),
    "de_ListEntitiesForPolicyCommand": (()=>de_ListEntitiesForPolicyCommand),
    "de_ListGroupPoliciesCommand": (()=>de_ListGroupPoliciesCommand),
    "de_ListGroupsCommand": (()=>de_ListGroupsCommand),
    "de_ListGroupsForUserCommand": (()=>de_ListGroupsForUserCommand),
    "de_ListInstanceProfileTagsCommand": (()=>de_ListInstanceProfileTagsCommand),
    "de_ListInstanceProfilesCommand": (()=>de_ListInstanceProfilesCommand),
    "de_ListInstanceProfilesForRoleCommand": (()=>de_ListInstanceProfilesForRoleCommand),
    "de_ListMFADeviceTagsCommand": (()=>de_ListMFADeviceTagsCommand),
    "de_ListMFADevicesCommand": (()=>de_ListMFADevicesCommand),
    "de_ListOpenIDConnectProviderTagsCommand": (()=>de_ListOpenIDConnectProviderTagsCommand),
    "de_ListOpenIDConnectProvidersCommand": (()=>de_ListOpenIDConnectProvidersCommand),
    "de_ListOrganizationsFeaturesCommand": (()=>de_ListOrganizationsFeaturesCommand),
    "de_ListPoliciesCommand": (()=>de_ListPoliciesCommand),
    "de_ListPoliciesGrantingServiceAccessCommand": (()=>de_ListPoliciesGrantingServiceAccessCommand),
    "de_ListPolicyTagsCommand": (()=>de_ListPolicyTagsCommand),
    "de_ListPolicyVersionsCommand": (()=>de_ListPolicyVersionsCommand),
    "de_ListRolePoliciesCommand": (()=>de_ListRolePoliciesCommand),
    "de_ListRoleTagsCommand": (()=>de_ListRoleTagsCommand),
    "de_ListRolesCommand": (()=>de_ListRolesCommand),
    "de_ListSAMLProviderTagsCommand": (()=>de_ListSAMLProviderTagsCommand),
    "de_ListSAMLProvidersCommand": (()=>de_ListSAMLProvidersCommand),
    "de_ListSSHPublicKeysCommand": (()=>de_ListSSHPublicKeysCommand),
    "de_ListServerCertificateTagsCommand": (()=>de_ListServerCertificateTagsCommand),
    "de_ListServerCertificatesCommand": (()=>de_ListServerCertificatesCommand),
    "de_ListServiceSpecificCredentialsCommand": (()=>de_ListServiceSpecificCredentialsCommand),
    "de_ListSigningCertificatesCommand": (()=>de_ListSigningCertificatesCommand),
    "de_ListUserPoliciesCommand": (()=>de_ListUserPoliciesCommand),
    "de_ListUserTagsCommand": (()=>de_ListUserTagsCommand),
    "de_ListUsersCommand": (()=>de_ListUsersCommand),
    "de_ListVirtualMFADevicesCommand": (()=>de_ListVirtualMFADevicesCommand),
    "de_PutGroupPolicyCommand": (()=>de_PutGroupPolicyCommand),
    "de_PutRolePermissionsBoundaryCommand": (()=>de_PutRolePermissionsBoundaryCommand),
    "de_PutRolePolicyCommand": (()=>de_PutRolePolicyCommand),
    "de_PutUserPermissionsBoundaryCommand": (()=>de_PutUserPermissionsBoundaryCommand),
    "de_PutUserPolicyCommand": (()=>de_PutUserPolicyCommand),
    "de_RemoveClientIDFromOpenIDConnectProviderCommand": (()=>de_RemoveClientIDFromOpenIDConnectProviderCommand),
    "de_RemoveRoleFromInstanceProfileCommand": (()=>de_RemoveRoleFromInstanceProfileCommand),
    "de_RemoveUserFromGroupCommand": (()=>de_RemoveUserFromGroupCommand),
    "de_ResetServiceSpecificCredentialCommand": (()=>de_ResetServiceSpecificCredentialCommand),
    "de_ResyncMFADeviceCommand": (()=>de_ResyncMFADeviceCommand),
    "de_SetDefaultPolicyVersionCommand": (()=>de_SetDefaultPolicyVersionCommand),
    "de_SetSecurityTokenServicePreferencesCommand": (()=>de_SetSecurityTokenServicePreferencesCommand),
    "de_SimulateCustomPolicyCommand": (()=>de_SimulateCustomPolicyCommand),
    "de_SimulatePrincipalPolicyCommand": (()=>de_SimulatePrincipalPolicyCommand),
    "de_TagInstanceProfileCommand": (()=>de_TagInstanceProfileCommand),
    "de_TagMFADeviceCommand": (()=>de_TagMFADeviceCommand),
    "de_TagOpenIDConnectProviderCommand": (()=>de_TagOpenIDConnectProviderCommand),
    "de_TagPolicyCommand": (()=>de_TagPolicyCommand),
    "de_TagRoleCommand": (()=>de_TagRoleCommand),
    "de_TagSAMLProviderCommand": (()=>de_TagSAMLProviderCommand),
    "de_TagServerCertificateCommand": (()=>de_TagServerCertificateCommand),
    "de_TagUserCommand": (()=>de_TagUserCommand),
    "de_UntagInstanceProfileCommand": (()=>de_UntagInstanceProfileCommand),
    "de_UntagMFADeviceCommand": (()=>de_UntagMFADeviceCommand),
    "de_UntagOpenIDConnectProviderCommand": (()=>de_UntagOpenIDConnectProviderCommand),
    "de_UntagPolicyCommand": (()=>de_UntagPolicyCommand),
    "de_UntagRoleCommand": (()=>de_UntagRoleCommand),
    "de_UntagSAMLProviderCommand": (()=>de_UntagSAMLProviderCommand),
    "de_UntagServerCertificateCommand": (()=>de_UntagServerCertificateCommand),
    "de_UntagUserCommand": (()=>de_UntagUserCommand),
    "de_UpdateAccessKeyCommand": (()=>de_UpdateAccessKeyCommand),
    "de_UpdateAccountPasswordPolicyCommand": (()=>de_UpdateAccountPasswordPolicyCommand),
    "de_UpdateAssumeRolePolicyCommand": (()=>de_UpdateAssumeRolePolicyCommand),
    "de_UpdateGroupCommand": (()=>de_UpdateGroupCommand),
    "de_UpdateLoginProfileCommand": (()=>de_UpdateLoginProfileCommand),
    "de_UpdateOpenIDConnectProviderThumbprintCommand": (()=>de_UpdateOpenIDConnectProviderThumbprintCommand),
    "de_UpdateRoleCommand": (()=>de_UpdateRoleCommand),
    "de_UpdateRoleDescriptionCommand": (()=>de_UpdateRoleDescriptionCommand),
    "de_UpdateSAMLProviderCommand": (()=>de_UpdateSAMLProviderCommand),
    "de_UpdateSSHPublicKeyCommand": (()=>de_UpdateSSHPublicKeyCommand),
    "de_UpdateServerCertificateCommand": (()=>de_UpdateServerCertificateCommand),
    "de_UpdateServiceSpecificCredentialCommand": (()=>de_UpdateServiceSpecificCredentialCommand),
    "de_UpdateSigningCertificateCommand": (()=>de_UpdateSigningCertificateCommand),
    "de_UpdateUserCommand": (()=>de_UpdateUserCommand),
    "de_UploadSSHPublicKeyCommand": (()=>de_UploadSSHPublicKeyCommand),
    "de_UploadServerCertificateCommand": (()=>de_UploadServerCertificateCommand),
    "de_UploadSigningCertificateCommand": (()=>de_UploadSigningCertificateCommand),
    "se_AddClientIDToOpenIDConnectProviderCommand": (()=>se_AddClientIDToOpenIDConnectProviderCommand),
    "se_AddRoleToInstanceProfileCommand": (()=>se_AddRoleToInstanceProfileCommand),
    "se_AddUserToGroupCommand": (()=>se_AddUserToGroupCommand),
    "se_AttachGroupPolicyCommand": (()=>se_AttachGroupPolicyCommand),
    "se_AttachRolePolicyCommand": (()=>se_AttachRolePolicyCommand),
    "se_AttachUserPolicyCommand": (()=>se_AttachUserPolicyCommand),
    "se_ChangePasswordCommand": (()=>se_ChangePasswordCommand),
    "se_CreateAccessKeyCommand": (()=>se_CreateAccessKeyCommand),
    "se_CreateAccountAliasCommand": (()=>se_CreateAccountAliasCommand),
    "se_CreateGroupCommand": (()=>se_CreateGroupCommand),
    "se_CreateInstanceProfileCommand": (()=>se_CreateInstanceProfileCommand),
    "se_CreateLoginProfileCommand": (()=>se_CreateLoginProfileCommand),
    "se_CreateOpenIDConnectProviderCommand": (()=>se_CreateOpenIDConnectProviderCommand),
    "se_CreatePolicyCommand": (()=>se_CreatePolicyCommand),
    "se_CreatePolicyVersionCommand": (()=>se_CreatePolicyVersionCommand),
    "se_CreateRoleCommand": (()=>se_CreateRoleCommand),
    "se_CreateSAMLProviderCommand": (()=>se_CreateSAMLProviderCommand),
    "se_CreateServiceLinkedRoleCommand": (()=>se_CreateServiceLinkedRoleCommand),
    "se_CreateServiceSpecificCredentialCommand": (()=>se_CreateServiceSpecificCredentialCommand),
    "se_CreateUserCommand": (()=>se_CreateUserCommand),
    "se_CreateVirtualMFADeviceCommand": (()=>se_CreateVirtualMFADeviceCommand),
    "se_DeactivateMFADeviceCommand": (()=>se_DeactivateMFADeviceCommand),
    "se_DeleteAccessKeyCommand": (()=>se_DeleteAccessKeyCommand),
    "se_DeleteAccountAliasCommand": (()=>se_DeleteAccountAliasCommand),
    "se_DeleteAccountPasswordPolicyCommand": (()=>se_DeleteAccountPasswordPolicyCommand),
    "se_DeleteGroupCommand": (()=>se_DeleteGroupCommand),
    "se_DeleteGroupPolicyCommand": (()=>se_DeleteGroupPolicyCommand),
    "se_DeleteInstanceProfileCommand": (()=>se_DeleteInstanceProfileCommand),
    "se_DeleteLoginProfileCommand": (()=>se_DeleteLoginProfileCommand),
    "se_DeleteOpenIDConnectProviderCommand": (()=>se_DeleteOpenIDConnectProviderCommand),
    "se_DeletePolicyCommand": (()=>se_DeletePolicyCommand),
    "se_DeletePolicyVersionCommand": (()=>se_DeletePolicyVersionCommand),
    "se_DeleteRoleCommand": (()=>se_DeleteRoleCommand),
    "se_DeleteRolePermissionsBoundaryCommand": (()=>se_DeleteRolePermissionsBoundaryCommand),
    "se_DeleteRolePolicyCommand": (()=>se_DeleteRolePolicyCommand),
    "se_DeleteSAMLProviderCommand": (()=>se_DeleteSAMLProviderCommand),
    "se_DeleteSSHPublicKeyCommand": (()=>se_DeleteSSHPublicKeyCommand),
    "se_DeleteServerCertificateCommand": (()=>se_DeleteServerCertificateCommand),
    "se_DeleteServiceLinkedRoleCommand": (()=>se_DeleteServiceLinkedRoleCommand),
    "se_DeleteServiceSpecificCredentialCommand": (()=>se_DeleteServiceSpecificCredentialCommand),
    "se_DeleteSigningCertificateCommand": (()=>se_DeleteSigningCertificateCommand),
    "se_DeleteUserCommand": (()=>se_DeleteUserCommand),
    "se_DeleteUserPermissionsBoundaryCommand": (()=>se_DeleteUserPermissionsBoundaryCommand),
    "se_DeleteUserPolicyCommand": (()=>se_DeleteUserPolicyCommand),
    "se_DeleteVirtualMFADeviceCommand": (()=>se_DeleteVirtualMFADeviceCommand),
    "se_DetachGroupPolicyCommand": (()=>se_DetachGroupPolicyCommand),
    "se_DetachRolePolicyCommand": (()=>se_DetachRolePolicyCommand),
    "se_DetachUserPolicyCommand": (()=>se_DetachUserPolicyCommand),
    "se_DisableOrganizationsRootCredentialsManagementCommand": (()=>se_DisableOrganizationsRootCredentialsManagementCommand),
    "se_DisableOrganizationsRootSessionsCommand": (()=>se_DisableOrganizationsRootSessionsCommand),
    "se_EnableMFADeviceCommand": (()=>se_EnableMFADeviceCommand),
    "se_EnableOrganizationsRootCredentialsManagementCommand": (()=>se_EnableOrganizationsRootCredentialsManagementCommand),
    "se_EnableOrganizationsRootSessionsCommand": (()=>se_EnableOrganizationsRootSessionsCommand),
    "se_GenerateCredentialReportCommand": (()=>se_GenerateCredentialReportCommand),
    "se_GenerateOrganizationsAccessReportCommand": (()=>se_GenerateOrganizationsAccessReportCommand),
    "se_GenerateServiceLastAccessedDetailsCommand": (()=>se_GenerateServiceLastAccessedDetailsCommand),
    "se_GetAccessKeyLastUsedCommand": (()=>se_GetAccessKeyLastUsedCommand),
    "se_GetAccountAuthorizationDetailsCommand": (()=>se_GetAccountAuthorizationDetailsCommand),
    "se_GetAccountPasswordPolicyCommand": (()=>se_GetAccountPasswordPolicyCommand),
    "se_GetAccountSummaryCommand": (()=>se_GetAccountSummaryCommand),
    "se_GetContextKeysForCustomPolicyCommand": (()=>se_GetContextKeysForCustomPolicyCommand),
    "se_GetContextKeysForPrincipalPolicyCommand": (()=>se_GetContextKeysForPrincipalPolicyCommand),
    "se_GetCredentialReportCommand": (()=>se_GetCredentialReportCommand),
    "se_GetGroupCommand": (()=>se_GetGroupCommand),
    "se_GetGroupPolicyCommand": (()=>se_GetGroupPolicyCommand),
    "se_GetInstanceProfileCommand": (()=>se_GetInstanceProfileCommand),
    "se_GetLoginProfileCommand": (()=>se_GetLoginProfileCommand),
    "se_GetMFADeviceCommand": (()=>se_GetMFADeviceCommand),
    "se_GetOpenIDConnectProviderCommand": (()=>se_GetOpenIDConnectProviderCommand),
    "se_GetOrganizationsAccessReportCommand": (()=>se_GetOrganizationsAccessReportCommand),
    "se_GetPolicyCommand": (()=>se_GetPolicyCommand),
    "se_GetPolicyVersionCommand": (()=>se_GetPolicyVersionCommand),
    "se_GetRoleCommand": (()=>se_GetRoleCommand),
    "se_GetRolePolicyCommand": (()=>se_GetRolePolicyCommand),
    "se_GetSAMLProviderCommand": (()=>se_GetSAMLProviderCommand),
    "se_GetSSHPublicKeyCommand": (()=>se_GetSSHPublicKeyCommand),
    "se_GetServerCertificateCommand": (()=>se_GetServerCertificateCommand),
    "se_GetServiceLastAccessedDetailsCommand": (()=>se_GetServiceLastAccessedDetailsCommand),
    "se_GetServiceLastAccessedDetailsWithEntitiesCommand": (()=>se_GetServiceLastAccessedDetailsWithEntitiesCommand),
    "se_GetServiceLinkedRoleDeletionStatusCommand": (()=>se_GetServiceLinkedRoleDeletionStatusCommand),
    "se_GetUserCommand": (()=>se_GetUserCommand),
    "se_GetUserPolicyCommand": (()=>se_GetUserPolicyCommand),
    "se_ListAccessKeysCommand": (()=>se_ListAccessKeysCommand),
    "se_ListAccountAliasesCommand": (()=>se_ListAccountAliasesCommand),
    "se_ListAttachedGroupPoliciesCommand": (()=>se_ListAttachedGroupPoliciesCommand),
    "se_ListAttachedRolePoliciesCommand": (()=>se_ListAttachedRolePoliciesCommand),
    "se_ListAttachedUserPoliciesCommand": (()=>se_ListAttachedUserPoliciesCommand),
    "se_ListEntitiesForPolicyCommand": (()=>se_ListEntitiesForPolicyCommand),
    "se_ListGroupPoliciesCommand": (()=>se_ListGroupPoliciesCommand),
    "se_ListGroupsCommand": (()=>se_ListGroupsCommand),
    "se_ListGroupsForUserCommand": (()=>se_ListGroupsForUserCommand),
    "se_ListInstanceProfileTagsCommand": (()=>se_ListInstanceProfileTagsCommand),
    "se_ListInstanceProfilesCommand": (()=>se_ListInstanceProfilesCommand),
    "se_ListInstanceProfilesForRoleCommand": (()=>se_ListInstanceProfilesForRoleCommand),
    "se_ListMFADeviceTagsCommand": (()=>se_ListMFADeviceTagsCommand),
    "se_ListMFADevicesCommand": (()=>se_ListMFADevicesCommand),
    "se_ListOpenIDConnectProviderTagsCommand": (()=>se_ListOpenIDConnectProviderTagsCommand),
    "se_ListOpenIDConnectProvidersCommand": (()=>se_ListOpenIDConnectProvidersCommand),
    "se_ListOrganizationsFeaturesCommand": (()=>se_ListOrganizationsFeaturesCommand),
    "se_ListPoliciesCommand": (()=>se_ListPoliciesCommand),
    "se_ListPoliciesGrantingServiceAccessCommand": (()=>se_ListPoliciesGrantingServiceAccessCommand),
    "se_ListPolicyTagsCommand": (()=>se_ListPolicyTagsCommand),
    "se_ListPolicyVersionsCommand": (()=>se_ListPolicyVersionsCommand),
    "se_ListRolePoliciesCommand": (()=>se_ListRolePoliciesCommand),
    "se_ListRoleTagsCommand": (()=>se_ListRoleTagsCommand),
    "se_ListRolesCommand": (()=>se_ListRolesCommand),
    "se_ListSAMLProviderTagsCommand": (()=>se_ListSAMLProviderTagsCommand),
    "se_ListSAMLProvidersCommand": (()=>se_ListSAMLProvidersCommand),
    "se_ListSSHPublicKeysCommand": (()=>se_ListSSHPublicKeysCommand),
    "se_ListServerCertificateTagsCommand": (()=>se_ListServerCertificateTagsCommand),
    "se_ListServerCertificatesCommand": (()=>se_ListServerCertificatesCommand),
    "se_ListServiceSpecificCredentialsCommand": (()=>se_ListServiceSpecificCredentialsCommand),
    "se_ListSigningCertificatesCommand": (()=>se_ListSigningCertificatesCommand),
    "se_ListUserPoliciesCommand": (()=>se_ListUserPoliciesCommand),
    "se_ListUserTagsCommand": (()=>se_ListUserTagsCommand),
    "se_ListUsersCommand": (()=>se_ListUsersCommand),
    "se_ListVirtualMFADevicesCommand": (()=>se_ListVirtualMFADevicesCommand),
    "se_PutGroupPolicyCommand": (()=>se_PutGroupPolicyCommand),
    "se_PutRolePermissionsBoundaryCommand": (()=>se_PutRolePermissionsBoundaryCommand),
    "se_PutRolePolicyCommand": (()=>se_PutRolePolicyCommand),
    "se_PutUserPermissionsBoundaryCommand": (()=>se_PutUserPermissionsBoundaryCommand),
    "se_PutUserPolicyCommand": (()=>se_PutUserPolicyCommand),
    "se_RemoveClientIDFromOpenIDConnectProviderCommand": (()=>se_RemoveClientIDFromOpenIDConnectProviderCommand),
    "se_RemoveRoleFromInstanceProfileCommand": (()=>se_RemoveRoleFromInstanceProfileCommand),
    "se_RemoveUserFromGroupCommand": (()=>se_RemoveUserFromGroupCommand),
    "se_ResetServiceSpecificCredentialCommand": (()=>se_ResetServiceSpecificCredentialCommand),
    "se_ResyncMFADeviceCommand": (()=>se_ResyncMFADeviceCommand),
    "se_SetDefaultPolicyVersionCommand": (()=>se_SetDefaultPolicyVersionCommand),
    "se_SetSecurityTokenServicePreferencesCommand": (()=>se_SetSecurityTokenServicePreferencesCommand),
    "se_SimulateCustomPolicyCommand": (()=>se_SimulateCustomPolicyCommand),
    "se_SimulatePrincipalPolicyCommand": (()=>se_SimulatePrincipalPolicyCommand),
    "se_TagInstanceProfileCommand": (()=>se_TagInstanceProfileCommand),
    "se_TagMFADeviceCommand": (()=>se_TagMFADeviceCommand),
    "se_TagOpenIDConnectProviderCommand": (()=>se_TagOpenIDConnectProviderCommand),
    "se_TagPolicyCommand": (()=>se_TagPolicyCommand),
    "se_TagRoleCommand": (()=>se_TagRoleCommand),
    "se_TagSAMLProviderCommand": (()=>se_TagSAMLProviderCommand),
    "se_TagServerCertificateCommand": (()=>se_TagServerCertificateCommand),
    "se_TagUserCommand": (()=>se_TagUserCommand),
    "se_UntagInstanceProfileCommand": (()=>se_UntagInstanceProfileCommand),
    "se_UntagMFADeviceCommand": (()=>se_UntagMFADeviceCommand),
    "se_UntagOpenIDConnectProviderCommand": (()=>se_UntagOpenIDConnectProviderCommand),
    "se_UntagPolicyCommand": (()=>se_UntagPolicyCommand),
    "se_UntagRoleCommand": (()=>se_UntagRoleCommand),
    "se_UntagSAMLProviderCommand": (()=>se_UntagSAMLProviderCommand),
    "se_UntagServerCertificateCommand": (()=>se_UntagServerCertificateCommand),
    "se_UntagUserCommand": (()=>se_UntagUserCommand),
    "se_UpdateAccessKeyCommand": (()=>se_UpdateAccessKeyCommand),
    "se_UpdateAccountPasswordPolicyCommand": (()=>se_UpdateAccountPasswordPolicyCommand),
    "se_UpdateAssumeRolePolicyCommand": (()=>se_UpdateAssumeRolePolicyCommand),
    "se_UpdateGroupCommand": (()=>se_UpdateGroupCommand),
    "se_UpdateLoginProfileCommand": (()=>se_UpdateLoginProfileCommand),
    "se_UpdateOpenIDConnectProviderThumbprintCommand": (()=>se_UpdateOpenIDConnectProviderThumbprintCommand),
    "se_UpdateRoleCommand": (()=>se_UpdateRoleCommand),
    "se_UpdateRoleDescriptionCommand": (()=>se_UpdateRoleDescriptionCommand),
    "se_UpdateSAMLProviderCommand": (()=>se_UpdateSAMLProviderCommand),
    "se_UpdateSSHPublicKeyCommand": (()=>se_UpdateSSHPublicKeyCommand),
    "se_UpdateServerCertificateCommand": (()=>se_UpdateServerCertificateCommand),
    "se_UpdateServiceSpecificCredentialCommand": (()=>se_UpdateServiceSpecificCredentialCommand),
    "se_UpdateSigningCertificateCommand": (()=>se_UpdateSigningCertificateCommand),
    "se_UpdateUserCommand": (()=>se_UpdateUserCommand),
    "se_UploadSSHPublicKeyCommand": (()=>se_UploadSSHPublicKeyCommand),
    "se_UploadServerCertificateCommand": (()=>se_UploadServerCertificateCommand),
    "se_UploadSigningCertificateCommand": (()=>se_UploadSigningCertificateCommand)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/core/dist-es/submodules/protocols/xml/parseXmlBody.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$protocol$2d$http$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/protocol-http/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$protocol$2d$http$2f$dist$2d$es$2f$httpRequest$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/protocol-http/dist-es/httpRequest.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/smithy-client/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/core/dist-es/submodules/protocols/collect-stream-body.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$exceptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/smithy-client/dist-es/exceptions.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/smithy-client/dist-es/parse-utils.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$extended$2d$encode$2d$uri$2d$component$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/core/dist-es/submodules/protocols/extended-encode-uri-component.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/smithy-client/dist-es/get-array-if-single-item.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/smithy-client/dist-es/date-utils.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$default$2d$error$2d$handler$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/smithy-client/dist-es/default-error-handler.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$IAMServiceException$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/client-iam/dist-es/models/IAMServiceException.js [app-route] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$models_0$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/client-iam/dist-es/models/models_0.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$models_1$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/client-iam/dist-es/models/models_1.js [app-route] (ecmascript)");
;
;
;
;
;
;
const se_AddClientIDToOpenIDConnectProviderCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_AddClientIDToOpenIDConnectProviderRequest(input, context),
        [_A]: _ACIDTOIDCP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_AddRoleToInstanceProfileCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_AddRoleToInstanceProfileRequest(input, context),
        [_A]: _ARTIP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_AddUserToGroupCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_AddUserToGroupRequest(input, context),
        [_A]: _AUTG,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_AttachGroupPolicyCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_AttachGroupPolicyRequest(input, context),
        [_A]: _AGP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_AttachRolePolicyCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_AttachRolePolicyRequest(input, context),
        [_A]: _ARP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_AttachUserPolicyCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_AttachUserPolicyRequest(input, context),
        [_A]: _AUP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_ChangePasswordCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_ChangePasswordRequest(input, context),
        [_A]: _CP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_CreateAccessKeyCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_CreateAccessKeyRequest(input, context),
        [_A]: _CAK,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_CreateAccountAliasCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_CreateAccountAliasRequest(input, context),
        [_A]: _CAA,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_CreateGroupCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_CreateGroupRequest(input, context),
        [_A]: _CG,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_CreateInstanceProfileCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_CreateInstanceProfileRequest(input, context),
        [_A]: _CIP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_CreateLoginProfileCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_CreateLoginProfileRequest(input, context),
        [_A]: _CLP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_CreateOpenIDConnectProviderCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_CreateOpenIDConnectProviderRequest(input, context),
        [_A]: _COIDCP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_CreatePolicyCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_CreatePolicyRequest(input, context),
        [_A]: _CPr,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_CreatePolicyVersionCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_CreatePolicyVersionRequest(input, context),
        [_A]: _CPV,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_CreateRoleCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_CreateRoleRequest(input, context),
        [_A]: _CR,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_CreateSAMLProviderCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_CreateSAMLProviderRequest(input, context),
        [_A]: _CSAMLP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_CreateServiceLinkedRoleCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_CreateServiceLinkedRoleRequest(input, context),
        [_A]: _CSLR,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_CreateServiceSpecificCredentialCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_CreateServiceSpecificCredentialRequest(input, context),
        [_A]: _CSSC,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_CreateUserCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_CreateUserRequest(input, context),
        [_A]: _CU,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_CreateVirtualMFADeviceCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_CreateVirtualMFADeviceRequest(input, context),
        [_A]: _CVMFAD,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_DeactivateMFADeviceCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_DeactivateMFADeviceRequest(input, context),
        [_A]: _DMFAD,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_DeleteAccessKeyCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_DeleteAccessKeyRequest(input, context),
        [_A]: _DAK,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_DeleteAccountAliasCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_DeleteAccountAliasRequest(input, context),
        [_A]: _DAA,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_DeleteAccountPasswordPolicyCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    const body = buildFormUrlencodedString({
        [_A]: _DAPP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_DeleteGroupCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_DeleteGroupRequest(input, context),
        [_A]: _DG,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_DeleteGroupPolicyCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_DeleteGroupPolicyRequest(input, context),
        [_A]: _DGP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_DeleteInstanceProfileCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_DeleteInstanceProfileRequest(input, context),
        [_A]: _DIP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_DeleteLoginProfileCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_DeleteLoginProfileRequest(input, context),
        [_A]: _DLP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_DeleteOpenIDConnectProviderCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_DeleteOpenIDConnectProviderRequest(input, context),
        [_A]: _DOIDCP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_DeletePolicyCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_DeletePolicyRequest(input, context),
        [_A]: _DP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_DeletePolicyVersionCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_DeletePolicyVersionRequest(input, context),
        [_A]: _DPV,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_DeleteRoleCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_DeleteRoleRequest(input, context),
        [_A]: _DR,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_DeleteRolePermissionsBoundaryCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_DeleteRolePermissionsBoundaryRequest(input, context),
        [_A]: _DRPB,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_DeleteRolePolicyCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_DeleteRolePolicyRequest(input, context),
        [_A]: _DRP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_DeleteSAMLProviderCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_DeleteSAMLProviderRequest(input, context),
        [_A]: _DSAMLP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_DeleteServerCertificateCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_DeleteServerCertificateRequest(input, context),
        [_A]: _DSC,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_DeleteServiceLinkedRoleCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_DeleteServiceLinkedRoleRequest(input, context),
        [_A]: _DSLR,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_DeleteServiceSpecificCredentialCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_DeleteServiceSpecificCredentialRequest(input, context),
        [_A]: _DSSC,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_DeleteSigningCertificateCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_DeleteSigningCertificateRequest(input, context),
        [_A]: _DSCe,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_DeleteSSHPublicKeyCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_DeleteSSHPublicKeyRequest(input, context),
        [_A]: _DSSHPK,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_DeleteUserCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_DeleteUserRequest(input, context),
        [_A]: _DU,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_DeleteUserPermissionsBoundaryCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_DeleteUserPermissionsBoundaryRequest(input, context),
        [_A]: _DUPB,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_DeleteUserPolicyCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_DeleteUserPolicyRequest(input, context),
        [_A]: _DUP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_DeleteVirtualMFADeviceCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_DeleteVirtualMFADeviceRequest(input, context),
        [_A]: _DVMFAD,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_DetachGroupPolicyCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_DetachGroupPolicyRequest(input, context),
        [_A]: _DGPe,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_DetachRolePolicyCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_DetachRolePolicyRequest(input, context),
        [_A]: _DRPe,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_DetachUserPolicyCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_DetachUserPolicyRequest(input, context),
        [_A]: _DUPe,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_DisableOrganizationsRootCredentialsManagementCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_DisableOrganizationsRootCredentialsManagementRequest(input, context),
        [_A]: _DORCM,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_DisableOrganizationsRootSessionsCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_DisableOrganizationsRootSessionsRequest(input, context),
        [_A]: _DORS,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_EnableMFADeviceCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_EnableMFADeviceRequest(input, context),
        [_A]: _EMFAD,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_EnableOrganizationsRootCredentialsManagementCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_EnableOrganizationsRootCredentialsManagementRequest(input, context),
        [_A]: _EORCM,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_EnableOrganizationsRootSessionsCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_EnableOrganizationsRootSessionsRequest(input, context),
        [_A]: _EORS,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_GenerateCredentialReportCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    const body = buildFormUrlencodedString({
        [_A]: _GCR,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_GenerateOrganizationsAccessReportCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_GenerateOrganizationsAccessReportRequest(input, context),
        [_A]: _GOAR,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_GenerateServiceLastAccessedDetailsCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_GenerateServiceLastAccessedDetailsRequest(input, context),
        [_A]: _GSLAD,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_GetAccessKeyLastUsedCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_GetAccessKeyLastUsedRequest(input, context),
        [_A]: _GAKLU,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_GetAccountAuthorizationDetailsCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_GetAccountAuthorizationDetailsRequest(input, context),
        [_A]: _GAAD,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_GetAccountPasswordPolicyCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    const body = buildFormUrlencodedString({
        [_A]: _GAPP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_GetAccountSummaryCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    const body = buildFormUrlencodedString({
        [_A]: _GAS,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_GetContextKeysForCustomPolicyCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_GetContextKeysForCustomPolicyRequest(input, context),
        [_A]: _GCKFCP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_GetContextKeysForPrincipalPolicyCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_GetContextKeysForPrincipalPolicyRequest(input, context),
        [_A]: _GCKFPP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_GetCredentialReportCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    const body = buildFormUrlencodedString({
        [_A]: _GCRe,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_GetGroupCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_GetGroupRequest(input, context),
        [_A]: _GG,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_GetGroupPolicyCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_GetGroupPolicyRequest(input, context),
        [_A]: _GGP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_GetInstanceProfileCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_GetInstanceProfileRequest(input, context),
        [_A]: _GIP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_GetLoginProfileCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_GetLoginProfileRequest(input, context),
        [_A]: _GLP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_GetMFADeviceCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_GetMFADeviceRequest(input, context),
        [_A]: _GMFAD,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_GetOpenIDConnectProviderCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_GetOpenIDConnectProviderRequest(input, context),
        [_A]: _GOIDCP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_GetOrganizationsAccessReportCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_GetOrganizationsAccessReportRequest(input, context),
        [_A]: _GOARe,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_GetPolicyCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_GetPolicyRequest(input, context),
        [_A]: _GP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_GetPolicyVersionCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_GetPolicyVersionRequest(input, context),
        [_A]: _GPV,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_GetRoleCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_GetRoleRequest(input, context),
        [_A]: _GR,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_GetRolePolicyCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_GetRolePolicyRequest(input, context),
        [_A]: _GRP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_GetSAMLProviderCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_GetSAMLProviderRequest(input, context),
        [_A]: _GSAMLP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_GetServerCertificateCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_GetServerCertificateRequest(input, context),
        [_A]: _GSC,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_GetServiceLastAccessedDetailsCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_GetServiceLastAccessedDetailsRequest(input, context),
        [_A]: _GSLADe,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_GetServiceLastAccessedDetailsWithEntitiesCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_GetServiceLastAccessedDetailsWithEntitiesRequest(input, context),
        [_A]: _GSLADWE,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_GetServiceLinkedRoleDeletionStatusCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_GetServiceLinkedRoleDeletionStatusRequest(input, context),
        [_A]: _GSLRDS,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_GetSSHPublicKeyCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_GetSSHPublicKeyRequest(input, context),
        [_A]: _GSSHPK,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_GetUserCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_GetUserRequest(input, context),
        [_A]: _GU,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_GetUserPolicyCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_GetUserPolicyRequest(input, context),
        [_A]: _GUP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_ListAccessKeysCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_ListAccessKeysRequest(input, context),
        [_A]: _LAK,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_ListAccountAliasesCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_ListAccountAliasesRequest(input, context),
        [_A]: _LAA,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_ListAttachedGroupPoliciesCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_ListAttachedGroupPoliciesRequest(input, context),
        [_A]: _LAGP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_ListAttachedRolePoliciesCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_ListAttachedRolePoliciesRequest(input, context),
        [_A]: _LARP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_ListAttachedUserPoliciesCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_ListAttachedUserPoliciesRequest(input, context),
        [_A]: _LAUP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_ListEntitiesForPolicyCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_ListEntitiesForPolicyRequest(input, context),
        [_A]: _LEFP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_ListGroupPoliciesCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_ListGroupPoliciesRequest(input, context),
        [_A]: _LGP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_ListGroupsCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_ListGroupsRequest(input, context),
        [_A]: _LG,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_ListGroupsForUserCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_ListGroupsForUserRequest(input, context),
        [_A]: _LGFU,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_ListInstanceProfilesCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_ListInstanceProfilesRequest(input, context),
        [_A]: _LIP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_ListInstanceProfilesForRoleCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_ListInstanceProfilesForRoleRequest(input, context),
        [_A]: _LIPFR,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_ListInstanceProfileTagsCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_ListInstanceProfileTagsRequest(input, context),
        [_A]: _LIPT,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_ListMFADevicesCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_ListMFADevicesRequest(input, context),
        [_A]: _LMFAD,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_ListMFADeviceTagsCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_ListMFADeviceTagsRequest(input, context),
        [_A]: _LMFADT,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_ListOpenIDConnectProvidersCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_ListOpenIDConnectProvidersRequest(input, context),
        [_A]: _LOIDCP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_ListOpenIDConnectProviderTagsCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_ListOpenIDConnectProviderTagsRequest(input, context),
        [_A]: _LOIDCPT,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_ListOrganizationsFeaturesCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_ListOrganizationsFeaturesRequest(input, context),
        [_A]: _LOF,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_ListPoliciesCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_ListPoliciesRequest(input, context),
        [_A]: _LP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_ListPoliciesGrantingServiceAccessCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_ListPoliciesGrantingServiceAccessRequest(input, context),
        [_A]: _LPGSA,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_ListPolicyTagsCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_ListPolicyTagsRequest(input, context),
        [_A]: _LPT,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_ListPolicyVersionsCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_ListPolicyVersionsRequest(input, context),
        [_A]: _LPV,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_ListRolePoliciesCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_ListRolePoliciesRequest(input, context),
        [_A]: _LRP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_ListRolesCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_ListRolesRequest(input, context),
        [_A]: _LR,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_ListRoleTagsCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_ListRoleTagsRequest(input, context),
        [_A]: _LRT,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_ListSAMLProvidersCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_ListSAMLProvidersRequest(input, context),
        [_A]: _LSAMLP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_ListSAMLProviderTagsCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_ListSAMLProviderTagsRequest(input, context),
        [_A]: _LSAMLPT,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_ListServerCertificatesCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_ListServerCertificatesRequest(input, context),
        [_A]: _LSC,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_ListServerCertificateTagsCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_ListServerCertificateTagsRequest(input, context),
        [_A]: _LSCT,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_ListServiceSpecificCredentialsCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_ListServiceSpecificCredentialsRequest(input, context),
        [_A]: _LSSC,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_ListSigningCertificatesCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_ListSigningCertificatesRequest(input, context),
        [_A]: _LSCi,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_ListSSHPublicKeysCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_ListSSHPublicKeysRequest(input, context),
        [_A]: _LSSHPK,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_ListUserPoliciesCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_ListUserPoliciesRequest(input, context),
        [_A]: _LUP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_ListUsersCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_ListUsersRequest(input, context),
        [_A]: _LU,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_ListUserTagsCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_ListUserTagsRequest(input, context),
        [_A]: _LUT,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_ListVirtualMFADevicesCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_ListVirtualMFADevicesRequest(input, context),
        [_A]: _LVMFAD,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_PutGroupPolicyCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_PutGroupPolicyRequest(input, context),
        [_A]: _PGP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_PutRolePermissionsBoundaryCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_PutRolePermissionsBoundaryRequest(input, context),
        [_A]: _PRPB,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_PutRolePolicyCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_PutRolePolicyRequest(input, context),
        [_A]: _PRP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_PutUserPermissionsBoundaryCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_PutUserPermissionsBoundaryRequest(input, context),
        [_A]: _PUPB,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_PutUserPolicyCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_PutUserPolicyRequest(input, context),
        [_A]: _PUP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_RemoveClientIDFromOpenIDConnectProviderCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_RemoveClientIDFromOpenIDConnectProviderRequest(input, context),
        [_A]: _RCIDFOIDCP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_RemoveRoleFromInstanceProfileCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_RemoveRoleFromInstanceProfileRequest(input, context),
        [_A]: _RRFIP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_RemoveUserFromGroupCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_RemoveUserFromGroupRequest(input, context),
        [_A]: _RUFG,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_ResetServiceSpecificCredentialCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_ResetServiceSpecificCredentialRequest(input, context),
        [_A]: _RSSC,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_ResyncMFADeviceCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_ResyncMFADeviceRequest(input, context),
        [_A]: _RMFAD,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_SetDefaultPolicyVersionCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_SetDefaultPolicyVersionRequest(input, context),
        [_A]: _SDPV,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_SetSecurityTokenServicePreferencesCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_SetSecurityTokenServicePreferencesRequest(input, context),
        [_A]: _SSTSP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_SimulateCustomPolicyCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_SimulateCustomPolicyRequest(input, context),
        [_A]: _SCP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_SimulatePrincipalPolicyCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_SimulatePrincipalPolicyRequest(input, context),
        [_A]: _SPP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_TagInstanceProfileCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_TagInstanceProfileRequest(input, context),
        [_A]: _TIP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_TagMFADeviceCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_TagMFADeviceRequest(input, context),
        [_A]: _TMFAD,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_TagOpenIDConnectProviderCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_TagOpenIDConnectProviderRequest(input, context),
        [_A]: _TOIDCP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_TagPolicyCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_TagPolicyRequest(input, context),
        [_A]: _TP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_TagRoleCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_TagRoleRequest(input, context),
        [_A]: _TR,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_TagSAMLProviderCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_TagSAMLProviderRequest(input, context),
        [_A]: _TSAMLP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_TagServerCertificateCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_TagServerCertificateRequest(input, context),
        [_A]: _TSC,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_TagUserCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_TagUserRequest(input, context),
        [_A]: _TU,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_UntagInstanceProfileCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_UntagInstanceProfileRequest(input, context),
        [_A]: _UIP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_UntagMFADeviceCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_UntagMFADeviceRequest(input, context),
        [_A]: _UMFAD,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_UntagOpenIDConnectProviderCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_UntagOpenIDConnectProviderRequest(input, context),
        [_A]: _UOIDCP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_UntagPolicyCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_UntagPolicyRequest(input, context),
        [_A]: _UP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_UntagRoleCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_UntagRoleRequest(input, context),
        [_A]: _UR,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_UntagSAMLProviderCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_UntagSAMLProviderRequest(input, context),
        [_A]: _USAMLP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_UntagServerCertificateCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_UntagServerCertificateRequest(input, context),
        [_A]: _USC,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_UntagUserCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_UntagUserRequest(input, context),
        [_A]: _UU,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_UpdateAccessKeyCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_UpdateAccessKeyRequest(input, context),
        [_A]: _UAK,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_UpdateAccountPasswordPolicyCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_UpdateAccountPasswordPolicyRequest(input, context),
        [_A]: _UAPP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_UpdateAssumeRolePolicyCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_UpdateAssumeRolePolicyRequest(input, context),
        [_A]: _UARP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_UpdateGroupCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_UpdateGroupRequest(input, context),
        [_A]: _UG,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_UpdateLoginProfileCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_UpdateLoginProfileRequest(input, context),
        [_A]: _ULP,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_UpdateOpenIDConnectProviderThumbprintCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_UpdateOpenIDConnectProviderThumbprintRequest(input, context),
        [_A]: _UOIDCPT,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_UpdateRoleCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_UpdateRoleRequest(input, context),
        [_A]: _URp,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_UpdateRoleDescriptionCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_UpdateRoleDescriptionRequest(input, context),
        [_A]: _URD,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_UpdateSAMLProviderCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_UpdateSAMLProviderRequest(input, context),
        [_A]: _USAMLPp,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_UpdateServerCertificateCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_UpdateServerCertificateRequest(input, context),
        [_A]: _USCp,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_UpdateServiceSpecificCredentialCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_UpdateServiceSpecificCredentialRequest(input, context),
        [_A]: _USSC,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_UpdateSigningCertificateCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_UpdateSigningCertificateRequest(input, context),
        [_A]: _USCpd,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_UpdateSSHPublicKeyCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_UpdateSSHPublicKeyRequest(input, context),
        [_A]: _USSHPK,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_UpdateUserCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_UpdateUserRequest(input, context),
        [_A]: _UUp,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_UploadServerCertificateCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_UploadServerCertificateRequest(input, context),
        [_A]: _USCpl,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_UploadSigningCertificateCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_UploadSigningCertificateRequest(input, context),
        [_A]: _USCplo,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const se_UploadSSHPublicKeyCommand = async (input, context)=>{
    const headers = SHARED_HEADERS;
    let body;
    body = buildFormUrlencodedString({
        ...se_UploadSSHPublicKeyRequest(input, context),
        [_A]: _USSHPKp,
        [_V]: _
    });
    return buildHttpRpcRequest(context, headers, "/", undefined, body);
};
const de_AddClientIDToOpenIDConnectProviderCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_AddRoleToInstanceProfileCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_AddUserToGroupCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_AttachGroupPolicyCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_AttachRolePolicyCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_AttachUserPolicyCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_ChangePasswordCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_CreateAccessKeyCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_CreateAccessKeyResponse(data.CreateAccessKeyResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_CreateAccountAliasCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_CreateGroupCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_CreateGroupResponse(data.CreateGroupResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_CreateInstanceProfileCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_CreateInstanceProfileResponse(data.CreateInstanceProfileResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_CreateLoginProfileCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_CreateLoginProfileResponse(data.CreateLoginProfileResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_CreateOpenIDConnectProviderCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_CreateOpenIDConnectProviderResponse(data.CreateOpenIDConnectProviderResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_CreatePolicyCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_CreatePolicyResponse(data.CreatePolicyResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_CreatePolicyVersionCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_CreatePolicyVersionResponse(data.CreatePolicyVersionResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_CreateRoleCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_CreateRoleResponse(data.CreateRoleResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_CreateSAMLProviderCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_CreateSAMLProviderResponse(data.CreateSAMLProviderResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_CreateServiceLinkedRoleCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_CreateServiceLinkedRoleResponse(data.CreateServiceLinkedRoleResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_CreateServiceSpecificCredentialCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_CreateServiceSpecificCredentialResponse(data.CreateServiceSpecificCredentialResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_CreateUserCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_CreateUserResponse(data.CreateUserResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_CreateVirtualMFADeviceCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_CreateVirtualMFADeviceResponse(data.CreateVirtualMFADeviceResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_DeactivateMFADeviceCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_DeleteAccessKeyCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_DeleteAccountAliasCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_DeleteAccountPasswordPolicyCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_DeleteGroupCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_DeleteGroupPolicyCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_DeleteInstanceProfileCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_DeleteLoginProfileCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_DeleteOpenIDConnectProviderCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_DeletePolicyCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_DeletePolicyVersionCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_DeleteRoleCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_DeleteRolePermissionsBoundaryCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_DeleteRolePolicyCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_DeleteSAMLProviderCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_DeleteServerCertificateCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_DeleteServiceLinkedRoleCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_DeleteServiceLinkedRoleResponse(data.DeleteServiceLinkedRoleResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_DeleteServiceSpecificCredentialCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_DeleteSigningCertificateCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_DeleteSSHPublicKeyCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_DeleteUserCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_DeleteUserPermissionsBoundaryCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_DeleteUserPolicyCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_DeleteVirtualMFADeviceCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_DetachGroupPolicyCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_DetachRolePolicyCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_DetachUserPolicyCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_DisableOrganizationsRootCredentialsManagementCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_DisableOrganizationsRootCredentialsManagementResponse(data.DisableOrganizationsRootCredentialsManagementResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_DisableOrganizationsRootSessionsCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_DisableOrganizationsRootSessionsResponse(data.DisableOrganizationsRootSessionsResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_EnableMFADeviceCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_EnableOrganizationsRootCredentialsManagementCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_EnableOrganizationsRootCredentialsManagementResponse(data.EnableOrganizationsRootCredentialsManagementResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_EnableOrganizationsRootSessionsCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_EnableOrganizationsRootSessionsResponse(data.EnableOrganizationsRootSessionsResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_GenerateCredentialReportCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_GenerateCredentialReportResponse(data.GenerateCredentialReportResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_GenerateOrganizationsAccessReportCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_GenerateOrganizationsAccessReportResponse(data.GenerateOrganizationsAccessReportResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_GenerateServiceLastAccessedDetailsCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_GenerateServiceLastAccessedDetailsResponse(data.GenerateServiceLastAccessedDetailsResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_GetAccessKeyLastUsedCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_GetAccessKeyLastUsedResponse(data.GetAccessKeyLastUsedResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_GetAccountAuthorizationDetailsCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_GetAccountAuthorizationDetailsResponse(data.GetAccountAuthorizationDetailsResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_GetAccountPasswordPolicyCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_GetAccountPasswordPolicyResponse(data.GetAccountPasswordPolicyResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_GetAccountSummaryCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_GetAccountSummaryResponse(data.GetAccountSummaryResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_GetContextKeysForCustomPolicyCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_GetContextKeysForPolicyResponse(data.GetContextKeysForCustomPolicyResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_GetContextKeysForPrincipalPolicyCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_GetContextKeysForPolicyResponse(data.GetContextKeysForPrincipalPolicyResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_GetCredentialReportCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_GetCredentialReportResponse(data.GetCredentialReportResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_GetGroupCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_GetGroupResponse(data.GetGroupResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_GetGroupPolicyCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_GetGroupPolicyResponse(data.GetGroupPolicyResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_GetInstanceProfileCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_GetInstanceProfileResponse(data.GetInstanceProfileResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_GetLoginProfileCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_GetLoginProfileResponse(data.GetLoginProfileResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_GetMFADeviceCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_GetMFADeviceResponse(data.GetMFADeviceResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_GetOpenIDConnectProviderCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_GetOpenIDConnectProviderResponse(data.GetOpenIDConnectProviderResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_GetOrganizationsAccessReportCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_GetOrganizationsAccessReportResponse(data.GetOrganizationsAccessReportResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_GetPolicyCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_GetPolicyResponse(data.GetPolicyResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_GetPolicyVersionCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_GetPolicyVersionResponse(data.GetPolicyVersionResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_GetRoleCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_GetRoleResponse(data.GetRoleResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_GetRolePolicyCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_GetRolePolicyResponse(data.GetRolePolicyResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_GetSAMLProviderCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_GetSAMLProviderResponse(data.GetSAMLProviderResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_GetServerCertificateCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_GetServerCertificateResponse(data.GetServerCertificateResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_GetServiceLastAccessedDetailsCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_GetServiceLastAccessedDetailsResponse(data.GetServiceLastAccessedDetailsResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_GetServiceLastAccessedDetailsWithEntitiesCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_GetServiceLastAccessedDetailsWithEntitiesResponse(data.GetServiceLastAccessedDetailsWithEntitiesResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_GetServiceLinkedRoleDeletionStatusCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_GetServiceLinkedRoleDeletionStatusResponse(data.GetServiceLinkedRoleDeletionStatusResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_GetSSHPublicKeyCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_GetSSHPublicKeyResponse(data.GetSSHPublicKeyResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_GetUserCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_GetUserResponse(data.GetUserResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_GetUserPolicyCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_GetUserPolicyResponse(data.GetUserPolicyResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_ListAccessKeysCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_ListAccessKeysResponse(data.ListAccessKeysResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_ListAccountAliasesCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_ListAccountAliasesResponse(data.ListAccountAliasesResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_ListAttachedGroupPoliciesCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_ListAttachedGroupPoliciesResponse(data.ListAttachedGroupPoliciesResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_ListAttachedRolePoliciesCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_ListAttachedRolePoliciesResponse(data.ListAttachedRolePoliciesResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_ListAttachedUserPoliciesCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_ListAttachedUserPoliciesResponse(data.ListAttachedUserPoliciesResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_ListEntitiesForPolicyCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_ListEntitiesForPolicyResponse(data.ListEntitiesForPolicyResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_ListGroupPoliciesCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_ListGroupPoliciesResponse(data.ListGroupPoliciesResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_ListGroupsCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_ListGroupsResponse(data.ListGroupsResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_ListGroupsForUserCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_ListGroupsForUserResponse(data.ListGroupsForUserResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_ListInstanceProfilesCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_ListInstanceProfilesResponse(data.ListInstanceProfilesResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_ListInstanceProfilesForRoleCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_ListInstanceProfilesForRoleResponse(data.ListInstanceProfilesForRoleResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_ListInstanceProfileTagsCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_ListInstanceProfileTagsResponse(data.ListInstanceProfileTagsResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_ListMFADevicesCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_ListMFADevicesResponse(data.ListMFADevicesResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_ListMFADeviceTagsCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_ListMFADeviceTagsResponse(data.ListMFADeviceTagsResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_ListOpenIDConnectProvidersCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_ListOpenIDConnectProvidersResponse(data.ListOpenIDConnectProvidersResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_ListOpenIDConnectProviderTagsCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_ListOpenIDConnectProviderTagsResponse(data.ListOpenIDConnectProviderTagsResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_ListOrganizationsFeaturesCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_ListOrganizationsFeaturesResponse(data.ListOrganizationsFeaturesResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_ListPoliciesCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_ListPoliciesResponse(data.ListPoliciesResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_ListPoliciesGrantingServiceAccessCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_ListPoliciesGrantingServiceAccessResponse(data.ListPoliciesGrantingServiceAccessResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_ListPolicyTagsCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_ListPolicyTagsResponse(data.ListPolicyTagsResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_ListPolicyVersionsCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_ListPolicyVersionsResponse(data.ListPolicyVersionsResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_ListRolePoliciesCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_ListRolePoliciesResponse(data.ListRolePoliciesResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_ListRolesCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_ListRolesResponse(data.ListRolesResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_ListRoleTagsCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_ListRoleTagsResponse(data.ListRoleTagsResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_ListSAMLProvidersCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_ListSAMLProvidersResponse(data.ListSAMLProvidersResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_ListSAMLProviderTagsCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_ListSAMLProviderTagsResponse(data.ListSAMLProviderTagsResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_ListServerCertificatesCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_ListServerCertificatesResponse(data.ListServerCertificatesResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_ListServerCertificateTagsCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_ListServerCertificateTagsResponse(data.ListServerCertificateTagsResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_ListServiceSpecificCredentialsCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_ListServiceSpecificCredentialsResponse(data.ListServiceSpecificCredentialsResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_ListSigningCertificatesCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_ListSigningCertificatesResponse(data.ListSigningCertificatesResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_ListSSHPublicKeysCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_ListSSHPublicKeysResponse(data.ListSSHPublicKeysResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_ListUserPoliciesCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_ListUserPoliciesResponse(data.ListUserPoliciesResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_ListUsersCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_ListUsersResponse(data.ListUsersResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_ListUserTagsCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_ListUserTagsResponse(data.ListUserTagsResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_ListVirtualMFADevicesCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_ListVirtualMFADevicesResponse(data.ListVirtualMFADevicesResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_PutGroupPolicyCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_PutRolePermissionsBoundaryCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_PutRolePolicyCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_PutUserPermissionsBoundaryCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_PutUserPolicyCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_RemoveClientIDFromOpenIDConnectProviderCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_RemoveRoleFromInstanceProfileCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_RemoveUserFromGroupCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_ResetServiceSpecificCredentialCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_ResetServiceSpecificCredentialResponse(data.ResetServiceSpecificCredentialResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_ResyncMFADeviceCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_SetDefaultPolicyVersionCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_SetSecurityTokenServicePreferencesCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_SimulateCustomPolicyCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_SimulatePolicyResponse(data.SimulateCustomPolicyResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_SimulatePrincipalPolicyCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_SimulatePolicyResponse(data.SimulatePrincipalPolicyResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_TagInstanceProfileCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_TagMFADeviceCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_TagOpenIDConnectProviderCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_TagPolicyCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_TagRoleCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_TagSAMLProviderCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_TagServerCertificateCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_TagUserCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_UntagInstanceProfileCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_UntagMFADeviceCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_UntagOpenIDConnectProviderCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_UntagPolicyCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_UntagRoleCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_UntagSAMLProviderCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_UntagServerCertificateCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_UntagUserCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_UpdateAccessKeyCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_UpdateAccountPasswordPolicyCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_UpdateAssumeRolePolicyCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_UpdateGroupCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_UpdateLoginProfileCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_UpdateOpenIDConnectProviderThumbprintCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_UpdateRoleCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_UpdateRoleResponse(data.UpdateRoleResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_UpdateRoleDescriptionCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_UpdateRoleDescriptionResponse(data.UpdateRoleDescriptionResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_UpdateSAMLProviderCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_UpdateSAMLProviderResponse(data.UpdateSAMLProviderResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_UpdateServerCertificateCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_UpdateServiceSpecificCredentialCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_UpdateSigningCertificateCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_UpdateSSHPublicKeyCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_UpdateUserCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(output.body, context);
    const response = {
        $metadata: deserializeMetadata(output)
    };
    return response;
};
const de_UploadServerCertificateCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_UploadServerCertificateResponse(data.UploadServerCertificateResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_UploadSigningCertificateCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_UploadSigningCertificateResponse(data.UploadSigningCertificateResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_UploadSSHPublicKeyCommand = async (output, context)=>{
    if (output.statusCode >= 300) {
        return de_CommandError(output, context);
    }
    const data = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlBody"])(output.body, context);
    let contents = {};
    contents = de_UploadSSHPublicKeyResponse(data.UploadSSHPublicKeyResult, context);
    const response = {
        $metadata: deserializeMetadata(output),
        ...contents
    };
    return response;
};
const de_CommandError = async (output, context)=>{
    const parsedOutput = {
        ...output,
        body: await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$xml$2f$parseXmlBody$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseXmlErrorBody"])(output.body, context)
    };
    const errorCode = loadQueryErrorCode(output, parsedOutput.body);
    switch(errorCode){
        case "InvalidInput":
        case "com.amazonaws.iam#InvalidInputException":
            throw await de_InvalidInputExceptionRes(parsedOutput, context);
        case "LimitExceeded":
        case "com.amazonaws.iam#LimitExceededException":
            throw await de_LimitExceededExceptionRes(parsedOutput, context);
        case "NoSuchEntity":
        case "com.amazonaws.iam#NoSuchEntityException":
            throw await de_NoSuchEntityExceptionRes(parsedOutput, context);
        case "ServiceFailure":
        case "com.amazonaws.iam#ServiceFailureException":
            throw await de_ServiceFailureExceptionRes(parsedOutput, context);
        case "EntityAlreadyExists":
        case "com.amazonaws.iam#EntityAlreadyExistsException":
            throw await de_EntityAlreadyExistsExceptionRes(parsedOutput, context);
        case "UnmodifiableEntity":
        case "com.amazonaws.iam#UnmodifiableEntityException":
            throw await de_UnmodifiableEntityExceptionRes(parsedOutput, context);
        case "PolicyNotAttachable":
        case "com.amazonaws.iam#PolicyNotAttachableException":
            throw await de_PolicyNotAttachableExceptionRes(parsedOutput, context);
        case "EntityTemporarilyUnmodifiable":
        case "com.amazonaws.iam#EntityTemporarilyUnmodifiableException":
            throw await de_EntityTemporarilyUnmodifiableExceptionRes(parsedOutput, context);
        case "InvalidUserType":
        case "com.amazonaws.iam#InvalidUserTypeException":
            throw await de_InvalidUserTypeExceptionRes(parsedOutput, context);
        case "PasswordPolicyViolation":
        case "com.amazonaws.iam#PasswordPolicyViolationException":
            throw await de_PasswordPolicyViolationExceptionRes(parsedOutput, context);
        case "ConcurrentModification":
        case "com.amazonaws.iam#ConcurrentModificationException":
            throw await de_ConcurrentModificationExceptionRes(parsedOutput, context);
        case "OpenIdIdpCommunicationError":
        case "com.amazonaws.iam#OpenIdIdpCommunicationErrorException":
            throw await de_OpenIdIdpCommunicationErrorExceptionRes(parsedOutput, context);
        case "MalformedPolicyDocument":
        case "com.amazonaws.iam#MalformedPolicyDocumentException":
            throw await de_MalformedPolicyDocumentExceptionRes(parsedOutput, context);
        case "NotSupportedService":
        case "com.amazonaws.iam#ServiceNotSupportedException":
            throw await de_ServiceNotSupportedExceptionRes(parsedOutput, context);
        case "DeleteConflict":
        case "com.amazonaws.iam#DeleteConflictException":
            throw await de_DeleteConflictExceptionRes(parsedOutput, context);
        case "AccountNotManagementOrDelegatedAdministratorException":
        case "com.amazonaws.iam#AccountNotManagementOrDelegatedAdministratorException":
            throw await de_AccountNotManagementOrDelegatedAdministratorExceptionRes(parsedOutput, context);
        case "OrganizationNotFoundException":
        case "com.amazonaws.iam#OrganizationNotFoundException":
            throw await de_OrganizationNotFoundExceptionRes(parsedOutput, context);
        case "OrganizationNotInAllFeaturesModeException":
        case "com.amazonaws.iam#OrganizationNotInAllFeaturesModeException":
            throw await de_OrganizationNotInAllFeaturesModeExceptionRes(parsedOutput, context);
        case "ServiceAccessNotEnabledException":
        case "com.amazonaws.iam#ServiceAccessNotEnabledException":
            throw await de_ServiceAccessNotEnabledExceptionRes(parsedOutput, context);
        case "InvalidAuthenticationCode":
        case "com.amazonaws.iam#InvalidAuthenticationCodeException":
            throw await de_InvalidAuthenticationCodeExceptionRes(parsedOutput, context);
        case "CallerIsNotManagementAccountException":
        case "com.amazonaws.iam#CallerIsNotManagementAccountException":
            throw await de_CallerIsNotManagementAccountExceptionRes(parsedOutput, context);
        case "ReportGenerationLimitExceeded":
        case "com.amazonaws.iam#ReportGenerationLimitExceededException":
            throw await de_ReportGenerationLimitExceededExceptionRes(parsedOutput, context);
        case "ReportExpired":
        case "com.amazonaws.iam#CredentialReportExpiredException":
            throw await de_CredentialReportExpiredExceptionRes(parsedOutput, context);
        case "ReportInProgress":
        case "com.amazonaws.iam#CredentialReportNotReadyException":
            throw await de_CredentialReportNotReadyExceptionRes(parsedOutput, context);
        case "ReportNotPresent":
        case "com.amazonaws.iam#CredentialReportNotPresentException":
            throw await de_CredentialReportNotPresentExceptionRes(parsedOutput, context);
        case "UnrecognizedPublicKeyEncoding":
        case "com.amazonaws.iam#UnrecognizedPublicKeyEncodingException":
            throw await de_UnrecognizedPublicKeyEncodingExceptionRes(parsedOutput, context);
        case "PolicyEvaluation":
        case "com.amazonaws.iam#PolicyEvaluationException":
            throw await de_PolicyEvaluationExceptionRes(parsedOutput, context);
        case "KeyPairMismatch":
        case "com.amazonaws.iam#KeyPairMismatchException":
            throw await de_KeyPairMismatchExceptionRes(parsedOutput, context);
        case "MalformedCertificate":
        case "com.amazonaws.iam#MalformedCertificateException":
            throw await de_MalformedCertificateExceptionRes(parsedOutput, context);
        case "DuplicateCertificate":
        case "com.amazonaws.iam#DuplicateCertificateException":
            throw await de_DuplicateCertificateExceptionRes(parsedOutput, context);
        case "InvalidCertificate":
        case "com.amazonaws.iam#InvalidCertificateException":
            throw await de_InvalidCertificateExceptionRes(parsedOutput, context);
        case "DuplicateSSHPublicKey":
        case "com.amazonaws.iam#DuplicateSSHPublicKeyException":
            throw await de_DuplicateSSHPublicKeyExceptionRes(parsedOutput, context);
        case "InvalidPublicKey":
        case "com.amazonaws.iam#InvalidPublicKeyException":
            throw await de_InvalidPublicKeyExceptionRes(parsedOutput, context);
        default:
            const parsedBody = parsedOutput.body;
            return throwDefaultError({
                output,
                parsedBody: parsedBody.Error,
                errorCode
            });
    }
};
const de_AccountNotManagementOrDelegatedAdministratorExceptionRes = async (parsedOutput, context)=>{
    const body = parsedOutput.body;
    const deserialized = de_AccountNotManagementOrDelegatedAdministratorException(body.Error, context);
    const exception = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$models_0$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["AccountNotManagementOrDelegatedAdministratorException"]({
        $metadata: deserializeMetadata(parsedOutput),
        ...deserialized
    });
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$exceptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decorateServiceException"])(exception, body);
};
const de_CallerIsNotManagementAccountExceptionRes = async (parsedOutput, context)=>{
    const body = parsedOutput.body;
    const deserialized = de_CallerIsNotManagementAccountException(body.Error, context);
    const exception = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$models_0$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["CallerIsNotManagementAccountException"]({
        $metadata: deserializeMetadata(parsedOutput),
        ...deserialized
    });
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$exceptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decorateServiceException"])(exception, body);
};
const de_ConcurrentModificationExceptionRes = async (parsedOutput, context)=>{
    const body = parsedOutput.body;
    const deserialized = de_ConcurrentModificationException(body.Error, context);
    const exception = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$models_0$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["ConcurrentModificationException"]({
        $metadata: deserializeMetadata(parsedOutput),
        ...deserialized
    });
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$exceptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decorateServiceException"])(exception, body);
};
const de_CredentialReportExpiredExceptionRes = async (parsedOutput, context)=>{
    const body = parsedOutput.body;
    const deserialized = de_CredentialReportExpiredException(body.Error, context);
    const exception = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$models_0$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["CredentialReportExpiredException"]({
        $metadata: deserializeMetadata(parsedOutput),
        ...deserialized
    });
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$exceptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decorateServiceException"])(exception, body);
};
const de_CredentialReportNotPresentExceptionRes = async (parsedOutput, context)=>{
    const body = parsedOutput.body;
    const deserialized = de_CredentialReportNotPresentException(body.Error, context);
    const exception = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$models_0$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["CredentialReportNotPresentException"]({
        $metadata: deserializeMetadata(parsedOutput),
        ...deserialized
    });
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$exceptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decorateServiceException"])(exception, body);
};
const de_CredentialReportNotReadyExceptionRes = async (parsedOutput, context)=>{
    const body = parsedOutput.body;
    const deserialized = de_CredentialReportNotReadyException(body.Error, context);
    const exception = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$models_0$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["CredentialReportNotReadyException"]({
        $metadata: deserializeMetadata(parsedOutput),
        ...deserialized
    });
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$exceptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decorateServiceException"])(exception, body);
};
const de_DeleteConflictExceptionRes = async (parsedOutput, context)=>{
    const body = parsedOutput.body;
    const deserialized = de_DeleteConflictException(body.Error, context);
    const exception = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$models_0$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["DeleteConflictException"]({
        $metadata: deserializeMetadata(parsedOutput),
        ...deserialized
    });
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$exceptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decorateServiceException"])(exception, body);
};
const de_DuplicateCertificateExceptionRes = async (parsedOutput, context)=>{
    const body = parsedOutput.body;
    const deserialized = de_DuplicateCertificateException(body.Error, context);
    const exception = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$models_1$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["DuplicateCertificateException"]({
        $metadata: deserializeMetadata(parsedOutput),
        ...deserialized
    });
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$exceptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decorateServiceException"])(exception, body);
};
const de_DuplicateSSHPublicKeyExceptionRes = async (parsedOutput, context)=>{
    const body = parsedOutput.body;
    const deserialized = de_DuplicateSSHPublicKeyException(body.Error, context);
    const exception = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$models_1$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["DuplicateSSHPublicKeyException"]({
        $metadata: deserializeMetadata(parsedOutput),
        ...deserialized
    });
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$exceptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decorateServiceException"])(exception, body);
};
const de_EntityAlreadyExistsExceptionRes = async (parsedOutput, context)=>{
    const body = parsedOutput.body;
    const deserialized = de_EntityAlreadyExistsException(body.Error, context);
    const exception = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$models_0$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["EntityAlreadyExistsException"]({
        $metadata: deserializeMetadata(parsedOutput),
        ...deserialized
    });
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$exceptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decorateServiceException"])(exception, body);
};
const de_EntityTemporarilyUnmodifiableExceptionRes = async (parsedOutput, context)=>{
    const body = parsedOutput.body;
    const deserialized = de_EntityTemporarilyUnmodifiableException(body.Error, context);
    const exception = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$models_0$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["EntityTemporarilyUnmodifiableException"]({
        $metadata: deserializeMetadata(parsedOutput),
        ...deserialized
    });
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$exceptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decorateServiceException"])(exception, body);
};
const de_InvalidAuthenticationCodeExceptionRes = async (parsedOutput, context)=>{
    const body = parsedOutput.body;
    const deserialized = de_InvalidAuthenticationCodeException(body.Error, context);
    const exception = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$models_0$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["InvalidAuthenticationCodeException"]({
        $metadata: deserializeMetadata(parsedOutput),
        ...deserialized
    });
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$exceptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decorateServiceException"])(exception, body);
};
const de_InvalidCertificateExceptionRes = async (parsedOutput, context)=>{
    const body = parsedOutput.body;
    const deserialized = de_InvalidCertificateException(body.Error, context);
    const exception = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$models_1$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["InvalidCertificateException"]({
        $metadata: deserializeMetadata(parsedOutput),
        ...deserialized
    });
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$exceptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decorateServiceException"])(exception, body);
};
const de_InvalidInputExceptionRes = async (parsedOutput, context)=>{
    const body = parsedOutput.body;
    const deserialized = de_InvalidInputException(body.Error, context);
    const exception = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$models_0$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["InvalidInputException"]({
        $metadata: deserializeMetadata(parsedOutput),
        ...deserialized
    });
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$exceptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decorateServiceException"])(exception, body);
};
const de_InvalidPublicKeyExceptionRes = async (parsedOutput, context)=>{
    const body = parsedOutput.body;
    const deserialized = de_InvalidPublicKeyException(body.Error, context);
    const exception = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$models_1$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["InvalidPublicKeyException"]({
        $metadata: deserializeMetadata(parsedOutput),
        ...deserialized
    });
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$exceptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decorateServiceException"])(exception, body);
};
const de_InvalidUserTypeExceptionRes = async (parsedOutput, context)=>{
    const body = parsedOutput.body;
    const deserialized = de_InvalidUserTypeException(body.Error, context);
    const exception = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$models_0$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["InvalidUserTypeException"]({
        $metadata: deserializeMetadata(parsedOutput),
        ...deserialized
    });
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$exceptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decorateServiceException"])(exception, body);
};
const de_KeyPairMismatchExceptionRes = async (parsedOutput, context)=>{
    const body = parsedOutput.body;
    const deserialized = de_KeyPairMismatchException(body.Error, context);
    const exception = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$models_1$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["KeyPairMismatchException"]({
        $metadata: deserializeMetadata(parsedOutput),
        ...deserialized
    });
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$exceptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decorateServiceException"])(exception, body);
};
const de_LimitExceededExceptionRes = async (parsedOutput, context)=>{
    const body = parsedOutput.body;
    const deserialized = de_LimitExceededException(body.Error, context);
    const exception = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$models_0$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["LimitExceededException"]({
        $metadata: deserializeMetadata(parsedOutput),
        ...deserialized
    });
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$exceptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decorateServiceException"])(exception, body);
};
const de_MalformedCertificateExceptionRes = async (parsedOutput, context)=>{
    const body = parsedOutput.body;
    const deserialized = de_MalformedCertificateException(body.Error, context);
    const exception = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$models_1$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["MalformedCertificateException"]({
        $metadata: deserializeMetadata(parsedOutput),
        ...deserialized
    });
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$exceptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decorateServiceException"])(exception, body);
};
const de_MalformedPolicyDocumentExceptionRes = async (parsedOutput, context)=>{
    const body = parsedOutput.body;
    const deserialized = de_MalformedPolicyDocumentException(body.Error, context);
    const exception = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$models_0$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["MalformedPolicyDocumentException"]({
        $metadata: deserializeMetadata(parsedOutput),
        ...deserialized
    });
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$exceptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decorateServiceException"])(exception, body);
};
const de_NoSuchEntityExceptionRes = async (parsedOutput, context)=>{
    const body = parsedOutput.body;
    const deserialized = de_NoSuchEntityException(body.Error, context);
    const exception = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$models_0$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["NoSuchEntityException"]({
        $metadata: deserializeMetadata(parsedOutput),
        ...deserialized
    });
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$exceptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decorateServiceException"])(exception, body);
};
const de_OpenIdIdpCommunicationErrorExceptionRes = async (parsedOutput, context)=>{
    const body = parsedOutput.body;
    const deserialized = de_OpenIdIdpCommunicationErrorException(body.Error, context);
    const exception = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$models_0$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["OpenIdIdpCommunicationErrorException"]({
        $metadata: deserializeMetadata(parsedOutput),
        ...deserialized
    });
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$exceptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decorateServiceException"])(exception, body);
};
const de_OrganizationNotFoundExceptionRes = async (parsedOutput, context)=>{
    const body = parsedOutput.body;
    const deserialized = de_OrganizationNotFoundException(body.Error, context);
    const exception = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$models_0$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["OrganizationNotFoundException"]({
        $metadata: deserializeMetadata(parsedOutput),
        ...deserialized
    });
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$exceptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decorateServiceException"])(exception, body);
};
const de_OrganizationNotInAllFeaturesModeExceptionRes = async (parsedOutput, context)=>{
    const body = parsedOutput.body;
    const deserialized = de_OrganizationNotInAllFeaturesModeException(body.Error, context);
    const exception = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$models_0$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["OrganizationNotInAllFeaturesModeException"]({
        $metadata: deserializeMetadata(parsedOutput),
        ...deserialized
    });
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$exceptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decorateServiceException"])(exception, body);
};
const de_PasswordPolicyViolationExceptionRes = async (parsedOutput, context)=>{
    const body = parsedOutput.body;
    const deserialized = de_PasswordPolicyViolationException(body.Error, context);
    const exception = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$models_0$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["PasswordPolicyViolationException"]({
        $metadata: deserializeMetadata(parsedOutput),
        ...deserialized
    });
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$exceptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decorateServiceException"])(exception, body);
};
const de_PolicyEvaluationExceptionRes = async (parsedOutput, context)=>{
    const body = parsedOutput.body;
    const deserialized = de_PolicyEvaluationException(body.Error, context);
    const exception = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$models_0$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["PolicyEvaluationException"]({
        $metadata: deserializeMetadata(parsedOutput),
        ...deserialized
    });
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$exceptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decorateServiceException"])(exception, body);
};
const de_PolicyNotAttachableExceptionRes = async (parsedOutput, context)=>{
    const body = parsedOutput.body;
    const deserialized = de_PolicyNotAttachableException(body.Error, context);
    const exception = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$models_0$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["PolicyNotAttachableException"]({
        $metadata: deserializeMetadata(parsedOutput),
        ...deserialized
    });
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$exceptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decorateServiceException"])(exception, body);
};
const de_ReportGenerationLimitExceededExceptionRes = async (parsedOutput, context)=>{
    const body = parsedOutput.body;
    const deserialized = de_ReportGenerationLimitExceededException(body.Error, context);
    const exception = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$models_0$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["ReportGenerationLimitExceededException"]({
        $metadata: deserializeMetadata(parsedOutput),
        ...deserialized
    });
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$exceptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decorateServiceException"])(exception, body);
};
const de_ServiceAccessNotEnabledExceptionRes = async (parsedOutput, context)=>{
    const body = parsedOutput.body;
    const deserialized = de_ServiceAccessNotEnabledException(body.Error, context);
    const exception = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$models_0$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["ServiceAccessNotEnabledException"]({
        $metadata: deserializeMetadata(parsedOutput),
        ...deserialized
    });
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$exceptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decorateServiceException"])(exception, body);
};
const de_ServiceFailureExceptionRes = async (parsedOutput, context)=>{
    const body = parsedOutput.body;
    const deserialized = de_ServiceFailureException(body.Error, context);
    const exception = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$models_0$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["ServiceFailureException"]({
        $metadata: deserializeMetadata(parsedOutput),
        ...deserialized
    });
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$exceptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decorateServiceException"])(exception, body);
};
const de_ServiceNotSupportedExceptionRes = async (parsedOutput, context)=>{
    const body = parsedOutput.body;
    const deserialized = de_ServiceNotSupportedException(body.Error, context);
    const exception = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$models_0$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["ServiceNotSupportedException"]({
        $metadata: deserializeMetadata(parsedOutput),
        ...deserialized
    });
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$exceptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decorateServiceException"])(exception, body);
};
const de_UnmodifiableEntityExceptionRes = async (parsedOutput, context)=>{
    const body = parsedOutput.body;
    const deserialized = de_UnmodifiableEntityException(body.Error, context);
    const exception = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$models_0$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["UnmodifiableEntityException"]({
        $metadata: deserializeMetadata(parsedOutput),
        ...deserialized
    });
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$exceptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decorateServiceException"])(exception, body);
};
const de_UnrecognizedPublicKeyEncodingExceptionRes = async (parsedOutput, context)=>{
    const body = parsedOutput.body;
    const deserialized = de_UnrecognizedPublicKeyEncodingException(body.Error, context);
    const exception = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$models_0$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["UnrecognizedPublicKeyEncodingException"]({
        $metadata: deserializeMetadata(parsedOutput),
        ...deserialized
    });
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$exceptions$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decorateServiceException"])(exception, body);
};
const se_ActionNameListType = (input, context)=>{
    const entries = {};
    let counter = 1;
    for (const entry of input){
        if (entry === null) {
            continue;
        }
        entries[`member.${counter}`] = entry;
        counter++;
    }
    return entries;
};
const se_AddClientIDToOpenIDConnectProviderRequest = (input, context)=>{
    const entries = {};
    if (input[_OIDCPA] != null) {
        entries[_OIDCPA] = input[_OIDCPA];
    }
    if (input[_CID] != null) {
        entries[_CID] = input[_CID];
    }
    return entries;
};
const se_AddRoleToInstanceProfileRequest = (input, context)=>{
    const entries = {};
    if (input[_IPN] != null) {
        entries[_IPN] = input[_IPN];
    }
    if (input[_RN] != null) {
        entries[_RN] = input[_RN];
    }
    return entries;
};
const se_AddUserToGroupRequest = (input, context)=>{
    const entries = {};
    if (input[_GN] != null) {
        entries[_GN] = input[_GN];
    }
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    return entries;
};
const se_AttachGroupPolicyRequest = (input, context)=>{
    const entries = {};
    if (input[_GN] != null) {
        entries[_GN] = input[_GN];
    }
    if (input[_PA] != null) {
        entries[_PA] = input[_PA];
    }
    return entries;
};
const se_AttachRolePolicyRequest = (input, context)=>{
    const entries = {};
    if (input[_RN] != null) {
        entries[_RN] = input[_RN];
    }
    if (input[_PA] != null) {
        entries[_PA] = input[_PA];
    }
    return entries;
};
const se_AttachUserPolicyRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    if (input[_PA] != null) {
        entries[_PA] = input[_PA];
    }
    return entries;
};
const se_ChangePasswordRequest = (input, context)=>{
    const entries = {};
    if (input[_OP] != null) {
        entries[_OP] = input[_OP];
    }
    if (input[_NP] != null) {
        entries[_NP] = input[_NP];
    }
    return entries;
};
const se_clientIDListType = (input, context)=>{
    const entries = {};
    let counter = 1;
    for (const entry of input){
        if (entry === null) {
            continue;
        }
        entries[`member.${counter}`] = entry;
        counter++;
    }
    return entries;
};
const se_ContextEntry = (input, context)=>{
    const entries = {};
    if (input[_CKN] != null) {
        entries[_CKN] = input[_CKN];
    }
    if (input[_CKV] != null) {
        const memberEntries = se_ContextKeyValueListType(input[_CKV], context);
        if (input[_CKV]?.length === 0) {
            entries.ContextKeyValues = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `ContextKeyValues.${key}`;
            entries[loc] = value;
        });
    }
    if (input[_CKT] != null) {
        entries[_CKT] = input[_CKT];
    }
    return entries;
};
const se_ContextEntryListType = (input, context)=>{
    const entries = {};
    let counter = 1;
    for (const entry of input){
        if (entry === null) {
            continue;
        }
        const memberEntries = se_ContextEntry(entry, context);
        Object.entries(memberEntries).forEach(([key, value])=>{
            entries[`member.${counter}.${key}`] = value;
        });
        counter++;
    }
    return entries;
};
const se_ContextKeyValueListType = (input, context)=>{
    const entries = {};
    let counter = 1;
    for (const entry of input){
        if (entry === null) {
            continue;
        }
        entries[`member.${counter}`] = entry;
        counter++;
    }
    return entries;
};
const se_CreateAccessKeyRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    return entries;
};
const se_CreateAccountAliasRequest = (input, context)=>{
    const entries = {};
    if (input[_AA] != null) {
        entries[_AA] = input[_AA];
    }
    return entries;
};
const se_CreateGroupRequest = (input, context)=>{
    const entries = {};
    if (input[_P] != null) {
        entries[_P] = input[_P];
    }
    if (input[_GN] != null) {
        entries[_GN] = input[_GN];
    }
    return entries;
};
const se_CreateInstanceProfileRequest = (input, context)=>{
    const entries = {};
    if (input[_IPN] != null) {
        entries[_IPN] = input[_IPN];
    }
    if (input[_P] != null) {
        entries[_P] = input[_P];
    }
    if (input[_T] != null) {
        const memberEntries = se_tagListType(input[_T], context);
        if (input[_T]?.length === 0) {
            entries.Tags = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `Tags.${key}`;
            entries[loc] = value;
        });
    }
    return entries;
};
const se_CreateLoginProfileRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    if (input[_Pa] != null) {
        entries[_Pa] = input[_Pa];
    }
    if (input[_PRR] != null) {
        entries[_PRR] = input[_PRR];
    }
    return entries;
};
const se_CreateOpenIDConnectProviderRequest = (input, context)=>{
    const entries = {};
    if (input[_U] != null) {
        entries[_U] = input[_U];
    }
    if (input[_CIDL] != null) {
        const memberEntries = se_clientIDListType(input[_CIDL], context);
        if (input[_CIDL]?.length === 0) {
            entries.ClientIDList = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `ClientIDList.${key}`;
            entries[loc] = value;
        });
    }
    if (input[_TL] != null) {
        const memberEntries = se_thumbprintListType(input[_TL], context);
        if (input[_TL]?.length === 0) {
            entries.ThumbprintList = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `ThumbprintList.${key}`;
            entries[loc] = value;
        });
    }
    if (input[_T] != null) {
        const memberEntries = se_tagListType(input[_T], context);
        if (input[_T]?.length === 0) {
            entries.Tags = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `Tags.${key}`;
            entries[loc] = value;
        });
    }
    return entries;
};
const se_CreatePolicyRequest = (input, context)=>{
    const entries = {};
    if (input[_PN] != null) {
        entries[_PN] = input[_PN];
    }
    if (input[_P] != null) {
        entries[_P] = input[_P];
    }
    if (input[_PD] != null) {
        entries[_PD] = input[_PD];
    }
    if (input[_D] != null) {
        entries[_D] = input[_D];
    }
    if (input[_T] != null) {
        const memberEntries = se_tagListType(input[_T], context);
        if (input[_T]?.length === 0) {
            entries.Tags = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `Tags.${key}`;
            entries[loc] = value;
        });
    }
    return entries;
};
const se_CreatePolicyVersionRequest = (input, context)=>{
    const entries = {};
    if (input[_PA] != null) {
        entries[_PA] = input[_PA];
    }
    if (input[_PD] != null) {
        entries[_PD] = input[_PD];
    }
    if (input[_SAD] != null) {
        entries[_SAD] = input[_SAD];
    }
    return entries;
};
const se_CreateRoleRequest = (input, context)=>{
    const entries = {};
    if (input[_P] != null) {
        entries[_P] = input[_P];
    }
    if (input[_RN] != null) {
        entries[_RN] = input[_RN];
    }
    if (input[_ARPD] != null) {
        entries[_ARPD] = input[_ARPD];
    }
    if (input[_D] != null) {
        entries[_D] = input[_D];
    }
    if (input[_MSD] != null) {
        entries[_MSD] = input[_MSD];
    }
    if (input[_PB] != null) {
        entries[_PB] = input[_PB];
    }
    if (input[_T] != null) {
        const memberEntries = se_tagListType(input[_T], context);
        if (input[_T]?.length === 0) {
            entries.Tags = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `Tags.${key}`;
            entries[loc] = value;
        });
    }
    return entries;
};
const se_CreateSAMLProviderRequest = (input, context)=>{
    const entries = {};
    if (input[_SAMLMD] != null) {
        entries[_SAMLMD] = input[_SAMLMD];
    }
    if (input[_N] != null) {
        entries[_N] = input[_N];
    }
    if (input[_T] != null) {
        const memberEntries = se_tagListType(input[_T], context);
        if (input[_T]?.length === 0) {
            entries.Tags = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `Tags.${key}`;
            entries[loc] = value;
        });
    }
    if (input[_AEM] != null) {
        entries[_AEM] = input[_AEM];
    }
    if (input[_APK] != null) {
        entries[_APK] = input[_APK];
    }
    return entries;
};
const se_CreateServiceLinkedRoleRequest = (input, context)=>{
    const entries = {};
    if (input[_AWSSN] != null) {
        entries[_AWSSN] = input[_AWSSN];
    }
    if (input[_D] != null) {
        entries[_D] = input[_D];
    }
    if (input[_CS] != null) {
        entries[_CS] = input[_CS];
    }
    return entries;
};
const se_CreateServiceSpecificCredentialRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    if (input[_SN] != null) {
        entries[_SN] = input[_SN];
    }
    return entries;
};
const se_CreateUserRequest = (input, context)=>{
    const entries = {};
    if (input[_P] != null) {
        entries[_P] = input[_P];
    }
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    if (input[_PB] != null) {
        entries[_PB] = input[_PB];
    }
    if (input[_T] != null) {
        const memberEntries = se_tagListType(input[_T], context);
        if (input[_T]?.length === 0) {
            entries.Tags = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `Tags.${key}`;
            entries[loc] = value;
        });
    }
    return entries;
};
const se_CreateVirtualMFADeviceRequest = (input, context)=>{
    const entries = {};
    if (input[_P] != null) {
        entries[_P] = input[_P];
    }
    if (input[_VMFADN] != null) {
        entries[_VMFADN] = input[_VMFADN];
    }
    if (input[_T] != null) {
        const memberEntries = se_tagListType(input[_T], context);
        if (input[_T]?.length === 0) {
            entries.Tags = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `Tags.${key}`;
            entries[loc] = value;
        });
    }
    return entries;
};
const se_DeactivateMFADeviceRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    if (input[_SNe] != null) {
        entries[_SNe] = input[_SNe];
    }
    return entries;
};
const se_DeleteAccessKeyRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    if (input[_AKI] != null) {
        entries[_AKI] = input[_AKI];
    }
    return entries;
};
const se_DeleteAccountAliasRequest = (input, context)=>{
    const entries = {};
    if (input[_AA] != null) {
        entries[_AA] = input[_AA];
    }
    return entries;
};
const se_DeleteGroupPolicyRequest = (input, context)=>{
    const entries = {};
    if (input[_GN] != null) {
        entries[_GN] = input[_GN];
    }
    if (input[_PN] != null) {
        entries[_PN] = input[_PN];
    }
    return entries;
};
const se_DeleteGroupRequest = (input, context)=>{
    const entries = {};
    if (input[_GN] != null) {
        entries[_GN] = input[_GN];
    }
    return entries;
};
const se_DeleteInstanceProfileRequest = (input, context)=>{
    const entries = {};
    if (input[_IPN] != null) {
        entries[_IPN] = input[_IPN];
    }
    return entries;
};
const se_DeleteLoginProfileRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    return entries;
};
const se_DeleteOpenIDConnectProviderRequest = (input, context)=>{
    const entries = {};
    if (input[_OIDCPA] != null) {
        entries[_OIDCPA] = input[_OIDCPA];
    }
    return entries;
};
const se_DeletePolicyRequest = (input, context)=>{
    const entries = {};
    if (input[_PA] != null) {
        entries[_PA] = input[_PA];
    }
    return entries;
};
const se_DeletePolicyVersionRequest = (input, context)=>{
    const entries = {};
    if (input[_PA] != null) {
        entries[_PA] = input[_PA];
    }
    if (input[_VI] != null) {
        entries[_VI] = input[_VI];
    }
    return entries;
};
const se_DeleteRolePermissionsBoundaryRequest = (input, context)=>{
    const entries = {};
    if (input[_RN] != null) {
        entries[_RN] = input[_RN];
    }
    return entries;
};
const se_DeleteRolePolicyRequest = (input, context)=>{
    const entries = {};
    if (input[_RN] != null) {
        entries[_RN] = input[_RN];
    }
    if (input[_PN] != null) {
        entries[_PN] = input[_PN];
    }
    return entries;
};
const se_DeleteRoleRequest = (input, context)=>{
    const entries = {};
    if (input[_RN] != null) {
        entries[_RN] = input[_RN];
    }
    return entries;
};
const se_DeleteSAMLProviderRequest = (input, context)=>{
    const entries = {};
    if (input[_SAMLPA] != null) {
        entries[_SAMLPA] = input[_SAMLPA];
    }
    return entries;
};
const se_DeleteServerCertificateRequest = (input, context)=>{
    const entries = {};
    if (input[_SCN] != null) {
        entries[_SCN] = input[_SCN];
    }
    return entries;
};
const se_DeleteServiceLinkedRoleRequest = (input, context)=>{
    const entries = {};
    if (input[_RN] != null) {
        entries[_RN] = input[_RN];
    }
    return entries;
};
const se_DeleteServiceSpecificCredentialRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    if (input[_SSCI] != null) {
        entries[_SSCI] = input[_SSCI];
    }
    return entries;
};
const se_DeleteSigningCertificateRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    if (input[_CI] != null) {
        entries[_CI] = input[_CI];
    }
    return entries;
};
const se_DeleteSSHPublicKeyRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    if (input[_SSHPKI] != null) {
        entries[_SSHPKI] = input[_SSHPKI];
    }
    return entries;
};
const se_DeleteUserPermissionsBoundaryRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    return entries;
};
const se_DeleteUserPolicyRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    if (input[_PN] != null) {
        entries[_PN] = input[_PN];
    }
    return entries;
};
const se_DeleteUserRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    return entries;
};
const se_DeleteVirtualMFADeviceRequest = (input, context)=>{
    const entries = {};
    if (input[_SNe] != null) {
        entries[_SNe] = input[_SNe];
    }
    return entries;
};
const se_DetachGroupPolicyRequest = (input, context)=>{
    const entries = {};
    if (input[_GN] != null) {
        entries[_GN] = input[_GN];
    }
    if (input[_PA] != null) {
        entries[_PA] = input[_PA];
    }
    return entries;
};
const se_DetachRolePolicyRequest = (input, context)=>{
    const entries = {};
    if (input[_RN] != null) {
        entries[_RN] = input[_RN];
    }
    if (input[_PA] != null) {
        entries[_PA] = input[_PA];
    }
    return entries;
};
const se_DetachUserPolicyRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    if (input[_PA] != null) {
        entries[_PA] = input[_PA];
    }
    return entries;
};
const se_DisableOrganizationsRootCredentialsManagementRequest = (input, context)=>{
    const entries = {};
    return entries;
};
const se_DisableOrganizationsRootSessionsRequest = (input, context)=>{
    const entries = {};
    return entries;
};
const se_EnableMFADeviceRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    if (input[_SNe] != null) {
        entries[_SNe] = input[_SNe];
    }
    if (input[_AC] != null) {
        entries[_AC] = input[_AC];
    }
    if (input[_ACu] != null) {
        entries[_ACu] = input[_ACu];
    }
    return entries;
};
const se_EnableOrganizationsRootCredentialsManagementRequest = (input, context)=>{
    const entries = {};
    return entries;
};
const se_EnableOrganizationsRootSessionsRequest = (input, context)=>{
    const entries = {};
    return entries;
};
const se_entityListType = (input, context)=>{
    const entries = {};
    let counter = 1;
    for (const entry of input){
        if (entry === null) {
            continue;
        }
        entries[`member.${counter}`] = entry;
        counter++;
    }
    return entries;
};
const se_GenerateOrganizationsAccessReportRequest = (input, context)=>{
    const entries = {};
    if (input[_EP] != null) {
        entries[_EP] = input[_EP];
    }
    if (input[_OPI] != null) {
        entries[_OPI] = input[_OPI];
    }
    return entries;
};
const se_GenerateServiceLastAccessedDetailsRequest = (input, context)=>{
    const entries = {};
    if (input[_Ar] != null) {
        entries[_Ar] = input[_Ar];
    }
    if (input[_G] != null) {
        entries[_G] = input[_G];
    }
    return entries;
};
const se_GetAccessKeyLastUsedRequest = (input, context)=>{
    const entries = {};
    if (input[_AKI] != null) {
        entries[_AKI] = input[_AKI];
    }
    return entries;
};
const se_GetAccountAuthorizationDetailsRequest = (input, context)=>{
    const entries = {};
    if (input[_F] != null) {
        const memberEntries = se_entityListType(input[_F], context);
        if (input[_F]?.length === 0) {
            entries.Filter = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `Filter.${key}`;
            entries[loc] = value;
        });
    }
    if (input[_MI] != null) {
        entries[_MI] = input[_MI];
    }
    if (input[_M] != null) {
        entries[_M] = input[_M];
    }
    return entries;
};
const se_GetContextKeysForCustomPolicyRequest = (input, context)=>{
    const entries = {};
    if (input[_PIL] != null) {
        const memberEntries = se_SimulationPolicyListType(input[_PIL], context);
        if (input[_PIL]?.length === 0) {
            entries.PolicyInputList = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `PolicyInputList.${key}`;
            entries[loc] = value;
        });
    }
    return entries;
};
const se_GetContextKeysForPrincipalPolicyRequest = (input, context)=>{
    const entries = {};
    if (input[_PSA] != null) {
        entries[_PSA] = input[_PSA];
    }
    if (input[_PIL] != null) {
        const memberEntries = se_SimulationPolicyListType(input[_PIL], context);
        if (input[_PIL]?.length === 0) {
            entries.PolicyInputList = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `PolicyInputList.${key}`;
            entries[loc] = value;
        });
    }
    return entries;
};
const se_GetGroupPolicyRequest = (input, context)=>{
    const entries = {};
    if (input[_GN] != null) {
        entries[_GN] = input[_GN];
    }
    if (input[_PN] != null) {
        entries[_PN] = input[_PN];
    }
    return entries;
};
const se_GetGroupRequest = (input, context)=>{
    const entries = {};
    if (input[_GN] != null) {
        entries[_GN] = input[_GN];
    }
    if (input[_M] != null) {
        entries[_M] = input[_M];
    }
    if (input[_MI] != null) {
        entries[_MI] = input[_MI];
    }
    return entries;
};
const se_GetInstanceProfileRequest = (input, context)=>{
    const entries = {};
    if (input[_IPN] != null) {
        entries[_IPN] = input[_IPN];
    }
    return entries;
};
const se_GetLoginProfileRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    return entries;
};
const se_GetMFADeviceRequest = (input, context)=>{
    const entries = {};
    if (input[_SNe] != null) {
        entries[_SNe] = input[_SNe];
    }
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    return entries;
};
const se_GetOpenIDConnectProviderRequest = (input, context)=>{
    const entries = {};
    if (input[_OIDCPA] != null) {
        entries[_OIDCPA] = input[_OIDCPA];
    }
    return entries;
};
const se_GetOrganizationsAccessReportRequest = (input, context)=>{
    const entries = {};
    if (input[_JI] != null) {
        entries[_JI] = input[_JI];
    }
    if (input[_MI] != null) {
        entries[_MI] = input[_MI];
    }
    if (input[_M] != null) {
        entries[_M] = input[_M];
    }
    if (input[_SK] != null) {
        entries[_SK] = input[_SK];
    }
    return entries;
};
const se_GetPolicyRequest = (input, context)=>{
    const entries = {};
    if (input[_PA] != null) {
        entries[_PA] = input[_PA];
    }
    return entries;
};
const se_GetPolicyVersionRequest = (input, context)=>{
    const entries = {};
    if (input[_PA] != null) {
        entries[_PA] = input[_PA];
    }
    if (input[_VI] != null) {
        entries[_VI] = input[_VI];
    }
    return entries;
};
const se_GetRolePolicyRequest = (input, context)=>{
    const entries = {};
    if (input[_RN] != null) {
        entries[_RN] = input[_RN];
    }
    if (input[_PN] != null) {
        entries[_PN] = input[_PN];
    }
    return entries;
};
const se_GetRoleRequest = (input, context)=>{
    const entries = {};
    if (input[_RN] != null) {
        entries[_RN] = input[_RN];
    }
    return entries;
};
const se_GetSAMLProviderRequest = (input, context)=>{
    const entries = {};
    if (input[_SAMLPA] != null) {
        entries[_SAMLPA] = input[_SAMLPA];
    }
    return entries;
};
const se_GetServerCertificateRequest = (input, context)=>{
    const entries = {};
    if (input[_SCN] != null) {
        entries[_SCN] = input[_SCN];
    }
    return entries;
};
const se_GetServiceLastAccessedDetailsRequest = (input, context)=>{
    const entries = {};
    if (input[_JI] != null) {
        entries[_JI] = input[_JI];
    }
    if (input[_MI] != null) {
        entries[_MI] = input[_MI];
    }
    if (input[_M] != null) {
        entries[_M] = input[_M];
    }
    return entries;
};
const se_GetServiceLastAccessedDetailsWithEntitiesRequest = (input, context)=>{
    const entries = {};
    if (input[_JI] != null) {
        entries[_JI] = input[_JI];
    }
    if (input[_SNer] != null) {
        entries[_SNer] = input[_SNer];
    }
    if (input[_MI] != null) {
        entries[_MI] = input[_MI];
    }
    if (input[_M] != null) {
        entries[_M] = input[_M];
    }
    return entries;
};
const se_GetServiceLinkedRoleDeletionStatusRequest = (input, context)=>{
    const entries = {};
    if (input[_DTI] != null) {
        entries[_DTI] = input[_DTI];
    }
    return entries;
};
const se_GetSSHPublicKeyRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    if (input[_SSHPKI] != null) {
        entries[_SSHPKI] = input[_SSHPKI];
    }
    if (input[_E] != null) {
        entries[_E] = input[_E];
    }
    return entries;
};
const se_GetUserPolicyRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    if (input[_PN] != null) {
        entries[_PN] = input[_PN];
    }
    return entries;
};
const se_GetUserRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    return entries;
};
const se_ListAccessKeysRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    if (input[_M] != null) {
        entries[_M] = input[_M];
    }
    if (input[_MI] != null) {
        entries[_MI] = input[_MI];
    }
    return entries;
};
const se_ListAccountAliasesRequest = (input, context)=>{
    const entries = {};
    if (input[_M] != null) {
        entries[_M] = input[_M];
    }
    if (input[_MI] != null) {
        entries[_MI] = input[_MI];
    }
    return entries;
};
const se_ListAttachedGroupPoliciesRequest = (input, context)=>{
    const entries = {};
    if (input[_GN] != null) {
        entries[_GN] = input[_GN];
    }
    if (input[_PP] != null) {
        entries[_PP] = input[_PP];
    }
    if (input[_M] != null) {
        entries[_M] = input[_M];
    }
    if (input[_MI] != null) {
        entries[_MI] = input[_MI];
    }
    return entries;
};
const se_ListAttachedRolePoliciesRequest = (input, context)=>{
    const entries = {};
    if (input[_RN] != null) {
        entries[_RN] = input[_RN];
    }
    if (input[_PP] != null) {
        entries[_PP] = input[_PP];
    }
    if (input[_M] != null) {
        entries[_M] = input[_M];
    }
    if (input[_MI] != null) {
        entries[_MI] = input[_MI];
    }
    return entries;
};
const se_ListAttachedUserPoliciesRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    if (input[_PP] != null) {
        entries[_PP] = input[_PP];
    }
    if (input[_M] != null) {
        entries[_M] = input[_M];
    }
    if (input[_MI] != null) {
        entries[_MI] = input[_MI];
    }
    return entries;
};
const se_ListEntitiesForPolicyRequest = (input, context)=>{
    const entries = {};
    if (input[_PA] != null) {
        entries[_PA] = input[_PA];
    }
    if (input[_EF] != null) {
        entries[_EF] = input[_EF];
    }
    if (input[_PP] != null) {
        entries[_PP] = input[_PP];
    }
    if (input[_PUF] != null) {
        entries[_PUF] = input[_PUF];
    }
    if (input[_M] != null) {
        entries[_M] = input[_M];
    }
    if (input[_MI] != null) {
        entries[_MI] = input[_MI];
    }
    return entries;
};
const se_ListGroupPoliciesRequest = (input, context)=>{
    const entries = {};
    if (input[_GN] != null) {
        entries[_GN] = input[_GN];
    }
    if (input[_M] != null) {
        entries[_M] = input[_M];
    }
    if (input[_MI] != null) {
        entries[_MI] = input[_MI];
    }
    return entries;
};
const se_ListGroupsForUserRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    if (input[_M] != null) {
        entries[_M] = input[_M];
    }
    if (input[_MI] != null) {
        entries[_MI] = input[_MI];
    }
    return entries;
};
const se_ListGroupsRequest = (input, context)=>{
    const entries = {};
    if (input[_PP] != null) {
        entries[_PP] = input[_PP];
    }
    if (input[_M] != null) {
        entries[_M] = input[_M];
    }
    if (input[_MI] != null) {
        entries[_MI] = input[_MI];
    }
    return entries;
};
const se_ListInstanceProfilesForRoleRequest = (input, context)=>{
    const entries = {};
    if (input[_RN] != null) {
        entries[_RN] = input[_RN];
    }
    if (input[_M] != null) {
        entries[_M] = input[_M];
    }
    if (input[_MI] != null) {
        entries[_MI] = input[_MI];
    }
    return entries;
};
const se_ListInstanceProfilesRequest = (input, context)=>{
    const entries = {};
    if (input[_PP] != null) {
        entries[_PP] = input[_PP];
    }
    if (input[_M] != null) {
        entries[_M] = input[_M];
    }
    if (input[_MI] != null) {
        entries[_MI] = input[_MI];
    }
    return entries;
};
const se_ListInstanceProfileTagsRequest = (input, context)=>{
    const entries = {};
    if (input[_IPN] != null) {
        entries[_IPN] = input[_IPN];
    }
    if (input[_M] != null) {
        entries[_M] = input[_M];
    }
    if (input[_MI] != null) {
        entries[_MI] = input[_MI];
    }
    return entries;
};
const se_ListMFADevicesRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    if (input[_M] != null) {
        entries[_M] = input[_M];
    }
    if (input[_MI] != null) {
        entries[_MI] = input[_MI];
    }
    return entries;
};
const se_ListMFADeviceTagsRequest = (input, context)=>{
    const entries = {};
    if (input[_SNe] != null) {
        entries[_SNe] = input[_SNe];
    }
    if (input[_M] != null) {
        entries[_M] = input[_M];
    }
    if (input[_MI] != null) {
        entries[_MI] = input[_MI];
    }
    return entries;
};
const se_ListOpenIDConnectProvidersRequest = (input, context)=>{
    const entries = {};
    return entries;
};
const se_ListOpenIDConnectProviderTagsRequest = (input, context)=>{
    const entries = {};
    if (input[_OIDCPA] != null) {
        entries[_OIDCPA] = input[_OIDCPA];
    }
    if (input[_M] != null) {
        entries[_M] = input[_M];
    }
    if (input[_MI] != null) {
        entries[_MI] = input[_MI];
    }
    return entries;
};
const se_ListOrganizationsFeaturesRequest = (input, context)=>{
    const entries = {};
    return entries;
};
const se_ListPoliciesGrantingServiceAccessRequest = (input, context)=>{
    const entries = {};
    if (input[_M] != null) {
        entries[_M] = input[_M];
    }
    if (input[_Ar] != null) {
        entries[_Ar] = input[_Ar];
    }
    if (input[_SNerv] != null) {
        const memberEntries = se_serviceNamespaceListType(input[_SNerv], context);
        if (input[_SNerv]?.length === 0) {
            entries.ServiceNamespaces = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `ServiceNamespaces.${key}`;
            entries[loc] = value;
        });
    }
    return entries;
};
const se_ListPoliciesRequest = (input, context)=>{
    const entries = {};
    if (input[_S] != null) {
        entries[_S] = input[_S];
    }
    if (input[_OA] != null) {
        entries[_OA] = input[_OA];
    }
    if (input[_PP] != null) {
        entries[_PP] = input[_PP];
    }
    if (input[_PUF] != null) {
        entries[_PUF] = input[_PUF];
    }
    if (input[_M] != null) {
        entries[_M] = input[_M];
    }
    if (input[_MI] != null) {
        entries[_MI] = input[_MI];
    }
    return entries;
};
const se_ListPolicyTagsRequest = (input, context)=>{
    const entries = {};
    if (input[_PA] != null) {
        entries[_PA] = input[_PA];
    }
    if (input[_M] != null) {
        entries[_M] = input[_M];
    }
    if (input[_MI] != null) {
        entries[_MI] = input[_MI];
    }
    return entries;
};
const se_ListPolicyVersionsRequest = (input, context)=>{
    const entries = {};
    if (input[_PA] != null) {
        entries[_PA] = input[_PA];
    }
    if (input[_M] != null) {
        entries[_M] = input[_M];
    }
    if (input[_MI] != null) {
        entries[_MI] = input[_MI];
    }
    return entries;
};
const se_ListRolePoliciesRequest = (input, context)=>{
    const entries = {};
    if (input[_RN] != null) {
        entries[_RN] = input[_RN];
    }
    if (input[_M] != null) {
        entries[_M] = input[_M];
    }
    if (input[_MI] != null) {
        entries[_MI] = input[_MI];
    }
    return entries;
};
const se_ListRolesRequest = (input, context)=>{
    const entries = {};
    if (input[_PP] != null) {
        entries[_PP] = input[_PP];
    }
    if (input[_M] != null) {
        entries[_M] = input[_M];
    }
    if (input[_MI] != null) {
        entries[_MI] = input[_MI];
    }
    return entries;
};
const se_ListRoleTagsRequest = (input, context)=>{
    const entries = {};
    if (input[_RN] != null) {
        entries[_RN] = input[_RN];
    }
    if (input[_M] != null) {
        entries[_M] = input[_M];
    }
    if (input[_MI] != null) {
        entries[_MI] = input[_MI];
    }
    return entries;
};
const se_ListSAMLProvidersRequest = (input, context)=>{
    const entries = {};
    return entries;
};
const se_ListSAMLProviderTagsRequest = (input, context)=>{
    const entries = {};
    if (input[_SAMLPA] != null) {
        entries[_SAMLPA] = input[_SAMLPA];
    }
    if (input[_M] != null) {
        entries[_M] = input[_M];
    }
    if (input[_MI] != null) {
        entries[_MI] = input[_MI];
    }
    return entries;
};
const se_ListServerCertificatesRequest = (input, context)=>{
    const entries = {};
    if (input[_PP] != null) {
        entries[_PP] = input[_PP];
    }
    if (input[_M] != null) {
        entries[_M] = input[_M];
    }
    if (input[_MI] != null) {
        entries[_MI] = input[_MI];
    }
    return entries;
};
const se_ListServerCertificateTagsRequest = (input, context)=>{
    const entries = {};
    if (input[_SCN] != null) {
        entries[_SCN] = input[_SCN];
    }
    if (input[_M] != null) {
        entries[_M] = input[_M];
    }
    if (input[_MI] != null) {
        entries[_MI] = input[_MI];
    }
    return entries;
};
const se_ListServiceSpecificCredentialsRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    if (input[_SN] != null) {
        entries[_SN] = input[_SN];
    }
    return entries;
};
const se_ListSigningCertificatesRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    if (input[_M] != null) {
        entries[_M] = input[_M];
    }
    if (input[_MI] != null) {
        entries[_MI] = input[_MI];
    }
    return entries;
};
const se_ListSSHPublicKeysRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    if (input[_M] != null) {
        entries[_M] = input[_M];
    }
    if (input[_MI] != null) {
        entries[_MI] = input[_MI];
    }
    return entries;
};
const se_ListUserPoliciesRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    if (input[_M] != null) {
        entries[_M] = input[_M];
    }
    if (input[_MI] != null) {
        entries[_MI] = input[_MI];
    }
    return entries;
};
const se_ListUsersRequest = (input, context)=>{
    const entries = {};
    if (input[_PP] != null) {
        entries[_PP] = input[_PP];
    }
    if (input[_M] != null) {
        entries[_M] = input[_M];
    }
    if (input[_MI] != null) {
        entries[_MI] = input[_MI];
    }
    return entries;
};
const se_ListUserTagsRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    if (input[_M] != null) {
        entries[_M] = input[_M];
    }
    if (input[_MI] != null) {
        entries[_MI] = input[_MI];
    }
    return entries;
};
const se_ListVirtualMFADevicesRequest = (input, context)=>{
    const entries = {};
    if (input[_AS] != null) {
        entries[_AS] = input[_AS];
    }
    if (input[_M] != null) {
        entries[_M] = input[_M];
    }
    if (input[_MI] != null) {
        entries[_MI] = input[_MI];
    }
    return entries;
};
const se_PutGroupPolicyRequest = (input, context)=>{
    const entries = {};
    if (input[_GN] != null) {
        entries[_GN] = input[_GN];
    }
    if (input[_PN] != null) {
        entries[_PN] = input[_PN];
    }
    if (input[_PD] != null) {
        entries[_PD] = input[_PD];
    }
    return entries;
};
const se_PutRolePermissionsBoundaryRequest = (input, context)=>{
    const entries = {};
    if (input[_RN] != null) {
        entries[_RN] = input[_RN];
    }
    if (input[_PB] != null) {
        entries[_PB] = input[_PB];
    }
    return entries;
};
const se_PutRolePolicyRequest = (input, context)=>{
    const entries = {};
    if (input[_RN] != null) {
        entries[_RN] = input[_RN];
    }
    if (input[_PN] != null) {
        entries[_PN] = input[_PN];
    }
    if (input[_PD] != null) {
        entries[_PD] = input[_PD];
    }
    return entries;
};
const se_PutUserPermissionsBoundaryRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    if (input[_PB] != null) {
        entries[_PB] = input[_PB];
    }
    return entries;
};
const se_PutUserPolicyRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    if (input[_PN] != null) {
        entries[_PN] = input[_PN];
    }
    if (input[_PD] != null) {
        entries[_PD] = input[_PD];
    }
    return entries;
};
const se_RemoveClientIDFromOpenIDConnectProviderRequest = (input, context)=>{
    const entries = {};
    if (input[_OIDCPA] != null) {
        entries[_OIDCPA] = input[_OIDCPA];
    }
    if (input[_CID] != null) {
        entries[_CID] = input[_CID];
    }
    return entries;
};
const se_RemoveRoleFromInstanceProfileRequest = (input, context)=>{
    const entries = {};
    if (input[_IPN] != null) {
        entries[_IPN] = input[_IPN];
    }
    if (input[_RN] != null) {
        entries[_RN] = input[_RN];
    }
    return entries;
};
const se_RemoveUserFromGroupRequest = (input, context)=>{
    const entries = {};
    if (input[_GN] != null) {
        entries[_GN] = input[_GN];
    }
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    return entries;
};
const se_ResetServiceSpecificCredentialRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    if (input[_SSCI] != null) {
        entries[_SSCI] = input[_SSCI];
    }
    return entries;
};
const se_ResourceNameListType = (input, context)=>{
    const entries = {};
    let counter = 1;
    for (const entry of input){
        if (entry === null) {
            continue;
        }
        entries[`member.${counter}`] = entry;
        counter++;
    }
    return entries;
};
const se_ResyncMFADeviceRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    if (input[_SNe] != null) {
        entries[_SNe] = input[_SNe];
    }
    if (input[_AC] != null) {
        entries[_AC] = input[_AC];
    }
    if (input[_ACu] != null) {
        entries[_ACu] = input[_ACu];
    }
    return entries;
};
const se_serviceNamespaceListType = (input, context)=>{
    const entries = {};
    let counter = 1;
    for (const entry of input){
        if (entry === null) {
            continue;
        }
        entries[`member.${counter}`] = entry;
        counter++;
    }
    return entries;
};
const se_SetDefaultPolicyVersionRequest = (input, context)=>{
    const entries = {};
    if (input[_PA] != null) {
        entries[_PA] = input[_PA];
    }
    if (input[_VI] != null) {
        entries[_VI] = input[_VI];
    }
    return entries;
};
const se_SetSecurityTokenServicePreferencesRequest = (input, context)=>{
    const entries = {};
    if (input[_GETV] != null) {
        entries[_GETV] = input[_GETV];
    }
    return entries;
};
const se_SimulateCustomPolicyRequest = (input, context)=>{
    const entries = {};
    if (input[_PIL] != null) {
        const memberEntries = se_SimulationPolicyListType(input[_PIL], context);
        if (input[_PIL]?.length === 0) {
            entries.PolicyInputList = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `PolicyInputList.${key}`;
            entries[loc] = value;
        });
    }
    if (input[_PBPIL] != null) {
        const memberEntries = se_SimulationPolicyListType(input[_PBPIL], context);
        if (input[_PBPIL]?.length === 0) {
            entries.PermissionsBoundaryPolicyInputList = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `PermissionsBoundaryPolicyInputList.${key}`;
            entries[loc] = value;
        });
    }
    if (input[_AN] != null) {
        const memberEntries = se_ActionNameListType(input[_AN], context);
        if (input[_AN]?.length === 0) {
            entries.ActionNames = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `ActionNames.${key}`;
            entries[loc] = value;
        });
    }
    if (input[_RA] != null) {
        const memberEntries = se_ResourceNameListType(input[_RA], context);
        if (input[_RA]?.length === 0) {
            entries.ResourceArns = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `ResourceArns.${key}`;
            entries[loc] = value;
        });
    }
    if (input[_RP] != null) {
        entries[_RP] = input[_RP];
    }
    if (input[_RO] != null) {
        entries[_RO] = input[_RO];
    }
    if (input[_CA] != null) {
        entries[_CA] = input[_CA];
    }
    if (input[_CE] != null) {
        const memberEntries = se_ContextEntryListType(input[_CE], context);
        if (input[_CE]?.length === 0) {
            entries.ContextEntries = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `ContextEntries.${key}`;
            entries[loc] = value;
        });
    }
    if (input[_RHO] != null) {
        entries[_RHO] = input[_RHO];
    }
    if (input[_MI] != null) {
        entries[_MI] = input[_MI];
    }
    if (input[_M] != null) {
        entries[_M] = input[_M];
    }
    return entries;
};
const se_SimulatePrincipalPolicyRequest = (input, context)=>{
    const entries = {};
    if (input[_PSA] != null) {
        entries[_PSA] = input[_PSA];
    }
    if (input[_PIL] != null) {
        const memberEntries = se_SimulationPolicyListType(input[_PIL], context);
        if (input[_PIL]?.length === 0) {
            entries.PolicyInputList = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `PolicyInputList.${key}`;
            entries[loc] = value;
        });
    }
    if (input[_PBPIL] != null) {
        const memberEntries = se_SimulationPolicyListType(input[_PBPIL], context);
        if (input[_PBPIL]?.length === 0) {
            entries.PermissionsBoundaryPolicyInputList = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `PermissionsBoundaryPolicyInputList.${key}`;
            entries[loc] = value;
        });
    }
    if (input[_AN] != null) {
        const memberEntries = se_ActionNameListType(input[_AN], context);
        if (input[_AN]?.length === 0) {
            entries.ActionNames = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `ActionNames.${key}`;
            entries[loc] = value;
        });
    }
    if (input[_RA] != null) {
        const memberEntries = se_ResourceNameListType(input[_RA], context);
        if (input[_RA]?.length === 0) {
            entries.ResourceArns = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `ResourceArns.${key}`;
            entries[loc] = value;
        });
    }
    if (input[_RP] != null) {
        entries[_RP] = input[_RP];
    }
    if (input[_RO] != null) {
        entries[_RO] = input[_RO];
    }
    if (input[_CA] != null) {
        entries[_CA] = input[_CA];
    }
    if (input[_CE] != null) {
        const memberEntries = se_ContextEntryListType(input[_CE], context);
        if (input[_CE]?.length === 0) {
            entries.ContextEntries = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `ContextEntries.${key}`;
            entries[loc] = value;
        });
    }
    if (input[_RHO] != null) {
        entries[_RHO] = input[_RHO];
    }
    if (input[_MI] != null) {
        entries[_MI] = input[_MI];
    }
    if (input[_M] != null) {
        entries[_M] = input[_M];
    }
    return entries;
};
const se_SimulationPolicyListType = (input, context)=>{
    const entries = {};
    let counter = 1;
    for (const entry of input){
        if (entry === null) {
            continue;
        }
        entries[`member.${counter}`] = entry;
        counter++;
    }
    return entries;
};
const se_Tag = (input, context)=>{
    const entries = {};
    if (input[_K] != null) {
        entries[_K] = input[_K];
    }
    if (input[_Va] != null) {
        entries[_Va] = input[_Va];
    }
    return entries;
};
const se_TagInstanceProfileRequest = (input, context)=>{
    const entries = {};
    if (input[_IPN] != null) {
        entries[_IPN] = input[_IPN];
    }
    if (input[_T] != null) {
        const memberEntries = se_tagListType(input[_T], context);
        if (input[_T]?.length === 0) {
            entries.Tags = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `Tags.${key}`;
            entries[loc] = value;
        });
    }
    return entries;
};
const se_tagKeyListType = (input, context)=>{
    const entries = {};
    let counter = 1;
    for (const entry of input){
        if (entry === null) {
            continue;
        }
        entries[`member.${counter}`] = entry;
        counter++;
    }
    return entries;
};
const se_tagListType = (input, context)=>{
    const entries = {};
    let counter = 1;
    for (const entry of input){
        if (entry === null) {
            continue;
        }
        const memberEntries = se_Tag(entry, context);
        Object.entries(memberEntries).forEach(([key, value])=>{
            entries[`member.${counter}.${key}`] = value;
        });
        counter++;
    }
    return entries;
};
const se_TagMFADeviceRequest = (input, context)=>{
    const entries = {};
    if (input[_SNe] != null) {
        entries[_SNe] = input[_SNe];
    }
    if (input[_T] != null) {
        const memberEntries = se_tagListType(input[_T], context);
        if (input[_T]?.length === 0) {
            entries.Tags = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `Tags.${key}`;
            entries[loc] = value;
        });
    }
    return entries;
};
const se_TagOpenIDConnectProviderRequest = (input, context)=>{
    const entries = {};
    if (input[_OIDCPA] != null) {
        entries[_OIDCPA] = input[_OIDCPA];
    }
    if (input[_T] != null) {
        const memberEntries = se_tagListType(input[_T], context);
        if (input[_T]?.length === 0) {
            entries.Tags = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `Tags.${key}`;
            entries[loc] = value;
        });
    }
    return entries;
};
const se_TagPolicyRequest = (input, context)=>{
    const entries = {};
    if (input[_PA] != null) {
        entries[_PA] = input[_PA];
    }
    if (input[_T] != null) {
        const memberEntries = se_tagListType(input[_T], context);
        if (input[_T]?.length === 0) {
            entries.Tags = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `Tags.${key}`;
            entries[loc] = value;
        });
    }
    return entries;
};
const se_TagRoleRequest = (input, context)=>{
    const entries = {};
    if (input[_RN] != null) {
        entries[_RN] = input[_RN];
    }
    if (input[_T] != null) {
        const memberEntries = se_tagListType(input[_T], context);
        if (input[_T]?.length === 0) {
            entries.Tags = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `Tags.${key}`;
            entries[loc] = value;
        });
    }
    return entries;
};
const se_TagSAMLProviderRequest = (input, context)=>{
    const entries = {};
    if (input[_SAMLPA] != null) {
        entries[_SAMLPA] = input[_SAMLPA];
    }
    if (input[_T] != null) {
        const memberEntries = se_tagListType(input[_T], context);
        if (input[_T]?.length === 0) {
            entries.Tags = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `Tags.${key}`;
            entries[loc] = value;
        });
    }
    return entries;
};
const se_TagServerCertificateRequest = (input, context)=>{
    const entries = {};
    if (input[_SCN] != null) {
        entries[_SCN] = input[_SCN];
    }
    if (input[_T] != null) {
        const memberEntries = se_tagListType(input[_T], context);
        if (input[_T]?.length === 0) {
            entries.Tags = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `Tags.${key}`;
            entries[loc] = value;
        });
    }
    return entries;
};
const se_TagUserRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    if (input[_T] != null) {
        const memberEntries = se_tagListType(input[_T], context);
        if (input[_T]?.length === 0) {
            entries.Tags = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `Tags.${key}`;
            entries[loc] = value;
        });
    }
    return entries;
};
const se_thumbprintListType = (input, context)=>{
    const entries = {};
    let counter = 1;
    for (const entry of input){
        if (entry === null) {
            continue;
        }
        entries[`member.${counter}`] = entry;
        counter++;
    }
    return entries;
};
const se_UntagInstanceProfileRequest = (input, context)=>{
    const entries = {};
    if (input[_IPN] != null) {
        entries[_IPN] = input[_IPN];
    }
    if (input[_TK] != null) {
        const memberEntries = se_tagKeyListType(input[_TK], context);
        if (input[_TK]?.length === 0) {
            entries.TagKeys = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `TagKeys.${key}`;
            entries[loc] = value;
        });
    }
    return entries;
};
const se_UntagMFADeviceRequest = (input, context)=>{
    const entries = {};
    if (input[_SNe] != null) {
        entries[_SNe] = input[_SNe];
    }
    if (input[_TK] != null) {
        const memberEntries = se_tagKeyListType(input[_TK], context);
        if (input[_TK]?.length === 0) {
            entries.TagKeys = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `TagKeys.${key}`;
            entries[loc] = value;
        });
    }
    return entries;
};
const se_UntagOpenIDConnectProviderRequest = (input, context)=>{
    const entries = {};
    if (input[_OIDCPA] != null) {
        entries[_OIDCPA] = input[_OIDCPA];
    }
    if (input[_TK] != null) {
        const memberEntries = se_tagKeyListType(input[_TK], context);
        if (input[_TK]?.length === 0) {
            entries.TagKeys = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `TagKeys.${key}`;
            entries[loc] = value;
        });
    }
    return entries;
};
const se_UntagPolicyRequest = (input, context)=>{
    const entries = {};
    if (input[_PA] != null) {
        entries[_PA] = input[_PA];
    }
    if (input[_TK] != null) {
        const memberEntries = se_tagKeyListType(input[_TK], context);
        if (input[_TK]?.length === 0) {
            entries.TagKeys = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `TagKeys.${key}`;
            entries[loc] = value;
        });
    }
    return entries;
};
const se_UntagRoleRequest = (input, context)=>{
    const entries = {};
    if (input[_RN] != null) {
        entries[_RN] = input[_RN];
    }
    if (input[_TK] != null) {
        const memberEntries = se_tagKeyListType(input[_TK], context);
        if (input[_TK]?.length === 0) {
            entries.TagKeys = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `TagKeys.${key}`;
            entries[loc] = value;
        });
    }
    return entries;
};
const se_UntagSAMLProviderRequest = (input, context)=>{
    const entries = {};
    if (input[_SAMLPA] != null) {
        entries[_SAMLPA] = input[_SAMLPA];
    }
    if (input[_TK] != null) {
        const memberEntries = se_tagKeyListType(input[_TK], context);
        if (input[_TK]?.length === 0) {
            entries.TagKeys = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `TagKeys.${key}`;
            entries[loc] = value;
        });
    }
    return entries;
};
const se_UntagServerCertificateRequest = (input, context)=>{
    const entries = {};
    if (input[_SCN] != null) {
        entries[_SCN] = input[_SCN];
    }
    if (input[_TK] != null) {
        const memberEntries = se_tagKeyListType(input[_TK], context);
        if (input[_TK]?.length === 0) {
            entries.TagKeys = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `TagKeys.${key}`;
            entries[loc] = value;
        });
    }
    return entries;
};
const se_UntagUserRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    if (input[_TK] != null) {
        const memberEntries = se_tagKeyListType(input[_TK], context);
        if (input[_TK]?.length === 0) {
            entries.TagKeys = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `TagKeys.${key}`;
            entries[loc] = value;
        });
    }
    return entries;
};
const se_UpdateAccessKeyRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    if (input[_AKI] != null) {
        entries[_AKI] = input[_AKI];
    }
    if (input[_St] != null) {
        entries[_St] = input[_St];
    }
    return entries;
};
const se_UpdateAccountPasswordPolicyRequest = (input, context)=>{
    const entries = {};
    if (input[_MPL] != null) {
        entries[_MPL] = input[_MPL];
    }
    if (input[_RS] != null) {
        entries[_RS] = input[_RS];
    }
    if (input[_RNe] != null) {
        entries[_RNe] = input[_RNe];
    }
    if (input[_RUC] != null) {
        entries[_RUC] = input[_RUC];
    }
    if (input[_RLC] != null) {
        entries[_RLC] = input[_RLC];
    }
    if (input[_AUTCP] != null) {
        entries[_AUTCP] = input[_AUTCP];
    }
    if (input[_MPA] != null) {
        entries[_MPA] = input[_MPA];
    }
    if (input[_PRPa] != null) {
        entries[_PRPa] = input[_PRPa];
    }
    if (input[_HE] != null) {
        entries[_HE] = input[_HE];
    }
    return entries;
};
const se_UpdateAssumeRolePolicyRequest = (input, context)=>{
    const entries = {};
    if (input[_RN] != null) {
        entries[_RN] = input[_RN];
    }
    if (input[_PD] != null) {
        entries[_PD] = input[_PD];
    }
    return entries;
};
const se_UpdateGroupRequest = (input, context)=>{
    const entries = {};
    if (input[_GN] != null) {
        entries[_GN] = input[_GN];
    }
    if (input[_NPe] != null) {
        entries[_NPe] = input[_NPe];
    }
    if (input[_NGN] != null) {
        entries[_NGN] = input[_NGN];
    }
    return entries;
};
const se_UpdateLoginProfileRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    if (input[_Pa] != null) {
        entries[_Pa] = input[_Pa];
    }
    if (input[_PRR] != null) {
        entries[_PRR] = input[_PRR];
    }
    return entries;
};
const se_UpdateOpenIDConnectProviderThumbprintRequest = (input, context)=>{
    const entries = {};
    if (input[_OIDCPA] != null) {
        entries[_OIDCPA] = input[_OIDCPA];
    }
    if (input[_TL] != null) {
        const memberEntries = se_thumbprintListType(input[_TL], context);
        if (input[_TL]?.length === 0) {
            entries.ThumbprintList = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `ThumbprintList.${key}`;
            entries[loc] = value;
        });
    }
    return entries;
};
const se_UpdateRoleDescriptionRequest = (input, context)=>{
    const entries = {};
    if (input[_RN] != null) {
        entries[_RN] = input[_RN];
    }
    if (input[_D] != null) {
        entries[_D] = input[_D];
    }
    return entries;
};
const se_UpdateRoleRequest = (input, context)=>{
    const entries = {};
    if (input[_RN] != null) {
        entries[_RN] = input[_RN];
    }
    if (input[_D] != null) {
        entries[_D] = input[_D];
    }
    if (input[_MSD] != null) {
        entries[_MSD] = input[_MSD];
    }
    return entries;
};
const se_UpdateSAMLProviderRequest = (input, context)=>{
    const entries = {};
    if (input[_SAMLMD] != null) {
        entries[_SAMLMD] = input[_SAMLMD];
    }
    if (input[_SAMLPA] != null) {
        entries[_SAMLPA] = input[_SAMLPA];
    }
    if (input[_AEM] != null) {
        entries[_AEM] = input[_AEM];
    }
    if (input[_APK] != null) {
        entries[_APK] = input[_APK];
    }
    if (input[_RPK] != null) {
        entries[_RPK] = input[_RPK];
    }
    return entries;
};
const se_UpdateServerCertificateRequest = (input, context)=>{
    const entries = {};
    if (input[_SCN] != null) {
        entries[_SCN] = input[_SCN];
    }
    if (input[_NPe] != null) {
        entries[_NPe] = input[_NPe];
    }
    if (input[_NSCN] != null) {
        entries[_NSCN] = input[_NSCN];
    }
    return entries;
};
const se_UpdateServiceSpecificCredentialRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    if (input[_SSCI] != null) {
        entries[_SSCI] = input[_SSCI];
    }
    if (input[_St] != null) {
        entries[_St] = input[_St];
    }
    return entries;
};
const se_UpdateSigningCertificateRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    if (input[_CI] != null) {
        entries[_CI] = input[_CI];
    }
    if (input[_St] != null) {
        entries[_St] = input[_St];
    }
    return entries;
};
const se_UpdateSSHPublicKeyRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    if (input[_SSHPKI] != null) {
        entries[_SSHPKI] = input[_SSHPKI];
    }
    if (input[_St] != null) {
        entries[_St] = input[_St];
    }
    return entries;
};
const se_UpdateUserRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    if (input[_NPe] != null) {
        entries[_NPe] = input[_NPe];
    }
    if (input[_NUN] != null) {
        entries[_NUN] = input[_NUN];
    }
    return entries;
};
const se_UploadServerCertificateRequest = (input, context)=>{
    const entries = {};
    if (input[_P] != null) {
        entries[_P] = input[_P];
    }
    if (input[_SCN] != null) {
        entries[_SCN] = input[_SCN];
    }
    if (input[_CB] != null) {
        entries[_CB] = input[_CB];
    }
    if (input[_PK] != null) {
        entries[_PK] = input[_PK];
    }
    if (input[_CC] != null) {
        entries[_CC] = input[_CC];
    }
    if (input[_T] != null) {
        const memberEntries = se_tagListType(input[_T], context);
        if (input[_T]?.length === 0) {
            entries.Tags = [];
        }
        Object.entries(memberEntries).forEach(([key, value])=>{
            const loc = `Tags.${key}`;
            entries[loc] = value;
        });
    }
    return entries;
};
const se_UploadSigningCertificateRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    if (input[_CB] != null) {
        entries[_CB] = input[_CB];
    }
    return entries;
};
const se_UploadSSHPublicKeyRequest = (input, context)=>{
    const entries = {};
    if (input[_UN] != null) {
        entries[_UN] = input[_UN];
    }
    if (input[_SSHPKB] != null) {
        entries[_SSHPKB] = input[_SSHPKB];
    }
    return entries;
};
const de_AccessDetail = (output, context)=>{
    const contents = {};
    if (output[_SN] != null) {
        contents[_SN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_SN]);
    }
    if (output[_SNer] != null) {
        contents[_SNer] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_SNer]);
    }
    if (output[_R] != null) {
        contents[_R] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_R]);
    }
    if (output[_EP] != null) {
        contents[_EP] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_EP]);
    }
    if (output[_LAT] != null) {
        contents[_LAT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_LAT]));
    }
    if (output[_TAE] != null) {
        contents[_TAE] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["strictParseInt32"])(output[_TAE]);
    }
    return contents;
};
const de_AccessDetails = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return de_AccessDetail(entry, context);
    });
};
const de_AccessKey = (output, context)=>{
    const contents = {};
    if (output[_UN] != null) {
        contents[_UN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_UN]);
    }
    if (output[_AKI] != null) {
        contents[_AKI] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_AKI]);
    }
    if (output[_St] != null) {
        contents[_St] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_St]);
    }
    if (output[_SAK] != null) {
        contents[_SAK] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_SAK]);
    }
    if (output[_CD] != null) {
        contents[_CD] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_CD]));
    }
    return contents;
};
const de_AccessKeyLastUsed = (output, context)=>{
    const contents = {};
    if (output[_LUD] != null) {
        contents[_LUD] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_LUD]));
    }
    if (output[_SN] != null) {
        contents[_SN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_SN]);
    }
    if (output[_R] != null) {
        contents[_R] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_R]);
    }
    return contents;
};
const de_AccessKeyMetadata = (output, context)=>{
    const contents = {};
    if (output[_UN] != null) {
        contents[_UN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_UN]);
    }
    if (output[_AKI] != null) {
        contents[_AKI] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_AKI]);
    }
    if (output[_St] != null) {
        contents[_St] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_St]);
    }
    if (output[_CD] != null) {
        contents[_CD] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_CD]));
    }
    return contents;
};
const de_accessKeyMetadataListType = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return de_AccessKeyMetadata(entry, context);
    });
};
const de_accountAliasListType = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(entry);
    });
};
const de_AccountNotManagementOrDelegatedAdministratorException = (output, context)=>{
    const contents = {};
    if (output[_Me] != null) {
        contents[_Me] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_Me]);
    }
    return contents;
};
const de_ArnListType = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(entry);
    });
};
const de_AttachedPermissionsBoundary = (output, context)=>{
    const contents = {};
    if (output[_PBT] != null) {
        contents[_PBT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_PBT]);
    }
    if (output[_PBA] != null) {
        contents[_PBA] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_PBA]);
    }
    return contents;
};
const de_attachedPoliciesListType = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return de_AttachedPolicy(entry, context);
    });
};
const de_AttachedPolicy = (output, context)=>{
    const contents = {};
    if (output[_PN] != null) {
        contents[_PN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_PN]);
    }
    if (output[_PA] != null) {
        contents[_PA] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_PA]);
    }
    return contents;
};
const de_CallerIsNotManagementAccountException = (output, context)=>{
    const contents = {};
    if (output[_Me] != null) {
        contents[_Me] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_Me]);
    }
    return contents;
};
const de_certificateListType = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return de_SigningCertificate(entry, context);
    });
};
const de_CertificationMapType = (output, context)=>{
    return output.reduce((acc, pair)=>{
        if (pair["value"] === null) {
            return acc;
        }
        acc[pair["key"]] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(pair["value"]);
        return acc;
    }, {});
};
const de_clientIDListType = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(entry);
    });
};
const de_ConcurrentModificationException = (output, context)=>{
    const contents = {};
    if (output[_m] != null) {
        contents[_m] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_m]);
    }
    return contents;
};
const de_ContextKeyNamesResultListType = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(entry);
    });
};
const de_CreateAccessKeyResponse = (output, context)=>{
    const contents = {};
    if (output[_AK] != null) {
        contents[_AK] = de_AccessKey(output[_AK], context);
    }
    return contents;
};
const de_CreateGroupResponse = (output, context)=>{
    const contents = {};
    if (output[_Gr] != null) {
        contents[_Gr] = de_Group(output[_Gr], context);
    }
    return contents;
};
const de_CreateInstanceProfileResponse = (output, context)=>{
    const contents = {};
    if (output[_IP] != null) {
        contents[_IP] = de_InstanceProfile(output[_IP], context);
    }
    return contents;
};
const de_CreateLoginProfileResponse = (output, context)=>{
    const contents = {};
    if (output[_LPo] != null) {
        contents[_LPo] = de_LoginProfile(output[_LPo], context);
    }
    return contents;
};
const de_CreateOpenIDConnectProviderResponse = (output, context)=>{
    const contents = {};
    if (output[_OIDCPA] != null) {
        contents[_OIDCPA] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_OIDCPA]);
    }
    if (output.Tags === "") {
        contents[_T] = [];
    } else if (output[_T] != null && output[_T][_me] != null) {
        contents[_T] = de_tagListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_T][_me]), context);
    }
    return contents;
};
const de_CreatePolicyResponse = (output, context)=>{
    const contents = {};
    if (output[_Po] != null) {
        contents[_Po] = de_Policy(output[_Po], context);
    }
    return contents;
};
const de_CreatePolicyVersionResponse = (output, context)=>{
    const contents = {};
    if (output[_PV] != null) {
        contents[_PV] = de_PolicyVersion(output[_PV], context);
    }
    return contents;
};
const de_CreateRoleResponse = (output, context)=>{
    const contents = {};
    if (output[_Ro] != null) {
        contents[_Ro] = de_Role(output[_Ro], context);
    }
    return contents;
};
const de_CreateSAMLProviderResponse = (output, context)=>{
    const contents = {};
    if (output[_SAMLPA] != null) {
        contents[_SAMLPA] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_SAMLPA]);
    }
    if (output.Tags === "") {
        contents[_T] = [];
    } else if (output[_T] != null && output[_T][_me] != null) {
        contents[_T] = de_tagListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_T][_me]), context);
    }
    return contents;
};
const de_CreateServiceLinkedRoleResponse = (output, context)=>{
    const contents = {};
    if (output[_Ro] != null) {
        contents[_Ro] = de_Role(output[_Ro], context);
    }
    return contents;
};
const de_CreateServiceSpecificCredentialResponse = (output, context)=>{
    const contents = {};
    if (output[_SSC] != null) {
        contents[_SSC] = de_ServiceSpecificCredential(output[_SSC], context);
    }
    return contents;
};
const de_CreateUserResponse = (output, context)=>{
    const contents = {};
    if (output[_Us] != null) {
        contents[_Us] = de_User(output[_Us], context);
    }
    return contents;
};
const de_CreateVirtualMFADeviceResponse = (output, context)=>{
    const contents = {};
    if (output[_VMFAD] != null) {
        contents[_VMFAD] = de_VirtualMFADevice(output[_VMFAD], context);
    }
    return contents;
};
const de_CredentialReportExpiredException = (output, context)=>{
    const contents = {};
    if (output[_m] != null) {
        contents[_m] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_m]);
    }
    return contents;
};
const de_CredentialReportNotPresentException = (output, context)=>{
    const contents = {};
    if (output[_m] != null) {
        contents[_m] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_m]);
    }
    return contents;
};
const de_CredentialReportNotReadyException = (output, context)=>{
    const contents = {};
    if (output[_m] != null) {
        contents[_m] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_m]);
    }
    return contents;
};
const de_DeleteConflictException = (output, context)=>{
    const contents = {};
    if (output[_m] != null) {
        contents[_m] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_m]);
    }
    return contents;
};
const de_DeleteServiceLinkedRoleResponse = (output, context)=>{
    const contents = {};
    if (output[_DTI] != null) {
        contents[_DTI] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_DTI]);
    }
    return contents;
};
const de_DeletionTaskFailureReasonType = (output, context)=>{
    const contents = {};
    if (output[_Re] != null) {
        contents[_Re] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_Re]);
    }
    if (output.RoleUsageList === "") {
        contents[_RUL] = [];
    } else if (output[_RUL] != null && output[_RUL][_me] != null) {
        contents[_RUL] = de_RoleUsageListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_RUL][_me]), context);
    }
    return contents;
};
const de_DisableOrganizationsRootCredentialsManagementResponse = (output, context)=>{
    const contents = {};
    if (output[_OI] != null) {
        contents[_OI] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_OI]);
    }
    if (output.EnabledFeatures === "") {
        contents[_EFn] = [];
    } else if (output[_EFn] != null && output[_EFn][_me] != null) {
        contents[_EFn] = de_FeaturesListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_EFn][_me]), context);
    }
    return contents;
};
const de_DisableOrganizationsRootSessionsResponse = (output, context)=>{
    const contents = {};
    if (output[_OI] != null) {
        contents[_OI] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_OI]);
    }
    if (output.EnabledFeatures === "") {
        contents[_EFn] = [];
    } else if (output[_EFn] != null && output[_EFn][_me] != null) {
        contents[_EFn] = de_FeaturesListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_EFn][_me]), context);
    }
    return contents;
};
const de_DuplicateCertificateException = (output, context)=>{
    const contents = {};
    if (output[_m] != null) {
        contents[_m] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_m]);
    }
    return contents;
};
const de_DuplicateSSHPublicKeyException = (output, context)=>{
    const contents = {};
    if (output[_m] != null) {
        contents[_m] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_m]);
    }
    return contents;
};
const de_EnableOrganizationsRootCredentialsManagementResponse = (output, context)=>{
    const contents = {};
    if (output[_OI] != null) {
        contents[_OI] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_OI]);
    }
    if (output.EnabledFeatures === "") {
        contents[_EFn] = [];
    } else if (output[_EFn] != null && output[_EFn][_me] != null) {
        contents[_EFn] = de_FeaturesListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_EFn][_me]), context);
    }
    return contents;
};
const de_EnableOrganizationsRootSessionsResponse = (output, context)=>{
    const contents = {};
    if (output[_OI] != null) {
        contents[_OI] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_OI]);
    }
    if (output.EnabledFeatures === "") {
        contents[_EFn] = [];
    } else if (output[_EFn] != null && output[_EFn][_me] != null) {
        contents[_EFn] = de_FeaturesListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_EFn][_me]), context);
    }
    return contents;
};
const de_EntityAlreadyExistsException = (output, context)=>{
    const contents = {};
    if (output[_m] != null) {
        contents[_m] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_m]);
    }
    return contents;
};
const de_EntityDetails = (output, context)=>{
    const contents = {};
    if (output[_EI] != null) {
        contents[_EI] = de_EntityInfo(output[_EI], context);
    }
    if (output[_LA] != null) {
        contents[_LA] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_LA]));
    }
    return contents;
};
const de_entityDetailsListType = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return de_EntityDetails(entry, context);
    });
};
const de_EntityInfo = (output, context)=>{
    const contents = {};
    if (output[_Ar] != null) {
        contents[_Ar] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_Ar]);
    }
    if (output[_N] != null) {
        contents[_N] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_N]);
    }
    if (output[_Ty] != null) {
        contents[_Ty] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_Ty]);
    }
    if (output[_I] != null) {
        contents[_I] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_I]);
    }
    if (output[_P] != null) {
        contents[_P] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_P]);
    }
    return contents;
};
const de_EntityTemporarilyUnmodifiableException = (output, context)=>{
    const contents = {};
    if (output[_m] != null) {
        contents[_m] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_m]);
    }
    return contents;
};
const de_ErrorDetails = (output, context)=>{
    const contents = {};
    if (output[_Me] != null) {
        contents[_Me] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_Me]);
    }
    if (output[_C] != null) {
        contents[_C] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_C]);
    }
    return contents;
};
const de_EvalDecisionDetailsType = (output, context)=>{
    return output.reduce((acc, pair)=>{
        if (pair["value"] === null) {
            return acc;
        }
        acc[pair["key"]] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(pair["value"]);
        return acc;
    }, {});
};
const de_EvaluationResult = (output, context)=>{
    const contents = {};
    if (output[_EAN] != null) {
        contents[_EAN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_EAN]);
    }
    if (output[_ERN] != null) {
        contents[_ERN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_ERN]);
    }
    if (output[_ED] != null) {
        contents[_ED] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_ED]);
    }
    if (output.MatchedStatements === "") {
        contents[_MS] = [];
    } else if (output[_MS] != null && output[_MS][_me] != null) {
        contents[_MS] = de_StatementListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_MS][_me]), context);
    }
    if (output.MissingContextValues === "") {
        contents[_MCV] = [];
    } else if (output[_MCV] != null && output[_MCV][_me] != null) {
        contents[_MCV] = de_ContextKeyNamesResultListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_MCV][_me]), context);
    }
    if (output[_ODD] != null) {
        contents[_ODD] = de_OrganizationsDecisionDetail(output[_ODD], context);
    }
    if (output[_PBDD] != null) {
        contents[_PBDD] = de_PermissionsBoundaryDecisionDetail(output[_PBDD], context);
    }
    if (output.EvalDecisionDetails === "") {
        contents[_EDD] = {};
    } else if (output[_EDD] != null && output[_EDD][_e] != null) {
        contents[_EDD] = de_EvalDecisionDetailsType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_EDD][_e]), context);
    }
    if (output.ResourceSpecificResults === "") {
        contents[_RSR] = [];
    } else if (output[_RSR] != null && output[_RSR][_me] != null) {
        contents[_RSR] = de_ResourceSpecificResultListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_RSR][_me]), context);
    }
    return contents;
};
const de_EvaluationResultsListType = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return de_EvaluationResult(entry, context);
    });
};
const de_FeaturesListType = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(entry);
    });
};
const de_GenerateCredentialReportResponse = (output, context)=>{
    const contents = {};
    if (output[_Sta] != null) {
        contents[_Sta] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_Sta]);
    }
    if (output[_D] != null) {
        contents[_D] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_D]);
    }
    return contents;
};
const de_GenerateOrganizationsAccessReportResponse = (output, context)=>{
    const contents = {};
    if (output[_JI] != null) {
        contents[_JI] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_JI]);
    }
    return contents;
};
const de_GenerateServiceLastAccessedDetailsResponse = (output, context)=>{
    const contents = {};
    if (output[_JI] != null) {
        contents[_JI] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_JI]);
    }
    return contents;
};
const de_GetAccessKeyLastUsedResponse = (output, context)=>{
    const contents = {};
    if (output[_UN] != null) {
        contents[_UN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_UN]);
    }
    if (output[_AKLU] != null) {
        contents[_AKLU] = de_AccessKeyLastUsed(output[_AKLU], context);
    }
    return contents;
};
const de_GetAccountAuthorizationDetailsResponse = (output, context)=>{
    const contents = {};
    if (output.UserDetailList === "") {
        contents[_UDL] = [];
    } else if (output[_UDL] != null && output[_UDL][_me] != null) {
        contents[_UDL] = de_userDetailListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_UDL][_me]), context);
    }
    if (output.GroupDetailList === "") {
        contents[_GDL] = [];
    } else if (output[_GDL] != null && output[_GDL][_me] != null) {
        contents[_GDL] = de_groupDetailListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_GDL][_me]), context);
    }
    if (output.RoleDetailList === "") {
        contents[_RDL] = [];
    } else if (output[_RDL] != null && output[_RDL][_me] != null) {
        contents[_RDL] = de_roleDetailListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_RDL][_me]), context);
    }
    if (output.Policies === "") {
        contents[_Pol] = [];
    } else if (output[_Pol] != null && output[_Pol][_me] != null) {
        contents[_Pol] = de_ManagedPolicyDetailListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_Pol][_me]), context);
    }
    if (output[_IT] != null) {
        contents[_IT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_IT]);
    }
    if (output[_M] != null) {
        contents[_M] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_M]);
    }
    return contents;
};
const de_GetAccountPasswordPolicyResponse = (output, context)=>{
    const contents = {};
    if (output[_PPa] != null) {
        contents[_PPa] = de_PasswordPolicy(output[_PPa], context);
    }
    return contents;
};
const de_GetAccountSummaryResponse = (output, context)=>{
    const contents = {};
    if (output.SummaryMap === "") {
        contents[_SM] = {};
    } else if (output[_SM] != null && output[_SM][_e] != null) {
        contents[_SM] = de_summaryMapType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_SM][_e]), context);
    }
    return contents;
};
const de_GetContextKeysForPolicyResponse = (output, context)=>{
    const contents = {};
    if (output.ContextKeyNames === "") {
        contents[_CKNo] = [];
    } else if (output[_CKNo] != null && output[_CKNo][_me] != null) {
        contents[_CKNo] = de_ContextKeyNamesResultListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_CKNo][_me]), context);
    }
    return contents;
};
const de_GetCredentialReportResponse = (output, context)=>{
    const contents = {};
    if (output[_Co] != null) {
        contents[_Co] = context.base64Decoder(output[_Co]);
    }
    if (output[_RF] != null) {
        contents[_RF] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_RF]);
    }
    if (output[_GT] != null) {
        contents[_GT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_GT]));
    }
    return contents;
};
const de_GetGroupPolicyResponse = (output, context)=>{
    const contents = {};
    if (output[_GN] != null) {
        contents[_GN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_GN]);
    }
    if (output[_PN] != null) {
        contents[_PN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_PN]);
    }
    if (output[_PD] != null) {
        contents[_PD] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_PD]);
    }
    return contents;
};
const de_GetGroupResponse = (output, context)=>{
    const contents = {};
    if (output[_Gr] != null) {
        contents[_Gr] = de_Group(output[_Gr], context);
    }
    if (output.Users === "") {
        contents[_Use] = [];
    } else if (output[_Use] != null && output[_Use][_me] != null) {
        contents[_Use] = de_userListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_Use][_me]), context);
    }
    if (output[_IT] != null) {
        contents[_IT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_IT]);
    }
    if (output[_M] != null) {
        contents[_M] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_M]);
    }
    return contents;
};
const de_GetInstanceProfileResponse = (output, context)=>{
    const contents = {};
    if (output[_IP] != null) {
        contents[_IP] = de_InstanceProfile(output[_IP], context);
    }
    return contents;
};
const de_GetLoginProfileResponse = (output, context)=>{
    const contents = {};
    if (output[_LPo] != null) {
        contents[_LPo] = de_LoginProfile(output[_LPo], context);
    }
    return contents;
};
const de_GetMFADeviceResponse = (output, context)=>{
    const contents = {};
    if (output[_UN] != null) {
        contents[_UN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_UN]);
    }
    if (output[_SNe] != null) {
        contents[_SNe] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_SNe]);
    }
    if (output[_EDn] != null) {
        contents[_EDn] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_EDn]));
    }
    if (output.Certifications === "") {
        contents[_Ce] = {};
    } else if (output[_Ce] != null && output[_Ce][_e] != null) {
        contents[_Ce] = de_CertificationMapType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_Ce][_e]), context);
    }
    return contents;
};
const de_GetOpenIDConnectProviderResponse = (output, context)=>{
    const contents = {};
    if (output[_U] != null) {
        contents[_U] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_U]);
    }
    if (output.ClientIDList === "") {
        contents[_CIDL] = [];
    } else if (output[_CIDL] != null && output[_CIDL][_me] != null) {
        contents[_CIDL] = de_clientIDListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_CIDL][_me]), context);
    }
    if (output.ThumbprintList === "") {
        contents[_TL] = [];
    } else if (output[_TL] != null && output[_TL][_me] != null) {
        contents[_TL] = de_thumbprintListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_TL][_me]), context);
    }
    if (output[_CD] != null) {
        contents[_CD] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_CD]));
    }
    if (output.Tags === "") {
        contents[_T] = [];
    } else if (output[_T] != null && output[_T][_me] != null) {
        contents[_T] = de_tagListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_T][_me]), context);
    }
    return contents;
};
const de_GetOrganizationsAccessReportResponse = (output, context)=>{
    const contents = {};
    if (output[_JS] != null) {
        contents[_JS] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_JS]);
    }
    if (output[_JCD] != null) {
        contents[_JCD] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_JCD]));
    }
    if (output[_JCDo] != null) {
        contents[_JCDo] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_JCDo]));
    }
    if (output[_NOSA] != null) {
        contents[_NOSA] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["strictParseInt32"])(output[_NOSA]);
    }
    if (output[_NOSNA] != null) {
        contents[_NOSNA] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["strictParseInt32"])(output[_NOSNA]);
    }
    if (output.AccessDetails === "") {
        contents[_AD] = [];
    } else if (output[_AD] != null && output[_AD][_me] != null) {
        contents[_AD] = de_AccessDetails((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_AD][_me]), context);
    }
    if (output[_IT] != null) {
        contents[_IT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_IT]);
    }
    if (output[_M] != null) {
        contents[_M] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_M]);
    }
    if (output[_EDr] != null) {
        contents[_EDr] = de_ErrorDetails(output[_EDr], context);
    }
    return contents;
};
const de_GetPolicyResponse = (output, context)=>{
    const contents = {};
    if (output[_Po] != null) {
        contents[_Po] = de_Policy(output[_Po], context);
    }
    return contents;
};
const de_GetPolicyVersionResponse = (output, context)=>{
    const contents = {};
    if (output[_PV] != null) {
        contents[_PV] = de_PolicyVersion(output[_PV], context);
    }
    return contents;
};
const de_GetRolePolicyResponse = (output, context)=>{
    const contents = {};
    if (output[_RN] != null) {
        contents[_RN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_RN]);
    }
    if (output[_PN] != null) {
        contents[_PN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_PN]);
    }
    if (output[_PD] != null) {
        contents[_PD] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_PD]);
    }
    return contents;
};
const de_GetRoleResponse = (output, context)=>{
    const contents = {};
    if (output[_Ro] != null) {
        contents[_Ro] = de_Role(output[_Ro], context);
    }
    return contents;
};
const de_GetSAMLProviderResponse = (output, context)=>{
    const contents = {};
    if (output[_SAMLPUUID] != null) {
        contents[_SAMLPUUID] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_SAMLPUUID]);
    }
    if (output[_SAMLMD] != null) {
        contents[_SAMLMD] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_SAMLMD]);
    }
    if (output[_CD] != null) {
        contents[_CD] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_CD]));
    }
    if (output[_VU] != null) {
        contents[_VU] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_VU]));
    }
    if (output.Tags === "") {
        contents[_T] = [];
    } else if (output[_T] != null && output[_T][_me] != null) {
        contents[_T] = de_tagListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_T][_me]), context);
    }
    if (output[_AEM] != null) {
        contents[_AEM] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_AEM]);
    }
    if (output.PrivateKeyList === "") {
        contents[_PKL] = [];
    } else if (output[_PKL] != null && output[_PKL][_me] != null) {
        contents[_PKL] = de_privateKeyList((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_PKL][_me]), context);
    }
    return contents;
};
const de_GetServerCertificateResponse = (output, context)=>{
    const contents = {};
    if (output[_SC] != null) {
        contents[_SC] = de_ServerCertificate(output[_SC], context);
    }
    return contents;
};
const de_GetServiceLastAccessedDetailsResponse = (output, context)=>{
    const contents = {};
    if (output[_JS] != null) {
        contents[_JS] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_JS]);
    }
    if (output[_JT] != null) {
        contents[_JT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_JT]);
    }
    if (output[_JCD] != null) {
        contents[_JCD] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_JCD]));
    }
    if (output.ServicesLastAccessed === "") {
        contents[_SLA] = [];
    } else if (output[_SLA] != null && output[_SLA][_me] != null) {
        contents[_SLA] = de_ServicesLastAccessed((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_SLA][_me]), context);
    }
    if (output[_JCDo] != null) {
        contents[_JCDo] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_JCDo]));
    }
    if (output[_IT] != null) {
        contents[_IT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_IT]);
    }
    if (output[_M] != null) {
        contents[_M] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_M]);
    }
    if (output[_Er] != null) {
        contents[_Er] = de_ErrorDetails(output[_Er], context);
    }
    return contents;
};
const de_GetServiceLastAccessedDetailsWithEntitiesResponse = (output, context)=>{
    const contents = {};
    if (output[_JS] != null) {
        contents[_JS] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_JS]);
    }
    if (output[_JCD] != null) {
        contents[_JCD] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_JCD]));
    }
    if (output[_JCDo] != null) {
        contents[_JCDo] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_JCDo]));
    }
    if (output.EntityDetailsList === "") {
        contents[_EDL] = [];
    } else if (output[_EDL] != null && output[_EDL][_me] != null) {
        contents[_EDL] = de_entityDetailsListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_EDL][_me]), context);
    }
    if (output[_IT] != null) {
        contents[_IT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_IT]);
    }
    if (output[_M] != null) {
        contents[_M] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_M]);
    }
    if (output[_Er] != null) {
        contents[_Er] = de_ErrorDetails(output[_Er], context);
    }
    return contents;
};
const de_GetServiceLinkedRoleDeletionStatusResponse = (output, context)=>{
    const contents = {};
    if (output[_St] != null) {
        contents[_St] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_St]);
    }
    if (output[_Re] != null) {
        contents[_Re] = de_DeletionTaskFailureReasonType(output[_Re], context);
    }
    return contents;
};
const de_GetSSHPublicKeyResponse = (output, context)=>{
    const contents = {};
    if (output[_SSHPK] != null) {
        contents[_SSHPK] = de_SSHPublicKey(output[_SSHPK], context);
    }
    return contents;
};
const de_GetUserPolicyResponse = (output, context)=>{
    const contents = {};
    if (output[_UN] != null) {
        contents[_UN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_UN]);
    }
    if (output[_PN] != null) {
        contents[_PN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_PN]);
    }
    if (output[_PD] != null) {
        contents[_PD] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_PD]);
    }
    return contents;
};
const de_GetUserResponse = (output, context)=>{
    const contents = {};
    if (output[_Us] != null) {
        contents[_Us] = de_User(output[_Us], context);
    }
    return contents;
};
const de_Group = (output, context)=>{
    const contents = {};
    if (output[_P] != null) {
        contents[_P] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_P]);
    }
    if (output[_GN] != null) {
        contents[_GN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_GN]);
    }
    if (output[_GI] != null) {
        contents[_GI] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_GI]);
    }
    if (output[_Ar] != null) {
        contents[_Ar] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_Ar]);
    }
    if (output[_CD] != null) {
        contents[_CD] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_CD]));
    }
    return contents;
};
const de_GroupDetail = (output, context)=>{
    const contents = {};
    if (output[_P] != null) {
        contents[_P] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_P]);
    }
    if (output[_GN] != null) {
        contents[_GN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_GN]);
    }
    if (output[_GI] != null) {
        contents[_GI] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_GI]);
    }
    if (output[_Ar] != null) {
        contents[_Ar] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_Ar]);
    }
    if (output[_CD] != null) {
        contents[_CD] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_CD]));
    }
    if (output.GroupPolicyList === "") {
        contents[_GPL] = [];
    } else if (output[_GPL] != null && output[_GPL][_me] != null) {
        contents[_GPL] = de_policyDetailListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_GPL][_me]), context);
    }
    if (output.AttachedManagedPolicies === "") {
        contents[_AMP] = [];
    } else if (output[_AMP] != null && output[_AMP][_me] != null) {
        contents[_AMP] = de_attachedPoliciesListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_AMP][_me]), context);
    }
    return contents;
};
const de_groupDetailListType = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return de_GroupDetail(entry, context);
    });
};
const de_groupListType = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return de_Group(entry, context);
    });
};
const de_groupNameListType = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(entry);
    });
};
const de_InstanceProfile = (output, context)=>{
    const contents = {};
    if (output[_P] != null) {
        contents[_P] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_P]);
    }
    if (output[_IPN] != null) {
        contents[_IPN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_IPN]);
    }
    if (output[_IPI] != null) {
        contents[_IPI] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_IPI]);
    }
    if (output[_Ar] != null) {
        contents[_Ar] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_Ar]);
    }
    if (output[_CD] != null) {
        contents[_CD] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_CD]));
    }
    if (output.Roles === "") {
        contents[_Rol] = [];
    } else if (output[_Rol] != null && output[_Rol][_me] != null) {
        contents[_Rol] = de_roleListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_Rol][_me]), context);
    }
    if (output.Tags === "") {
        contents[_T] = [];
    } else if (output[_T] != null && output[_T][_me] != null) {
        contents[_T] = de_tagListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_T][_me]), context);
    }
    return contents;
};
const de_instanceProfileListType = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return de_InstanceProfile(entry, context);
    });
};
const de_InvalidAuthenticationCodeException = (output, context)=>{
    const contents = {};
    if (output[_m] != null) {
        contents[_m] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_m]);
    }
    return contents;
};
const de_InvalidCertificateException = (output, context)=>{
    const contents = {};
    if (output[_m] != null) {
        contents[_m] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_m]);
    }
    return contents;
};
const de_InvalidInputException = (output, context)=>{
    const contents = {};
    if (output[_m] != null) {
        contents[_m] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_m]);
    }
    return contents;
};
const de_InvalidPublicKeyException = (output, context)=>{
    const contents = {};
    if (output[_m] != null) {
        contents[_m] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_m]);
    }
    return contents;
};
const de_InvalidUserTypeException = (output, context)=>{
    const contents = {};
    if (output[_m] != null) {
        contents[_m] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_m]);
    }
    return contents;
};
const de_KeyPairMismatchException = (output, context)=>{
    const contents = {};
    if (output[_m] != null) {
        contents[_m] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_m]);
    }
    return contents;
};
const de_LimitExceededException = (output, context)=>{
    const contents = {};
    if (output[_m] != null) {
        contents[_m] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_m]);
    }
    return contents;
};
const de_ListAccessKeysResponse = (output, context)=>{
    const contents = {};
    if (output.AccessKeyMetadata === "") {
        contents[_AKM] = [];
    } else if (output[_AKM] != null && output[_AKM][_me] != null) {
        contents[_AKM] = de_accessKeyMetadataListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_AKM][_me]), context);
    }
    if (output[_IT] != null) {
        contents[_IT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_IT]);
    }
    if (output[_M] != null) {
        contents[_M] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_M]);
    }
    return contents;
};
const de_ListAccountAliasesResponse = (output, context)=>{
    const contents = {};
    if (output.AccountAliases === "") {
        contents[_AAc] = [];
    } else if (output[_AAc] != null && output[_AAc][_me] != null) {
        contents[_AAc] = de_accountAliasListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_AAc][_me]), context);
    }
    if (output[_IT] != null) {
        contents[_IT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_IT]);
    }
    if (output[_M] != null) {
        contents[_M] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_M]);
    }
    return contents;
};
const de_ListAttachedGroupPoliciesResponse = (output, context)=>{
    const contents = {};
    if (output.AttachedPolicies === "") {
        contents[_AP] = [];
    } else if (output[_AP] != null && output[_AP][_me] != null) {
        contents[_AP] = de_attachedPoliciesListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_AP][_me]), context);
    }
    if (output[_IT] != null) {
        contents[_IT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_IT]);
    }
    if (output[_M] != null) {
        contents[_M] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_M]);
    }
    return contents;
};
const de_ListAttachedRolePoliciesResponse = (output, context)=>{
    const contents = {};
    if (output.AttachedPolicies === "") {
        contents[_AP] = [];
    } else if (output[_AP] != null && output[_AP][_me] != null) {
        contents[_AP] = de_attachedPoliciesListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_AP][_me]), context);
    }
    if (output[_IT] != null) {
        contents[_IT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_IT]);
    }
    if (output[_M] != null) {
        contents[_M] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_M]);
    }
    return contents;
};
const de_ListAttachedUserPoliciesResponse = (output, context)=>{
    const contents = {};
    if (output.AttachedPolicies === "") {
        contents[_AP] = [];
    } else if (output[_AP] != null && output[_AP][_me] != null) {
        contents[_AP] = de_attachedPoliciesListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_AP][_me]), context);
    }
    if (output[_IT] != null) {
        contents[_IT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_IT]);
    }
    if (output[_M] != null) {
        contents[_M] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_M]);
    }
    return contents;
};
const de_ListEntitiesForPolicyResponse = (output, context)=>{
    const contents = {};
    if (output.PolicyGroups === "") {
        contents[_PG] = [];
    } else if (output[_PG] != null && output[_PG][_me] != null) {
        contents[_PG] = de_PolicyGroupListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_PG][_me]), context);
    }
    if (output.PolicyUsers === "") {
        contents[_PU] = [];
    } else if (output[_PU] != null && output[_PU][_me] != null) {
        contents[_PU] = de_PolicyUserListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_PU][_me]), context);
    }
    if (output.PolicyRoles === "") {
        contents[_PR] = [];
    } else if (output[_PR] != null && output[_PR][_me] != null) {
        contents[_PR] = de_PolicyRoleListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_PR][_me]), context);
    }
    if (output[_IT] != null) {
        contents[_IT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_IT]);
    }
    if (output[_M] != null) {
        contents[_M] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_M]);
    }
    return contents;
};
const de_ListGroupPoliciesResponse = (output, context)=>{
    const contents = {};
    if (output.PolicyNames === "") {
        contents[_PNo] = [];
    } else if (output[_PNo] != null && output[_PNo][_me] != null) {
        contents[_PNo] = de_policyNameListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_PNo][_me]), context);
    }
    if (output[_IT] != null) {
        contents[_IT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_IT]);
    }
    if (output[_M] != null) {
        contents[_M] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_M]);
    }
    return contents;
};
const de_ListGroupsForUserResponse = (output, context)=>{
    const contents = {};
    if (output.Groups === "") {
        contents[_Gro] = [];
    } else if (output[_Gro] != null && output[_Gro][_me] != null) {
        contents[_Gro] = de_groupListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_Gro][_me]), context);
    }
    if (output[_IT] != null) {
        contents[_IT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_IT]);
    }
    if (output[_M] != null) {
        contents[_M] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_M]);
    }
    return contents;
};
const de_ListGroupsResponse = (output, context)=>{
    const contents = {};
    if (output.Groups === "") {
        contents[_Gro] = [];
    } else if (output[_Gro] != null && output[_Gro][_me] != null) {
        contents[_Gro] = de_groupListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_Gro][_me]), context);
    }
    if (output[_IT] != null) {
        contents[_IT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_IT]);
    }
    if (output[_M] != null) {
        contents[_M] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_M]);
    }
    return contents;
};
const de_ListInstanceProfilesForRoleResponse = (output, context)=>{
    const contents = {};
    if (output.InstanceProfiles === "") {
        contents[_IPn] = [];
    } else if (output[_IPn] != null && output[_IPn][_me] != null) {
        contents[_IPn] = de_instanceProfileListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_IPn][_me]), context);
    }
    if (output[_IT] != null) {
        contents[_IT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_IT]);
    }
    if (output[_M] != null) {
        contents[_M] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_M]);
    }
    return contents;
};
const de_ListInstanceProfilesResponse = (output, context)=>{
    const contents = {};
    if (output.InstanceProfiles === "") {
        contents[_IPn] = [];
    } else if (output[_IPn] != null && output[_IPn][_me] != null) {
        contents[_IPn] = de_instanceProfileListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_IPn][_me]), context);
    }
    if (output[_IT] != null) {
        contents[_IT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_IT]);
    }
    if (output[_M] != null) {
        contents[_M] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_M]);
    }
    return contents;
};
const de_ListInstanceProfileTagsResponse = (output, context)=>{
    const contents = {};
    if (output.Tags === "") {
        contents[_T] = [];
    } else if (output[_T] != null && output[_T][_me] != null) {
        contents[_T] = de_tagListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_T][_me]), context);
    }
    if (output[_IT] != null) {
        contents[_IT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_IT]);
    }
    if (output[_M] != null) {
        contents[_M] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_M]);
    }
    return contents;
};
const de_ListMFADevicesResponse = (output, context)=>{
    const contents = {};
    if (output.MFADevices === "") {
        contents[_MFAD] = [];
    } else if (output[_MFAD] != null && output[_MFAD][_me] != null) {
        contents[_MFAD] = de_mfaDeviceListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_MFAD][_me]), context);
    }
    if (output[_IT] != null) {
        contents[_IT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_IT]);
    }
    if (output[_M] != null) {
        contents[_M] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_M]);
    }
    return contents;
};
const de_ListMFADeviceTagsResponse = (output, context)=>{
    const contents = {};
    if (output.Tags === "") {
        contents[_T] = [];
    } else if (output[_T] != null && output[_T][_me] != null) {
        contents[_T] = de_tagListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_T][_me]), context);
    }
    if (output[_IT] != null) {
        contents[_IT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_IT]);
    }
    if (output[_M] != null) {
        contents[_M] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_M]);
    }
    return contents;
};
const de_ListOpenIDConnectProvidersResponse = (output, context)=>{
    const contents = {};
    if (output.OpenIDConnectProviderList === "") {
        contents[_OIDCPL] = [];
    } else if (output[_OIDCPL] != null && output[_OIDCPL][_me] != null) {
        contents[_OIDCPL] = de_OpenIDConnectProviderListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_OIDCPL][_me]), context);
    }
    return contents;
};
const de_ListOpenIDConnectProviderTagsResponse = (output, context)=>{
    const contents = {};
    if (output.Tags === "") {
        contents[_T] = [];
    } else if (output[_T] != null && output[_T][_me] != null) {
        contents[_T] = de_tagListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_T][_me]), context);
    }
    if (output[_IT] != null) {
        contents[_IT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_IT]);
    }
    if (output[_M] != null) {
        contents[_M] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_M]);
    }
    return contents;
};
const de_ListOrganizationsFeaturesResponse = (output, context)=>{
    const contents = {};
    if (output[_OI] != null) {
        contents[_OI] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_OI]);
    }
    if (output.EnabledFeatures === "") {
        contents[_EFn] = [];
    } else if (output[_EFn] != null && output[_EFn][_me] != null) {
        contents[_EFn] = de_FeaturesListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_EFn][_me]), context);
    }
    return contents;
};
const de_ListPoliciesGrantingServiceAccessEntry = (output, context)=>{
    const contents = {};
    if (output[_SNer] != null) {
        contents[_SNer] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_SNer]);
    }
    if (output.Policies === "") {
        contents[_Pol] = [];
    } else if (output[_Pol] != null && output[_Pol][_me] != null) {
        contents[_Pol] = de_policyGrantingServiceAccessListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_Pol][_me]), context);
    }
    return contents;
};
const de_ListPoliciesGrantingServiceAccessResponse = (output, context)=>{
    const contents = {};
    if (output.PoliciesGrantingServiceAccess === "") {
        contents[_PGSA] = [];
    } else if (output[_PGSA] != null && output[_PGSA][_me] != null) {
        contents[_PGSA] = de_listPolicyGrantingServiceAccessResponseListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_PGSA][_me]), context);
    }
    if (output[_IT] != null) {
        contents[_IT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_IT]);
    }
    if (output[_M] != null) {
        contents[_M] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_M]);
    }
    return contents;
};
const de_ListPoliciesResponse = (output, context)=>{
    const contents = {};
    if (output.Policies === "") {
        contents[_Pol] = [];
    } else if (output[_Pol] != null && output[_Pol][_me] != null) {
        contents[_Pol] = de_policyListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_Pol][_me]), context);
    }
    if (output[_IT] != null) {
        contents[_IT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_IT]);
    }
    if (output[_M] != null) {
        contents[_M] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_M]);
    }
    return contents;
};
const de_listPolicyGrantingServiceAccessResponseListType = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return de_ListPoliciesGrantingServiceAccessEntry(entry, context);
    });
};
const de_ListPolicyTagsResponse = (output, context)=>{
    const contents = {};
    if (output.Tags === "") {
        contents[_T] = [];
    } else if (output[_T] != null && output[_T][_me] != null) {
        contents[_T] = de_tagListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_T][_me]), context);
    }
    if (output[_IT] != null) {
        contents[_IT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_IT]);
    }
    if (output[_M] != null) {
        contents[_M] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_M]);
    }
    return contents;
};
const de_ListPolicyVersionsResponse = (output, context)=>{
    const contents = {};
    if (output.Versions === "") {
        contents[_Ve] = [];
    } else if (output[_Ve] != null && output[_Ve][_me] != null) {
        contents[_Ve] = de_policyDocumentVersionListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_Ve][_me]), context);
    }
    if (output[_IT] != null) {
        contents[_IT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_IT]);
    }
    if (output[_M] != null) {
        contents[_M] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_M]);
    }
    return contents;
};
const de_ListRolePoliciesResponse = (output, context)=>{
    const contents = {};
    if (output.PolicyNames === "") {
        contents[_PNo] = [];
    } else if (output[_PNo] != null && output[_PNo][_me] != null) {
        contents[_PNo] = de_policyNameListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_PNo][_me]), context);
    }
    if (output[_IT] != null) {
        contents[_IT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_IT]);
    }
    if (output[_M] != null) {
        contents[_M] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_M]);
    }
    return contents;
};
const de_ListRolesResponse = (output, context)=>{
    const contents = {};
    if (output.Roles === "") {
        contents[_Rol] = [];
    } else if (output[_Rol] != null && output[_Rol][_me] != null) {
        contents[_Rol] = de_roleListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_Rol][_me]), context);
    }
    if (output[_IT] != null) {
        contents[_IT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_IT]);
    }
    if (output[_M] != null) {
        contents[_M] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_M]);
    }
    return contents;
};
const de_ListRoleTagsResponse = (output, context)=>{
    const contents = {};
    if (output.Tags === "") {
        contents[_T] = [];
    } else if (output[_T] != null && output[_T][_me] != null) {
        contents[_T] = de_tagListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_T][_me]), context);
    }
    if (output[_IT] != null) {
        contents[_IT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_IT]);
    }
    if (output[_M] != null) {
        contents[_M] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_M]);
    }
    return contents;
};
const de_ListSAMLProvidersResponse = (output, context)=>{
    const contents = {};
    if (output.SAMLProviderList === "") {
        contents[_SAMLPL] = [];
    } else if (output[_SAMLPL] != null && output[_SAMLPL][_me] != null) {
        contents[_SAMLPL] = de_SAMLProviderListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_SAMLPL][_me]), context);
    }
    return contents;
};
const de_ListSAMLProviderTagsResponse = (output, context)=>{
    const contents = {};
    if (output.Tags === "") {
        contents[_T] = [];
    } else if (output[_T] != null && output[_T][_me] != null) {
        contents[_T] = de_tagListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_T][_me]), context);
    }
    if (output[_IT] != null) {
        contents[_IT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_IT]);
    }
    if (output[_M] != null) {
        contents[_M] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_M]);
    }
    return contents;
};
const de_ListServerCertificatesResponse = (output, context)=>{
    const contents = {};
    if (output.ServerCertificateMetadataList === "") {
        contents[_SCML] = [];
    } else if (output[_SCML] != null && output[_SCML][_me] != null) {
        contents[_SCML] = de_serverCertificateMetadataListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_SCML][_me]), context);
    }
    if (output[_IT] != null) {
        contents[_IT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_IT]);
    }
    if (output[_M] != null) {
        contents[_M] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_M]);
    }
    return contents;
};
const de_ListServerCertificateTagsResponse = (output, context)=>{
    const contents = {};
    if (output.Tags === "") {
        contents[_T] = [];
    } else if (output[_T] != null && output[_T][_me] != null) {
        contents[_T] = de_tagListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_T][_me]), context);
    }
    if (output[_IT] != null) {
        contents[_IT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_IT]);
    }
    if (output[_M] != null) {
        contents[_M] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_M]);
    }
    return contents;
};
const de_ListServiceSpecificCredentialsResponse = (output, context)=>{
    const contents = {};
    if (output.ServiceSpecificCredentials === "") {
        contents[_SSCe] = [];
    } else if (output[_SSCe] != null && output[_SSCe][_me] != null) {
        contents[_SSCe] = de_ServiceSpecificCredentialsListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_SSCe][_me]), context);
    }
    return contents;
};
const de_ListSigningCertificatesResponse = (output, context)=>{
    const contents = {};
    if (output.Certificates === "") {
        contents[_Cer] = [];
    } else if (output[_Cer] != null && output[_Cer][_me] != null) {
        contents[_Cer] = de_certificateListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_Cer][_me]), context);
    }
    if (output[_IT] != null) {
        contents[_IT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_IT]);
    }
    if (output[_M] != null) {
        contents[_M] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_M]);
    }
    return contents;
};
const de_ListSSHPublicKeysResponse = (output, context)=>{
    const contents = {};
    if (output.SSHPublicKeys === "") {
        contents[_SSHPKu] = [];
    } else if (output[_SSHPKu] != null && output[_SSHPKu][_me] != null) {
        contents[_SSHPKu] = de_SSHPublicKeyListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_SSHPKu][_me]), context);
    }
    if (output[_IT] != null) {
        contents[_IT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_IT]);
    }
    if (output[_M] != null) {
        contents[_M] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_M]);
    }
    return contents;
};
const de_ListUserPoliciesResponse = (output, context)=>{
    const contents = {};
    if (output.PolicyNames === "") {
        contents[_PNo] = [];
    } else if (output[_PNo] != null && output[_PNo][_me] != null) {
        contents[_PNo] = de_policyNameListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_PNo][_me]), context);
    }
    if (output[_IT] != null) {
        contents[_IT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_IT]);
    }
    if (output[_M] != null) {
        contents[_M] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_M]);
    }
    return contents;
};
const de_ListUsersResponse = (output, context)=>{
    const contents = {};
    if (output.Users === "") {
        contents[_Use] = [];
    } else if (output[_Use] != null && output[_Use][_me] != null) {
        contents[_Use] = de_userListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_Use][_me]), context);
    }
    if (output[_IT] != null) {
        contents[_IT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_IT]);
    }
    if (output[_M] != null) {
        contents[_M] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_M]);
    }
    return contents;
};
const de_ListUserTagsResponse = (output, context)=>{
    const contents = {};
    if (output.Tags === "") {
        contents[_T] = [];
    } else if (output[_T] != null && output[_T][_me] != null) {
        contents[_T] = de_tagListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_T][_me]), context);
    }
    if (output[_IT] != null) {
        contents[_IT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_IT]);
    }
    if (output[_M] != null) {
        contents[_M] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_M]);
    }
    return contents;
};
const de_ListVirtualMFADevicesResponse = (output, context)=>{
    const contents = {};
    if (output.VirtualMFADevices === "") {
        contents[_VMFADi] = [];
    } else if (output[_VMFADi] != null && output[_VMFADi][_me] != null) {
        contents[_VMFADi] = de_virtualMFADeviceListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_VMFADi][_me]), context);
    }
    if (output[_IT] != null) {
        contents[_IT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_IT]);
    }
    if (output[_M] != null) {
        contents[_M] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_M]);
    }
    return contents;
};
const de_LoginProfile = (output, context)=>{
    const contents = {};
    if (output[_UN] != null) {
        contents[_UN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_UN]);
    }
    if (output[_CD] != null) {
        contents[_CD] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_CD]));
    }
    if (output[_PRR] != null) {
        contents[_PRR] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_PRR]);
    }
    return contents;
};
const de_MalformedCertificateException = (output, context)=>{
    const contents = {};
    if (output[_m] != null) {
        contents[_m] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_m]);
    }
    return contents;
};
const de_MalformedPolicyDocumentException = (output, context)=>{
    const contents = {};
    if (output[_m] != null) {
        contents[_m] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_m]);
    }
    return contents;
};
const de_ManagedPolicyDetail = (output, context)=>{
    const contents = {};
    if (output[_PN] != null) {
        contents[_PN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_PN]);
    }
    if (output[_PI] != null) {
        contents[_PI] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_PI]);
    }
    if (output[_Ar] != null) {
        contents[_Ar] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_Ar]);
    }
    if (output[_P] != null) {
        contents[_P] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_P]);
    }
    if (output[_DVI] != null) {
        contents[_DVI] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_DVI]);
    }
    if (output[_ACt] != null) {
        contents[_ACt] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["strictParseInt32"])(output[_ACt]);
    }
    if (output[_PBUC] != null) {
        contents[_PBUC] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["strictParseInt32"])(output[_PBUC]);
    }
    if (output[_IA] != null) {
        contents[_IA] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_IA]);
    }
    if (output[_D] != null) {
        contents[_D] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_D]);
    }
    if (output[_CD] != null) {
        contents[_CD] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_CD]));
    }
    if (output[_UD] != null) {
        contents[_UD] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_UD]));
    }
    if (output.PolicyVersionList === "") {
        contents[_PVL] = [];
    } else if (output[_PVL] != null && output[_PVL][_me] != null) {
        contents[_PVL] = de_policyDocumentVersionListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_PVL][_me]), context);
    }
    return contents;
};
const de_ManagedPolicyDetailListType = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return de_ManagedPolicyDetail(entry, context);
    });
};
const de_MFADevice = (output, context)=>{
    const contents = {};
    if (output[_UN] != null) {
        contents[_UN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_UN]);
    }
    if (output[_SNe] != null) {
        contents[_SNe] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_SNe]);
    }
    if (output[_EDn] != null) {
        contents[_EDn] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_EDn]));
    }
    return contents;
};
const de_mfaDeviceListType = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return de_MFADevice(entry, context);
    });
};
const de_NoSuchEntityException = (output, context)=>{
    const contents = {};
    if (output[_m] != null) {
        contents[_m] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_m]);
    }
    return contents;
};
const de_OpenIDConnectProviderListEntry = (output, context)=>{
    const contents = {};
    if (output[_Ar] != null) {
        contents[_Ar] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_Ar]);
    }
    return contents;
};
const de_OpenIDConnectProviderListType = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return de_OpenIDConnectProviderListEntry(entry, context);
    });
};
const de_OpenIdIdpCommunicationErrorException = (output, context)=>{
    const contents = {};
    if (output[_m] != null) {
        contents[_m] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_m]);
    }
    return contents;
};
const de_OrganizationNotFoundException = (output, context)=>{
    const contents = {};
    if (output[_Me] != null) {
        contents[_Me] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_Me]);
    }
    return contents;
};
const de_OrganizationNotInAllFeaturesModeException = (output, context)=>{
    const contents = {};
    if (output[_Me] != null) {
        contents[_Me] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_Me]);
    }
    return contents;
};
const de_OrganizationsDecisionDetail = (output, context)=>{
    const contents = {};
    if (output[_ABO] != null) {
        contents[_ABO] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_ABO]);
    }
    return contents;
};
const de_PasswordPolicy = (output, context)=>{
    const contents = {};
    if (output[_MPL] != null) {
        contents[_MPL] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["strictParseInt32"])(output[_MPL]);
    }
    if (output[_RS] != null) {
        contents[_RS] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_RS]);
    }
    if (output[_RNe] != null) {
        contents[_RNe] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_RNe]);
    }
    if (output[_RUC] != null) {
        contents[_RUC] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_RUC]);
    }
    if (output[_RLC] != null) {
        contents[_RLC] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_RLC]);
    }
    if (output[_AUTCP] != null) {
        contents[_AUTCP] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_AUTCP]);
    }
    if (output[_EPx] != null) {
        contents[_EPx] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_EPx]);
    }
    if (output[_MPA] != null) {
        contents[_MPA] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["strictParseInt32"])(output[_MPA]);
    }
    if (output[_PRPa] != null) {
        contents[_PRPa] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["strictParseInt32"])(output[_PRPa]);
    }
    if (output[_HE] != null) {
        contents[_HE] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_HE]);
    }
    return contents;
};
const de_PasswordPolicyViolationException = (output, context)=>{
    const contents = {};
    if (output[_m] != null) {
        contents[_m] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_m]);
    }
    return contents;
};
const de_PermissionsBoundaryDecisionDetail = (output, context)=>{
    const contents = {};
    if (output[_ABPB] != null) {
        contents[_ABPB] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_ABPB]);
    }
    return contents;
};
const de_Policy = (output, context)=>{
    const contents = {};
    if (output[_PN] != null) {
        contents[_PN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_PN]);
    }
    if (output[_PI] != null) {
        contents[_PI] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_PI]);
    }
    if (output[_Ar] != null) {
        contents[_Ar] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_Ar]);
    }
    if (output[_P] != null) {
        contents[_P] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_P]);
    }
    if (output[_DVI] != null) {
        contents[_DVI] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_DVI]);
    }
    if (output[_ACt] != null) {
        contents[_ACt] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["strictParseInt32"])(output[_ACt]);
    }
    if (output[_PBUC] != null) {
        contents[_PBUC] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["strictParseInt32"])(output[_PBUC]);
    }
    if (output[_IA] != null) {
        contents[_IA] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_IA]);
    }
    if (output[_D] != null) {
        contents[_D] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_D]);
    }
    if (output[_CD] != null) {
        contents[_CD] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_CD]));
    }
    if (output[_UD] != null) {
        contents[_UD] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_UD]));
    }
    if (output.Tags === "") {
        contents[_T] = [];
    } else if (output[_T] != null && output[_T][_me] != null) {
        contents[_T] = de_tagListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_T][_me]), context);
    }
    return contents;
};
const de_PolicyDetail = (output, context)=>{
    const contents = {};
    if (output[_PN] != null) {
        contents[_PN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_PN]);
    }
    if (output[_PD] != null) {
        contents[_PD] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_PD]);
    }
    return contents;
};
const de_policyDetailListType = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return de_PolicyDetail(entry, context);
    });
};
const de_policyDocumentVersionListType = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return de_PolicyVersion(entry, context);
    });
};
const de_PolicyEvaluationException = (output, context)=>{
    const contents = {};
    if (output[_m] != null) {
        contents[_m] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_m]);
    }
    return contents;
};
const de_PolicyGrantingServiceAccess = (output, context)=>{
    const contents = {};
    if (output[_PN] != null) {
        contents[_PN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_PN]);
    }
    if (output[_PT] != null) {
        contents[_PT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_PT]);
    }
    if (output[_PA] != null) {
        contents[_PA] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_PA]);
    }
    if (output[_ET] != null) {
        contents[_ET] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_ET]);
    }
    if (output[_EN] != null) {
        contents[_EN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_EN]);
    }
    return contents;
};
const de_policyGrantingServiceAccessListType = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return de_PolicyGrantingServiceAccess(entry, context);
    });
};
const de_PolicyGroup = (output, context)=>{
    const contents = {};
    if (output[_GN] != null) {
        contents[_GN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_GN]);
    }
    if (output[_GI] != null) {
        contents[_GI] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_GI]);
    }
    return contents;
};
const de_PolicyGroupListType = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return de_PolicyGroup(entry, context);
    });
};
const de_policyListType = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return de_Policy(entry, context);
    });
};
const de_policyNameListType = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(entry);
    });
};
const de_PolicyNotAttachableException = (output, context)=>{
    const contents = {};
    if (output[_m] != null) {
        contents[_m] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_m]);
    }
    return contents;
};
const de_PolicyRole = (output, context)=>{
    const contents = {};
    if (output[_RN] != null) {
        contents[_RN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_RN]);
    }
    if (output[_RI] != null) {
        contents[_RI] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_RI]);
    }
    return contents;
};
const de_PolicyRoleListType = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return de_PolicyRole(entry, context);
    });
};
const de_PolicyUser = (output, context)=>{
    const contents = {};
    if (output[_UN] != null) {
        contents[_UN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_UN]);
    }
    if (output[_UI] != null) {
        contents[_UI] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_UI]);
    }
    return contents;
};
const de_PolicyUserListType = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return de_PolicyUser(entry, context);
    });
};
const de_PolicyVersion = (output, context)=>{
    const contents = {};
    if (output[_Do] != null) {
        contents[_Do] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_Do]);
    }
    if (output[_VI] != null) {
        contents[_VI] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_VI]);
    }
    if (output[_IDV] != null) {
        contents[_IDV] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_IDV]);
    }
    if (output[_CD] != null) {
        contents[_CD] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_CD]));
    }
    return contents;
};
const de_Position = (output, context)=>{
    const contents = {};
    if (output[_L] != null) {
        contents[_L] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["strictParseInt32"])(output[_L]);
    }
    if (output[_Col] != null) {
        contents[_Col] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["strictParseInt32"])(output[_Col]);
    }
    return contents;
};
const de_privateKeyList = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return de_SAMLPrivateKey(entry, context);
    });
};
const de_ReportGenerationLimitExceededException = (output, context)=>{
    const contents = {};
    if (output[_m] != null) {
        contents[_m] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_m]);
    }
    return contents;
};
const de_ResetServiceSpecificCredentialResponse = (output, context)=>{
    const contents = {};
    if (output[_SSC] != null) {
        contents[_SSC] = de_ServiceSpecificCredential(output[_SSC], context);
    }
    return contents;
};
const de_ResourceSpecificResult = (output, context)=>{
    const contents = {};
    if (output[_ERN] != null) {
        contents[_ERN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_ERN]);
    }
    if (output[_ERD] != null) {
        contents[_ERD] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_ERD]);
    }
    if (output.MatchedStatements === "") {
        contents[_MS] = [];
    } else if (output[_MS] != null && output[_MS][_me] != null) {
        contents[_MS] = de_StatementListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_MS][_me]), context);
    }
    if (output.MissingContextValues === "") {
        contents[_MCV] = [];
    } else if (output[_MCV] != null && output[_MCV][_me] != null) {
        contents[_MCV] = de_ContextKeyNamesResultListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_MCV][_me]), context);
    }
    if (output.EvalDecisionDetails === "") {
        contents[_EDD] = {};
    } else if (output[_EDD] != null && output[_EDD][_e] != null) {
        contents[_EDD] = de_EvalDecisionDetailsType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_EDD][_e]), context);
    }
    if (output[_PBDD] != null) {
        contents[_PBDD] = de_PermissionsBoundaryDecisionDetail(output[_PBDD], context);
    }
    return contents;
};
const de_ResourceSpecificResultListType = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return de_ResourceSpecificResult(entry, context);
    });
};
const de_Role = (output, context)=>{
    const contents = {};
    if (output[_P] != null) {
        contents[_P] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_P]);
    }
    if (output[_RN] != null) {
        contents[_RN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_RN]);
    }
    if (output[_RI] != null) {
        contents[_RI] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_RI]);
    }
    if (output[_Ar] != null) {
        contents[_Ar] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_Ar]);
    }
    if (output[_CD] != null) {
        contents[_CD] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_CD]));
    }
    if (output[_ARPD] != null) {
        contents[_ARPD] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_ARPD]);
    }
    if (output[_D] != null) {
        contents[_D] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_D]);
    }
    if (output[_MSD] != null) {
        contents[_MSD] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["strictParseInt32"])(output[_MSD]);
    }
    if (output[_PB] != null) {
        contents[_PB] = de_AttachedPermissionsBoundary(output[_PB], context);
    }
    if (output.Tags === "") {
        contents[_T] = [];
    } else if (output[_T] != null && output[_T][_me] != null) {
        contents[_T] = de_tagListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_T][_me]), context);
    }
    if (output[_RLU] != null) {
        contents[_RLU] = de_RoleLastUsed(output[_RLU], context);
    }
    return contents;
};
const de_RoleDetail = (output, context)=>{
    const contents = {};
    if (output[_P] != null) {
        contents[_P] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_P]);
    }
    if (output[_RN] != null) {
        contents[_RN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_RN]);
    }
    if (output[_RI] != null) {
        contents[_RI] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_RI]);
    }
    if (output[_Ar] != null) {
        contents[_Ar] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_Ar]);
    }
    if (output[_CD] != null) {
        contents[_CD] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_CD]));
    }
    if (output[_ARPD] != null) {
        contents[_ARPD] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_ARPD]);
    }
    if (output.InstanceProfileList === "") {
        contents[_IPL] = [];
    } else if (output[_IPL] != null && output[_IPL][_me] != null) {
        contents[_IPL] = de_instanceProfileListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_IPL][_me]), context);
    }
    if (output.RolePolicyList === "") {
        contents[_RPL] = [];
    } else if (output[_RPL] != null && output[_RPL][_me] != null) {
        contents[_RPL] = de_policyDetailListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_RPL][_me]), context);
    }
    if (output.AttachedManagedPolicies === "") {
        contents[_AMP] = [];
    } else if (output[_AMP] != null && output[_AMP][_me] != null) {
        contents[_AMP] = de_attachedPoliciesListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_AMP][_me]), context);
    }
    if (output[_PB] != null) {
        contents[_PB] = de_AttachedPermissionsBoundary(output[_PB], context);
    }
    if (output.Tags === "") {
        contents[_T] = [];
    } else if (output[_T] != null && output[_T][_me] != null) {
        contents[_T] = de_tagListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_T][_me]), context);
    }
    if (output[_RLU] != null) {
        contents[_RLU] = de_RoleLastUsed(output[_RLU], context);
    }
    return contents;
};
const de_roleDetailListType = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return de_RoleDetail(entry, context);
    });
};
const de_RoleLastUsed = (output, context)=>{
    const contents = {};
    if (output[_LUD] != null) {
        contents[_LUD] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_LUD]));
    }
    if (output[_R] != null) {
        contents[_R] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_R]);
    }
    return contents;
};
const de_roleListType = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return de_Role(entry, context);
    });
};
const de_RoleUsageListType = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return de_RoleUsageType(entry, context);
    });
};
const de_RoleUsageType = (output, context)=>{
    const contents = {};
    if (output[_R] != null) {
        contents[_R] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_R]);
    }
    if (output.Resources === "") {
        contents[_Res] = [];
    } else if (output[_Res] != null && output[_Res][_me] != null) {
        contents[_Res] = de_ArnListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_Res][_me]), context);
    }
    return contents;
};
const de_SAMLPrivateKey = (output, context)=>{
    const contents = {};
    if (output[_KI] != null) {
        contents[_KI] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_KI]);
    }
    if (output[_Ti] != null) {
        contents[_Ti] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_Ti]));
    }
    return contents;
};
const de_SAMLProviderListEntry = (output, context)=>{
    const contents = {};
    if (output[_Ar] != null) {
        contents[_Ar] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_Ar]);
    }
    if (output[_VU] != null) {
        contents[_VU] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_VU]));
    }
    if (output[_CD] != null) {
        contents[_CD] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_CD]));
    }
    return contents;
};
const de_SAMLProviderListType = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return de_SAMLProviderListEntry(entry, context);
    });
};
const de_ServerCertificate = (output, context)=>{
    const contents = {};
    if (output[_SCM] != null) {
        contents[_SCM] = de_ServerCertificateMetadata(output[_SCM], context);
    }
    if (output[_CB] != null) {
        contents[_CB] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_CB]);
    }
    if (output[_CC] != null) {
        contents[_CC] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_CC]);
    }
    if (output.Tags === "") {
        contents[_T] = [];
    } else if (output[_T] != null && output[_T][_me] != null) {
        contents[_T] = de_tagListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_T][_me]), context);
    }
    return contents;
};
const de_ServerCertificateMetadata = (output, context)=>{
    const contents = {};
    if (output[_P] != null) {
        contents[_P] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_P]);
    }
    if (output[_SCN] != null) {
        contents[_SCN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_SCN]);
    }
    if (output[_SCI] != null) {
        contents[_SCI] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_SCI]);
    }
    if (output[_Ar] != null) {
        contents[_Ar] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_Ar]);
    }
    if (output[_UDp] != null) {
        contents[_UDp] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_UDp]));
    }
    if (output[_Ex] != null) {
        contents[_Ex] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_Ex]));
    }
    return contents;
};
const de_serverCertificateMetadataListType = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return de_ServerCertificateMetadata(entry, context);
    });
};
const de_ServiceAccessNotEnabledException = (output, context)=>{
    const contents = {};
    if (output[_Me] != null) {
        contents[_Me] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_Me]);
    }
    return contents;
};
const de_ServiceFailureException = (output, context)=>{
    const contents = {};
    if (output[_m] != null) {
        contents[_m] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_m]);
    }
    return contents;
};
const de_ServiceLastAccessed = (output, context)=>{
    const contents = {};
    if (output[_SN] != null) {
        contents[_SN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_SN]);
    }
    if (output[_LA] != null) {
        contents[_LA] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_LA]));
    }
    if (output[_SNer] != null) {
        contents[_SNer] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_SNer]);
    }
    if (output[_LAE] != null) {
        contents[_LAE] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_LAE]);
    }
    if (output[_LAR] != null) {
        contents[_LAR] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_LAR]);
    }
    if (output[_TAE] != null) {
        contents[_TAE] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["strictParseInt32"])(output[_TAE]);
    }
    if (output.TrackedActionsLastAccessed === "") {
        contents[_TALA] = [];
    } else if (output[_TALA] != null && output[_TALA][_me] != null) {
        contents[_TALA] = de_TrackedActionsLastAccessed((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_TALA][_me]), context);
    }
    return contents;
};
const de_ServiceNotSupportedException = (output, context)=>{
    const contents = {};
    if (output[_m] != null) {
        contents[_m] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_m]);
    }
    return contents;
};
const de_ServicesLastAccessed = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return de_ServiceLastAccessed(entry, context);
    });
};
const de_ServiceSpecificCredential = (output, context)=>{
    const contents = {};
    if (output[_CD] != null) {
        contents[_CD] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_CD]));
    }
    if (output[_SN] != null) {
        contents[_SN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_SN]);
    }
    if (output[_SUN] != null) {
        contents[_SUN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_SUN]);
    }
    if (output[_SP] != null) {
        contents[_SP] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_SP]);
    }
    if (output[_SSCI] != null) {
        contents[_SSCI] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_SSCI]);
    }
    if (output[_UN] != null) {
        contents[_UN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_UN]);
    }
    if (output[_St] != null) {
        contents[_St] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_St]);
    }
    return contents;
};
const de_ServiceSpecificCredentialMetadata = (output, context)=>{
    const contents = {};
    if (output[_UN] != null) {
        contents[_UN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_UN]);
    }
    if (output[_St] != null) {
        contents[_St] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_St]);
    }
    if (output[_SUN] != null) {
        contents[_SUN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_SUN]);
    }
    if (output[_CD] != null) {
        contents[_CD] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_CD]));
    }
    if (output[_SSCI] != null) {
        contents[_SSCI] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_SSCI]);
    }
    if (output[_SN] != null) {
        contents[_SN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_SN]);
    }
    return contents;
};
const de_ServiceSpecificCredentialsListType = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return de_ServiceSpecificCredentialMetadata(entry, context);
    });
};
const de_SigningCertificate = (output, context)=>{
    const contents = {};
    if (output[_UN] != null) {
        contents[_UN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_UN]);
    }
    if (output[_CI] != null) {
        contents[_CI] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_CI]);
    }
    if (output[_CB] != null) {
        contents[_CB] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_CB]);
    }
    if (output[_St] != null) {
        contents[_St] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_St]);
    }
    if (output[_UDp] != null) {
        contents[_UDp] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_UDp]));
    }
    return contents;
};
const de_SimulatePolicyResponse = (output, context)=>{
    const contents = {};
    if (output.EvaluationResults === "") {
        contents[_ER] = [];
    } else if (output[_ER] != null && output[_ER][_me] != null) {
        contents[_ER] = de_EvaluationResultsListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_ER][_me]), context);
    }
    if (output[_IT] != null) {
        contents[_IT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBoolean"])(output[_IT]);
    }
    if (output[_M] != null) {
        contents[_M] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_M]);
    }
    return contents;
};
const de_SSHPublicKey = (output, context)=>{
    const contents = {};
    if (output[_UN] != null) {
        contents[_UN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_UN]);
    }
    if (output[_SSHPKI] != null) {
        contents[_SSHPKI] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_SSHPKI]);
    }
    if (output[_Fi] != null) {
        contents[_Fi] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_Fi]);
    }
    if (output[_SSHPKB] != null) {
        contents[_SSHPKB] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_SSHPKB]);
    }
    if (output[_St] != null) {
        contents[_St] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_St]);
    }
    if (output[_UDp] != null) {
        contents[_UDp] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_UDp]));
    }
    return contents;
};
const de_SSHPublicKeyListType = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return de_SSHPublicKeyMetadata(entry, context);
    });
};
const de_SSHPublicKeyMetadata = (output, context)=>{
    const contents = {};
    if (output[_UN] != null) {
        contents[_UN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_UN]);
    }
    if (output[_SSHPKI] != null) {
        contents[_SSHPKI] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_SSHPKI]);
    }
    if (output[_St] != null) {
        contents[_St] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_St]);
    }
    if (output[_UDp] != null) {
        contents[_UDp] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_UDp]));
    }
    return contents;
};
const de_Statement = (output, context)=>{
    const contents = {};
    if (output[_SPI] != null) {
        contents[_SPI] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_SPI]);
    }
    if (output[_SPT] != null) {
        contents[_SPT] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_SPT]);
    }
    if (output[_SPt] != null) {
        contents[_SPt] = de_Position(output[_SPt], context);
    }
    if (output[_EPn] != null) {
        contents[_EPn] = de_Position(output[_EPn], context);
    }
    return contents;
};
const de_StatementListType = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return de_Statement(entry, context);
    });
};
const de_summaryMapType = (output, context)=>{
    return output.reduce((acc, pair)=>{
        if (pair["value"] === null) {
            return acc;
        }
        acc[pair["key"]] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["strictParseInt32"])(pair["value"]);
        return acc;
    }, {});
};
const de_Tag = (output, context)=>{
    const contents = {};
    if (output[_K] != null) {
        contents[_K] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_K]);
    }
    if (output[_Va] != null) {
        contents[_Va] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_Va]);
    }
    return contents;
};
const de_tagListType = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return de_Tag(entry, context);
    });
};
const de_thumbprintListType = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(entry);
    });
};
const de_TrackedActionLastAccessed = (output, context)=>{
    const contents = {};
    if (output[_ANc] != null) {
        contents[_ANc] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_ANc]);
    }
    if (output[_LAEa] != null) {
        contents[_LAEa] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_LAEa]);
    }
    if (output[_LATa] != null) {
        contents[_LATa] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_LATa]));
    }
    if (output[_LARa] != null) {
        contents[_LARa] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_LARa]);
    }
    return contents;
};
const de_TrackedActionsLastAccessed = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return de_TrackedActionLastAccessed(entry, context);
    });
};
const de_UnmodifiableEntityException = (output, context)=>{
    const contents = {};
    if (output[_m] != null) {
        contents[_m] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_m]);
    }
    return contents;
};
const de_UnrecognizedPublicKeyEncodingException = (output, context)=>{
    const contents = {};
    if (output[_m] != null) {
        contents[_m] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_m]);
    }
    return contents;
};
const de_UpdateRoleDescriptionResponse = (output, context)=>{
    const contents = {};
    if (output[_Ro] != null) {
        contents[_Ro] = de_Role(output[_Ro], context);
    }
    return contents;
};
const de_UpdateRoleResponse = (output, context)=>{
    const contents = {};
    return contents;
};
const de_UpdateSAMLProviderResponse = (output, context)=>{
    const contents = {};
    if (output[_SAMLPA] != null) {
        contents[_SAMLPA] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_SAMLPA]);
    }
    return contents;
};
const de_UploadServerCertificateResponse = (output, context)=>{
    const contents = {};
    if (output[_SCM] != null) {
        contents[_SCM] = de_ServerCertificateMetadata(output[_SCM], context);
    }
    if (output.Tags === "") {
        contents[_T] = [];
    } else if (output[_T] != null && output[_T][_me] != null) {
        contents[_T] = de_tagListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_T][_me]), context);
    }
    return contents;
};
const de_UploadSigningCertificateResponse = (output, context)=>{
    const contents = {};
    if (output[_Cert] != null) {
        contents[_Cert] = de_SigningCertificate(output[_Cert], context);
    }
    return contents;
};
const de_UploadSSHPublicKeyResponse = (output, context)=>{
    const contents = {};
    if (output[_SSHPK] != null) {
        contents[_SSHPK] = de_SSHPublicKey(output[_SSHPK], context);
    }
    return contents;
};
const de_User = (output, context)=>{
    const contents = {};
    if (output[_P] != null) {
        contents[_P] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_P]);
    }
    if (output[_UN] != null) {
        contents[_UN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_UN]);
    }
    if (output[_UI] != null) {
        contents[_UI] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_UI]);
    }
    if (output[_Ar] != null) {
        contents[_Ar] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_Ar]);
    }
    if (output[_CD] != null) {
        contents[_CD] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_CD]));
    }
    if (output[_PLU] != null) {
        contents[_PLU] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_PLU]));
    }
    if (output[_PB] != null) {
        contents[_PB] = de_AttachedPermissionsBoundary(output[_PB], context);
    }
    if (output.Tags === "") {
        contents[_T] = [];
    } else if (output[_T] != null && output[_T][_me] != null) {
        contents[_T] = de_tagListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_T][_me]), context);
    }
    return contents;
};
const de_UserDetail = (output, context)=>{
    const contents = {};
    if (output[_P] != null) {
        contents[_P] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_P]);
    }
    if (output[_UN] != null) {
        contents[_UN] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_UN]);
    }
    if (output[_UI] != null) {
        contents[_UI] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_UI]);
    }
    if (output[_Ar] != null) {
        contents[_Ar] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_Ar]);
    }
    if (output[_CD] != null) {
        contents[_CD] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_CD]));
    }
    if (output.UserPolicyList === "") {
        contents[_UPL] = [];
    } else if (output[_UPL] != null && output[_UPL][_me] != null) {
        contents[_UPL] = de_policyDetailListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_UPL][_me]), context);
    }
    if (output.GroupList === "") {
        contents[_GL] = [];
    } else if (output[_GL] != null && output[_GL][_me] != null) {
        contents[_GL] = de_groupNameListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_GL][_me]), context);
    }
    if (output.AttachedManagedPolicies === "") {
        contents[_AMP] = [];
    } else if (output[_AMP] != null && output[_AMP][_me] != null) {
        contents[_AMP] = de_attachedPoliciesListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_AMP][_me]), context);
    }
    if (output[_PB] != null) {
        contents[_PB] = de_AttachedPermissionsBoundary(output[_PB], context);
    }
    if (output.Tags === "") {
        contents[_T] = [];
    } else if (output[_T] != null && output[_T][_me] != null) {
        contents[_T] = de_tagListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_T][_me]), context);
    }
    return contents;
};
const de_userDetailListType = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return de_UserDetail(entry, context);
    });
};
const de_userListType = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return de_User(entry, context);
    });
};
const de_VirtualMFADevice = (output, context)=>{
    const contents = {};
    if (output[_SNe] != null) {
        contents[_SNe] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectString"])(output[_SNe]);
    }
    if (output[_BSS] != null) {
        contents[_BSS] = context.base64Decoder(output[_BSS]);
    }
    if (output[_QRCPNG] != null) {
        contents[_QRCPNG] = context.base64Decoder(output[_QRCPNG]);
    }
    if (output[_Us] != null) {
        contents[_Us] = de_User(output[_Us], context);
    }
    if (output[_EDn] != null) {
        contents[_EDn] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$parse$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["expectNonNull"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$date$2d$utils$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseRfc3339DateTimeWithOffset"])(output[_EDn]));
    }
    if (output.Tags === "") {
        contents[_T] = [];
    } else if (output[_T] != null && output[_T][_me] != null) {
        contents[_T] = de_tagListType((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$get$2d$array$2d$if$2d$single$2d$item$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getArrayIfSingleItem"])(output[_T][_me]), context);
    }
    return contents;
};
const de_virtualMFADeviceListType = (output, context)=>{
    return (output || []).filter((e)=>e != null).map((entry)=>{
        return de_VirtualMFADevice(entry, context);
    });
};
const deserializeMetadata = (output)=>({
        httpStatusCode: output.statusCode,
        requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
        extendedRequestId: output.headers["x-amz-id-2"],
        cfId: output.headers["x-amz-cf-id"]
    });
const collectBodyString = (streamBody, context)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$collect$2d$stream$2d$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["collectBody"])(streamBody, context).then((body)=>context.utf8Encoder(body));
const throwDefaultError = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$default$2d$error$2d$handler$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["withBaseException"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$models$2f$IAMServiceException$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__["IAMServiceException"]);
const buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body)=>{
    const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
    const contents = {
        protocol,
        hostname,
        port,
        method: "POST",
        path: basePath.endsWith("/") ? basePath.slice(0, -1) + path : basePath + path,
        headers
    };
    if (resolvedHostname !== undefined) {
        contents.hostname = resolvedHostname;
    }
    if (body !== undefined) {
        contents.body = body;
    }
    return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$protocol$2d$http$2f$dist$2d$es$2f$httpRequest$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["HttpRequest"](contents);
};
const SHARED_HEADERS = {
    "content-type": "application/x-www-form-urlencoded"
};
const _ = "2010-05-08";
const _A = "Action";
const _AA = "AccountAlias";
const _AAc = "AccountAliases";
const _ABO = "AllowedByOrganizations";
const _ABPB = "AllowedByPermissionsBoundary";
const _AC = "AuthenticationCode1";
const _ACIDTOIDCP = "AddClientIDToOpenIDConnectProvider";
const _ACt = "AttachmentCount";
const _ACu = "AuthenticationCode2";
const _AD = "AccessDetails";
const _AEM = "AssertionEncryptionMode";
const _AGP = "AttachGroupPolicy";
const _AK = "AccessKey";
const _AKI = "AccessKeyId";
const _AKLU = "AccessKeyLastUsed";
const _AKM = "AccessKeyMetadata";
const _AMP = "AttachedManagedPolicies";
const _AN = "ActionNames";
const _ANc = "ActionName";
const _AP = "AttachedPolicies";
const _APK = "AddPrivateKey";
const _ARP = "AttachRolePolicy";
const _ARPD = "AssumeRolePolicyDocument";
const _ARTIP = "AddRoleToInstanceProfile";
const _AS = "AssignmentStatus";
const _AUP = "AttachUserPolicy";
const _AUTCP = "AllowUsersToChangePassword";
const _AUTG = "AddUserToGroup";
const _AWSSN = "AWSServiceName";
const _Ar = "Arn";
const _BSS = "Base32StringSeed";
const _C = "Code";
const _CA = "CallerArn";
const _CAA = "CreateAccountAlias";
const _CAK = "CreateAccessKey";
const _CB = "CertificateBody";
const _CC = "CertificateChain";
const _CD = "CreateDate";
const _CE = "ContextEntries";
const _CG = "CreateGroup";
const _CI = "CertificateId";
const _CID = "ClientID";
const _CIDL = "ClientIDList";
const _CIP = "CreateInstanceProfile";
const _CKN = "ContextKeyName";
const _CKNo = "ContextKeyNames";
const _CKT = "ContextKeyType";
const _CKV = "ContextKeyValues";
const _CLP = "CreateLoginProfile";
const _COIDCP = "CreateOpenIDConnectProvider";
const _CP = "ChangePassword";
const _CPV = "CreatePolicyVersion";
const _CPr = "CreatePolicy";
const _CR = "CreateRole";
const _CS = "CustomSuffix";
const _CSAMLP = "CreateSAMLProvider";
const _CSLR = "CreateServiceLinkedRole";
const _CSSC = "CreateServiceSpecificCredential";
const _CU = "CreateUser";
const _CVMFAD = "CreateVirtualMFADevice";
const _Ce = "Certifications";
const _Cer = "Certificates";
const _Cert = "Certificate";
const _Co = "Content";
const _Col = "Column";
const _D = "Description";
const _DAA = "DeleteAccountAlias";
const _DAK = "DeleteAccessKey";
const _DAPP = "DeleteAccountPasswordPolicy";
const _DG = "DeleteGroup";
const _DGP = "DeleteGroupPolicy";
const _DGPe = "DetachGroupPolicy";
const _DIP = "DeleteInstanceProfile";
const _DLP = "DeleteLoginProfile";
const _DMFAD = "DeactivateMFADevice";
const _DOIDCP = "DeleteOpenIDConnectProvider";
const _DORCM = "DisableOrganizationsRootCredentialsManagement";
const _DORS = "DisableOrganizationsRootSessions";
const _DP = "DeletePolicy";
const _DPV = "DeletePolicyVersion";
const _DR = "DeleteRole";
const _DRP = "DeleteRolePolicy";
const _DRPB = "DeleteRolePermissionsBoundary";
const _DRPe = "DetachRolePolicy";
const _DSAMLP = "DeleteSAMLProvider";
const _DSC = "DeleteServerCertificate";
const _DSCe = "DeleteSigningCertificate";
const _DSLR = "DeleteServiceLinkedRole";
const _DSSC = "DeleteServiceSpecificCredential";
const _DSSHPK = "DeleteSSHPublicKey";
const _DTI = "DeletionTaskId";
const _DU = "DeleteUser";
const _DUP = "DeleteUserPolicy";
const _DUPB = "DeleteUserPermissionsBoundary";
const _DUPe = "DetachUserPolicy";
const _DVI = "DefaultVersionId";
const _DVMFAD = "DeleteVirtualMFADevice";
const _Do = "Document";
const _E = "Encoding";
const _EAN = "EvalActionName";
const _ED = "EvalDecision";
const _EDD = "EvalDecisionDetails";
const _EDL = "EntityDetailsList";
const _EDn = "EnableDate";
const _EDr = "ErrorDetails";
const _EF = "EntityFilter";
const _EFn = "EnabledFeatures";
const _EI = "EntityInfo";
const _EMFAD = "EnableMFADevice";
const _EN = "EntityName";
const _EORCM = "EnableOrganizationsRootCredentialsManagement";
const _EORS = "EnableOrganizationsRootSessions";
const _EP = "EntityPath";
const _EPn = "EndPosition";
const _EPx = "ExpirePasswords";
const _ER = "EvaluationResults";
const _ERD = "EvalResourceDecision";
const _ERN = "EvalResourceName";
const _ET = "EntityType";
const _Er = "Error";
const _Ex = "Expiration";
const _F = "Filter";
const _Fi = "Fingerprint";
const _G = "Granularity";
const _GAAD = "GetAccountAuthorizationDetails";
const _GAKLU = "GetAccessKeyLastUsed";
const _GAPP = "GetAccountPasswordPolicy";
const _GAS = "GetAccountSummary";
const _GCKFCP = "GetContextKeysForCustomPolicy";
const _GCKFPP = "GetContextKeysForPrincipalPolicy";
const _GCR = "GenerateCredentialReport";
const _GCRe = "GetCredentialReport";
const _GDL = "GroupDetailList";
const _GETV = "GlobalEndpointTokenVersion";
const _GG = "GetGroup";
const _GGP = "GetGroupPolicy";
const _GI = "GroupId";
const _GIP = "GetInstanceProfile";
const _GL = "GroupList";
const _GLP = "GetLoginProfile";
const _GMFAD = "GetMFADevice";
const _GN = "GroupName";
const _GOAR = "GenerateOrganizationsAccessReport";
const _GOARe = "GetOrganizationsAccessReport";
const _GOIDCP = "GetOpenIDConnectProvider";
const _GP = "GetPolicy";
const _GPL = "GroupPolicyList";
const _GPV = "GetPolicyVersion";
const _GR = "GetRole";
const _GRP = "GetRolePolicy";
const _GSAMLP = "GetSAMLProvider";
const _GSC = "GetServerCertificate";
const _GSLAD = "GenerateServiceLastAccessedDetails";
const _GSLADWE = "GetServiceLastAccessedDetailsWithEntities";
const _GSLADe = "GetServiceLastAccessedDetails";
const _GSLRDS = "GetServiceLinkedRoleDeletionStatus";
const _GSSHPK = "GetSSHPublicKey";
const _GT = "GeneratedTime";
const _GU = "GetUser";
const _GUP = "GetUserPolicy";
const _Gr = "Group";
const _Gro = "Groups";
const _HE = "HardExpiry";
const _I = "Id";
const _IA = "IsAttachable";
const _IDV = "IsDefaultVersion";
const _IP = "InstanceProfile";
const _IPI = "InstanceProfileId";
const _IPL = "InstanceProfileList";
const _IPN = "InstanceProfileName";
const _IPn = "InstanceProfiles";
const _IT = "IsTruncated";
const _JCD = "JobCreationDate";
const _JCDo = "JobCompletionDate";
const _JI = "JobId";
const _JS = "JobStatus";
const _JT = "JobType";
const _K = "Key";
const _KI = "KeyId";
const _L = "Line";
const _LA = "LastAuthenticated";
const _LAA = "ListAccountAliases";
const _LAE = "LastAuthenticatedEntity";
const _LAEa = "LastAccessedEntity";
const _LAGP = "ListAttachedGroupPolicies";
const _LAK = "ListAccessKeys";
const _LAR = "LastAuthenticatedRegion";
const _LARP = "ListAttachedRolePolicies";
const _LARa = "LastAccessedRegion";
const _LAT = "LastAuthenticatedTime";
const _LATa = "LastAccessedTime";
const _LAUP = "ListAttachedUserPolicies";
const _LEFP = "ListEntitiesForPolicy";
const _LG = "ListGroups";
const _LGFU = "ListGroupsForUser";
const _LGP = "ListGroupPolicies";
const _LIP = "ListInstanceProfiles";
const _LIPFR = "ListInstanceProfilesForRole";
const _LIPT = "ListInstanceProfileTags";
const _LMFAD = "ListMFADevices";
const _LMFADT = "ListMFADeviceTags";
const _LOF = "ListOrganizationsFeatures";
const _LOIDCP = "ListOpenIDConnectProviders";
const _LOIDCPT = "ListOpenIDConnectProviderTags";
const _LP = "ListPolicies";
const _LPGSA = "ListPoliciesGrantingServiceAccess";
const _LPT = "ListPolicyTags";
const _LPV = "ListPolicyVersions";
const _LPo = "LoginProfile";
const _LR = "ListRoles";
const _LRP = "ListRolePolicies";
const _LRT = "ListRoleTags";
const _LSAMLP = "ListSAMLProviders";
const _LSAMLPT = "ListSAMLProviderTags";
const _LSC = "ListServerCertificates";
const _LSCT = "ListServerCertificateTags";
const _LSCi = "ListSigningCertificates";
const _LSSC = "ListServiceSpecificCredentials";
const _LSSHPK = "ListSSHPublicKeys";
const _LU = "ListUsers";
const _LUD = "LastUsedDate";
const _LUP = "ListUserPolicies";
const _LUT = "ListUserTags";
const _LVMFAD = "ListVirtualMFADevices";
const _M = "Marker";
const _MCV = "MissingContextValues";
const _MFAD = "MFADevices";
const _MI = "MaxItems";
const _MPA = "MaxPasswordAge";
const _MPL = "MinimumPasswordLength";
const _MS = "MatchedStatements";
const _MSD = "MaxSessionDuration";
const _Me = "Message";
const _N = "Name";
const _NGN = "NewGroupName";
const _NOSA = "NumberOfServicesAccessible";
const _NOSNA = "NumberOfServicesNotAccessed";
const _NP = "NewPassword";
const _NPe = "NewPath";
const _NSCN = "NewServerCertificateName";
const _NUN = "NewUserName";
const _OA = "OnlyAttached";
const _ODD = "OrganizationsDecisionDetail";
const _OI = "OrganizationId";
const _OIDCPA = "OpenIDConnectProviderArn";
const _OIDCPL = "OpenIDConnectProviderList";
const _OP = "OldPassword";
const _OPI = "OrganizationsPolicyId";
const _P = "Path";
const _PA = "PolicyArn";
const _PB = "PermissionsBoundary";
const _PBA = "PermissionsBoundaryArn";
const _PBDD = "PermissionsBoundaryDecisionDetail";
const _PBPIL = "PermissionsBoundaryPolicyInputList";
const _PBT = "PermissionsBoundaryType";
const _PBUC = "PermissionsBoundaryUsageCount";
const _PD = "PolicyDocument";
const _PG = "PolicyGroups";
const _PGP = "PutGroupPolicy";
const _PGSA = "PoliciesGrantingServiceAccess";
const _PI = "PolicyId";
const _PIL = "PolicyInputList";
const _PK = "PrivateKey";
const _PKL = "PrivateKeyList";
const _PLU = "PasswordLastUsed";
const _PN = "PolicyName";
const _PNo = "PolicyNames";
const _PP = "PathPrefix";
const _PPa = "PasswordPolicy";
const _PR = "PolicyRoles";
const _PRP = "PutRolePolicy";
const _PRPB = "PutRolePermissionsBoundary";
const _PRPa = "PasswordReusePrevention";
const _PRR = "PasswordResetRequired";
const _PSA = "PolicySourceArn";
const _PT = "PolicyType";
const _PU = "PolicyUsers";
const _PUF = "PolicyUsageFilter";
const _PUP = "PutUserPolicy";
const _PUPB = "PutUserPermissionsBoundary";
const _PV = "PolicyVersion";
const _PVL = "PolicyVersionList";
const _Pa = "Password";
const _Po = "Policy";
const _Pol = "Policies";
const _QRCPNG = "QRCodePNG";
const _R = "Region";
const _RA = "ResourceArns";
const _RCIDFOIDCP = "RemoveClientIDFromOpenIDConnectProvider";
const _RDL = "RoleDetailList";
const _RF = "ReportFormat";
const _RHO = "ResourceHandlingOption";
const _RI = "RoleId";
const _RLC = "RequireLowercaseCharacters";
const _RLU = "RoleLastUsed";
const _RMFAD = "ResyncMFADevice";
const _RN = "RoleName";
const _RNe = "RequireNumbers";
const _RO = "ResourceOwner";
const _RP = "ResourcePolicy";
const _RPK = "RemovePrivateKey";
const _RPL = "RolePolicyList";
const _RRFIP = "RemoveRoleFromInstanceProfile";
const _RS = "RequireSymbols";
const _RSR = "ResourceSpecificResults";
const _RSSC = "ResetServiceSpecificCredential";
const _RUC = "RequireUppercaseCharacters";
const _RUFG = "RemoveUserFromGroup";
const _RUL = "RoleUsageList";
const _Re = "Reason";
const _Res = "Resources";
const _Ro = "Role";
const _Rol = "Roles";
const _S = "Scope";
const _SAD = "SetAsDefault";
const _SAK = "SecretAccessKey";
const _SAMLMD = "SAMLMetadataDocument";
const _SAMLPA = "SAMLProviderArn";
const _SAMLPL = "SAMLProviderList";
const _SAMLPUUID = "SAMLProviderUUID";
const _SC = "ServerCertificate";
const _SCI = "ServerCertificateId";
const _SCM = "ServerCertificateMetadata";
const _SCML = "ServerCertificateMetadataList";
const _SCN = "ServerCertificateName";
const _SCP = "SimulateCustomPolicy";
const _SDPV = "SetDefaultPolicyVersion";
const _SK = "SortKey";
const _SLA = "ServicesLastAccessed";
const _SM = "SummaryMap";
const _SN = "ServiceName";
const _SNe = "SerialNumber";
const _SNer = "ServiceNamespace";
const _SNerv = "ServiceNamespaces";
const _SP = "ServicePassword";
const _SPI = "SourcePolicyId";
const _SPP = "SimulatePrincipalPolicy";
const _SPT = "SourcePolicyType";
const _SPt = "StartPosition";
const _SSC = "ServiceSpecificCredential";
const _SSCI = "ServiceSpecificCredentialId";
const _SSCe = "ServiceSpecificCredentials";
const _SSHPK = "SSHPublicKey";
const _SSHPKB = "SSHPublicKeyBody";
const _SSHPKI = "SSHPublicKeyId";
const _SSHPKu = "SSHPublicKeys";
const _SSTSP = "SetSecurityTokenServicePreferences";
const _SUN = "ServiceUserName";
const _St = "Status";
const _Sta = "State";
const _T = "Tags";
const _TAE = "TotalAuthenticatedEntities";
const _TALA = "TrackedActionsLastAccessed";
const _TIP = "TagInstanceProfile";
const _TK = "TagKeys";
const _TL = "ThumbprintList";
const _TMFAD = "TagMFADevice";
const _TOIDCP = "TagOpenIDConnectProvider";
const _TP = "TagPolicy";
const _TR = "TagRole";
const _TSAMLP = "TagSAMLProvider";
const _TSC = "TagServerCertificate";
const _TU = "TagUser";
const _Ti = "Timestamp";
const _Ty = "Type";
const _U = "Url";
const _UAK = "UpdateAccessKey";
const _UAPP = "UpdateAccountPasswordPolicy";
const _UARP = "UpdateAssumeRolePolicy";
const _UD = "UpdateDate";
const _UDL = "UserDetailList";
const _UDp = "UploadDate";
const _UG = "UpdateGroup";
const _UI = "UserId";
const _UIP = "UntagInstanceProfile";
const _ULP = "UpdateLoginProfile";
const _UMFAD = "UntagMFADevice";
const _UN = "UserName";
const _UOIDCP = "UntagOpenIDConnectProvider";
const _UOIDCPT = "UpdateOpenIDConnectProviderThumbprint";
const _UP = "UntagPolicy";
const _UPL = "UserPolicyList";
const _UR = "UntagRole";
const _URD = "UpdateRoleDescription";
const _URp = "UpdateRole";
const _USAMLP = "UntagSAMLProvider";
const _USAMLPp = "UpdateSAMLProvider";
const _USC = "UntagServerCertificate";
const _USCp = "UpdateServerCertificate";
const _USCpd = "UpdateSigningCertificate";
const _USCpl = "UploadServerCertificate";
const _USCplo = "UploadSigningCertificate";
const _USSC = "UpdateServiceSpecificCredential";
const _USSHPK = "UpdateSSHPublicKey";
const _USSHPKp = "UploadSSHPublicKey";
const _UU = "UntagUser";
const _UUp = "UpdateUser";
const _Us = "User";
const _Use = "Users";
const _V = "Version";
const _VI = "VersionId";
const _VMFAD = "VirtualMFADevice";
const _VMFADN = "VirtualMFADeviceName";
const _VMFADi = "VirtualMFADevices";
const _VU = "ValidUntil";
const _Va = "Value";
const _Ve = "Versions";
const _e = "entry";
const _m = "message";
const _me = "member";
const buildFormUrlencodedString = (formEntries)=>Object.entries(formEntries).map(([key, value])=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$extended$2d$encode$2d$uri$2d$component$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["extendedEncodeURIComponent"])(key) + "=" + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$core$2f$dist$2d$es$2f$submodules$2f$protocols$2f$extended$2d$encode$2d$uri$2d$component$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["extendedEncodeURIComponent"])(value)).join("&");
const loadQueryErrorCode = (output, data)=>{
    if (data.Error?.Code !== undefined) {
        return data.Error.Code;
    }
    if (output.statusCode == 404) {
        return "NotFound";
    }
};
}}),
"[project]/node_modules/@aws-sdk/client-iam/dist-es/commands/ListUsersCommand.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "ListUsersCommand": (()=>ListUsersCommand)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$endpoint$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/middleware-endpoint/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$endpoint$2f$dist$2d$es$2f$getEndpointPlugin$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/middleware-endpoint/dist-es/getEndpointPlugin.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$serde$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/middleware-serde/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$serde$2f$dist$2d$es$2f$serdePlugin$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/middleware-serde/dist-es/serdePlugin.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/smithy-client/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$command$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/smithy-client/dist-es/command.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$endpoint$2f$EndpointParameters$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/client-iam/dist-es/endpoint/EndpointParameters.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$protocols$2f$Aws_query$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/client-iam/dist-es/protocols/Aws_query.js [app-route] (ecmascript)");
;
;
;
;
;
;
class ListUsersCommand extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$command$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Command"].classBuilder().ep(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$endpoint$2f$EndpointParameters$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["commonParams"]).m(function(Command, cs, config, o) {
    return [
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$serde$2f$dist$2d$es$2f$serdePlugin$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getSerdePlugin"])(config, this.serialize, this.deserialize),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$endpoint$2f$dist$2d$es$2f$getEndpointPlugin$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getEndpointPlugin"])(config, Command.getEndpointParameterInstructions())
    ];
}).s("AWSIdentityManagementV20100508", "ListUsers", {}).n("IAMClient", "ListUsersCommand").f(void 0, void 0).ser(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$protocols$2f$Aws_query$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["se_ListUsersCommand"]).de(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$protocols$2f$Aws_query$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["de_ListUsersCommand"]).build() {
}
}}),
"[project]/node_modules/@aws-sdk/client-iam/dist-es/commands/GetUserCommand.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "GetUserCommand": (()=>GetUserCommand)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$endpoint$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/middleware-endpoint/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$endpoint$2f$dist$2d$es$2f$getEndpointPlugin$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/middleware-endpoint/dist-es/getEndpointPlugin.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$serde$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/middleware-serde/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$serde$2f$dist$2d$es$2f$serdePlugin$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/middleware-serde/dist-es/serdePlugin.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/smithy-client/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$command$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/smithy-client/dist-es/command.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$endpoint$2f$EndpointParameters$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/client-iam/dist-es/endpoint/EndpointParameters.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$protocols$2f$Aws_query$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/client-iam/dist-es/protocols/Aws_query.js [app-route] (ecmascript)");
;
;
;
;
;
;
class GetUserCommand extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$command$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Command"].classBuilder().ep(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$endpoint$2f$EndpointParameters$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["commonParams"]).m(function(Command, cs, config, o) {
    return [
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$serde$2f$dist$2d$es$2f$serdePlugin$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getSerdePlugin"])(config, this.serialize, this.deserialize),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$endpoint$2f$dist$2d$es$2f$getEndpointPlugin$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getEndpointPlugin"])(config, Command.getEndpointParameterInstructions())
    ];
}).s("AWSIdentityManagementV20100508", "GetUser", {}).n("IAMClient", "GetUserCommand").f(void 0, void 0).ser(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$protocols$2f$Aws_query$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["se_GetUserCommand"]).de(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$protocols$2f$Aws_query$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["de_GetUserCommand"]).build() {
}
}}),
"[project]/node_modules/@aws-sdk/client-iam/dist-es/commands/ListAccessKeysCommand.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "ListAccessKeysCommand": (()=>ListAccessKeysCommand)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$endpoint$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/middleware-endpoint/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$endpoint$2f$dist$2d$es$2f$getEndpointPlugin$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/middleware-endpoint/dist-es/getEndpointPlugin.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$serde$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/middleware-serde/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$serde$2f$dist$2d$es$2f$serdePlugin$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/middleware-serde/dist-es/serdePlugin.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/smithy-client/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$command$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/smithy-client/dist-es/command.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$endpoint$2f$EndpointParameters$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/client-iam/dist-es/endpoint/EndpointParameters.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$protocols$2f$Aws_query$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/client-iam/dist-es/protocols/Aws_query.js [app-route] (ecmascript)");
;
;
;
;
;
;
class ListAccessKeysCommand extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$command$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Command"].classBuilder().ep(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$endpoint$2f$EndpointParameters$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["commonParams"]).m(function(Command, cs, config, o) {
    return [
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$serde$2f$dist$2d$es$2f$serdePlugin$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getSerdePlugin"])(config, this.serialize, this.deserialize),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$endpoint$2f$dist$2d$es$2f$getEndpointPlugin$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getEndpointPlugin"])(config, Command.getEndpointParameterInstructions())
    ];
}).s("AWSIdentityManagementV20100508", "ListAccessKeys", {}).n("IAMClient", "ListAccessKeysCommand").f(void 0, void 0).ser(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$protocols$2f$Aws_query$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["se_ListAccessKeysCommand"]).de(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$protocols$2f$Aws_query$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["de_ListAccessKeysCommand"]).build() {
}
}}),
"[project]/node_modules/@aws-sdk/client-iam/dist-es/commands/GetAccessKeyLastUsedCommand.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "GetAccessKeyLastUsedCommand": (()=>GetAccessKeyLastUsedCommand)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$endpoint$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/middleware-endpoint/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$endpoint$2f$dist$2d$es$2f$getEndpointPlugin$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/middleware-endpoint/dist-es/getEndpointPlugin.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$serde$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/middleware-serde/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$serde$2f$dist$2d$es$2f$serdePlugin$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/middleware-serde/dist-es/serdePlugin.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/smithy-client/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$command$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/smithy-client/dist-es/command.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$endpoint$2f$EndpointParameters$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/client-iam/dist-es/endpoint/EndpointParameters.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$protocols$2f$Aws_query$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/client-iam/dist-es/protocols/Aws_query.js [app-route] (ecmascript)");
;
;
;
;
;
;
class GetAccessKeyLastUsedCommand extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$command$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Command"].classBuilder().ep(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$endpoint$2f$EndpointParameters$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["commonParams"]).m(function(Command, cs, config, o) {
    return [
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$serde$2f$dist$2d$es$2f$serdePlugin$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getSerdePlugin"])(config, this.serialize, this.deserialize),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$endpoint$2f$dist$2d$es$2f$getEndpointPlugin$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getEndpointPlugin"])(config, Command.getEndpointParameterInstructions())
    ];
}).s("AWSIdentityManagementV20100508", "GetAccessKeyLastUsed", {}).n("IAMClient", "GetAccessKeyLastUsedCommand").f(void 0, void 0).ser(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$protocols$2f$Aws_query$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["se_GetAccessKeyLastUsedCommand"]).de(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$protocols$2f$Aws_query$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["de_GetAccessKeyLastUsedCommand"]).build() {
}
}}),
"[project]/node_modules/@aws-sdk/client-iam/dist-es/commands/ListGroupsForUserCommand.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "ListGroupsForUserCommand": (()=>ListGroupsForUserCommand)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$endpoint$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/middleware-endpoint/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$endpoint$2f$dist$2d$es$2f$getEndpointPlugin$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/middleware-endpoint/dist-es/getEndpointPlugin.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$serde$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/middleware-serde/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$serde$2f$dist$2d$es$2f$serdePlugin$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/middleware-serde/dist-es/serdePlugin.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/smithy-client/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$command$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/smithy-client/dist-es/command.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$endpoint$2f$EndpointParameters$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/client-iam/dist-es/endpoint/EndpointParameters.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$protocols$2f$Aws_query$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/client-iam/dist-es/protocols/Aws_query.js [app-route] (ecmascript)");
;
;
;
;
;
;
class ListGroupsForUserCommand extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$command$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Command"].classBuilder().ep(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$endpoint$2f$EndpointParameters$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["commonParams"]).m(function(Command, cs, config, o) {
    return [
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$serde$2f$dist$2d$es$2f$serdePlugin$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getSerdePlugin"])(config, this.serialize, this.deserialize),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$endpoint$2f$dist$2d$es$2f$getEndpointPlugin$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getEndpointPlugin"])(config, Command.getEndpointParameterInstructions())
    ];
}).s("AWSIdentityManagementV20100508", "ListGroupsForUser", {}).n("IAMClient", "ListGroupsForUserCommand").f(void 0, void 0).ser(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$protocols$2f$Aws_query$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["se_ListGroupsForUserCommand"]).de(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$protocols$2f$Aws_query$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["de_ListGroupsForUserCommand"]).build() {
}
}}),
"[project]/node_modules/@aws-sdk/client-iam/dist-es/commands/ListAttachedUserPoliciesCommand.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "ListAttachedUserPoliciesCommand": (()=>ListAttachedUserPoliciesCommand)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$endpoint$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/middleware-endpoint/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$endpoint$2f$dist$2d$es$2f$getEndpointPlugin$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/middleware-endpoint/dist-es/getEndpointPlugin.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$serde$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/middleware-serde/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$serde$2f$dist$2d$es$2f$serdePlugin$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/middleware-serde/dist-es/serdePlugin.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/smithy-client/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$command$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/smithy-client/dist-es/command.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$endpoint$2f$EndpointParameters$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/client-iam/dist-es/endpoint/EndpointParameters.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$protocols$2f$Aws_query$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/client-iam/dist-es/protocols/Aws_query.js [app-route] (ecmascript)");
;
;
;
;
;
;
class ListAttachedUserPoliciesCommand extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$command$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Command"].classBuilder().ep(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$endpoint$2f$EndpointParameters$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["commonParams"]).m(function(Command, cs, config, o) {
    return [
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$serde$2f$dist$2d$es$2f$serdePlugin$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getSerdePlugin"])(config, this.serialize, this.deserialize),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$endpoint$2f$dist$2d$es$2f$getEndpointPlugin$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getEndpointPlugin"])(config, Command.getEndpointParameterInstructions())
    ];
}).s("AWSIdentityManagementV20100508", "ListAttachedUserPolicies", {}).n("IAMClient", "ListAttachedUserPoliciesCommand").f(void 0, void 0).ser(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$protocols$2f$Aws_query$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["se_ListAttachedUserPoliciesCommand"]).de(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$protocols$2f$Aws_query$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["de_ListAttachedUserPoliciesCommand"]).build() {
}
}}),
"[project]/node_modules/@aws-sdk/client-iam/dist-es/commands/ListAttachedGroupPoliciesCommand.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "ListAttachedGroupPoliciesCommand": (()=>ListAttachedGroupPoliciesCommand)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$endpoint$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/middleware-endpoint/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$endpoint$2f$dist$2d$es$2f$getEndpointPlugin$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/middleware-endpoint/dist-es/getEndpointPlugin.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$serde$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/middleware-serde/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$serde$2f$dist$2d$es$2f$serdePlugin$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/middleware-serde/dist-es/serdePlugin.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@smithy/smithy-client/dist-es/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$command$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@smithy/smithy-client/dist-es/command.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$endpoint$2f$EndpointParameters$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/client-iam/dist-es/endpoint/EndpointParameters.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$protocols$2f$Aws_query$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@aws-sdk/client-iam/dist-es/protocols/Aws_query.js [app-route] (ecmascript)");
;
;
;
;
;
;
class ListAttachedGroupPoliciesCommand extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$smithy$2d$client$2f$dist$2d$es$2f$command$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Command"].classBuilder().ep(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$endpoint$2f$EndpointParameters$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["commonParams"]).m(function(Command, cs, config, o) {
    return [
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$serde$2f$dist$2d$es$2f$serdePlugin$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getSerdePlugin"])(config, this.serialize, this.deserialize),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$smithy$2f$middleware$2d$endpoint$2f$dist$2d$es$2f$getEndpointPlugin$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getEndpointPlugin"])(config, Command.getEndpointParameterInstructions())
    ];
}).s("AWSIdentityManagementV20100508", "ListAttachedGroupPolicies", {}).n("IAMClient", "ListAttachedGroupPoliciesCommand").f(void 0, void 0).ser(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$protocols$2f$Aws_query$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["se_ListAttachedGroupPoliciesCommand"]).de(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$aws$2d$sdk$2f$client$2d$iam$2f$dist$2d$es$2f$protocols$2f$Aws_query$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["de_ListAttachedGroupPoliciesCommand"]).build() {
}
}}),

};

//# sourceMappingURL=node_modules_%40aws-sdk_client-iam_ce81f452._.js.map