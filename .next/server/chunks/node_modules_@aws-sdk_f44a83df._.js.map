{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/client-secrets-manager/node_modules/uuid/dist/esm-node/native.js"],"sourcesContent":["import crypto from 'crypto';\nexport default {\n  randomUUID: crypto.randomUUID\n};"],"names":[],"mappings":";;;AAAA;;uCACe;IACb,YAAY,qGAAA,CAAA,UAAM,CAAC,UAAU;AAC/B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/client-secrets-manager/node_modules/uuid/dist/esm-node/rng.js"],"sourcesContent":["import crypto from 'crypto';\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,YAAY,IAAI,WAAW,MAAM,qCAAqC;AAE5E,IAAI,UAAU,UAAU,MAAM;AACf,SAAS;IACtB,IAAI,UAAU,UAAU,MAAM,GAAG,IAAI;QACnC,qGAAA,CAAA,UAAM,CAAC,cAAc,CAAC;QACtB,UAAU;IACZ;IAEA,OAAO,UAAU,KAAK,CAAC,SAAS,WAAW;AAC7C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/client-secrets-manager/node_modules/uuid/dist/esm-node/regex.js"],"sourcesContent":["export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;"],"names":[],"mappings":";;;uCAAe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/client-secrets-manager/node_modules/uuid/dist/esm-node/validate.js"],"sourcesContent":["import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;"],"names":[],"mappings":";;;AAAA;;AAEA,SAAS,SAAS,IAAI;IACpB,OAAO,OAAO,SAAS,YAAY,sNAAA,CAAA,UAAK,CAAC,IAAI,CAAC;AAChD;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/client-secrets-manager/node_modules/uuid/dist/esm-node/stringify.js"],"sourcesContent":["import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;"],"names":[],"mappings":";;;;AAAA;;AACA;;;CAGC,GAED,MAAM,YAAY,EAAE;AAEpB,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,EAAE,EAAG;IAC5B,UAAU,IAAI,CAAC,CAAC,IAAI,KAAK,EAAE,QAAQ,CAAC,IAAI,KAAK,CAAC;AAChD;AAEO,SAAS,gBAAgB,GAAG,EAAE,SAAS,CAAC;IAC7C,uEAAuE;IACvE,oFAAoF;IACpF,OAAO,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,MAAM,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,MAAM,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,MAAM,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,MAAM,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC;AACpf;AAEA,SAAS,UAAU,GAAG,EAAE,SAAS,CAAC;IAChC,MAAM,OAAO,gBAAgB,KAAK,SAAS,4EAA4E;IACvH,oBAAoB;IACpB,wEAAwE;IACxE,2BAA2B;IAC3B,mEAAmE;IAEnE,IAAI,CAAC,CAAA,GAAA,yNAAA,CAAA,UAAQ,AAAD,EAAE,OAAO;QACnB,MAAM,UAAU;IAClB;IAEA,OAAO;AACT;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/client-secrets-manager/node_modules/uuid/dist/esm-node/v4.js"],"sourcesContent":["import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEA,SAAS,GAAG,OAAO,EAAE,GAAG,EAAE,MAAM;IAC9B,IAAI,uNAAA,CAAA,UAAM,CAAC,UAAU,IAAI,CAAC,OAAO,CAAC,SAAS;QACzC,OAAO,uNAAA,CAAA,UAAM,CAAC,UAAU;IAC1B;IAEA,UAAU,WAAW,CAAC;IACtB,MAAM,OAAO,QAAQ,MAAM,IAAI,CAAC,QAAQ,GAAG,IAAI,oNAAA,CAAA,UAAG,KAAK,gEAAgE;IAEvH,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,OAAO;IAC3B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,OAAO,MAAM,oCAAoC;IAErE,IAAI,KAAK;QACP,SAAS,UAAU;QAEnB,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,EAAG;YAC3B,GAAG,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,EAAE;QAC3B;QAEA,OAAO;IACT;IAEA,OAAO,CAAA,GAAA,0NAAA,CAAA,kBAAe,AAAD,EAAE;AACzB;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/middleware-host-header/dist-es/index.js"],"sourcesContent":["import { HttpRequest } from \"@smithy/protocol-http\";\nexport function resolveHostHeaderConfig(input) {\n    return input;\n}\nexport const hostHeaderMiddleware = (options) => (next) => async (args) => {\n    if (!HttpRequest.isInstance(args.request))\n        return next(args);\n    const { request } = args;\n    const { handlerProtocol = \"\" } = options.requestHandler.metadata || {};\n    if (handlerProtocol.indexOf(\"h2\") >= 0 && !request.headers[\":authority\"]) {\n        delete request.headers[\"host\"];\n        request.headers[\":authority\"] = request.hostname + (request.port ? \":\" + request.port : \"\");\n    }\n    else if (!request.headers[\"host\"]) {\n        let host = request.hostname;\n        if (request.port != null)\n            host += `:${request.port}`;\n        request.headers[\"host\"] = host;\n    }\n    return next(args);\n};\nexport const hostHeaderMiddlewareOptions = {\n    name: \"hostHeaderMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"HOST\"],\n    override: true,\n};\nexport const getHostHeaderPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(hostHeaderMiddleware(options), hostHeaderMiddlewareOptions);\n    },\n});\n"],"names":[],"mappings":";;;;;;AAAA;AAAA;;AACO,SAAS,wBAAwB,KAAK;IACzC,OAAO;AACX;AACO,MAAM,uBAAuB,CAAC,UAAY,CAAC,OAAS,OAAO;YAC9D,IAAI,CAAC,2KAAA,CAAA,cAAW,CAAC,UAAU,CAAC,KAAK,OAAO,GACpC,OAAO,KAAK;YAChB,MAAM,EAAE,OAAO,EAAE,GAAG;YACpB,MAAM,EAAE,kBAAkB,EAAE,EAAE,GAAG,QAAQ,cAAc,CAAC,QAAQ,IAAI,CAAC;YACrE,IAAI,gBAAgB,OAAO,CAAC,SAAS,KAAK,CAAC,QAAQ,OAAO,CAAC,aAAa,EAAE;gBACtE,OAAO,QAAQ,OAAO,CAAC,OAAO;gBAC9B,QAAQ,OAAO,CAAC,aAAa,GAAG,QAAQ,QAAQ,GAAG,CAAC,QAAQ,IAAI,GAAG,MAAM,QAAQ,IAAI,GAAG,EAAE;YAC9F,OACK,IAAI,CAAC,QAAQ,OAAO,CAAC,OAAO,EAAE;gBAC/B,IAAI,OAAO,QAAQ,QAAQ;gBAC3B,IAAI,QAAQ,IAAI,IAAI,MAChB,QAAQ,CAAC,CAAC,EAAE,QAAQ,IAAI,EAAE;gBAC9B,QAAQ,OAAO,CAAC,OAAO,GAAG;YAC9B;YACA,OAAO,KAAK;QAChB;AACO,MAAM,8BAA8B;IACvC,MAAM;IACN,MAAM;IACN,UAAU;IACV,MAAM;QAAC;KAAO;IACd,UAAU;AACd;AACO,MAAM,sBAAsB,CAAC,UAAY,CAAC;QAC7C,cAAc,CAAC;YACX,YAAY,GAAG,CAAC,qBAAqB,UAAU;QACnD;IACJ,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/middleware-logger/dist-es/loggerMiddleware.js"],"sourcesContent":["export const loggerMiddleware = () => (next, context) => async (args) => {\n    try {\n        const response = await next(args);\n        const { clientName, commandName, logger, dynamoDbDocumentClientOptions = {} } = context;\n        const { overrideInputFilterSensitiveLog, overrideOutputFilterSensitiveLog } = dynamoDbDocumentClientOptions;\n        const inputFilterSensitiveLog = overrideInputFilterSensitiveLog ?? context.inputFilterSensitiveLog;\n        const outputFilterSensitiveLog = overrideOutputFilterSensitiveLog ?? context.outputFilterSensitiveLog;\n        const { $metadata, ...outputWithoutMetadata } = response.output;\n        logger?.info?.({\n            clientName,\n            commandName,\n            input: inputFilterSensitiveLog(args.input),\n            output: outputFilterSensitiveLog(outputWithoutMetadata),\n            metadata: $metadata,\n        });\n        return response;\n    }\n    catch (error) {\n        const { clientName, commandName, logger, dynamoDbDocumentClientOptions = {} } = context;\n        const { overrideInputFilterSensitiveLog } = dynamoDbDocumentClientOptions;\n        const inputFilterSensitiveLog = overrideInputFilterSensitiveLog ?? context.inputFilterSensitiveLog;\n        logger?.error?.({\n            clientName,\n            commandName,\n            input: inputFilterSensitiveLog(args.input),\n            error,\n            metadata: error.$metadata,\n        });\n        throw error;\n    }\n};\nexport const loggerMiddlewareOptions = {\n    name: \"loggerMiddleware\",\n    tags: [\"LOGGER\"],\n    step: \"initialize\",\n    override: true,\n};\nexport const getLoggerPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(loggerMiddleware(), loggerMiddlewareOptions);\n    },\n});\n"],"names":[],"mappings":";;;;;AAAO,MAAM,mBAAmB,IAAM,CAAC,MAAM,UAAY,OAAO;YAC5D,IAAI;gBACA,MAAM,WAAW,MAAM,KAAK;gBAC5B,MAAM,EAAE,UAAU,EAAE,WAAW,EAAE,MAAM,EAAE,gCAAgC,CAAC,CAAC,EAAE,GAAG;gBAChF,MAAM,EAAE,+BAA+B,EAAE,gCAAgC,EAAE,GAAG;gBAC9E,MAAM,0BAA0B,mCAAmC,QAAQ,uBAAuB;gBAClG,MAAM,2BAA2B,oCAAoC,QAAQ,wBAAwB;gBACrG,MAAM,EAAE,SAAS,EAAE,GAAG,uBAAuB,GAAG,SAAS,MAAM;gBAC/D,QAAQ,OAAO;oBACX;oBACA;oBACA,OAAO,wBAAwB,KAAK,KAAK;oBACzC,QAAQ,yBAAyB;oBACjC,UAAU;gBACd;gBACA,OAAO;YACX,EACA,OAAO,OAAO;gBACV,MAAM,EAAE,UAAU,EAAE,WAAW,EAAE,MAAM,EAAE,gCAAgC,CAAC,CAAC,EAAE,GAAG;gBAChF,MAAM,EAAE,+BAA+B,EAAE,GAAG;gBAC5C,MAAM,0BAA0B,mCAAmC,QAAQ,uBAAuB;gBAClG,QAAQ,QAAQ;oBACZ;oBACA;oBACA,OAAO,wBAAwB,KAAK,KAAK;oBACzC;oBACA,UAAU,MAAM,SAAS;gBAC7B;gBACA,MAAM;YACV;QACJ;AACO,MAAM,0BAA0B;IACnC,MAAM;IACN,MAAM;QAAC;KAAS;IAChB,MAAM;IACN,UAAU;AACd;AACO,MAAM,kBAAkB,CAAC,UAAY,CAAC;QACzC,cAAc,CAAC;YACX,YAAY,GAAG,CAAC,oBAAoB;QACxC;IACJ,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 245, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/middleware-logger/dist-es/index.js"],"sourcesContent":["export * from \"./loggerMiddleware\";\n"],"names":[],"mappings":";AAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 263, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/middleware-recursion-detection/dist-es/index.js"],"sourcesContent":["import { HttpRequest } from \"@smithy/protocol-http\";\nconst TRACE_ID_HEADER_NAME = \"X-Amzn-Trace-Id\";\nconst ENV_LAMBDA_FUNCTION_NAME = \"AWS_LAMBDA_FUNCTION_NAME\";\nconst ENV_TRACE_ID = \"_X_AMZN_TRACE_ID\";\nexport const recursionDetectionMiddleware = (options) => (next) => async (args) => {\n    const { request } = args;\n    if (!HttpRequest.isInstance(request) || options.runtime !== \"node\") {\n        return next(args);\n    }\n    const traceIdHeader = Object.keys(request.headers ?? {}).find((h) => h.toLowerCase() === TRACE_ID_HEADER_NAME.toLowerCase()) ??\n        TRACE_ID_HEADER_NAME;\n    if (request.headers.hasOwnProperty(traceIdHeader)) {\n        return next(args);\n    }\n    const functionName = process.env[ENV_LAMBDA_FUNCTION_NAME];\n    const traceId = process.env[ENV_TRACE_ID];\n    const nonEmptyString = (str) => typeof str === \"string\" && str.length > 0;\n    if (nonEmptyString(functionName) && nonEmptyString(traceId)) {\n        request.headers[TRACE_ID_HEADER_NAME] = traceId;\n    }\n    return next({\n        ...args,\n        request,\n    });\n};\nexport const addRecursionDetectionMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"RECURSION_DETECTION\"],\n    name: \"recursionDetectionMiddleware\",\n    override: true,\n    priority: \"low\",\n};\nexport const getRecursionDetectionPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(recursionDetectionMiddleware(options), addRecursionDetectionMiddlewareOptions);\n    },\n});\n"],"names":[],"mappings":";;;;;AAAA;AAAA;;AACA,MAAM,uBAAuB;AAC7B,MAAM,2BAA2B;AACjC,MAAM,eAAe;AACd,MAAM,+BAA+B,CAAC,UAAY,CAAC,OAAS,OAAO;YACtE,MAAM,EAAE,OAAO,EAAE,GAAG;YACpB,IAAI,CAAC,2KAAA,CAAA,cAAW,CAAC,UAAU,CAAC,YAAY,QAAQ,OAAO,KAAK,QAAQ;gBAChE,OAAO,KAAK;YAChB;YACA,MAAM,gBAAgB,OAAO,IAAI,CAAC,QAAQ,OAAO,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,IAAM,EAAE,WAAW,OAAO,qBAAqB,WAAW,OACrH;YACJ,IAAI,QAAQ,OAAO,CAAC,cAAc,CAAC,gBAAgB;gBAC/C,OAAO,KAAK;YAChB;YACA,MAAM,eAAe,QAAQ,GAAG,CAAC,yBAAyB;YAC1D,MAAM,UAAU,QAAQ,GAAG,CAAC,aAAa;YACzC,MAAM,iBAAiB,CAAC,MAAQ,OAAO,QAAQ,YAAY,IAAI,MAAM,GAAG;YACxE,IAAI,eAAe,iBAAiB,eAAe,UAAU;gBACzD,QAAQ,OAAO,CAAC,qBAAqB,GAAG;YAC5C;YACA,OAAO,KAAK;gBACR,GAAG,IAAI;gBACP;YACJ;QACJ;AACO,MAAM,yCAAyC;IAClD,MAAM;IACN,MAAM;QAAC;KAAsB;IAC7B,MAAM;IACN,UAAU;IACV,UAAU;AACd;AACO,MAAM,8BAA8B,CAAC,UAAY,CAAC;QACrD,cAAc,CAAC;YACX,YAAY,GAAG,CAAC,6BAA6B,UAAU;QAC3D;IACJ,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 314, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/middleware-user-agent/dist-es/configurations.js"],"sourcesContent":["import { normalizeProvider } from \"@smithy/core\";\nexport const DEFAULT_UA_APP_ID = undefined;\nfunction isValidUserAgentAppId(appId) {\n    if (appId === undefined) {\n        return true;\n    }\n    return typeof appId === \"string\" && appId.length <= 50;\n}\nexport function resolveUserAgentConfig(input) {\n    const normalizedAppIdProvider = normalizeProvider(input.userAgentAppId ?? DEFAULT_UA_APP_ID);\n    const { customUserAgent } = input;\n    return Object.assign(input, {\n        customUserAgent: typeof customUserAgent === \"string\" ? [[customUserAgent]] : customUserAgent,\n        userAgentAppId: async () => {\n            const appId = await normalizedAppIdProvider();\n            if (!isValidUserAgentAppId(appId)) {\n                const logger = input.logger?.constructor?.name === \"NoOpLogger\" || !input.logger ? console : input.logger;\n                if (typeof appId !== \"string\") {\n                    logger?.warn(\"userAgentAppId must be a string or undefined.\");\n                }\n                else if (appId.length > 50) {\n                    logger?.warn(\"The provided userAgentAppId exceeds the maximum length of 50 characters.\");\n                }\n            }\n            return appId;\n        },\n    });\n}\n"],"names":[],"mappings":";;;;AAAA;AAAA;;AACO,MAAM,oBAAoB;AACjC,SAAS,sBAAsB,KAAK;IAChC,IAAI,UAAU,WAAW;QACrB,OAAO;IACX;IACA,OAAO,OAAO,UAAU,YAAY,MAAM,MAAM,IAAI;AACxD;AACO,SAAS,uBAAuB,KAAK;IACxC,MAAM,0BAA0B,CAAA,GAAA,qKAAA,CAAA,oBAAiB,AAAD,EAAE,MAAM,cAAc,IAAI;IAC1E,MAAM,EAAE,eAAe,EAAE,GAAG;IAC5B,OAAO,OAAO,MAAM,CAAC,OAAO;QACxB,iBAAiB,OAAO,oBAAoB,WAAW;YAAC;gBAAC;aAAgB;SAAC,GAAG;QAC7E,gBAAgB;YACZ,MAAM,QAAQ,MAAM;YACpB,IAAI,CAAC,sBAAsB,QAAQ;gBAC/B,MAAM,SAAS,MAAM,MAAM,EAAE,aAAa,SAAS,gBAAgB,CAAC,MAAM,MAAM,GAAG,UAAU,MAAM,MAAM;gBACzG,IAAI,OAAO,UAAU,UAAU;oBAC3B,QAAQ,KAAK;gBACjB,OACK,IAAI,MAAM,MAAM,GAAG,IAAI;oBACxB,QAAQ,KAAK;gBACjB;YACJ;YACA,OAAO;QACX;IACJ;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 357, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/middleware-user-agent/dist-es/check-features.js"],"sourcesContent":["import { setFeature } from \"@aws-sdk/core\";\nconst ACCOUNT_ID_ENDPOINT_REGEX = /\\d{12}\\.ddb/;\nexport async function checkFeatures(context, config, args) {\n    const request = args.request;\n    if (request?.headers?.[\"smithy-protocol\"] === \"rpc-v2-cbor\") {\n        setFeature(context, \"PROTOCOL_RPC_V2_CBOR\", \"M\");\n    }\n    if (typeof config.retryStrategy === \"function\") {\n        const retryStrategy = await config.retryStrategy();\n        if (typeof retryStrategy.acquireInitialRetryToken === \"function\") {\n            if (retryStrategy.constructor?.name?.includes(\"Adaptive\")) {\n                setFeature(context, \"RETRY_MODE_ADAPTIVE\", \"F\");\n            }\n            else {\n                setFeature(context, \"RETRY_MODE_STANDARD\", \"E\");\n            }\n        }\n        else {\n            setFeature(context, \"RETRY_MODE_LEGACY\", \"D\");\n        }\n    }\n    if (typeof config.accountIdEndpointMode === \"function\") {\n        const endpointV2 = context.endpointV2;\n        if (String(endpointV2?.url?.hostname).match(ACCOUNT_ID_ENDPOINT_REGEX)) {\n            setFeature(context, \"ACCOUNT_ID_ENDPOINT\", \"O\");\n        }\n        switch (await config.accountIdEndpointMode?.()) {\n            case \"disabled\":\n                setFeature(context, \"ACCOUNT_ID_MODE_DISABLED\", \"Q\");\n                break;\n            case \"preferred\":\n                setFeature(context, \"ACCOUNT_ID_MODE_PREFERRED\", \"P\");\n                break;\n            case \"required\":\n                setFeature(context, \"ACCOUNT_ID_MODE_REQUIRED\", \"R\");\n                break;\n        }\n    }\n    const identity = context.__smithy_context?.selectedHttpAuthScheme?.identity;\n    if (identity?.$source) {\n        const credentials = identity;\n        if (credentials.accountId) {\n            setFeature(context, \"RESOLVED_ACCOUNT_ID\", \"T\");\n        }\n        for (const [key, value] of Object.entries(credentials.$source ?? {})) {\n            setFeature(context, key, value);\n        }\n    }\n}\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,4BAA4B;AAC3B,eAAe,cAAc,OAAO,EAAE,MAAM,EAAE,IAAI;IACrD,MAAM,UAAU,KAAK,OAAO;IAC5B,IAAI,SAAS,SAAS,CAAC,kBAAkB,KAAK,eAAe;QACzD,CAAA,GAAA,0LAAA,CAAA,aAAU,AAAD,EAAE,SAAS,wBAAwB;IAChD;IACA,IAAI,OAAO,OAAO,aAAa,KAAK,YAAY;QAC5C,MAAM,gBAAgB,MAAM,OAAO,aAAa;QAChD,IAAI,OAAO,cAAc,wBAAwB,KAAK,YAAY;YAC9D,IAAI,cAAc,WAAW,EAAE,MAAM,SAAS,aAAa;gBACvD,CAAA,GAAA,0LAAA,CAAA,aAAU,AAAD,EAAE,SAAS,uBAAuB;YAC/C,OACK;gBACD,CAAA,GAAA,0LAAA,CAAA,aAAU,AAAD,EAAE,SAAS,uBAAuB;YAC/C;QACJ,OACK;YACD,CAAA,GAAA,0LAAA,CAAA,aAAU,AAAD,EAAE,SAAS,qBAAqB;QAC7C;IACJ;IACA,IAAI,OAAO,OAAO,qBAAqB,KAAK,YAAY;QACpD,MAAM,aAAa,QAAQ,UAAU;QACrC,IAAI,OAAO,YAAY,KAAK,UAAU,KAAK,CAAC,4BAA4B;YACpE,CAAA,GAAA,0LAAA,CAAA,aAAU,AAAD,EAAE,SAAS,uBAAuB;QAC/C;QACA,OAAQ,MAAM,OAAO,qBAAqB;YACtC,KAAK;gBACD,CAAA,GAAA,0LAAA,CAAA,aAAU,AAAD,EAAE,SAAS,4BAA4B;gBAChD;YACJ,KAAK;gBACD,CAAA,GAAA,0LAAA,CAAA,aAAU,AAAD,EAAE,SAAS,6BAA6B;gBACjD;YACJ,KAAK;gBACD,CAAA,GAAA,0LAAA,CAAA,aAAU,AAAD,EAAE,SAAS,4BAA4B;gBAChD;QACR;IACJ;IACA,MAAM,WAAW,QAAQ,gBAAgB,EAAE,wBAAwB;IACnE,IAAI,UAAU,SAAS;QACnB,MAAM,cAAc;QACpB,IAAI,YAAY,SAAS,EAAE;YACvB,CAAA,GAAA,0LAAA,CAAA,aAAU,AAAD,EAAE,SAAS,uBAAuB;QAC/C;QACA,KAAK,MAAM,CAAC,KAAK,MAAM,IAAI,OAAO,OAAO,CAAC,YAAY,OAAO,IAAI,CAAC,GAAI;YAClE,CAAA,GAAA,0LAAA,CAAA,aAAU,AAAD,EAAE,SAAS,KAAK;QAC7B;IACJ;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 414, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/middleware-user-agent/dist-es/constants.js"],"sourcesContent":["export const USER_AGENT = \"user-agent\";\nexport const X_AMZ_USER_AGENT = \"x-amz-user-agent\";\nexport const SPACE = \" \";\nexport const UA_NAME_SEPARATOR = \"/\";\nexport const UA_NAME_ESCAPE_REGEX = /[^\\!\\$\\%\\&\\'\\*\\+\\-\\.\\^\\_\\`\\|\\~\\d\\w]/g;\nexport const UA_VALUE_ESCAPE_REGEX = /[^\\!\\$\\%\\&\\'\\*\\+\\-\\.\\^\\_\\`\\|\\~\\d\\w\\#]/g;\nexport const UA_ESCAPE_CHAR = \"-\";\n"],"names":[],"mappings":";;;;;;;;;AAAO,MAAM,aAAa;AACnB,MAAM,mBAAmB;AACzB,MAAM,QAAQ;AACd,MAAM,oBAAoB;AAC1B,MAAM,uBAAuB;AAC7B,MAAM,wBAAwB;AAC9B,MAAM,iBAAiB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 436, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/middleware-user-agent/dist-es/encode-features.js"],"sourcesContent":["const BYTE_LIMIT = 1024;\nexport function encodeFeatures(features) {\n    let buffer = \"\";\n    for (const key in features) {\n        const val = features[key];\n        if (buffer.length + val.length + 1 <= BYTE_LIMIT) {\n            if (buffer.length) {\n                buffer += \",\" + val;\n            }\n            else {\n                buffer += val;\n            }\n            continue;\n        }\n        break;\n    }\n    return buffer;\n}\n"],"names":[],"mappings":";;;AAAA,MAAM,aAAa;AACZ,SAAS,eAAe,QAAQ;IACnC,IAAI,SAAS;IACb,IAAK,MAAM,OAAO,SAAU;QACxB,MAAM,MAAM,QAAQ,CAAC,IAAI;QACzB,IAAI,OAAO,MAAM,GAAG,IAAI,MAAM,GAAG,KAAK,YAAY;YAC9C,IAAI,OAAO,MAAM,EAAE;gBACf,UAAU,MAAM;YACpB,OACK;gBACD,UAAU;YACd;YACA;QACJ;QACA;IACJ;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 462, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/middleware-user-agent/dist-es/user-agent-middleware.js"],"sourcesContent":["import { getUserAgentPrefix } from \"@aws-sdk/util-endpoints\";\nimport { HttpRequest } from \"@smithy/protocol-http\";\nimport { checkFeatures } from \"./check-features\";\nimport { SPACE, UA_ESCAPE_CHAR, UA_NAME_ESCAPE_REGEX, UA_NAME_SEPARATOR, UA_VALUE_ESCAPE_REGEX, USER_AGENT, X_AMZ_USER_AGENT, } from \"./constants\";\nimport { encodeFeatures } from \"./encode-features\";\nexport const userAgentMiddleware = (options) => (next, context) => async (args) => {\n    const { request } = args;\n    if (!HttpRequest.isInstance(request)) {\n        return next(args);\n    }\n    const { headers } = request;\n    const userAgent = context?.userAgent?.map(escapeUserAgent) || [];\n    const defaultUserAgent = (await options.defaultUserAgentProvider()).map(escapeUserAgent);\n    await checkFeatures(context, options, args);\n    const awsContext = context;\n    defaultUserAgent.push(`m/${encodeFeatures(Object.assign({}, context.__smithy_context?.features, awsContext.__aws_sdk_context?.features))}`);\n    const customUserAgent = options?.customUserAgent?.map(escapeUserAgent) || [];\n    const appId = await options.userAgentAppId();\n    if (appId) {\n        defaultUserAgent.push(escapeUserAgent([`app/${appId}`]));\n    }\n    const prefix = getUserAgentPrefix();\n    const sdkUserAgentValue = (prefix ? [prefix] : [])\n        .concat([...defaultUserAgent, ...userAgent, ...customUserAgent])\n        .join(SPACE);\n    const normalUAValue = [\n        ...defaultUserAgent.filter((section) => section.startsWith(\"aws-sdk-\")),\n        ...customUserAgent,\n    ].join(SPACE);\n    if (options.runtime !== \"browser\") {\n        if (normalUAValue) {\n            headers[X_AMZ_USER_AGENT] = headers[X_AMZ_USER_AGENT]\n                ? `${headers[USER_AGENT]} ${normalUAValue}`\n                : normalUAValue;\n        }\n        headers[USER_AGENT] = sdkUserAgentValue;\n    }\n    else {\n        headers[X_AMZ_USER_AGENT] = sdkUserAgentValue;\n    }\n    return next({\n        ...args,\n        request,\n    });\n};\nconst escapeUserAgent = (userAgentPair) => {\n    const name = userAgentPair[0]\n        .split(UA_NAME_SEPARATOR)\n        .map((part) => part.replace(UA_NAME_ESCAPE_REGEX, UA_ESCAPE_CHAR))\n        .join(UA_NAME_SEPARATOR);\n    const version = userAgentPair[1]?.replace(UA_VALUE_ESCAPE_REGEX, UA_ESCAPE_CHAR);\n    const prefixSeparatorIndex = name.indexOf(UA_NAME_SEPARATOR);\n    const prefix = name.substring(0, prefixSeparatorIndex);\n    let uaName = name.substring(prefixSeparatorIndex + 1);\n    if (prefix === \"api\") {\n        uaName = uaName.toLowerCase();\n    }\n    return [prefix, uaName, version]\n        .filter((item) => item && item.length > 0)\n        .reduce((acc, item, index) => {\n        switch (index) {\n            case 0:\n                return item;\n            case 1:\n                return `${acc}/${item}`;\n            default:\n                return `${acc}#${item}`;\n        }\n    }, \"\");\n};\nexport const getUserAgentMiddlewareOptions = {\n    name: \"getUserAgentMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"SET_USER_AGENT\", \"USER_AGENT\"],\n    override: true,\n};\nexport const getUserAgentPlugin = (config) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(userAgentMiddleware(config), getUserAgentMiddlewareOptions);\n    },\n});\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 567, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/middleware-user-agent/dist-es/index.js"],"sourcesContent":["export * from \"./configurations\";\nexport * from \"./user-agent-middleware\";\n"],"names":[],"mappings":";AAAA;AACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 588, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/util-endpoints/dist-es/lib/isIpAddress.js"],"sourcesContent":["export { isIpAddress } from \"@smithy/util-endpoints\";\n"],"names":[],"mappings":";AAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 606, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/util-endpoints/dist-es/lib/aws/isVirtualHostableS3Bucket.js"],"sourcesContent":["import { isValidHostLabel } from \"@smithy/util-endpoints\";\nimport { isIpAddress } from \"../isIpAddress\";\nexport const isVirtualHostableS3Bucket = (value, allowSubDomains = false) => {\n    if (allowSubDomains) {\n        for (const label of value.split(\".\")) {\n            if (!isVirtualHostableS3Bucket(label)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    if (!isValidHostLabel(value)) {\n        return false;\n    }\n    if (value.length < 3 || value.length > 63) {\n        return false;\n    }\n    if (value !== value.toLowerCase()) {\n        return false;\n    }\n    if (isIpAddress(value)) {\n        return false;\n    }\n    return true;\n};\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AACO,MAAM,4BAA4B,CAAC,OAAO,kBAAkB,KAAK;IACpE,IAAI,iBAAiB;QACjB,KAAK,MAAM,SAAS,MAAM,KAAK,CAAC,KAAM;YAClC,IAAI,CAAC,0BAA0B,QAAQ;gBACnC,OAAO;YACX;QACJ;QACA,OAAO;IACX;IACA,IAAI,CAAC,CAAA,GAAA,wLAAA,CAAA,mBAAgB,AAAD,EAAE,QAAQ;QAC1B,OAAO;IACX;IACA,IAAI,MAAM,MAAM,GAAG,KAAK,MAAM,MAAM,GAAG,IAAI;QACvC,OAAO;IACX;IACA,IAAI,UAAU,MAAM,WAAW,IAAI;QAC/B,OAAO;IACX;IACA,IAAI,CAAA,GAAA,mLAAA,CAAA,cAAW,AAAD,EAAE,QAAQ;QACpB,OAAO;IACX;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 644, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/util-endpoints/dist-es/lib/aws/parseArn.js"],"sourcesContent":["const ARN_DELIMITER = \":\";\nconst RESOURCE_DELIMITER = \"/\";\nexport const parseArn = (value) => {\n    const segments = value.split(ARN_DELIMITER);\n    if (segments.length < 6)\n        return null;\n    const [arn, partition, service, region, accountId, ...resourcePath] = segments;\n    if (arn !== \"arn\" || partition === \"\" || service === \"\" || resourcePath.join(ARN_DELIMITER) === \"\")\n        return null;\n    const resourceId = resourcePath.map((resource) => resource.split(RESOURCE_DELIMITER)).flat();\n    return {\n        partition,\n        service,\n        region,\n        accountId,\n        resourceId,\n    };\n};\n"],"names":[],"mappings":";;;AAAA,MAAM,gBAAgB;AACtB,MAAM,qBAAqB;AACpB,MAAM,WAAW,CAAC;IACrB,MAAM,WAAW,MAAM,KAAK,CAAC;IAC7B,IAAI,SAAS,MAAM,GAAG,GAClB,OAAO;IACX,MAAM,CAAC,KAAK,WAAW,SAAS,QAAQ,WAAW,GAAG,aAAa,GAAG;IACtE,IAAI,QAAQ,SAAS,cAAc,MAAM,YAAY,MAAM,aAAa,IAAI,CAAC,mBAAmB,IAC5F,OAAO;IACX,MAAM,aAAa,aAAa,GAAG,CAAC,CAAC,WAAa,SAAS,KAAK,CAAC,qBAAqB,IAAI;IAC1F,OAAO;QACH;QACA;QACA;QACA;QACA;IACJ;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 674, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/util-endpoints/dist-es/lib/aws/partition.js"],"sourcesContent":["import partitionsInfo from \"./partitions.json\";\nlet selectedPartitionsInfo = partitionsInfo;\nlet selectedUserAgentPrefix = \"\";\nexport const partition = (value) => {\n    const { partitions } = selectedPartitionsInfo;\n    for (const partition of partitions) {\n        const { regions, outputs } = partition;\n        for (const [region, regionData] of Object.entries(regions)) {\n            if (region === value) {\n                return {\n                    ...outputs,\n                    ...regionData,\n                };\n            }\n        }\n    }\n    for (const partition of partitions) {\n        const { regionRegex, outputs } = partition;\n        if (new RegExp(regionRegex).test(value)) {\n            return {\n                ...outputs,\n            };\n        }\n    }\n    const DEFAULT_PARTITION = partitions.find((partition) => partition.id === \"aws\");\n    if (!DEFAULT_PARTITION) {\n        throw new Error(\"Provided region was not found in the partition array or regex,\" +\n            \" and default partition with id 'aws' doesn't exist.\");\n    }\n    return {\n        ...DEFAULT_PARTITION.outputs,\n    };\n};\nexport const setPartitionInfo = (partitionsInfo, userAgentPrefix = \"\") => {\n    selectedPartitionsInfo = partitionsInfo;\n    selectedUserAgentPrefix = userAgentPrefix;\n};\nexport const useDefaultPartitionInfo = () => {\n    setPartitionInfo(partitionsInfo, \"\");\n};\nexport const getUserAgentPrefix = () => selectedUserAgentPrefix;\n"],"names":[],"mappings":";;;;;;AAAA;;AACA,IAAI,yBAAyB,mKAAA,CAAA,UAAc;AAC3C,IAAI,0BAA0B;AACvB,MAAM,YAAY,CAAC;IACtB,MAAM,EAAE,UAAU,EAAE,GAAG;IACvB,KAAK,MAAM,aAAa,WAAY;QAChC,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG;QAC7B,KAAK,MAAM,CAAC,QAAQ,WAAW,IAAI,OAAO,OAAO,CAAC,SAAU;YACxD,IAAI,WAAW,OAAO;gBAClB,OAAO;oBACH,GAAG,OAAO;oBACV,GAAG,UAAU;gBACjB;YACJ;QACJ;IACJ;IACA,KAAK,MAAM,aAAa,WAAY;QAChC,MAAM,EAAE,WAAW,EAAE,OAAO,EAAE,GAAG;QACjC,IAAI,IAAI,OAAO,aAAa,IAAI,CAAC,QAAQ;YACrC,OAAO;gBACH,GAAG,OAAO;YACd;QACJ;IACJ;IACA,MAAM,oBAAoB,WAAW,IAAI,CAAC,CAAC,YAAc,UAAU,EAAE,KAAK;IAC1E,IAAI,CAAC,mBAAmB;QACpB,MAAM,IAAI,MAAM,mEACZ;IACR;IACA,OAAO;QACH,GAAG,kBAAkB,OAAO;IAChC;AACJ;AACO,MAAM,mBAAmB,CAAC,gBAAgB,kBAAkB,EAAE;IACjE,yBAAyB;IACzB,0BAA0B;AAC9B;AACO,MAAM,0BAA0B;IACnC,iBAAiB,mKAAA,CAAA,UAAc,EAAE;AACrC;AACO,MAAM,qBAAqB,IAAM","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 727, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/util-endpoints/dist-es/aws.js"],"sourcesContent":["import { customEndpointFunctions } from \"@smithy/util-endpoints\";\nimport { isVirtualHostableS3Bucket } from \"./lib/aws/isVirtualHostableS3Bucket\";\nimport { parseArn } from \"./lib/aws/parseArn\";\nimport { partition } from \"./lib/aws/partition\";\nexport const awsEndpointFunctions = {\n    isVirtualHostableS3Bucket: isVirtualHostableS3Bucket,\n    parseArn: parseArn,\n    partition: partition,\n};\ncustomEndpointFunctions.aws = awsEndpointFunctions;\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AACA;AACA;;;;;AACO,MAAM,uBAAuB;IAChC,2BAA2B,4MAAA,CAAA,4BAAyB;IACpD,UAAU,2LAAA,CAAA,WAAQ;IAClB,WAAW,4LAAA,CAAA,YAAS;AACxB;AACA,iMAAA,CAAA,0BAAuB,CAAC,GAAG,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 751, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/util-endpoints/dist-es/resolveEndpoint.js"],"sourcesContent":["export { resolveEndpoint } from \"@smithy/util-endpoints\";\n"],"names":[],"mappings":";AAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 769, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/util-endpoints/dist-es/types/EndpointError.js"],"sourcesContent":["export { EndpointError } from \"@smithy/util-endpoints\";\n"],"names":[],"mappings":";AAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 787, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 795, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 803, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 811, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 819, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 827, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/util-endpoints/dist-es/types/index.js"],"sourcesContent":["export * from \"./EndpointError\";\nexport * from \"./EndpointRuleObject\";\nexport * from \"./ErrorRuleObject\";\nexport * from \"./RuleSetObject\";\nexport * from \"./TreeRuleObject\";\nexport * from \"./shared\";\n"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 860, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/util-endpoints/dist-es/index.js"],"sourcesContent":["export * from \"./aws\";\nexport * from \"./lib/aws/partition\";\nexport * from \"./lib/isIpAddress\";\nexport * from \"./resolveEndpoint\";\nexport * from \"./types\";\n"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 890, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/core/dist-es/submodules/client/setFeature.js"],"sourcesContent":["export function setFeature(context, feature, value) {\n    if (!context.__aws_sdk_context) {\n        context.__aws_sdk_context = {\n            features: {},\n        };\n    }\n    else if (!context.__aws_sdk_context.features) {\n        context.__aws_sdk_context.features = {};\n    }\n    context.__aws_sdk_context.features[feature] = value;\n}\n"],"names":[],"mappings":";;;AAAO,SAAS,WAAW,OAAO,EAAE,OAAO,EAAE,KAAK;IAC9C,IAAI,CAAC,QAAQ,iBAAiB,EAAE;QAC5B,QAAQ,iBAAiB,GAAG;YACxB,UAAU,CAAC;QACf;IACJ,OACK,IAAI,CAAC,QAAQ,iBAAiB,CAAC,QAAQ,EAAE;QAC1C,QAAQ,iBAAiB,CAAC,QAAQ,GAAG,CAAC;IAC1C;IACA,QAAQ,iBAAiB,CAAC,QAAQ,CAAC,QAAQ,GAAG;AAClD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 909, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/core/dist-es/submodules/client/setCredentialFeature.js"],"sourcesContent":["export function setCredentialFeature(credentials, feature, value) {\n    if (!credentials.$source) {\n        credentials.$source = {};\n    }\n    credentials.$source[feature] = value;\n    return credentials;\n}\n"],"names":[],"mappings":";;;AAAO,SAAS,qBAAqB,WAAW,EAAE,OAAO,EAAE,KAAK;IAC5D,IAAI,CAAC,YAAY,OAAO,EAAE;QACtB,YAAY,OAAO,GAAG,CAAC;IAC3B;IACA,YAAY,OAAO,CAAC,QAAQ,GAAG;IAC/B,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 925, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/resolveAwsSdkSigV4Config.js"],"sourcesContent":["import { setCredentialFeature } from \"@aws-sdk/core/client\";\nimport { doesIdentityRequireRefresh, isIdentityExpired, memoizeIdentityProvider, normalizeProvider, } from \"@smithy/core\";\nimport { SignatureV4 } from \"@smithy/signature-v4\";\nexport const resolveAwsSdkSigV4Config = (config) => {\n    let inputCredentials = config.credentials;\n    let isUserSupplied = !!config.credentials;\n    let resolvedCredentials = undefined;\n    Object.defineProperty(config, \"credentials\", {\n        set(credentials) {\n            if (credentials && credentials !== inputCredentials && credentials !== resolvedCredentials) {\n                isUserSupplied = true;\n            }\n            inputCredentials = credentials;\n            const memoizedProvider = normalizeCredentialProvider(config, {\n                credentials: inputCredentials,\n                credentialDefaultProvider: config.credentialDefaultProvider,\n            });\n            const boundProvider = bindCallerConfig(config, memoizedProvider);\n            if (isUserSupplied && !boundProvider.attributed) {\n                resolvedCredentials = async (options) => boundProvider(options).then((creds) => setCredentialFeature(creds, \"CREDENTIALS_CODE\", \"e\"));\n                resolvedCredentials.memoized = boundProvider.memoized;\n                resolvedCredentials.configBound = boundProvider.configBound;\n                resolvedCredentials.attributed = true;\n            }\n            else {\n                resolvedCredentials = boundProvider;\n            }\n        },\n        get() {\n            return resolvedCredentials;\n        },\n        enumerable: true,\n        configurable: true,\n    });\n    config.credentials = inputCredentials;\n    const { signingEscapePath = true, systemClockOffset = config.systemClockOffset || 0, sha256, } = config;\n    let signer;\n    if (config.signer) {\n        signer = normalizeProvider(config.signer);\n    }\n    else if (config.regionInfoProvider) {\n        signer = () => normalizeProvider(config.region)()\n            .then(async (region) => [\n            (await config.regionInfoProvider(region, {\n                useFipsEndpoint: await config.useFipsEndpoint(),\n                useDualstackEndpoint: await config.useDualstackEndpoint(),\n            })) || {},\n            region,\n        ])\n            .then(([regionInfo, region]) => {\n            const { signingRegion, signingService } = regionInfo;\n            config.signingRegion = config.signingRegion || signingRegion || region;\n            config.signingName = config.signingName || signingService || config.serviceId;\n            const params = {\n                ...config,\n                credentials: config.credentials,\n                region: config.signingRegion,\n                service: config.signingName,\n                sha256,\n                uriEscapePath: signingEscapePath,\n            };\n            const SignerCtor = config.signerConstructor || SignatureV4;\n            return new SignerCtor(params);\n        });\n    }\n    else {\n        signer = async (authScheme) => {\n            authScheme = Object.assign({}, {\n                name: \"sigv4\",\n                signingName: config.signingName || config.defaultSigningName,\n                signingRegion: await normalizeProvider(config.region)(),\n                properties: {},\n            }, authScheme);\n            const signingRegion = authScheme.signingRegion;\n            const signingService = authScheme.signingName;\n            config.signingRegion = config.signingRegion || signingRegion;\n            config.signingName = config.signingName || signingService || config.serviceId;\n            const params = {\n                ...config,\n                credentials: config.credentials,\n                region: config.signingRegion,\n                service: config.signingName,\n                sha256,\n                uriEscapePath: signingEscapePath,\n            };\n            const SignerCtor = config.signerConstructor || SignatureV4;\n            return new SignerCtor(params);\n        };\n    }\n    const resolvedConfig = Object.assign(config, {\n        systemClockOffset,\n        signingEscapePath,\n        signer,\n    });\n    return resolvedConfig;\n};\nexport const resolveAWSSDKSigV4Config = resolveAwsSdkSigV4Config;\nfunction normalizeCredentialProvider(config, { credentials, credentialDefaultProvider, }) {\n    let credentialsProvider;\n    if (credentials) {\n        if (!credentials?.memoized) {\n            credentialsProvider = memoizeIdentityProvider(credentials, isIdentityExpired, doesIdentityRequireRefresh);\n        }\n        else {\n            credentialsProvider = credentials;\n        }\n    }\n    else {\n        if (credentialDefaultProvider) {\n            credentialsProvider = normalizeProvider(credentialDefaultProvider(Object.assign({}, config, {\n                parentClientConfig: config,\n            })));\n        }\n        else {\n            credentialsProvider = async () => {\n                throw new Error(\"@aws-sdk/core::resolveAwsSdkSigV4Config - `credentials` not provided and no credentialDefaultProvider was configured.\");\n            };\n        }\n    }\n    credentialsProvider.memoized = true;\n    return credentialsProvider;\n}\nfunction bindCallerConfig(config, credentialsProvider) {\n    if (credentialsProvider.configBound) {\n        return credentialsProvider;\n    }\n    const fn = async (options) => credentialsProvider({ ...options, callerClientConfig: config });\n    fn.memoized = credentialsProvider.memoized;\n    fn.configBound = true;\n    return fn;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1067, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/core/dist-es/submodules/client/emitWarningIfUnsupportedVersion.js"],"sourcesContent":["export const state = {\n    warningEmitted: false,\n};\nexport const emitWarningIfUnsupportedVersion = (version) => {\n    if (version && !state.warningEmitted && parseInt(version.substring(1, version.indexOf(\".\"))) < 18) {\n        state.warningEmitted = true;\n        process.emitWarning(`NodeDeprecationWarning: The AWS SDK for JavaScript (v3) will\nno longer support Node.js 16.x on January 6, 2025.\n\nTo continue receiving updates to AWS services, bug fixes, and security\nupdates please upgrade to a supported Node.js LTS version.\n\nMore information can be found at: https://a.co/74kJMmI`);\n    }\n};\n"],"names":[],"mappings":";;;;AAAO,MAAM,QAAQ;IACjB,gBAAgB;AACpB;AACO,MAAM,kCAAkC,CAAC;IAC5C,IAAI,WAAW,CAAC,MAAM,cAAc,IAAI,SAAS,QAAQ,SAAS,CAAC,GAAG,QAAQ,OAAO,CAAC,SAAS,IAAI;QAC/F,MAAM,cAAc,GAAG;QACvB,QAAQ,WAAW,CAAC,CAAC;;;;;;sDAMyB,CAAC;IACnD;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1092, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getDateHeader.js"],"sourcesContent":["import { HttpResponse } from \"@smithy/protocol-http\";\nexport const getDateHeader = (response) => HttpResponse.isInstance(response) ? response.headers?.date ?? response.headers?.Date : undefined;\n"],"names":[],"mappings":";;;AAAA;AAAA;;AACO,MAAM,gBAAgB,CAAC,WAAa,4KAAA,CAAA,eAAY,CAAC,UAAU,CAAC,YAAY,SAAS,OAAO,EAAE,QAAQ,SAAS,OAAO,EAAE,OAAO","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1105, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getSkewCorrectedDate.js"],"sourcesContent":["export const getSkewCorrectedDate = (systemClockOffset) => new Date(Date.now() + systemClockOffset);\n"],"names":[],"mappings":";;;AAAO,MAAM,uBAAuB,CAAC,oBAAsB,IAAI,KAAK,KAAK,GAAG,KAAK","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1115, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/isClockSkewed.js"],"sourcesContent":["import { getSkewCorrectedDate } from \"./getSkewCorrectedDate\";\nexport const isClockSkewed = (clockTime, systemClockOffset) => Math.abs(getSkewCorrectedDate(systemClockOffset).getTime() - clockTime) >= 300000;\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAC,WAAW,oBAAsB,KAAK,GAAG,CAAC,CAAA,GAAA,sNAAA,CAAA,uBAAoB,AAAD,EAAE,mBAAmB,OAAO,KAAK,cAAc","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1127, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getUpdatedSystemClockOffset.js"],"sourcesContent":["import { isClockSkewed } from \"./isClockSkewed\";\nexport const getUpdatedSystemClockOffset = (clockTime, currentSystemClockOffset) => {\n    const clockTimeInMs = Date.parse(clockTime);\n    if (isClockSkewed(clockTimeInMs, currentSystemClockOffset)) {\n        return clockTimeInMs - Date.now();\n    }\n    return currentSystemClockOffset;\n};\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,8BAA8B,CAAC,WAAW;IACnD,MAAM,gBAAgB,KAAK,KAAK,CAAC;IACjC,IAAI,CAAA,GAAA,+MAAA,CAAA,gBAAa,AAAD,EAAE,eAAe,2BAA2B;QACxD,OAAO,gBAAgB,KAAK,GAAG;IACnC;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1145, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/AwsSdkSigV4Signer.js"],"sourcesContent":["import { HttpRequest } from \"@smithy/protocol-http\";\nimport { getDateHeader, getSkewCorrectedDate, getUpdatedSystemClockOffset } from \"../utils\";\nconst throwSigningPropertyError = (name, property) => {\n    if (!property) {\n        throw new Error(`Property \\`${name}\\` is not resolved for AWS SDK SigV4Auth`);\n    }\n    return property;\n};\nexport const validateSigningProperties = async (signingProperties) => {\n    const context = throwSigningPropertyError(\"context\", signingProperties.context);\n    const config = throwSigningPropertyError(\"config\", signingProperties.config);\n    const authScheme = context.endpointV2?.properties?.authSchemes?.[0];\n    const signerFunction = throwSigningPropertyError(\"signer\", config.signer);\n    const signer = await signerFunction(authScheme);\n    const signingRegion = signingProperties?.signingRegion;\n    const signingRegionSet = signingProperties?.signingRegionSet;\n    const signingName = signingProperties?.signingName;\n    return {\n        config,\n        signer,\n        signingRegion,\n        signingRegionSet,\n        signingName,\n    };\n};\nexport class AwsSdkSigV4Signer {\n    async sign(httpRequest, identity, signingProperties) {\n        if (!HttpRequest.isInstance(httpRequest)) {\n            throw new Error(\"The request is not an instance of `HttpRequest` and cannot be signed\");\n        }\n        const validatedProps = await validateSigningProperties(signingProperties);\n        const { config, signer } = validatedProps;\n        let { signingRegion, signingName } = validatedProps;\n        const handlerExecutionContext = signingProperties.context;\n        if (handlerExecutionContext?.authSchemes?.length ?? 0 > 1) {\n            const [first, second] = handlerExecutionContext.authSchemes;\n            if (first?.name === \"sigv4a\" && second?.name === \"sigv4\") {\n                signingRegion = second?.signingRegion ?? signingRegion;\n                signingName = second?.signingName ?? signingName;\n            }\n        }\n        const signedRequest = await signer.sign(httpRequest, {\n            signingDate: getSkewCorrectedDate(config.systemClockOffset),\n            signingRegion: signingRegion,\n            signingService: signingName,\n        });\n        return signedRequest;\n    }\n    errorHandler(signingProperties) {\n        return (error) => {\n            const serverTime = error.ServerTime ?? getDateHeader(error.$response);\n            if (serverTime) {\n                const config = throwSigningPropertyError(\"config\", signingProperties.config);\n                const initialSystemClockOffset = config.systemClockOffset;\n                config.systemClockOffset = getUpdatedSystemClockOffset(serverTime, config.systemClockOffset);\n                const clockSkewCorrected = config.systemClockOffset !== initialSystemClockOffset;\n                if (clockSkewCorrected && error.$metadata) {\n                    error.$metadata.clockSkewCorrected = true;\n                }\n            }\n            throw error;\n        };\n    }\n    successHandler(httpResponse, signingProperties) {\n        const dateHeader = getDateHeader(httpResponse);\n        if (dateHeader) {\n            const config = throwSigningPropertyError(\"config\", signingProperties.config);\n            config.systemClockOffset = getUpdatedSystemClockOffset(dateHeader, config.systemClockOffset);\n        }\n    }\n}\nexport const AWSSDKSigV4Signer = AwsSdkSigV4Signer;\n"],"names":[],"mappings":";;;;;AAAA;AAAA;AACA;AAAA;AAAA;;;AACA,MAAM,4BAA4B,CAAC,MAAM;IACrC,IAAI,CAAC,UAAU;QACX,MAAM,IAAI,MAAM,CAAC,WAAW,EAAE,KAAK,wCAAwC,CAAC;IAChF;IACA,OAAO;AACX;AACO,MAAM,4BAA4B,OAAO;IAC5C,MAAM,UAAU,0BAA0B,WAAW,kBAAkB,OAAO;IAC9E,MAAM,SAAS,0BAA0B,UAAU,kBAAkB,MAAM;IAC3E,MAAM,aAAa,QAAQ,UAAU,EAAE,YAAY,aAAa,CAAC,EAAE;IACnE,MAAM,iBAAiB,0BAA0B,UAAU,OAAO,MAAM;IACxE,MAAM,SAAS,MAAM,eAAe;IACpC,MAAM,gBAAgB,mBAAmB;IACzC,MAAM,mBAAmB,mBAAmB;IAC5C,MAAM,cAAc,mBAAmB;IACvC,OAAO;QACH;QACA;QACA;QACA;QACA;IACJ;AACJ;AACO,MAAM;IACT,MAAM,KAAK,WAAW,EAAE,QAAQ,EAAE,iBAAiB,EAAE;QACjD,IAAI,CAAC,2KAAA,CAAA,cAAW,CAAC,UAAU,CAAC,cAAc;YACtC,MAAM,IAAI,MAAM;QACpB;QACA,MAAM,iBAAiB,MAAM,0BAA0B;QACvD,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG;QAC3B,IAAI,EAAE,aAAa,EAAE,WAAW,EAAE,GAAG;QACrC,MAAM,0BAA0B,kBAAkB,OAAO;QACzD,IAAI,yBAAyB,aAAa,UAAU,IAAI,GAAG;YACvD,MAAM,CAAC,OAAO,OAAO,GAAG,wBAAwB,WAAW;YAC3D,IAAI,OAAO,SAAS,YAAY,QAAQ,SAAS,SAAS;gBACtD,gBAAgB,QAAQ,iBAAiB;gBACzC,cAAc,QAAQ,eAAe;YACzC;QACJ;QACA,MAAM,gBAAgB,MAAM,OAAO,IAAI,CAAC,aAAa;YACjD,aAAa,CAAA,GAAA,sNAAA,CAAA,uBAAoB,AAAD,EAAE,OAAO,iBAAiB;YAC1D,eAAe;YACf,gBAAgB;QACpB;QACA,OAAO;IACX;IACA,aAAa,iBAAiB,EAAE;QAC5B,OAAO,CAAC;YACJ,MAAM,aAAa,MAAM,UAAU,IAAI,CAAA,GAAA,+MAAA,CAAA,gBAAa,AAAD,EAAE,MAAM,SAAS;YACpE,IAAI,YAAY;gBACZ,MAAM,SAAS,0BAA0B,UAAU,kBAAkB,MAAM;gBAC3E,MAAM,2BAA2B,OAAO,iBAAiB;gBACzD,OAAO,iBAAiB,GAAG,CAAA,GAAA,6NAAA,CAAA,8BAA2B,AAAD,EAAE,YAAY,OAAO,iBAAiB;gBAC3F,MAAM,qBAAqB,OAAO,iBAAiB,KAAK;gBACxD,IAAI,sBAAsB,MAAM,SAAS,EAAE;oBACvC,MAAM,SAAS,CAAC,kBAAkB,GAAG;gBACzC;YACJ;YACA,MAAM;QACV;IACJ;IACA,eAAe,YAAY,EAAE,iBAAiB,EAAE;QAC5C,MAAM,aAAa,CAAA,GAAA,+MAAA,CAAA,gBAAa,AAAD,EAAE;QACjC,IAAI,YAAY;YACZ,MAAM,SAAS,0BAA0B,UAAU,kBAAkB,MAAM;YAC3E,OAAO,iBAAiB,GAAG,CAAA,GAAA,6NAAA,CAAA,8BAA2B,AAAD,EAAE,YAAY,OAAO,iBAAiB;QAC/F;IACJ;AACJ;AACO,MAAM,oBAAoB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1233, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/core/dist-es/submodules/protocols/common.js"],"sourcesContent":["import { collectBody } from \"@smithy/smithy-client\";\nexport const collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\n"],"names":[],"mappings":";;;AAAA;AAAA;;AACO,MAAM,oBAAoB,CAAC,YAAY,UAAY,CAAA,GAAA,wMAAA,CAAA,cAAW,AAAD,EAAE,YAAY,SAAS,IAAI,CAAC,CAAC,OAAS,QAAQ,WAAW,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1246, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/core/dist-es/submodules/protocols/xml/parseXmlBody.js"],"sourcesContent":["import { getValueFromTextNode } from \"@smithy/smithy-client\";\nimport { XMLParser } from \"fast-xml-parser\";\nimport { collectBodyString } from \"../common\";\nexport const parseXmlBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        const parser = new XMLParser({\n            attributeNamePrefix: \"\",\n            htmlEntities: true,\n            ignoreAttributes: false,\n            ignoreDeclaration: true,\n            parseTagValue: false,\n            trimValues: false,\n            tagValueProcessor: (_, val) => (val.trim() === \"\" && val.includes(\"\\n\") ? \"\" : undefined),\n        });\n        parser.addEntity(\"#xD\", \"\\r\");\n        parser.addEntity(\"#10\", \"\\n\");\n        let parsedObj;\n        try {\n            parsedObj = parser.parse(encoded, true);\n        }\n        catch (e) {\n            if (e && typeof e === \"object\") {\n                Object.defineProperty(e, \"$responseBodyText\", {\n                    value: encoded,\n                });\n            }\n            throw e;\n        }\n        const textNodeName = \"#text\";\n        const key = Object.keys(parsedObj)[0];\n        const parsedObjToReturn = parsedObj[key];\n        if (parsedObjToReturn[textNodeName]) {\n            parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\n            delete parsedObjToReturn[textNodeName];\n        }\n        return getValueFromTextNode(parsedObjToReturn);\n    }\n    return {};\n});\nexport const parseXmlErrorBody = async (errorBody, context) => {\n    const value = await parseXmlBody(errorBody, context);\n    if (value.Error) {\n        value.Error.message = value.Error.message ?? value.Error.Message;\n    }\n    return value;\n};\nexport const loadRestXmlErrorCode = (output, data) => {\n    if (data?.Error?.Code !== undefined) {\n        return data.Error.Code;\n    }\n    if (data?.Code !== undefined) {\n        return data.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n};\n"],"names":[],"mappings":";;;;;AAAA;AAAA;AACA;AACA;;;;AACO,MAAM,eAAe,CAAC,YAAY,UAAY,CAAA,GAAA,yLAAA,CAAA,oBAAiB,AAAD,EAAE,YAAY,SAAS,IAAI,CAAC,CAAC;QAC9F,IAAI,QAAQ,MAAM,EAAE;YAChB,MAAM,SAAS,IAAI,qJAAA,CAAA,YAAS,CAAC;gBACzB,qBAAqB;gBACrB,cAAc;gBACd,kBAAkB;gBAClB,mBAAmB;gBACnB,eAAe;gBACf,YAAY;gBACZ,mBAAmB,CAAC,GAAG,MAAS,IAAI,IAAI,OAAO,MAAM,IAAI,QAAQ,CAAC,QAAQ,KAAK;YACnF;YACA,OAAO,SAAS,CAAC,OAAO;YACxB,OAAO,SAAS,CAAC,OAAO;YACxB,IAAI;YACJ,IAAI;gBACA,YAAY,OAAO,KAAK,CAAC,SAAS;YACtC,EACA,OAAO,GAAG;gBACN,IAAI,KAAK,OAAO,MAAM,UAAU;oBAC5B,OAAO,cAAc,CAAC,GAAG,qBAAqB;wBAC1C,OAAO;oBACX;gBACJ;gBACA,MAAM;YACV;YACA,MAAM,eAAe;YACrB,MAAM,MAAM,OAAO,IAAI,CAAC,UAAU,CAAC,EAAE;YACrC,MAAM,oBAAoB,SAAS,CAAC,IAAI;YACxC,IAAI,iBAAiB,CAAC,aAAa,EAAE;gBACjC,iBAAiB,CAAC,IAAI,GAAG,iBAAiB,CAAC,aAAa;gBACxD,OAAO,iBAAiB,CAAC,aAAa;YAC1C;YACA,OAAO,CAAA,GAAA,oMAAA,CAAA,uBAAoB,AAAD,EAAE;QAChC;QACA,OAAO,CAAC;IACZ;AACO,MAAM,oBAAoB,OAAO,WAAW;IAC/C,MAAM,QAAQ,MAAM,aAAa,WAAW;IAC5C,IAAI,MAAM,KAAK,EAAE;QACb,MAAM,KAAK,CAAC,OAAO,GAAG,MAAM,KAAK,CAAC,OAAO,IAAI,MAAM,KAAK,CAAC,OAAO;IACpE;IACA,OAAO;AACX;AACO,MAAM,uBAAuB,CAAC,QAAQ;IACzC,IAAI,MAAM,OAAO,SAAS,WAAW;QACjC,OAAO,KAAK,KAAK,CAAC,IAAI;IAC1B;IACA,IAAI,MAAM,SAAS,WAAW;QAC1B,OAAO,KAAK,IAAI;IACpB;IACA,IAAI,OAAO,UAAU,IAAI,KAAK;QAC1B,OAAO;IACX;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1317, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/core/dist-es/submodules/protocols/json/parseJsonBody.js"],"sourcesContent":["import { collectBodyString } from \"../common\";\nexport const parseJsonBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        try {\n            return JSON.parse(encoded);\n        }\n        catch (e) {\n            if (e?.name === \"SyntaxError\") {\n                Object.defineProperty(e, \"$responseBodyText\", {\n                    value: encoded,\n                });\n            }\n            throw e;\n        }\n    }\n    return {};\n});\nexport const parseJsonErrorBody = async (errorBody, context) => {\n    const value = await parseJsonBody(errorBody, context);\n    value.message = value.message ?? value.Message;\n    return value;\n};\nexport const loadRestJsonErrorCode = (output, data) => {\n    const findKey = (object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n    const sanitizeErrorCode = (rawValue) => {\n        let cleanValue = rawValue;\n        if (typeof cleanValue === \"number\") {\n            cleanValue = cleanValue.toString();\n        }\n        if (cleanValue.indexOf(\",\") >= 0) {\n            cleanValue = cleanValue.split(\",\")[0];\n        }\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data.code !== undefined) {\n        return sanitizeErrorCode(data.code);\n    }\n    if (data[\"__type\"] !== undefined) {\n        return sanitizeErrorCode(data[\"__type\"]);\n    }\n};\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,gBAAgB,CAAC,YAAY,UAAY,CAAA,GAAA,yLAAA,CAAA,oBAAiB,AAAD,EAAE,YAAY,SAAS,IAAI,CAAC,CAAC;QAC/F,IAAI,QAAQ,MAAM,EAAE;YAChB,IAAI;gBACA,OAAO,KAAK,KAAK,CAAC;YACtB,EACA,OAAO,GAAG;gBACN,IAAI,GAAG,SAAS,eAAe;oBAC3B,OAAO,cAAc,CAAC,GAAG,qBAAqB;wBAC1C,OAAO;oBACX;gBACJ;gBACA,MAAM;YACV;QACJ;QACA,OAAO,CAAC;IACZ;AACO,MAAM,qBAAqB,OAAO,WAAW;IAChD,MAAM,QAAQ,MAAM,cAAc,WAAW;IAC7C,MAAM,OAAO,GAAG,MAAM,OAAO,IAAI,MAAM,OAAO;IAC9C,OAAO;AACX;AACO,MAAM,wBAAwB,CAAC,QAAQ;IAC1C,MAAM,UAAU,CAAC,QAAQ,MAAQ,OAAO,IAAI,CAAC,QAAQ,IAAI,CAAC,CAAC,IAAM,EAAE,WAAW,OAAO,IAAI,WAAW;IACpG,MAAM,oBAAoB,CAAC;QACvB,IAAI,aAAa;QACjB,IAAI,OAAO,eAAe,UAAU;YAChC,aAAa,WAAW,QAAQ;QACpC;QACA,IAAI,WAAW,OAAO,CAAC,QAAQ,GAAG;YAC9B,aAAa,WAAW,KAAK,CAAC,IAAI,CAAC,EAAE;QACzC;QACA,IAAI,WAAW,OAAO,CAAC,QAAQ,GAAG;YAC9B,aAAa,WAAW,KAAK,CAAC,IAAI,CAAC,EAAE;QACzC;QACA,IAAI,WAAW,OAAO,CAAC,QAAQ,GAAG;YAC9B,aAAa,WAAW,KAAK,CAAC,IAAI,CAAC,EAAE;QACzC;QACA,OAAO;IACX;IACA,MAAM,YAAY,QAAQ,OAAO,OAAO,EAAE;IAC1C,IAAI,cAAc,WAAW;QACzB,OAAO,kBAAkB,OAAO,OAAO,CAAC,UAAU;IACtD;IACA,IAAI,KAAK,IAAI,KAAK,WAAW;QACzB,OAAO,kBAAkB,KAAK,IAAI;IACtC;IACA,IAAI,IAAI,CAAC,SAAS,KAAK,WAAW;QAC9B,OAAO,kBAAkB,IAAI,CAAC,SAAS;IAC3C;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1379, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/credential-provider-env/dist-es/fromEnv.js"],"sourcesContent":["import { setCredentialFeature } from \"@aws-sdk/core/client\";\nimport { CredentialsProviderError } from \"@smithy/property-provider\";\nexport const ENV_KEY = \"AWS_ACCESS_KEY_ID\";\nexport const ENV_SECRET = \"AWS_SECRET_ACCESS_KEY\";\nexport const ENV_SESSION = \"AWS_SESSION_TOKEN\";\nexport const ENV_EXPIRATION = \"AWS_CREDENTIAL_EXPIRATION\";\nexport const ENV_CREDENTIAL_SCOPE = \"AWS_CREDENTIAL_SCOPE\";\nexport const ENV_ACCOUNT_ID = \"AWS_ACCOUNT_ID\";\nexport const fromEnv = (init) => async () => {\n    init?.logger?.debug(\"@aws-sdk/credential-provider-env - fromEnv\");\n    const accessKeyId = process.env[ENV_KEY];\n    const secretAccessKey = process.env[ENV_SECRET];\n    const sessionToken = process.env[ENV_SESSION];\n    const expiry = process.env[ENV_EXPIRATION];\n    const credentialScope = process.env[ENV_CREDENTIAL_SCOPE];\n    const accountId = process.env[ENV_ACCOUNT_ID];\n    if (accessKeyId && secretAccessKey) {\n        const credentials = {\n            accessKeyId,\n            secretAccessKey,\n            ...(sessionToken && { sessionToken }),\n            ...(expiry && { expiration: new Date(expiry) }),\n            ...(credentialScope && { credentialScope }),\n            ...(accountId && { accountId }),\n        };\n        setCredentialFeature(credentials, \"CREDENTIALS_ENV_VARS\", \"g\");\n        return credentials;\n    }\n    throw new CredentialsProviderError(\"Unable to find environment variable credentials.\", { logger: init?.logger });\n};\n"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AAAA;;;AACO,MAAM,UAAU;AAChB,MAAM,aAAa;AACnB,MAAM,cAAc;AACpB,MAAM,iBAAiB;AACvB,MAAM,uBAAuB;AAC7B,MAAM,iBAAiB;AACvB,MAAM,UAAU,CAAC,OAAS;QAC7B,MAAM,QAAQ,MAAM;QACpB,MAAM,cAAc,QAAQ,GAAG,CAAC,QAAQ;QACxC,MAAM,kBAAkB,QAAQ,GAAG,CAAC,WAAW;QAC/C,MAAM,eAAe,QAAQ,GAAG,CAAC,YAAY;QAC7C,MAAM,SAAS,QAAQ,GAAG,CAAC,eAAe;QAC1C,MAAM,kBAAkB,QAAQ,GAAG,CAAC,qBAAqB;QACzD,MAAM,YAAY,QAAQ,GAAG,CAAC,eAAe;QAC7C,IAAI,eAAe,iBAAiB;YAChC,MAAM,cAAc;gBAChB;gBACA;gBACA,GAAI,gBAAgB;oBAAE;gBAAa,CAAC;gBACpC,GAAI,UAAU;oBAAE,YAAY,IAAI,KAAK;gBAAQ,CAAC;gBAC9C,GAAI,mBAAmB;oBAAE;gBAAgB,CAAC;gBAC1C,GAAI,aAAa;oBAAE;gBAAU,CAAC;YAClC;YACA,CAAA,GAAA,oMAAA,CAAA,uBAAoB,AAAD,EAAE,aAAa,wBAAwB;YAC1D,OAAO;QACX;QACA,MAAM,IAAI,4LAAA,CAAA,2BAAwB,CAAC,oDAAoD;YAAE,QAAQ,MAAM;QAAO;IAClH","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1437, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/credential-provider-env/dist-es/index.js"],"sourcesContent":["export * from \"./fromEnv\";\n"],"names":[],"mappings":";AAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1455, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/credential-provider-node/dist-es/remoteProvider.js"],"sourcesContent":["import { chain, CredentialsProviderError } from \"@smithy/property-provider\";\nexport const ENV_IMDS_DISABLED = \"AWS_EC2_METADATA_DISABLED\";\nexport const remoteProvider = async (init) => {\n    const { ENV_CMDS_FULL_URI, ENV_CMDS_RELATIVE_URI, fromContainerMetadata, fromInstanceMetadata } = await import(\"@smithy/credential-provider-imds\");\n    if (process.env[ENV_CMDS_RELATIVE_URI] || process.env[ENV_CMDS_FULL_URI]) {\n        init.logger?.debug(\"@aws-sdk/credential-provider-node - remoteProvider::fromHttp/fromContainerMetadata\");\n        const { fromHttp } = await import(\"@aws-sdk/credential-provider-http\");\n        return chain(fromHttp(init), fromContainerMetadata(init));\n    }\n    if (process.env[ENV_IMDS_DISABLED] && process.env[ENV_IMDS_DISABLED] !== \"false\") {\n        return async () => {\n            throw new CredentialsProviderError(\"EC2 Instance Metadata Service access disabled\", { logger: init.logger });\n        };\n    }\n    init.logger?.debug(\"@aws-sdk/credential-provider-node - remoteProvider::fromInstanceMetadata\");\n    return fromInstanceMetadata(init);\n};\n"],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;;AACO,MAAM,oBAAoB;AAC1B,MAAM,iBAAiB,OAAO;IACjC,MAAM,EAAE,iBAAiB,EAAE,qBAAqB,EAAE,qBAAqB,EAAE,oBAAoB,EAAE,GAAG;IAClG,IAAI,QAAQ,GAAG,CAAC,sBAAsB,IAAI,QAAQ,GAAG,CAAC,kBAAkB,EAAE;QACtE,KAAK,MAAM,EAAE,MAAM;QACnB,MAAM,EAAE,QAAQ,EAAE,GAAG;QACrB,OAAO,CAAA,GAAA,yKAAA,CAAA,QAAK,AAAD,EAAE,SAAS,OAAO,sBAAsB;IACvD;IACA,IAAI,QAAQ,GAAG,CAAC,kBAAkB,IAAI,QAAQ,GAAG,CAAC,kBAAkB,KAAK,SAAS;QAC9E,OAAO;YACH,MAAM,IAAI,4LAAA,CAAA,2BAAwB,CAAC,iDAAiD;gBAAE,QAAQ,KAAK,MAAM;YAAC;QAC9G;IACJ;IACA,KAAK,MAAM,EAAE,MAAM;IACnB,OAAO,qBAAqB;AAChC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1487, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/credential-provider-node/dist-es/defaultProvider.js"],"sourcesContent":["import { ENV_KEY, ENV_SECRET, fromEnv } from \"@aws-sdk/credential-provider-env\";\nimport { chain, CredentialsProviderError, memoize } from \"@smithy/property-provider\";\nimport { ENV_PROFILE } from \"@smithy/shared-ini-file-loader\";\nimport { remoteProvider } from \"./remoteProvider\";\nlet multipleCredentialSourceWarningEmitted = false;\nexport const defaultProvider = (init = {}) => memoize(chain(async () => {\n    const profile = init.profile ?? process.env[ENV_PROFILE];\n    if (profile) {\n        const envStaticCredentialsAreSet = process.env[ENV_KEY] && process.env[ENV_SECRET];\n        if (envStaticCredentialsAreSet) {\n            if (!multipleCredentialSourceWarningEmitted) {\n                const warnFn = init.logger?.warn && init.logger?.constructor?.name !== \"NoOpLogger\" ? init.logger.warn : console.warn;\n                warnFn(`@aws-sdk/credential-provider-node - defaultProvider::fromEnv WARNING:\n    Multiple credential sources detected: \n    Both AWS_PROFILE and the pair AWS_ACCESS_KEY_ID/AWS_SECRET_ACCESS_KEY static credentials are set.\n    This SDK will proceed with the AWS_PROFILE value.\n    \n    However, a future version may change this behavior to prefer the ENV static credentials.\n    Please ensure that your environment only sets either the AWS_PROFILE or the\n    AWS_ACCESS_KEY_ID/AWS_SECRET_ACCESS_KEY pair.\n`);\n                multipleCredentialSourceWarningEmitted = true;\n            }\n        }\n        throw new CredentialsProviderError(\"AWS_PROFILE is set, skipping fromEnv provider.\", {\n            logger: init.logger,\n            tryNextLink: true,\n        });\n    }\n    init.logger?.debug(\"@aws-sdk/credential-provider-node - defaultProvider::fromEnv\");\n    return fromEnv(init)();\n}, async () => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-node - defaultProvider::fromSSO\");\n    const { ssoStartUrl, ssoAccountId, ssoRegion, ssoRoleName, ssoSession } = init;\n    if (!ssoStartUrl && !ssoAccountId && !ssoRegion && !ssoRoleName && !ssoSession) {\n        throw new CredentialsProviderError(\"Skipping SSO provider in default chain (inputs do not include SSO fields).\", { logger: init.logger });\n    }\n    const { fromSSO } = await import(\"@aws-sdk/credential-provider-sso\");\n    return fromSSO(init)();\n}, async () => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-node - defaultProvider::fromIni\");\n    const { fromIni } = await import(\"@aws-sdk/credential-provider-ini\");\n    return fromIni(init)();\n}, async () => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-node - defaultProvider::fromProcess\");\n    const { fromProcess } = await import(\"@aws-sdk/credential-provider-process\");\n    return fromProcess(init)();\n}, async () => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-node - defaultProvider::fromTokenFile\");\n    const { fromTokenFile } = await import(\"@aws-sdk/credential-provider-web-identity\");\n    return fromTokenFile(init)();\n}, async () => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-node - defaultProvider::remoteProvider\");\n    return (await remoteProvider(init))();\n}, async () => {\n    throw new CredentialsProviderError(\"Could not load credentials from any providers\", {\n        tryNextLink: false,\n        logger: init.logger,\n    });\n}), credentialsTreatedAsExpired, credentialsWillNeedRefresh);\nexport const credentialsWillNeedRefresh = (credentials) => credentials?.expiration !== undefined;\nexport const credentialsTreatedAsExpired = (credentials) => credentials?.expiration !== undefined && credentials.expiration.getTime() - Date.now() < 300000;\n"],"names":[],"mappings":";;;;;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;;;;;AACA,IAAI,yCAAyC;AACtC,MAAM,kBAAkB,CAAC,OAAO,CAAC,CAAC,GAAK,CAAA,GAAA,2KAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,yKAAA,CAAA,QAAK,AAAD,EAAE;QACxD,MAAM,UAAU,KAAK,OAAO,IAAI,QAAQ,GAAG,CAAC,6LAAA,CAAA,cAAW,CAAC;QACxD,IAAI,SAAS;YACT,MAAM,6BAA6B,QAAQ,GAAG,CAAC,wLAAA,CAAA,UAAO,CAAC,IAAI,QAAQ,GAAG,CAAC,wLAAA,CAAA,aAAU,CAAC;YAClF,IAAI,4BAA4B;gBAC5B,IAAI,CAAC,wCAAwC;oBACzC,MAAM,SAAS,KAAK,MAAM,EAAE,QAAQ,KAAK,MAAM,EAAE,aAAa,SAAS,eAAe,KAAK,MAAM,CAAC,IAAI,GAAG,QAAQ,IAAI;oBACrH,OAAO,CAAC;;;;;;;;AAQxB,CAAC;oBACe,yCAAyC;gBAC7C;YACJ;YACA,MAAM,IAAI,4LAAA,CAAA,2BAAwB,CAAC,kDAAkD;gBACjF,QAAQ,KAAK,MAAM;gBACnB,aAAa;YACjB;QACJ;QACA,KAAK,MAAM,EAAE,MAAM;QACnB,OAAO,CAAA,GAAA,wLAAA,CAAA,UAAO,AAAD,EAAE;IACnB,GAAG;QACC,KAAK,MAAM,EAAE,MAAM;QACnB,MAAM,EAAE,WAAW,EAAE,YAAY,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,GAAG;QAC1E,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,aAAa,CAAC,eAAe,CAAC,YAAY;YAC5E,MAAM,IAAI,4LAAA,CAAA,2BAAwB,CAAC,8EAA8E;gBAAE,QAAQ,KAAK,MAAM;YAAC;QAC3I;QACA,MAAM,EAAE,OAAO,EAAE,GAAG;QACpB,OAAO,QAAQ;IACnB,GAAG;QACC,KAAK,MAAM,EAAE,MAAM;QACnB,MAAM,EAAE,OAAO,EAAE,GAAG;QACpB,OAAO,QAAQ;IACnB,GAAG;QACC,KAAK,MAAM,EAAE,MAAM;QACnB,MAAM,EAAE,WAAW,EAAE,GAAG;QACxB,OAAO,YAAY;IACvB,GAAG;QACC,KAAK,MAAM,EAAE,MAAM;QACnB,MAAM,EAAE,aAAa,EAAE,GAAG;QAC1B,OAAO,cAAc;IACzB,GAAG;QACC,KAAK,MAAM,EAAE,MAAM;QACnB,OAAO,CAAC,MAAM,CAAA,GAAA,gMAAA,CAAA,iBAAc,AAAD,EAAE,KAAK;IACtC,GAAG;QACC,MAAM,IAAI,4LAAA,CAAA,2BAAwB,CAAC,iDAAiD;YAChF,aAAa;YACb,QAAQ,KAAK,MAAM;QACvB;IACJ,IAAI,6BAA6B;AAC1B,MAAM,6BAA6B,CAAC,cAAgB,aAAa,eAAe;AAChF,MAAM,8BAA8B,CAAC,cAAgB,aAAa,eAAe,aAAa,YAAY,UAAU,CAAC,OAAO,KAAK,KAAK,GAAG,KAAK","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1571, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/credential-provider-node/dist-es/index.js"],"sourcesContent":["export * from \"./defaultProvider\";\n"],"names":[],"mappings":";AAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1589, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/util-user-agent-node/dist-es/crt-availability.js"],"sourcesContent":["export const crtAvailability = {\n    isCrtAvailable: false,\n};\n"],"names":[],"mappings":";;;AAAO,MAAM,kBAAkB;IAC3B,gBAAgB;AACpB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1601, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/util-user-agent-node/dist-es/is-crt-available.js"],"sourcesContent":["import { crtAvailability } from \"./crt-availability\";\nexport const isCrtAvailable = () => {\n    if (crtAvailability.isCrtAvailable) {\n        return [\"md/crt-avail\"];\n    }\n    return null;\n};\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,iBAAiB;IAC1B,IAAI,oMAAA,CAAA,kBAAe,CAAC,cAAc,EAAE;QAChC,OAAO;YAAC;SAAe;IAC3B;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1620, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/util-user-agent-node/dist-es/defaultUserAgent.js"],"sourcesContent":["import { platform, release } from \"os\";\nimport { env, versions } from \"process\";\nimport { isCrtAvailable } from \"./is-crt-available\";\nexport { crtAvailability } from \"./crt-availability\";\nexport const createDefaultUserAgentProvider = ({ serviceId, clientVersion }) => {\n    return async (config) => {\n        const sections = [\n            [\"aws-sdk-js\", clientVersion],\n            [\"ua\", \"2.1\"],\n            [`os/${platform()}`, release()],\n            [\"lang/js\"],\n            [\"md/nodejs\", `${versions.node}`],\n        ];\n        const crtAvailable = isCrtAvailable();\n        if (crtAvailable) {\n            sections.push(crtAvailable);\n        }\n        if (serviceId) {\n            sections.push([`api/${serviceId}`, clientVersion]);\n        }\n        if (env.AWS_EXECUTION_ENV) {\n            sections.push([`exec-env/${env.AWS_EXECUTION_ENV}`]);\n        }\n        const appId = await config?.userAgentAppId?.();\n        const resolvedUserAgent = appId ? [...sections, [`app/${appId}`]] : [...sections];\n        return resolvedUserAgent;\n    };\n};\nexport const defaultUserAgent = createDefaultUserAgentProvider;\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;AACO,MAAM,iCAAiC,CAAC,EAAE,SAAS,EAAE,aAAa,EAAE;IACvE,OAAO,OAAO;QACV,MAAM,WAAW;YACb;gBAAC;gBAAc;aAAc;YAC7B;gBAAC;gBAAM;aAAM;YACb;gBAAC,CAAC,GAAG,EAAE,CAAA,GAAA,6FAAA,CAAA,WAAQ,AAAD,KAAK;gBAAE,CAAA,GAAA,6FAAA,CAAA,UAAO,AAAD;aAAI;YAC/B;gBAAC;aAAU;YACX;gBAAC;gBAAa,GAAG,uGAAA,CAAA,WAAQ,CAAC,IAAI,EAAE;aAAC;SACpC;QACD,MAAM,eAAe,CAAA,GAAA,uMAAA,CAAA,iBAAc,AAAD;QAClC,IAAI,cAAc;YACd,SAAS,IAAI,CAAC;QAClB;QACA,IAAI,WAAW;YACX,SAAS,IAAI,CAAC;gBAAC,CAAC,IAAI,EAAE,WAAW;gBAAE;aAAc;QACrD;QACA,IAAI,uGAAA,CAAA,MAAG,CAAC,iBAAiB,EAAE;YACvB,SAAS,IAAI,CAAC;gBAAC,CAAC,SAAS,EAAE,uGAAA,CAAA,MAAG,CAAC,iBAAiB,EAAE;aAAC;QACvD;QACA,MAAM,QAAQ,MAAM,QAAQ;QAC5B,MAAM,oBAAoB,QAAQ;eAAI;YAAU;gBAAC,CAAC,IAAI,EAAE,OAAO;aAAC;SAAC,GAAG;eAAI;SAAS;QACjF,OAAO;IACX;AACJ;AACO,MAAM,mBAAmB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1701, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/util-user-agent-node/dist-es/nodeAppIdConfigOptions.js"],"sourcesContent":["import { DEFAULT_UA_APP_ID } from \"@aws-sdk/middleware-user-agent\";\nexport const UA_APP_ID_ENV_NAME = \"AWS_SDK_UA_APP_ID\";\nexport const UA_APP_ID_INI_NAME = \"sdk_ua_app_id\";\nconst UA_APP_ID_INI_NAME_DEPRECATED = \"sdk-ua-app-id\";\nexport const NODE_APP_ID_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[UA_APP_ID_ENV_NAME],\n    configFileSelector: (profile) => profile[UA_APP_ID_INI_NAME] ?? profile[UA_APP_ID_INI_NAME_DEPRECATED],\n    default: DEFAULT_UA_APP_ID,\n};\n"],"names":[],"mappings":";;;;;AAAA;AAAA;;AACO,MAAM,qBAAqB;AAC3B,MAAM,qBAAqB;AAClC,MAAM,gCAAgC;AAC/B,MAAM,6BAA6B;IACtC,6BAA6B,CAAC,MAAQ,GAAG,CAAC,mBAAmB;IAC7D,oBAAoB,CAAC,UAAY,OAAO,CAAC,mBAAmB,IAAI,OAAO,CAAC,8BAA8B;IACtG,SAAS,6LAAA,CAAA,oBAAiB;AAC9B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1723, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/util-user-agent-node/dist-es/index.js"],"sourcesContent":["export * from \"./defaultUserAgent\";\nexport * from \"./nodeAppIdConfigOptions\";\n"],"names":[],"mappings":";AAAA;AACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1744, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/region-config-resolver/dist-es/extensions/index.js"],"sourcesContent":["export const getAwsRegionExtensionConfiguration = (runtimeConfig) => {\n    return {\n        setRegion(region) {\n            runtimeConfig.region = region;\n        },\n        region() {\n            return runtimeConfig.region;\n        },\n    };\n};\nexport const resolveAwsRegionExtensionConfiguration = (awsRegionExtensionConfiguration) => {\n    return {\n        region: awsRegionExtensionConfiguration.region(),\n    };\n};\n"],"names":[],"mappings":";;;;AAAO,MAAM,qCAAqC,CAAC;IAC/C,OAAO;QACH,WAAU,MAAM;YACZ,cAAc,MAAM,GAAG;QAC3B;QACA;YACI,OAAO,cAAc,MAAM;QAC/B;IACJ;AACJ;AACO,MAAM,yCAAyC,CAAC;IACnD,OAAO;QACH,QAAQ,gCAAgC,MAAM;IAClD;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1769, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/region-config-resolver/dist-es/regionConfig/config.js"],"sourcesContent":["export const REGION_ENV_NAME = \"AWS_REGION\";\nexport const REGION_INI_NAME = \"region\";\nexport const NODE_REGION_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[REGION_ENV_NAME],\n    configFileSelector: (profile) => profile[REGION_INI_NAME],\n    default: () => {\n        throw new Error(\"Region is missing\");\n    },\n};\nexport const NODE_REGION_CONFIG_FILE_OPTIONS = {\n    preferredFile: \"credentials\",\n};\n"],"names":[],"mappings":";;;;;;AAAO,MAAM,kBAAkB;AACxB,MAAM,kBAAkB;AACxB,MAAM,6BAA6B;IACtC,6BAA6B,CAAC,MAAQ,GAAG,CAAC,gBAAgB;IAC1D,oBAAoB,CAAC,UAAY,OAAO,CAAC,gBAAgB;IACzD,SAAS;QACL,MAAM,IAAI,MAAM;IACpB;AACJ;AACO,MAAM,kCAAkC;IAC3C,eAAe;AACnB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1793, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/region-config-resolver/dist-es/regionConfig/isFipsRegion.js"],"sourcesContent":["export const isFipsRegion = (region) => typeof region === \"string\" && (region.startsWith(\"fips-\") || region.endsWith(\"-fips\"));\n"],"names":[],"mappings":";;;AAAO,MAAM,eAAe,CAAC,SAAW,OAAO,WAAW,YAAY,CAAC,OAAO,UAAU,CAAC,YAAY,OAAO,QAAQ,CAAC,QAAQ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1803, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/region-config-resolver/dist-es/regionConfig/getRealRegion.js"],"sourcesContent":["import { isFipsRegion } from \"./isFipsRegion\";\nexport const getRealRegion = (region) => isFipsRegion(region)\n    ? [\"fips-aws-global\", \"aws-fips\"].includes(region)\n        ? \"us-east-1\"\n        : region.replace(/fips-(dkr-|prod-)?|-fips/, \"\")\n    : region;\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAC,SAAW,CAAA,GAAA,4MAAA,CAAA,eAAY,AAAD,EAAE,UAChD;QAAC;QAAmB;KAAW,CAAC,QAAQ,CAAC,UACrC,cACA,OAAO,OAAO,CAAC,4BAA4B,MAC/C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1818, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/region-config-resolver/dist-es/regionConfig/resolveRegionConfig.js"],"sourcesContent":["import { getRealRegion } from \"./getRealRegion\";\nimport { isFipsRegion } from \"./isFipsRegion\";\nexport const resolveRegionConfig = (input) => {\n    const { region, useFipsEndpoint } = input;\n    if (!region) {\n        throw new Error(\"Region is missing\");\n    }\n    return Object.assign(input, {\n        region: async () => {\n            if (typeof region === \"string\") {\n                return getRealRegion(region);\n            }\n            const providedRegion = await region();\n            return getRealRegion(providedRegion);\n        },\n        useFipsEndpoint: async () => {\n            const providedRegion = typeof region === \"string\" ? region : await region();\n            if (isFipsRegion(providedRegion)) {\n                return true;\n            }\n            return typeof useFipsEndpoint !== \"function\" ? Promise.resolve(!!useFipsEndpoint) : useFipsEndpoint();\n        },\n    });\n};\n"],"names":[],"mappings":";;;AAAA;AACA;;;AACO,MAAM,sBAAsB,CAAC;IAChC,MAAM,EAAE,MAAM,EAAE,eAAe,EAAE,GAAG;IACpC,IAAI,CAAC,QAAQ;QACT,MAAM,IAAI,MAAM;IACpB;IACA,OAAO,OAAO,MAAM,CAAC,OAAO;QACxB,QAAQ;YACJ,IAAI,OAAO,WAAW,UAAU;gBAC5B,OAAO,CAAA,GAAA,6MAAA,CAAA,gBAAa,AAAD,EAAE;YACzB;YACA,MAAM,iBAAiB,MAAM;YAC7B,OAAO,CAAA,GAAA,6MAAA,CAAA,gBAAa,AAAD,EAAE;QACzB;QACA,iBAAiB;YACb,MAAM,iBAAiB,OAAO,WAAW,WAAW,SAAS,MAAM;YACnE,IAAI,CAAA,GAAA,4MAAA,CAAA,eAAY,AAAD,EAAE,iBAAiB;gBAC9B,OAAO;YACX;YACA,OAAO,OAAO,oBAAoB,aAAa,QAAQ,OAAO,CAAC,CAAC,CAAC,mBAAmB;QACxF;IACJ;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1853, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/region-config-resolver/dist-es/regionConfig/index.js"],"sourcesContent":["export * from \"./config\";\nexport * from \"./resolveRegionConfig\";\n"],"names":[],"mappings":";AAAA;AACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1874, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/node_modules/%40aws-sdk/region-config-resolver/dist-es/index.js"],"sourcesContent":["export * from \"./extensions\";\nexport * from \"./regionConfig\";\n"],"names":[],"mappings":";AAAA;AACA","ignoreList":[0],"debugId":null}}]
}