{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 12, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/app/dashboard/iam-advanced/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport DashboardTitle from \"@/components/dashboard/DashboardTitle\";\r\nimport { Card } from \"@/components/ui/card\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport { useCredentials } from \"@/hooks/useCredentials\";\r\nimport { Skeleton } from \"@/components/ui/skeleton\";\r\n\r\ninterface IAMRole {\r\n  RoleName: string;\r\n  RoleId: string;\r\n  Arn: string;\r\n  CreateDate: string;\r\n  Description?: string;\r\n  AssumeRolePolicyDocument?: string;\r\n}\r\n\r\ninterface IAMPolicy {\r\n  PolicyName: string;\r\n  PolicyId: string;\r\n  Arn: string;\r\n  CreateDate: string;\r\n  Description?: string;\r\n  IsAttachable?: boolean;\r\n  AttachmentCount?: number;\r\n  DefaultVersionId?: string;\r\n}\r\n\r\ninterface IAMGroup {\r\n  GroupName: string;\r\n  GroupId: string;\r\n  Arn: string;\r\n  CreateDate: string;\r\n}\r\n\r\nexport default function IAMAdvancedPage() {\r\n  const { credentials, loading: credentialsLoading } = useCredentials();\r\n  const [selectedCredential, setSelectedCredential] = useState<string>(\"\");\r\n  const [activeTab, setActiveTab] = useState<string>(\"roles\");\r\n  \r\n  const [roles, setRoles] = useState<IAMRole[]>([]);\r\n  const [groups, setGroups] = useState<IAMGroup[]>([]);\r\n  const [policies, setPolicies] = useState<IAMPolicy[]>([]);\r\n  \r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (credentials && credentials.length > 0 && !selectedCredential) {\r\n      setSelectedCredential(credentials[0].id);\r\n    }\r\n  }, [credentials, selectedCredential]);\r\n\r\n  useEffect(() => {\r\n    if (selectedCredential && activeTab) {\r\n      fetchData();\r\n    }\r\n  }, [selectedCredential, activeTab]);\r\n\r\n  const fetchData = async () => {\r\n    if (!selectedCredential) return;\r\n\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      let endpoint = \"\";\r\n      \r\n      switch (activeTab) {\r\n        case \"roles\":\r\n          endpoint = `/api/aws/iam-advanced/roles?credentialId=${selectedCredential}`;\r\n          break;\r\n        case \"groups\":\r\n          endpoint = `/api/aws/iam-advanced/groups?credentialId=${selectedCredential}`;\r\n          break;\r\n        case \"policies\":\r\n          endpoint = `/api/aws/iam-advanced/policies?credentialId=${selectedCredential}`;\r\n          break;\r\n        default:\r\n          throw new Error(\"Tab inválida\");\r\n      }\r\n      \r\n      const response = await fetch(endpoint);\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.error || `Falha ao obter dados do IAM para ${activeTab}`);\r\n      }\r\n\r\n      switch (activeTab) {\r\n        case \"roles\":\r\n          setRoles(data.roles || []);\r\n          break;\r\n        case \"groups\":\r\n          setGroups(data.groups || []);\r\n          break;\r\n        case \"policies\":\r\n          setPolicies(data.policies || []);\r\n          break;\r\n      }\r\n    } catch (err: any) {\r\n      console.error(`Erro ao buscar dados do IAM para ${activeTab}:`, err);\r\n      setError(err.message || `Ocorreu um erro ao buscar os dados do IAM para ${activeTab}`);\r\n      toast.error(`Erro ao carregar dados do IAM para ${activeTab}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString(\"pt-BR\", {\r\n      day: \"2-digit\",\r\n      month: \"2-digit\",\r\n      year: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\"\r\n    });\r\n  };\r\n\r\n  // Renderiza a tabela de perfis (roles)\r\n  const renderRolesTable = () => {\r\n    if (loading) {\r\n      return (\r\n        <div className=\"space-y-4\">\r\n          {[1, 2, 3].map((i) => (\r\n            <div key={i} className=\"flex flex-col gap-2\">\r\n              <Skeleton className=\"h-8 w-full\" />\r\n              <Skeleton className=\"h-16 w-full\" />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (roles.length === 0) {\r\n      return (\r\n        <div className=\"text-center py-8 text-gray-500\">\r\n          Nenhum perfil IAM encontrado. Crie um novo perfil ou selecione outra credencial.\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"overflow-x-auto\">\r\n        <table className=\"min-w-full divide-y divide-gray-200\">\r\n          <thead className=\"bg-gray-50\">\r\n            <tr>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                Nome do Perfil\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                ID\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                Data de Criação\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                Descrição\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                Ações\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"bg-white divide-y divide-gray-200\">\r\n            {roles.map((role) => (\r\n              <tr key={role.RoleId} className=\"hover:bg-gray-50\">\r\n                <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                  <div className=\"text-sm font-medium text-gray-900\">{role.RoleName}</div>\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                  <div className=\"text-sm text-gray-500 truncate max-w-xs\">{role.RoleId}</div>\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                  {formatDate(role.CreateDate)}\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                  <div className=\"text-sm text-gray-900\">{role.Description || \"Sem descrição\"}</div>\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                  <div className=\"flex space-x-2\">\r\n                    <button\r\n                      onClick={() => {\r\n                        toast.error(\"Funcionalidade não implementada\");\r\n                      }}\r\n                      className=\"text-indigo-600 hover:text-indigo-900\"\r\n                    >\r\n                      Ver Políticas\r\n                    </button>\r\n                    <button\r\n                      onClick={() => {\r\n                        toast.error(\"Funcionalidade não implementada\");\r\n                      }}\r\n                      className=\"text-red-600 hover:text-red-900\"\r\n                    >\r\n                      Excluir\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Renderiza a tabela de grupos\r\n  const renderGroupsTable = () => {\r\n    if (loading) {\r\n      return (\r\n        <div className=\"space-y-4\">\r\n          {[1, 2, 3].map((i) => (\r\n            <div key={i} className=\"flex flex-col gap-2\">\r\n              <Skeleton className=\"h-8 w-full\" />\r\n              <Skeleton className=\"h-16 w-full\" />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (groups.length === 0) {\r\n      return (\r\n        <div className=\"text-center py-8 text-gray-500\">\r\n          Nenhum grupo IAM encontrado. Crie um novo grupo ou selecione outra credencial.\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"overflow-x-auto\">\r\n        <table className=\"min-w-full divide-y divide-gray-200\">\r\n          <thead className=\"bg-gray-50\">\r\n            <tr>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                Nome do Grupo\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                ID\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                Data de Criação\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                Ações\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"bg-white divide-y divide-gray-200\">\r\n            {groups.map((group) => (\r\n              <tr key={group.GroupId} className=\"hover:bg-gray-50\">\r\n                <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                  <div className=\"text-sm font-medium text-gray-900\">{group.GroupName}</div>\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                  <div className=\"text-sm text-gray-500 truncate max-w-xs\">{group.GroupId}</div>\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                  {formatDate(group.CreateDate)}\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                  <div className=\"flex space-x-2\">\r\n                    <button\r\n                      onClick={() => {\r\n                        toast.error(\"Funcionalidade não implementada\");\r\n                      }}\r\n                      className=\"text-indigo-600 hover:text-indigo-900\"\r\n                    >\r\n                      Ver Usuários\r\n                    </button>\r\n                    <button\r\n                      onClick={() => {\r\n                        toast.error(\"Funcionalidade não implementada\");\r\n                      }}\r\n                      className=\"text-blue-600 hover:text-blue-900\"\r\n                    >\r\n                      Ver Políticas\r\n                    </button>\r\n                    <button\r\n                      onClick={() => {\r\n                        toast.error(\"Funcionalidade não implementada\");\r\n                      }}\r\n                      className=\"text-red-600 hover:text-red-900\"\r\n                    >\r\n                      Excluir\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Renderiza a tabela de políticas\r\n  const renderPoliciesTable = () => {\r\n    if (loading) {\r\n      return (\r\n        <div className=\"space-y-4\">\r\n          {[1, 2, 3].map((i) => (\r\n            <div key={i} className=\"flex flex-col gap-2\">\r\n              <Skeleton className=\"h-8 w-full\" />\r\n              <Skeleton className=\"h-16 w-full\" />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (policies.length === 0) {\r\n      return (\r\n        <div className=\"text-center py-8 text-gray-500\">\r\n          Nenhuma política IAM encontrada. Crie uma nova política ou selecione outra credencial.\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"overflow-x-auto\">\r\n        <table className=\"min-w-full divide-y divide-gray-200\">\r\n          <thead className=\"bg-gray-50\">\r\n            <tr>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                Nome da Política\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                ID\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                Data de Criação\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                Anexada\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                Contagem de Anexos\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                Ações\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"bg-white divide-y divide-gray-200\">\r\n            {policies.map((policy) => (\r\n              <tr key={policy.PolicyId} className=\"hover:bg-gray-50\">\r\n                <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                  <div className=\"text-sm font-medium text-gray-900\">{policy.PolicyName}</div>\r\n                  <div className=\"text-xs text-gray-500\">{policy.Description || \"Sem descrição\"}</div>\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                  <div className=\"text-sm text-gray-500 truncate max-w-xs\">{policy.PolicyId}</div>\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                  {formatDate(policy.CreateDate)}\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                  {policy.IsAttachable ? \"Sim\" : \"Não\"}\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                  {policy.AttachmentCount || 0}\r\n                </td>\r\n                <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                  <div className=\"flex space-x-2\">\r\n                    <button\r\n                      onClick={() => {\r\n                        toast.error(\"Funcionalidade não implementada\");\r\n                      }}\r\n                      className=\"text-indigo-600 hover:text-indigo-900\"\r\n                    >\r\n                      Ver Documento\r\n                    </button>\r\n                    <button\r\n                      onClick={() => {\r\n                        toast.error(\"Funcionalidade não implementada\");\r\n                      }}\r\n                      className=\"text-red-600 hover:text-red-900\"\r\n                    >\r\n                      Excluir\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-6\">\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.5 }}\r\n      >\r\n        <DashboardTitle\r\n          title=\"IAM Avançado\"\r\n          description=\"Gerencie perfis, grupos e políticas do AWS Identity and Access Management\"\r\n        />\r\n\r\n        <div className=\"my-6\">\r\n          <Card className=\"p-6\">\r\n            <div className=\"flex flex-col md:flex-row justify-between mb-6 gap-4\">\r\n              <div className=\"flex flex-col md:flex-row gap-4 items-center\">\r\n                <select\r\n                  value={selectedCredential}\r\n                  onChange={(e) => setSelectedCredential(e.target.value)}\r\n                  disabled={credentialsLoading}\r\n                  className=\"px-3 py-2 rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent\"\r\n                >\r\n                  {credentialsLoading ? (\r\n                    <option>Carregando credenciais...</option>\r\n                  ) : (\r\n                    credentials.map((cred) => (\r\n                      <option key={cred.id} value={cred.id}>\r\n                        {cred.name} ({cred.accountId})\r\n                      </option>\r\n                    ))\r\n                  )}\r\n                </select>\r\n\r\n                <Button\r\n                  onClick={fetchData}\r\n                  disabled={loading || !selectedCredential}\r\n                  className=\"bg-indigo-600 hover:bg-indigo-700 text-white\"\r\n                >\r\n                  {loading ? \"Carregando...\" : \"Atualizar\"}\r\n                </Button>\r\n              </div>\r\n\r\n              <Button\r\n                onClick={() => {\r\n                  toast.error(`Funcionalidade de criar ${\r\n                    activeTab === \"roles\" ? \"perfil\" : \r\n                    activeTab === \"groups\" ? \"grupo\" : \"política\"\r\n                  } ainda não implementada`);\r\n                }}\r\n                className=\"bg-green-600 hover:bg-green-700 text-white\"\r\n              >\r\n                Criar {activeTab === \"roles\" ? \"Perfil\" : activeTab === \"groups\" ? \"Grupo\" : \"Política\"}\r\n              </Button>\r\n            </div>\r\n\r\n            {error && (\r\n              <div className=\"bg-red-100 text-red-800 p-4 mb-6 rounded-md\">\r\n                {error}\r\n              </div>\r\n            )}\r\n\r\n            <Tabs \r\n              defaultValue=\"roles\" \r\n              value={activeTab}\r\n              onValueChange={(value) => setActiveTab(value)}\r\n              className=\"mt-6\"\r\n            >\r\n              <TabsList className=\"grid grid-cols-3 mb-8\">\r\n                <TabsTrigger value=\"roles\">Perfis (Roles)</TabsTrigger>\r\n                <TabsTrigger value=\"groups\">Grupos</TabsTrigger>\r\n                <TabsTrigger value=\"policies\">Políticas</TabsTrigger>\r\n              </TabsList>\r\n              \r\n              <TabsContent value=\"roles\" className=\"mt-6\">\r\n                {renderRolesTable()}\r\n              </TabsContent>\r\n              \r\n              <TabsContent value=\"groups\" className=\"mt-6\">\r\n                {renderGroupsTable()}\r\n              </TabsContent>\r\n              \r\n              <TabsContent value=\"policies\" className=\"mt-6\">\r\n                {renderPoliciesTable()}\r\n              </TabsContent>\r\n            </Tabs>\r\n          </Card>\r\n        </div>\r\n\r\n        <div className=\"mt-8\">\r\n          <Card className=\"p-6\">\r\n            <h3 className=\"text-lg font-medium mb-4\">Gerenciamento IAM Avançado</h3>\r\n            <div className=\"space-y-4 text-sm text-gray-600\">\r\n              <p>\r\n                <strong>AWS IAM</strong> (Identity and Access Management) permite controlar o acesso aos serviços e recursos AWS de forma segura.\r\n              </p>\r\n              <ul className=\"list-disc pl-5 space-y-2\">\r\n                <li><strong>Perfis (Roles):</strong> Identidades que podem ser assumidas por usuários, serviços ou aplicações. São úteis para delegar acesso temporário.</li>\r\n                <li><strong>Grupos:</strong> Coleções de usuários IAM. Você pode atribuir permissões a um grupo para simplificar o gerenciamento.</li>\r\n                <li><strong>Políticas:</strong> Documentos que definem permissões. Podem ser anexadas a identidades (usuários, grupos, perfis) ou recursos.</li>\r\n              </ul>\r\n              <p className=\"text-yellow-600\">\r\n                <strong>Melhores práticas:</strong> Siga o princípio do menor privilégio, concedendo apenas as permissões necessárias. Utilize políticas gerenciadas quando possível e configure MFA para maior segurança.\r\n              </p>\r\n            </div>\r\n          </Card>\r\n        </div>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}}]
}