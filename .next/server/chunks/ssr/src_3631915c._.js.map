{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/hooks/useAlerts.ts"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useCallback, useEffect } from \"react\";\r\n\r\ninterface Alert {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  resourceId: string;\r\n  resourceType: string;\r\n  severity: string;\r\n  status: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\ninterface AlertFilters {\r\n  status?: string;\r\n  severity?: string;\r\n  resourceType?: string;\r\n}\r\n\r\ninterface UseAlertsResult {\r\n  alerts: Alert[];\r\n  loading: boolean;\r\n  error: string | null;\r\n  filters: AlertFilters;\r\n  setFilters: (filters: AlertFilters) => void;\r\n  fetchAlerts: () => Promise<void>;\r\n  dismissAlert: (id: string) => Promise<boolean>;\r\n  resolveAlert: (id: string) => Promise<boolean>;\r\n}\r\n\r\nexport function useAlerts(): UseAlertsResult {\r\n  const [alerts, setAlerts] = useState<Alert[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [filters, setFilters] = useState<AlertFilters>({});\r\n\r\n  const fetchAlerts = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      let url = \"/api/alerts\";\r\n      const params = new URLSearchParams();\r\n      \r\n      if (filters.status) {\r\n        params.append(\"status\", filters.status);\r\n      }\r\n      if (filters.severity) {\r\n        params.append(\"severity\", filters.severity);\r\n      }\r\n      if (filters.resourceType) {\r\n        params.append(\"resourceType\", filters.resourceType);\r\n      }\r\n      \r\n      if (params.toString()) {\r\n        url += `?${params.toString()}`;\r\n      }\r\n      \r\n      const response = await fetch(url);\r\n      \r\n      if (!response.ok) {\r\n        const { error } = await response.json();\r\n        throw new Error(error || \"Erro ao buscar alertas\");\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setAlerts(data.alerts || []);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : \"Erro ao buscar alertas\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [filters]);\r\n\r\n  const updateAlertStatus = useCallback(async (id: string, action: \"dismiss\" | \"resolve\") => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await fetch(\"/api/alerts\", {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          id,\r\n          action,\r\n        }),\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const { error } = await response.json();\r\n        throw new Error(error || `Erro ao ${action === \"dismiss\" ? \"arquivar\" : \"resolver\"} alerta`);\r\n      }\r\n      \r\n      // Atualizar lista de alertas\r\n      await fetchAlerts();\r\n      return true;\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : `Erro ao ${action === \"dismiss\" ? \"arquivar\" : \"resolver\"} alerta`);\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [fetchAlerts]);\r\n\r\n  const dismissAlert = useCallback((id: string) => {\r\n    return updateAlertStatus(id, \"dismiss\");\r\n  }, [updateAlertStatus]);\r\n\r\n  const resolveAlert = useCallback((id: string) => {\r\n    return updateAlertStatus(id, \"resolve\");\r\n  }, [updateAlertStatus]);\r\n\r\n  // Buscar alertas ao montar o componente ou quando os filtros mudarem\r\n  useEffect(() => {\r\n    fetchAlerts();\r\n  }, [fetchAlerts]);\r\n\r\n  return {\r\n    alerts,\r\n    loading,\r\n    error,\r\n    filters,\r\n    setFilters,\r\n    fetchAlerts,\r\n    dismissAlert,\r\n    resolveAlert,\r\n  };\r\n} "],"names":[],"mappings":";;;AAEA;AAFA;;AAiCO,SAAS;IACd,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW,EAAE;IAChD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IAChD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAgB,CAAC;IAEtD,MAAM,cAAc,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QAC9B,IAAI;YACF,WAAW;YACX,SAAS;YAET,IAAI,MAAM;YACV,MAAM,SAAS,IAAI;YAEnB,IAAI,QAAQ,MAAM,EAAE;gBAClB,OAAO,MAAM,CAAC,UAAU,QAAQ,MAAM;YACxC;YACA,IAAI,QAAQ,QAAQ,EAAE;gBACpB,OAAO,MAAM,CAAC,YAAY,QAAQ,QAAQ;YAC5C;YACA,IAAI,QAAQ,YAAY,EAAE;gBACxB,OAAO,MAAM,CAAC,gBAAgB,QAAQ,YAAY;YACpD;YAEA,IAAI,OAAO,QAAQ,IAAI;gBACrB,OAAO,CAAC,CAAC,EAAE,OAAO,QAAQ,IAAI;YAChC;YAEA,MAAM,WAAW,MAAM,MAAM;YAE7B,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI;gBACrC,MAAM,IAAI,MAAM,SAAS;YAC3B;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,UAAU,KAAK,MAAM,IAAI,EAAE;QAC7B,EAAE,OAAO,KAAK;YACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;QAChD,SAAU;YACR,WAAW;QACb;IACF,GAAG;QAAC;KAAQ;IAEZ,MAAM,oBAAoB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,OAAO,IAAY;QACvD,IAAI;YACF,WAAW;YACX,SAAS;YAET,MAAM,WAAW,MAAM,MAAM,eAAe;gBAC1C,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBACnB;oBACA;gBACF;YACF;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI;gBACrC,MAAM,IAAI,MAAM,SAAS,CAAC,QAAQ,EAAE,WAAW,YAAY,aAAa,WAAW,OAAO,CAAC;YAC7F;YAEA,6BAA6B;YAC7B,MAAM;YACN,OAAO;QACT,EAAE,OAAO,KAAK;YACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG,CAAC,QAAQ,EAAE,WAAW,YAAY,aAAa,WAAW,OAAO,CAAC;YAChH,OAAO;QACT,SAAU;YACR,WAAW;QACb;IACF,GAAG;QAAC;KAAY;IAEhB,MAAM,eAAe,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC;QAChC,OAAO,kBAAkB,IAAI;IAC/B,GAAG;QAAC;KAAkB;IAEtB,MAAM,eAAe,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC;QAChC,OAAO,kBAAkB,IAAI;IAC/B,GAAG;QAAC;KAAkB;IAEtB,qEAAqE;IACrE,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG;QAAC;KAAY;IAEhB,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/hooks/useAwsCredentials.ts"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from 'react';\n\nexport interface AwsCredential {\n  id: string;\n  name: string;\n  accountId?: string;\n  accessKeyId: string;\n  secretAccessKey: string;\n  region: string;\n}\n\nexport interface UseAwsCredentialsResult {\n  credentials: AwsCredential[];\n  selectedCredential: AwsCredential | null;\n  selectCredential: (id: string) => void;\n  addCredential: (credential: Omit<AwsCredential, 'id'>) => Promise<void>;\n  updateCredential: (id: string, data: Partial<Omit<AwsCredential, 'id'>>) => Promise<void>;\n  deleteCredential: (id: string) => Promise<void>;\n  loading: boolean;\n  isLoading: boolean; // Alias for loading - needed for compatibility\n  error: string | null;\n  refresh: () => Promise<void>;\n}\n\nexport function useAwsCredentials(): UseAwsCredentialsResult {\n  const [credentials, setCredentials] = useState<AwsCredential[]>([]);\n  const [selectedCredentialId, setSelectedCredentialId] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Function to fetch credentials from the API\n  const fetchCredentials = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch('/api/aws/credentials');\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch credentials: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      setCredentials(data);\n      \n      // If we have credentials but none selected, select the first one\n      if (data.length > 0 && !selectedCredentialId) {\n        setSelectedCredentialId(data[0].id);\n        // Save to localStorage\n        localStorage.setItem('selectedAwsCredentialId', data[0].id);\n      }\n      \n      return data;\n    } catch (err) {\n      setError(`Error fetching credentials: ${err instanceof Error ? err.message : String(err)}`);\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to select a credential\n  const selectCredential = (id: string) => {\n    setSelectedCredentialId(id);\n    localStorage.setItem('selectedAwsCredentialId', id);\n  };\n\n  // Function to add a new credential\n  const addCredential = async (credential: Omit<AwsCredential, 'id'>) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch('/api/aws/credentials', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(credential),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to add credential: ${response.status}`);\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      setError(`Error adding credential: ${err instanceof Error ? err.message : String(err)}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to update an existing credential\n  const updateCredential = async (id: string, data: Partial<Omit<AwsCredential, 'id'>>) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch(`/api/aws/credentials/${id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to update credential: ${response.status}`);\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      setError(`Error updating credential: ${err instanceof Error ? err.message : String(err)}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to delete a credential\n  const deleteCredential = async (id: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch(`/api/aws/credentials/${id}`, {\n        method: 'DELETE',\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to delete credential: ${response.status}`);\n      }\n      \n      // If we delete the selected credential, select another one\n      if (id === selectedCredentialId) {\n        const remainingCredentials = credentials.filter(c => c.id !== id);\n        if (remainingCredentials.length > 0) {\n          selectCredential(remainingCredentials[0].id);\n        } else {\n          setSelectedCredentialId(null);\n          localStorage.removeItem('selectedAwsCredentialId');\n        }\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      setError(`Error deleting credential: ${err instanceof Error ? err.message : String(err)}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Load credentials on mount\n  useEffect(() => {\n    // Try to restore selected credential from localStorage\n    const savedCredentialId = localStorage.getItem('selectedAwsCredentialId');\n    if (savedCredentialId) {\n      setSelectedCredentialId(savedCredentialId);\n    }\n    \n    fetchCredentials();\n  }, []);\n\n  // Find the selected credential object\n  const selectedCredential = credentials.find(c => c.id === selectedCredentialId) || null;\n\n  return {\n    credentials,\n    selectedCredential,\n    selectCredential,\n    addCredential,\n    updateCredential,\n    deleteCredential,\n    loading,\n    isLoading: loading, // Alias for loading\n    error,\n    refresh: fetchCredentials,\n  };\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/components/aws/CredentialSelector.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useAwsCredentials } from \"@/hooks/useAwsCredentials\";\r\nimport { useRouter } from \"next/navigation\";\r\n\r\nexport default function CredentialSelector() {\r\n  const { credentials, selectedCredential, selectCredential, loading } = useAwsCredentials();\r\n  const router = useRouter();\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"bg-white rounded-lg shadow-sm p-4 mb-6 flex items-center space-x-2\">\r\n        <span className=\"text-gray-700\">Carregando credenciais...</span>\r\n        <div className=\"animate-spin rounded-full h-4 w-4 border-t-2 border-b-2 border-indigo-500\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (credentials.length === 0) {\r\n    return (\r\n      <div className=\"bg-white rounded-lg shadow-sm p-4 mb-6\">\r\n        <div className=\"flex justify-between items-center\">\r\n          <span className=\"text-gray-700\">Nenhuma credencial AWS encontrada</span>\r\n          <button\r\n            onClick={() => router.push(\"/dashboard/credentials\")}\r\n            className=\"px-3 py-1 text-sm text-white bg-indigo-600 rounded-md hover:bg-indigo-700\"\r\n          >\r\n            Adicionar Credencial\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-sm p-4 mb-6\">\r\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\r\n        <label htmlFor=\"credential-selector\" className=\"block text-sm font-medium text-gray-700 mb-2 sm:mb-0\">\r\n          Selecionar Credencial AWS:\r\n        </label>\r\n        <div className=\"flex-1 sm:ml-4 max-w-md\">\r\n          <select\r\n            id=\"credential-selector\"\r\n            value={selectedCredential?.id || \"\"}\r\n            onChange={(e) => selectCredential(e.target.value)}\r\n            className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\r\n          >\r\n            <option value=\"\" disabled>\r\n              Selecione uma credencial\r\n            </option>\r\n            {credentials.map((cred) => (\r\n              <option key={cred.id} value={cred.id}>\r\n                {cred.name} ({cred.region})\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKe,SAAS;IACtB,MAAM,EAAE,WAAW,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,iIAAA,CAAA,oBAAiB,AAAD;IACvF,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,IAAI,SAAS;QACX,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAK,WAAU;8BAAgB;;;;;;8BAChC,8OAAC;oBAAI,WAAU;;;;;;;;;;;;IAGrB;IAEA,IAAI,YAAY,MAAM,KAAK,GAAG;QAC5B,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAK,WAAU;kCAAgB;;;;;;kCAChC,8OAAC;wBACC,SAAS,IAAM,OAAO,IAAI,CAAC;wBAC3B,WAAU;kCACX;;;;;;;;;;;;;;;;;IAMT;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAM,SAAQ;oBAAsB,WAAU;8BAAuD;;;;;;8BAGtG,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBACC,IAAG;wBACH,OAAO,oBAAoB,MAAM;wBACjC,UAAU,CAAC,IAAM,iBAAiB,EAAE,MAAM,CAAC,KAAK;wBAChD,WAAU;;0CAEV,8OAAC;gCAAO,OAAM;gCAAG,QAAQ;0CAAC;;;;;;4BAGzB,YAAY,GAAG,CAAC,CAAC,qBAChB,8OAAC;oCAAqB,OAAO,KAAK,EAAE;;wCACjC,KAAK,IAAI;wCAAC;wCAAG,KAAK,MAAM;wCAAC;;mCADf,KAAK,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;AASlC","debugId":null}},
    {"offset": {"line": 407, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/app/dashboard/security/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useAlerts } from \"@/hooks/useAlerts\";\nimport { motion } from \"framer-motion\";\nimport { useState, useEffect } from \"react\";\nimport { useAwsCredentials } from \"@/hooks/useAwsCredentials\";\nimport { \n  Bell, AlertTriangle, AlertCircle, Info, \n  CheckCircle, XCircle, Archive, Shield, \n  Search, Filter, RefreshCw, Trash2, \n  User, Key, Lock, Database, Server,\n  BarChart as BarChartIcon, PieChart as PieChartIcon,\n  ChevronRight, ChevronDown, Eraser,\n  Check, Slash, Clock, HardDrive, Cloud,\n  FileText, Users, Settings, AlertOctagon,\n  X, ExternalLink\n} from \"lucide-react\";\nimport Link from \"next/link\";\nimport { useSearchParams } from \"next/navigation\";\nimport { \n  ResponsiveContainer, \n  PieChart, \n  Pie, \n  Cell, \n  BarChart, \n  Bar, \n  XAxis, \n  YAxis, \n  Tooltip, \n  Legend, \n  CartesianGrid,\n  LineChart,\n  Line,\n  AreaChart,\n  Area\n} from \"recharts\";\nimport CredentialSelector from \"@/components/aws/CredentialSelector\";\n\nexport default function SecurityPage() {\n  const { selectedCredential } = useAwsCredentials();\n  const { \n    alerts, \n    loading, \n    error, \n    filters, \n    setFilters, \n    dismissAlert, \n    resolveAlert,\n    fetchAlerts\n  } = useAlerts();\n  \n  const searchParams = useSearchParams();\n  const categoryParam = searchParams.get('category');\n\n  const [cleanupLoading, setCleanupLoading] = useState(false);\n  const [cleanupMessage, setCleanupMessage] = useState<string | null>(null);\n  const [showFilters, setShowFilters] = useState(false);\n  const [actionLoading, setActionLoading] = useState<string | null>(null);\n  const [iamScanLoading, setIamScanLoading] = useState(false);\n  const [iamScanMessage, setIamScanMessage] = useState<string | null>(null);\n  const [activeCategory, setActiveCategory] = useState<string>('all'); // 'all', 'iam', 'ec2', etc.\n  const [timeRange, setTimeRange] = useState<number>(7);\n  const [viewMode, setViewMode] = useState<'dashboard' | 'list'>('dashboard');\n  const [expandedSections, setExpandedSections] = useState<string[]>([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [severityFilters, setSeverityFilters] = useState<Record<string, boolean>>({\n    'CRITICAL': true,\n    'HIGH': true,\n    'MEDIUM': true,\n    'LOW': true,\n    'INFO': true\n  });\n  const [statusFilters, setStatusFilters] = useState<Record<string, boolean>>({\n    'OPEN': true,\n    'IN_PROGRESS': true,\n    'RESOLVED': true,\n    'DISMISSED': false\n  });\n  \n  // Estado para controlar o modal de detalhes do alerta\n  const [selectedAlert, setSelectedAlert] = useState<any | null>(null);\n  const [showModal, setShowModal] = useState(false);\n\n  // Função para fechar o modal\n  const closeModal = () => {\n    setShowModal(false);\n    setSelectedAlert(null);\n  };\n\n  // Função para abrir o modal com o alerta selecionado\n  const openAlertDetails = (alert: any) => {\n    setSelectedAlert(alert);\n    setShowModal(true);\n  };\n\n  // Set initial category from URL parameter\n  useEffect(() => {\n    if (categoryParam) {\n      setActiveCategory(categoryParam);\n    }\n  }, [categoryParam]);\n\n  const handleDismiss = async (id: string) => {\n    setActionLoading(id);\n    await dismissAlert(id);\n    setActionLoading(null);\n  };\n\n  const handleResolve = async (id: string) => {\n    setActionLoading(id);\n    await resolveAlert(id);\n    setActionLoading(null);\n  };\n\n  const handleRefresh = async () => {\n    await fetchAlerts();\n  };\n\n  const handleScanIAMThreats = async () => {\n    if (!selectedCredential) {\n      setIamScanMessage(\"Selecione uma credencial AWS para realizar a verificação\");\n      return;\n    }\n\n    try {\n      setIamScanLoading(true);\n      setIamScanMessage(null);\n      \n      const response = await fetch('/api/alerts/iam', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          credentialId: selectedCredential.id\n        })\n      });\n      \n      if (!response.ok) {\n        const data = await response.json();\n        throw new Error(data.error || 'Erro ao verificar ameaças do IAM');\n      }\n      \n      const result = await response.json();\n      setIamScanMessage(result.message);\n      \n      // Recarregar alertas\n      await fetchAlerts();\n      \n      // Ativar a categoria IAM\n      setActiveCategory('iam');\n    } catch (error) {\n      setIamScanMessage(`Erro: ${error instanceof Error ? error.message : 'Erro desconhecido'}`);\n    } finally {\n      setIamScanLoading(false);\n    }\n  };\n\n  const handleCleanupDuplicates = async () => {\n    if (window.confirm(\"Deseja remover todos os alertas duplicados? Esta ação não pode ser desfeita.\")) {\n      try {\n        setCleanupLoading(true);\n        setCleanupMessage(null);\n        \n        const response = await fetch('/api/alerts/cleanup', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        \n        if (!response.ok) {\n          const data = await response.json();\n          throw new Error(data.error || 'Erro ao limpar alertas duplicados');\n        }\n        \n        const result = await response.json();\n        setCleanupMessage(result.message);\n        \n        // Recarregar alertas em vez de recarregar a página inteira\n        await fetchAlerts();\n      } catch (error) {\n        setCleanupMessage(`Erro: ${error instanceof Error ? error.message : 'Erro desconhecido'}`);\n      } finally {\n        setCleanupLoading(false);\n      }\n    }\n  };\n  \n  // Função para determinar a categoria de um alerta com base no tipo de recurso\n  const getAlertCategory = (resourceType: string): string => {\n    if (resourceType.startsWith('IAM') || resourceType === 'SecretManagerSecret') {\n      return 'iam';\n    } else if (resourceType.startsWith('EC2') || resourceType === 'SecurityGroup' || \n              resourceType === 'Volume' || resourceType === 'VPC' || \n              resourceType.includes('Gateway') || resourceType === 'Subnet' || \n              resourceType === 'RouteTable' || resourceType === 'NetworkInterface' || \n              resourceType === 'ElasticIP') {\n      return 'ec2';\n    } else if (resourceType.startsWith('S3') || resourceType.includes('Bucket')) {\n      return 's3';\n    } else if (resourceType.startsWith('RDS') || resourceType.startsWith('DB') || \n               resourceType.includes('Database')) {\n      return 'rds';\n    } else if (resourceType.startsWith('DynamoDB') || resourceType.includes('DynamoDB')) {\n      return 'dynamodb';\n    } else if (resourceType.startsWith('Lambda')) {\n      return 'lambda';\n    }\n    \n    return 'other';\n  };\n\n  // Função para formatar o tipo de recurso para exibição\n  const formatResourceType = (resourceType: string): string => {\n    // Identificar o prefixo do serviço\n    let prefix = '';\n    let name = resourceType;\n    \n    if (resourceType.startsWith('IAM')) {\n      prefix = 'IAM';\n      name = resourceType.substring(3);\n    } else if (resourceType.startsWith('EC2')) {\n      prefix = 'EC2';\n      name = resourceType.substring(3);\n    } else if (resourceType.startsWith('S3')) {\n      prefix = 'S3';\n      name = resourceType.substring(2);\n    } else if (resourceType.startsWith('RDS')) {\n      prefix = 'RDS';\n      name = resourceType.substring(3);\n    } else if (resourceType.startsWith('DB')) {\n      prefix = 'DB';\n      name = resourceType.substring(2);\n    } else if (resourceType.startsWith('DynamoDB')) {\n      prefix = 'DynamoDB';\n      name = resourceType.substring(8);\n    } else if (resourceType.startsWith('Lambda')) {\n      prefix = 'Lambda';\n      name = resourceType.substring(6);\n    }\n    \n    // Se o nome começar com letra maiúscula e não tiver espaço, \n    // adiciona um espaço antes de cada letra maiúscula (exceto a primeira)\n    if (name.length > 0 && /^[A-Z]/.test(name) && !name.includes(' ')) {\n      name = name.replace(/([A-Z])/g, ' $1').trim();\n    }\n    \n    return prefix ? `${prefix}-${name}` : resourceType;\n  };\n\n  const filteredAlerts = alerts.filter(alert => {\n    // Filtrar por categoria\n    if (activeCategory === 'iam') {\n      return getAlertCategory(alert.resourceType) === 'iam';\n    } else if (activeCategory === 'ec2') {\n      return getAlertCategory(alert.resourceType) === 'ec2';\n    } else if (activeCategory === 's3') {\n      return getAlertCategory(alert.resourceType) === 's3';\n    } else if (activeCategory === 'rds') {\n      return getAlertCategory(alert.resourceType) === 'rds';\n    }\n    \n    // 'all' retorna todos os alertas\n    return true;\n  });\n\n  // Helper functions for severity and status\n  type SeverityType = 'CRITICAL' | 'HIGH' | 'MEDIUM' | 'LOW' | 'INFO';\n  type StatusType = 'OPEN' | 'IN_PROGRESS' | 'RESOLVED' | 'DISMISSED';\n\n  const getSeverityLabel = (severity: SeverityType) => {\n    const labels = {\n      'CRITICAL': 'Crítico',\n      'HIGH': 'Alto',\n      'MEDIUM': 'Médio',\n      'LOW': 'Baixo',\n      'INFO': 'Informativo'\n    };\n    return labels[severity];\n  };\n\n  const getStatusLabel = (status: StatusType) => {\n    const labels = {\n      'OPEN': 'Aberto',\n      'IN_PROGRESS': 'Em Progresso',\n      'RESOLVED': 'Resolvido',\n      'DISMISSED': 'Ignorado'\n    };\n    return labels[status];\n  };\n\n  const getSeverityIcon = (severity: SeverityType, options = {}) => {\n    switch (severity) {\n      case 'CRITICAL':\n        return <AlertCircle className=\"text-red-600\" {...options} />;\n      case 'HIGH':\n        return <AlertTriangle className=\"text-orange-500\" {...options} />;\n      case 'MEDIUM':\n        return <AlertTriangle className=\"text-yellow-500\" {...options} />;\n      case 'LOW':\n        return <Info className=\"text-blue-500\" {...options} />;\n      case 'INFO':\n        return <Info className=\"text-gray-500\" {...options} />;\n      default:\n        return <Info className=\"text-gray-500\" {...options} />;\n    }\n  };\n\n  const getStatusIcon = (status: StatusType, options = {}) => {\n    switch (status) {\n      case 'OPEN':\n        return <AlertCircle className=\"text-red-500\" {...options} />;\n      case 'IN_PROGRESS':\n        return <Clock className=\"text-orange-500\" {...options} />;\n      case 'RESOLVED':\n        return <Check className=\"text-green-500\" {...options} />;\n      case 'DISMISSED':\n        return <Slash className=\"text-gray-500\" {...options} />;\n      default:\n        return <Info className=\"text-gray-500\" {...options} />;\n    }\n  };\n\n  const getSeverityFilterClass = (severity: keyof typeof severityFilters) => {\n    const classes = {\n      'CRITICAL': 'bg-red-100 text-red-800',\n      'HIGH': 'bg-orange-100 text-orange-800',\n      'MEDIUM': 'bg-yellow-100 text-yellow-800',\n      'LOW': 'bg-blue-100 text-blue-800',\n      'INFO': 'bg-gray-100 text-gray-800'\n    };\n    return classes[severity as keyof typeof classes] || 'bg-gray-100 text-gray-800';\n  };\n\n  const getStatusFilterClass = (status: keyof typeof statusFilters) => {\n    return statusFilters[status] \n      ? 'bg-green-100 text-green-800 border-green-300' \n      : 'bg-gray-100 text-gray-500 border-gray-300';\n  };\n\n  const toggleSeverityFilter = (severity: keyof typeof severityFilters) => {\n    setSeverityFilters(prev => ({\n      ...prev,\n      [severity]: !prev[severity]\n    }));\n  };\n\n  const toggleStatusFilter = (status: keyof typeof statusFilters) => {\n    setStatusFilters(prev => ({\n      ...prev,\n      [status]: !prev[status]\n    }));\n  };\n\n  const resetFilters = () => {\n    setActiveCategory('all');\n    setTimeRange(7);\n    setSeverityFilters({\n      'CRITICAL': true,\n      'HIGH': true,\n      'MEDIUM': true,\n      'LOW': true,\n      'INFO': true\n    });\n    setStatusFilters({\n      'OPEN': true,\n      'IN_PROGRESS': true,\n      'RESOLVED': true,\n      'DISMISSED': false\n    });\n    setSearchTerm('');\n    setShowFilters(false);\n  };\n  \n  const getResourceTypeIcon = (resourceType: string) => {\n    switch (resourceType) {\n      case 'IAMUser':\n        return <User className=\"w-5 h-5\" />;\n      case 'IAMAccessKey':\n        return <Key className=\"w-5 h-5\" />;\n      case 'IAMPolicy':\n        return <FileText className=\"w-5 h-5\" />;\n      case 'SecretManagerSecret':\n        return <Lock className=\"w-5 h-5\" />;\n      case 'EC2Instance':\n        return <Server className=\"w-5 h-5\" />;\n      case 'SecurityGroup':\n        return <Shield className=\"w-5 h-5\" />;\n      case 'Volume':\n        return <HardDrive className=\"w-5 h-5\" />;\n      case 'S3Bucket':\n        return <Cloud className=\"w-5 h-5\" />;\n      case 'RDSInstance':\n        return <Database className=\"w-5 h-5\" />;\n      case 'IAMRole':\n        return <Users className=\"w-5 h-5\" />;\n      default:\n        return <Info className=\"w-5 h-5\" />;\n    }\n  };\n  \n  const getResourceTypeText = (resourceType: string): string => {\n    const formattedType = formatResourceType(resourceType);\n    \n    const mapping: Record<string, string> = {\n      'IAM-User': 'Usuário IAM',\n      'IAM-Access Key': 'Chave de Acesso IAM',\n      'IAM-Policy': 'Política IAM',\n      'IAM-Role': 'Função IAM',\n      'SecretManagerSecret': 'Secret Manager',\n      'EC2-Instance': 'Instância EC2',\n      'SecurityGroup': 'Grupo de Segurança',\n      'Volume': 'Volume EBS',\n      'S3-Bucket': 'Bucket S3',\n      'RDS-Instance': 'Instância RDS',\n      'DynamoDB-Table': 'Tabela DynamoDB',\n      'Lambda-Function': 'Função Lambda'\n    };\n    \n    return mapping[formattedType] || formattedType;\n  };\n\n  // Estatísticas\n  const activeCount = filteredAlerts.filter(a => a.status === 'active').length;\n  const criticalCount = filteredAlerts.filter(a => a.severity === 'CRITICAL' && a.status === 'active').length;\n  const highCount = filteredAlerts.filter(a => a.severity === 'HIGH' && a.status === 'active').length;\n  const mediumCount = filteredAlerts.filter(a => a.severity === 'MEDIUM' && a.status === 'active').length;\n  const lowCount = filteredAlerts.filter(a => a.severity === 'LOW' && a.status === 'active').length;\n  \n  // Estatísticas por tipo\n  const iamAlertCount = alerts.filter(a => \n    getAlertCategory(a.resourceType) === 'iam' && \n    a.status === 'active'\n  ).length;\n  \n  const ec2AlertCount = alerts.filter(a => \n    getAlertCategory(a.resourceType) === 'ec2' && \n    a.status === 'active'\n  ).length;\n  \n  const s3AlertCount = alerts.filter(a => \n    getAlertCategory(a.resourceType) === 's3' && \n    a.status === 'active'\n  ).length;\n  \n  const rdsAlertCount = alerts.filter(a => \n    getAlertCategory(a.resourceType) === 'rds' && \n    a.status === 'active'\n  ).length;\n\n  // Data for charts\n  const severityData = [\n    { name: 'Crítico', value: criticalCount, color: '#EF4444' },\n    { name: 'Alto', value: highCount, color: '#F97316' },\n    { name: 'Médio', value: mediumCount, color: '#EAB308' },\n    { name: 'Baixo', value: lowCount, color: '#3B82F6' },\n  ];\n\n  const serviceData = [\n    { name: 'IAM', value: iamAlertCount, color: '#F97316' },\n    { name: 'EC2', value: ec2AlertCount, color: '#3B82F6' },\n    { name: 'S3', value: s3AlertCount, color: '#EAB308' },\n    { name: 'RDS', value: rdsAlertCount, color: '#10B981' },\n  ];\n\n  // Group alerts by date for trend chart\n  const getAlertsByDate = () => {\n    const dates = new Map();\n    const now = new Date();\n    const days = timeRange === 7 ? 7 : timeRange === 30 ? 30 : 90;\n    \n    // Initialize all dates in the range with zero counts\n    for (let i = 0; i < days; i++) {\n      const date = new Date(now);\n      date.setDate(date.getDate() - i);\n      const dateStr = date.toISOString().split('T')[0];\n      dates.set(dateStr, { date: dateStr, critical: 0, high: 0, medium: 0, low: 0, total: 0 });\n    }\n    \n    // Count alerts by date and severity\n    alerts.forEach(alert => {\n      const date = new Date(alert.createdAt).toISOString().split('T')[0];\n      if (dates.has(date)) {\n        const entry = dates.get(date);\n        entry.total++;\n        \n        if (alert.severity === 'CRITICAL') entry.critical++;\n        else if (alert.severity === 'HIGH') entry.high++;\n        else if (alert.severity === 'MEDIUM') entry.medium++;\n        else if (alert.severity === 'LOW') entry.low++;\n      }\n    });\n    \n    // Convert to array and sort by date\n    return Array.from(dates.values())\n      .sort((a, b) => a.date.localeCompare(b.date));\n  };\n\n  // Get alerts by resource type\n  const getAlertsByResourceType = () => {\n    const counts = new Map();\n    \n    alerts.filter(a => a.status === 'active').forEach(alert => {\n      const type = getResourceTypeText(alert.resourceType);\n      counts.set(type, (counts.get(type) || 0) + 1);\n    });\n    \n    return Array.from(counts.entries())\n      .map(([name, value]) => ({ name, value }))\n      .sort((a, b) => b.value - a.value);\n  };\n\n  const trendData = getAlertsByDate();\n  const resourceTypeData = getAlertsByResourceType();\n\n  interface SectionHeaderProps {\n    title: string;\n    count: number;\n    icon: React.ReactNode;\n    isExpanded: boolean;\n    onClick: () => void;\n  }\n  \n  function SectionHeader({ title, count, icon, isExpanded, onClick }: SectionHeaderProps) {\n    return (\n      <button\n        className=\"w-full px-6 py-4 flex items-center justify-between hover:bg-gray-50 transition-colors\"\n        onClick={onClick}\n      >\n        <div className=\"flex items-center\">\n          {icon}\n          <h2 className=\"ml-2 text-base font-medium text-gray-900\">{title}</h2>\n          {count > 0 && (\n            <span className=\"ml-2 px-2 py-0.5 bg-red-100 text-red-800 text-xs rounded-full\">\n              {count}\n            </span>\n          )}\n        </div>\n        <svg\n          className={`h-5 w-5 text-gray-500 transform transition-transform ${isExpanded ? 'rotate-180' : ''}`}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 20 20\"\n          fill=\"currentColor\"\n        >\n          <path fillRule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n        </svg>\n      </button>\n    );\n  }\n\n  const getSeverityColor = (severity: string) => {\n    const colors: Record<string, string> = {\n      'CRITICAL': 'text-red-600',\n      'HIGH': 'text-orange-500',\n      'MEDIUM': 'text-yellow-500',\n      'LOW': 'text-blue-500',\n      'INFO': 'text-gray-500'\n    };\n    return colors[severity] || 'text-gray-500';\n  };\n\n  const getSeverityBorderColor = (severity: string): string => {\n    const colors: Record<string, string> = {\n      'CRITICAL': 'border-red-600',\n      'HIGH': 'border-orange-500',\n      'MEDIUM': 'border-yellow-500',\n      'LOW': 'border-blue-500',\n      'INFO': 'border-gray-500'\n    };\n    return colors[severity] || 'border-gray-500';\n  };\n\n  const getSeverityText = (severity: string): string => {\n    return getSeverityLabel(severity as SeverityType);\n  };\n\n  return (\n    <div className=\"container mx-auto py-6\">\n      <div className=\"flex flex-col lg:flex-row justify-between items-start lg:items-center mb-6 gap-4\">\n        <motion.div\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.3 }}\n        >\n          <h1 className=\"text-3xl font-bold flex items-center gap-2 text-gray-900\">\n            <Shield className=\"h-8 w-8 text-indigo-600\" /> \n            Segurança\n          </h1>\n          <p className=\"text-gray-600 mt-1\">\n            Gerencie e resolva problemas de segurança na sua infraestrutura AWS\n          </p>\n        </motion.div>\n        \n        <div className=\"flex flex-col w-full lg:w-auto\">\n          <CredentialSelector />\n          \n          <div className=\"flex flex-wrap gap-2 mt-4 justify-end\">\n            <div className=\"inline-flex rounded-md shadow-sm\">\n              <button\n                onClick={() => setViewMode('dashboard')}\n                className={`px-4 py-2 text-sm font-medium rounded-l-lg border ${\n                  viewMode === 'dashboard' \n                    ? 'bg-indigo-50 text-indigo-700 border-indigo-300' \n                    : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-50'\n                }`}\n              >\n                <span className=\"flex items-center gap-2\">\n                  <PieChartIcon className=\"h-4 w-4\" />\n                  Dashboard\n                </span>\n              </button>\n              <button\n                onClick={() => setViewMode('list')}\n                className={`px-4 py-2 text-sm font-medium rounded-r-lg border-t border-r border-b ${\n                  viewMode === 'list' \n                    ? 'bg-indigo-50 text-indigo-700 border-indigo-300' \n                    : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-50'\n                }`}\n              >\n                <span className=\"flex items-center gap-2\">\n                  <Bell className=\"h-4 w-4\" />\n                  Alertas\n                </span>\n              </button>\n            </div>\n            \n            <button\n              onClick={handleRefresh}\n              className=\"px-4 py-2 flex items-center gap-2 bg-white text-indigo-700 border border-indigo-300 rounded-lg shadow-sm hover:bg-indigo-50 transition-colors\"\n              disabled={loading}\n            >\n              <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\n              Atualizar\n            </button>\n            \n            <button\n              onClick={handleScanIAMThreats}\n              className=\"px-4 py-2 flex items-center gap-2 bg-white text-amber-700 border border-amber-300 rounded-lg shadow-sm hover:bg-amber-50 transition-colors\"\n              disabled={iamScanLoading}\n            >\n              {iamScanLoading ? (\n                <>\n                  <RefreshCw className=\"h-4 w-4 animate-spin\" />\n                  Verificando...\n                </>\n              ) : (\n                <>\n                  <Shield className=\"h-4 w-4\" />\n                  Verificar IAM\n                </>\n              )}\n            </button>\n            \n            <button \n              onClick={() => setShowFilters(!showFilters)}\n              className={`px-4 py-2 flex items-center gap-2 rounded-lg shadow-sm border transition-colors ${\n                showFilters \n                  ? 'bg-blue-50 text-blue-700 border-blue-300' \n                  : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-50'\n              }`}\n            >\n              <Filter className=\"h-4 w-4\" />\n              Filtros\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Tab Navigation */}\n      <div className=\"border-b border-gray-200 mb-6\">\n        <nav className=\"flex -mb-px space-x-8 overflow-x-auto scrollbar-hide\">\n          <button\n            onClick={() => setActiveCategory(\"all\")}\n            className={`whitespace-nowrap px-1 py-4 text-sm font-medium border-b-2 ${\n              activeCategory === \"all\" \n                ? \"border-indigo-500 text-indigo-600\"\n                : \"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300\"\n            }`}\n          >\n            <span className=\"flex items-center\">\n              <Shield className=\"mr-2 h-5 w-5\" />\n              Todos os Serviços\n            </span>\n          </button>\n          <button\n            onClick={() => setActiveCategory(\"iam\")}\n            className={`whitespace-nowrap px-1 py-4 text-sm font-medium border-b-2 ${\n              activeCategory === \"iam\" \n                ? \"border-orange-500 text-orange-600\"\n                : \"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300\"\n            }`}\n          >\n            <span className=\"flex items-center\">\n              <User className=\"mr-2 h-5 w-5\" />\n              IAM & Secrets\n              {iamScanLoading && <RefreshCw className=\"ml-2 h-4 w-4 animate-spin\" />}\n            </span>\n          </button>\n          <button\n            onClick={() => setActiveCategory(\"ec2\")}\n            className={`whitespace-nowrap px-1 py-4 text-sm font-medium border-b-2 ${\n              activeCategory === \"ec2\" \n                ? \"border-blue-500 text-blue-600\"\n                : \"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300\"\n            }`}\n          >\n            <span className=\"flex items-center\">\n              <Server className=\"mr-2 h-5 w-5\" />\n              EC2 & Rede\n            </span>\n          </button>\n          <button\n            onClick={() => setActiveCategory(\"s3\")}\n            className={`whitespace-nowrap px-1 py-4 text-sm font-medium border-b-2 ${\n              activeCategory === \"s3\" \n                ? \"border-yellow-500 text-yellow-600\"\n                : \"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300\"\n            }`}\n          >\n            <span className=\"flex items-center\">\n              <Database className=\"mr-2 h-5 w-5\" />\n              S3 Storage\n            </span>\n          </button>\n          <button\n            onClick={() => setActiveCategory(\"rds\")}\n            className={`whitespace-nowrap px-1 py-4 text-sm font-medium border-b-2 ${\n              activeCategory === \"rds\" \n                ? \"border-green-500 text-green-600\"\n                : \"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300\"\n            }`}\n          >\n            <span className=\"flex items-center\">\n              <Database className=\"mr-2 h-5 w-5\" />\n              RDS\n            </span>\n          </button>\n        </nav>\n      </div>\n\n      {/* Mensagens de status */}\n      {cleanupMessage && (\n        <div className=\"mb-4 p-3 bg-green-50 text-green-800 rounded-lg border border-green-200 shadow-sm flex items-center\">\n          <CheckCircle className=\"h-5 w-5 mr-2 text-green-500\" />\n          {cleanupMessage}\n        </div>\n      )}\n      \n      {iamScanMessage && (\n        <div className=\"mb-4 p-3 bg-blue-50 text-blue-800 rounded-lg border border-blue-200 shadow-sm flex items-center\">\n          <Info className=\"h-5 w-5 mr-2 text-blue-500\" />\n          {iamScanMessage}\n        </div>\n      )}\n\n      {/* Filtros */}\n      {showFilters && (\n        <motion.div \n          className=\"bg-white shadow-md rounded-lg p-5 mb-6 border border-gray-200\"\n          initial={{ opacity: 0, height: 0 }}\n          animate={{ opacity: 1, height: 'auto' }}\n          transition={{ duration: 0.3 }}\n        >\n          <h2 className=\"text-lg font-medium mb-4 flex items-center\">\n            <Filter className=\"h-5 w-5 mr-2 text-indigo-600\" />\n            Filtrar Alertas\n          </h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            <div>\n              <p className=\"text-sm font-medium mb-3 text-gray-700\">Por Categoria</p>\n              <div className=\"flex flex-wrap gap-2\">\n                <button \n                  onClick={() => setActiveCategory('all')}\n                  className={`px-3 py-2 text-sm rounded-md ${activeCategory === 'all' ? 'bg-indigo-100 text-indigo-800 font-medium' : 'bg-gray-100 hover:bg-gray-200'}`}\n                >\n                  Todos\n                </button>\n                <button \n                  onClick={() => setActiveCategory('iam')}\n                  className={`px-3 py-2 text-sm rounded-md flex items-center gap-1 ${activeCategory === 'iam' ? 'bg-orange-100 text-orange-800 font-medium' : 'bg-gray-100 hover:bg-gray-200'}`}\n                >\n                  <User className=\"h-3 w-3\" /> IAM ({iamAlertCount})\n                </button>\n                <button \n                  onClick={() => setActiveCategory('ec2')}\n                  className={`px-3 py-2 text-sm rounded-md flex items-center gap-1 ${activeCategory === 'ec2' ? 'bg-blue-100 text-blue-800 font-medium' : 'bg-gray-100 hover:bg-gray-200'}`}\n                >\n                  <Server className=\"h-3 w-3\" /> EC2 ({ec2AlertCount})\n                </button>\n                <button \n                  onClick={() => setActiveCategory('s3')}\n                  className={`px-3 py-2 text-sm rounded-md flex items-center gap-1 ${activeCategory === 's3' ? 'bg-yellow-100 text-yellow-800 font-medium' : 'bg-gray-100 hover:bg-gray-200'}`}\n                >\n                  <Database className=\"h-3 w-3\" /> S3 ({s3AlertCount})\n                </button>\n                <button \n                  onClick={() => setActiveCategory('rds')}\n                  className={`px-3 py-2 text-sm rounded-md flex items-center gap-1 ${activeCategory === 'rds' ? 'bg-green-100 text-green-800 font-medium' : 'bg-gray-100 hover:bg-gray-200'}`}\n                >\n                  <Database className=\"h-3 w-3\" /> RDS ({rdsAlertCount})\n                </button>\n              </div>\n            </div>\n\n            <div>\n              <p className=\"text-sm font-medium mb-3 text-gray-700\">Por Severidade</p>\n              <div className=\"flex flex-wrap gap-2\">\n                {Object.entries(severityFilters).map(([key, active]) => (\n                  <button\n                    key={key}\n                    onClick={() => toggleSeverityFilter(key as keyof typeof severityFilters)}\n                    className={`px-3 py-2 text-sm rounded-md flex items-center gap-1 ${\n                      active \n                        ? getSeverityFilterClass(key as keyof typeof severityFilters) \n                        : 'bg-gray-100 text-gray-500 hover:bg-gray-200'\n                    }`}\n                  >\n                    {getSeverityIcon(key as SeverityType, { size: 14 })}\n                    {getSeverityLabel(key as SeverityType)}\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            <div>\n              <p className=\"text-sm font-medium mb-3 text-gray-700\">Por Status</p>\n              <div className=\"flex flex-wrap gap-2\">\n                {Object.entries(statusFilters).map(([key, active]) => (\n                  <button\n                    key={key}\n                    onClick={() => toggleStatusFilter(key as keyof typeof statusFilters)}\n                    className={`px-3 py-2 text-sm rounded-md flex items-center gap-1 ${\n                      active \n                        ? getStatusFilterClass(key as keyof typeof statusFilters) \n                        : 'bg-gray-100 text-gray-500 hover:bg-gray-200'\n                    }`}\n                  >\n                    {getStatusIcon(key as StatusType, { size: 14 })}\n                    {getStatusLabel(key as StatusType)}\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            <div>\n              <p className=\"text-sm font-medium mb-3 text-gray-700\">Período</p>\n              <div className=\"flex flex-wrap gap-2\">\n                <button\n                  onClick={() => setTimeRange(7)}\n                  className={`px-3 py-2 text-sm rounded-md ${\n                    timeRange === 7 \n                      ? 'bg-indigo-100 text-indigo-800 font-medium' \n                      : 'bg-gray-100 hover:bg-gray-200'\n                  }`}\n                >\n                  7 dias\n                </button>\n                <button\n                  onClick={() => setTimeRange(30)}\n                  className={`px-3 py-2 text-sm rounded-md ${\n                    timeRange === 30 \n                      ? 'bg-indigo-100 text-indigo-800 font-medium' \n                      : 'bg-gray-100 hover:bg-gray-200'\n                  }`}\n                >\n                  30 dias\n                </button>\n                <button\n                  onClick={() => setTimeRange(90)}\n                  className={`px-3 py-2 text-sm rounded-md ${\n                    timeRange === 90 \n                      ? 'bg-indigo-100 text-indigo-800 font-medium' \n                      : 'bg-gray-100 hover:bg-gray-200'\n                  }`}\n                >\n                  90 dias\n                </button>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"flex justify-end mt-4\">\n            <button\n              onClick={() => resetFilters()}\n              className=\"px-4 py-2 text-sm text-gray-600 hover:text-gray-800 flex items-center gap-1\"\n            >\n              <Trash2 className=\"h-4 w-4\" /> Limpar Filtros\n            </button>\n          </div>\n        </motion.div>\n      )}\n\n      {/* Dashboard View */}\n      {viewMode === 'dashboard' ? (\n        <div className=\"space-y-6\">\n          {/* Alertas por severidade */}\n          <div className=\"mb-6\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h2 className=\"text-xl font-semibold flex items-center gap-2 text-gray-900\">\n                <AlertCircle className=\"h-5 w-5 text-red-500\" />\n                Resumo de Alertas\n              </h2>\n\n              <div className=\"flex items-center gap-4\">\n                <button\n                  onClick={handleCleanupDuplicates}\n                  className=\"px-4 py-2 text-sm flex items-center gap-2 bg-white text-gray-700 border border-gray-300 rounded-lg shadow-sm hover:bg-gray-50 transition-colors\"\n                  disabled={cleanupLoading}\n                >\n                  {cleanupLoading ? (\n                    <>\n                      <RefreshCw className=\"h-4 w-4 animate-spin\" />\n                      Limpando...\n                    </>\n                  ) : (\n                    <>\n                      <Eraser className=\"h-4 w-4\" />\n                      Limpar Duplicados\n                    </>\n                  )}\n                </button>\n                \n                <div className=\"relative\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Buscar alertas...\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    className=\"pl-9 pr-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:ring-indigo-500 focus:border-indigo-500 text-sm\"\n                  />\n                  <Search className=\"h-4 w-4 text-gray-400 absolute left-3 top-2.5\" />\n                </div>\n              </div>\n            </div>\n\n            {/* Alert Summary */}\n            <div className=\"mb-6 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4\">\n              <motion.div \n                initial={{ opacity: 0, y: 10 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: 0.1 }}\n                className=\"bg-red-50 rounded-lg p-4 border border-red-200\"\n              >\n                <div className=\"flex items-center\">\n                  <AlertCircle className=\"h-8 w-8 text-red-500 mr-3\" />\n                  <div>\n                    <p className=\"text-sm text-red-800\">Críticos</p>\n                    <p className=\"text-3xl font-bold text-red-900\">{criticalCount}</p>\n                  </div>\n                </div>\n              </motion.div>\n              \n              <motion.div \n                initial={{ opacity: 0, y: 10 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: 0.2 }}\n                className=\"bg-orange-50 rounded-lg p-4 border border-orange-200\"\n              >\n                <div className=\"flex items-center\">\n                  <AlertTriangle className=\"h-8 w-8 text-orange-500 mr-3\" />\n                  <div>\n                    <p className=\"text-sm text-orange-800\">Alta Severidade</p>\n                    <p className=\"text-3xl font-bold text-orange-900\">{highCount}</p>\n                  </div>\n                </div>\n              </motion.div>\n              \n              <motion.div \n                initial={{ opacity: 0, y: 10 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: 0.3 }}\n                className=\"bg-yellow-50 rounded-lg p-4 border border-yellow-200\"\n              >\n                <div className=\"flex items-center\">\n                  <AlertTriangle className=\"h-8 w-8 text-yellow-500 mr-3\" />\n                  <div>\n                    <p className=\"text-sm text-yellow-800\">Média Severidade</p>\n                    <p className=\"text-3xl font-bold text-yellow-900\">{mediumCount}</p>\n                  </div>\n                </div>\n              </motion.div>\n              \n              <motion.div \n                initial={{ opacity: 0, y: 10 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: 0.4 }}\n                className=\"bg-blue-50 rounded-lg p-4 border border-blue-200\"\n              >\n                <div className=\"flex items-center\">\n                  <Info className=\"h-8 w-8 text-blue-500 mr-3\" />\n                  <div>\n                    <p className=\"text-sm text-blue-800\">Baixa Severidade</p>\n                    <p className=\"text-3xl font-bold text-blue-900\">{lowCount}</p>\n                  </div>\n                </div>\n              </motion.div>\n            </div>\n\n            {/* Dashboard Graphs Grid Layout */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              {/* Severity Distribution */}\n              <div className=\"bg-white shadow rounded p-6\">\n                <h2 className=\"text-xl font-semibold flex items-center gap-2 mb-4 text-gray-900\">\n                  <AlertTriangle className=\"h-5 w-5 text-indigo-600\" />\n                  Resumo de Severidade\n                </h2>\n                \n                {/* Severity Pie Chart */}\n                <div className=\"h-64\">\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <PieChart>\n                      <Pie\n                        data={severityData}\n                        cx=\"50%\"\n                        cy=\"50%\"\n                        labelLine={false}\n                        outerRadius={80}\n                        fill=\"#8884d8\"\n                        dataKey=\"value\"\n                        label={({ name, value }) => value > 0 ? `${name}: ${value}` : ''}\n                      >\n                        {severityData.map((entry, index) => (\n                          <Cell key={`cell-${index}`} fill={entry.color} />\n                        ))}\n                      </Pie>\n                      <Tooltip formatter={(value) => [`${value} alertas`, 'Quantidade']} />\n                      <Legend />\n                    </PieChart>\n                  </ResponsiveContainer>\n                </div>\n              </div>\n              \n              {/* Service Distribution */}\n              <div className=\"bg-white shadow rounded p-6\">\n                <h2 className=\"text-xl font-semibold flex items-center gap-2 mb-4 text-gray-900\">\n                  <Database className=\"h-5 w-5 text-indigo-600\" />\n                  Distribuição por Serviço\n                </h2>\n                \n                {/* Service Pie Chart */}\n                <div className=\"h-64\">\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <PieChart>\n                      <Pie\n                        data={serviceData}\n                        cx=\"50%\"\n                        cy=\"50%\"\n                        labelLine={false}\n                        outerRadius={80}\n                        fill=\"#8884d8\"\n                        dataKey=\"value\"\n                        label={({ name, value }) => value > 0 ? `${name}: ${value}` : ''}\n                      >\n                        {serviceData.map((entry, index) => (\n                          <Cell key={`cell-${index}`} fill={entry.color} />\n                        ))}\n                      </Pie>\n                      <Tooltip formatter={(value) => [`${value} alertas`, 'Quantidade']} />\n                      <Legend />\n                    </PieChart>\n                  </ResponsiveContainer>\n                </div>\n              </div>\n              \n              {/* Trend Chart */}\n              <div className=\"bg-white shadow rounded p-6\">\n                <h2 className=\"text-xl font-semibold flex items-center gap-2 mb-4 text-gray-900\">\n                  <BarChartIcon className=\"h-5 w-5 text-indigo-600\" />\n                  Tendência de Alertas (Últimos {timeRange === 7 ? '7 dias' : timeRange === 30 ? '30 dias' : '90 dias'})\n                </h2>\n                <div className=\"h-72\">\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <AreaChart data={trendData}>\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey=\"date\" tickFormatter={(value) => new Date(value).toLocaleDateString()} />\n                      <YAxis />\n                      <Tooltip \n                        formatter={(value, name) => {\n                          const nameMap: Record<string, string> = {\n                            critical: 'Crítico',\n                            high: 'Alto',\n                            medium: 'Médio',\n                            low: 'Baixo',\n                            total: 'Total'\n                          };\n                          return [value, nameMap[name as string] || name];\n                        }}\n                        labelFormatter={(value) => new Date(value).toLocaleDateString()}\n                      />\n                      <Legend formatter={(value) => {\n                        const nameMap: Record<string, string> = {\n                          critical: 'Crítico',\n                          high: 'Alto',\n                          medium: 'Médio',\n                          low: 'Baixo',\n                          total: 'Total'\n                        };\n                        return nameMap[value as string] || value;\n                      }} />\n                      <Area type=\"monotone\" dataKey=\"critical\" stackId=\"1\" stroke=\"#EF4444\" fill=\"#FEE2E2\" />\n                      <Area type=\"monotone\" dataKey=\"high\" stackId=\"1\" stroke=\"#F97316\" fill=\"#FFEDD5\" />\n                      <Area type=\"monotone\" dataKey=\"medium\" stackId=\"1\" stroke=\"#EAB308\" fill=\"#FEF9C3\" />\n                      <Area type=\"monotone\" dataKey=\"low\" stackId=\"1\" stroke=\"#3B82F6\" fill=\"#DBEAFE\" />\n                    </AreaChart>\n                  </ResponsiveContainer>\n                </div>\n              </div>\n              \n              {/* Resource Type Distribution */}\n              <div className=\"bg-white shadow rounded p-6\">\n                <h2 className=\"text-xl font-semibold flex items-center gap-2 mb-4 text-gray-900\">\n                  <Shield className=\"h-5 w-5 text-indigo-600\" />\n                  Distribuição por Tipo de Recurso\n                </h2>\n                <div className=\"h-72\">\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <BarChart data={resourceTypeData} layout=\"vertical\">\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis type=\"number\" />\n                      <YAxis dataKey=\"name\" type=\"category\" width={150} />\n                      <Tooltip formatter={(value) => [`${value} alertas`, 'Quantidade']} />\n                      <Legend />\n                      <Bar dataKey=\"value\" name=\"Alertas Ativos\" fill=\"#6366F1\" />\n                    </BarChart>\n                  </ResponsiveContainer>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : null}\n\n      {/* Lista de alertas */}\n      {viewMode === 'list' && (\n        <div className=\"bg-white shadow rounded p-4\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <h2 className=\"text-xl font-semibold flex items-center gap-2 text-gray-900\">\n              <Bell className=\"h-5 w-5 text-indigo-600\" />\n              Alertas de Segurança\n            </h2>\n            <div className=\"flex items-center gap-2\">\n              <div className=\"flex items-center mr-4\">\n                <input \n                  type=\"text\" \n                  placeholder=\"Buscar alertas...\" \n                  className=\"px-3 py-1 border rounded text-sm focus:outline-none focus:ring-1 focus:ring-indigo-500\"\n                />\n                <button className=\"p-1 bg-indigo-50 text-indigo-700 rounded-r border border-l-0\">\n                  <Search className=\"h-4 w-4\" />\n                </button>\n              </div>\n              \n              <button \n                onClick={handleCleanupDuplicates}\n                className=\"px-3 py-1 text-sm flex items-center gap-1 text-gray-700 bg-gray-100 rounded hover:bg-gray-200\"\n                disabled={cleanupLoading}\n              >\n                {cleanupLoading ? (\n                  <RefreshCw className=\"h-3 w-3 animate-spin\" />\n                ) : (\n                  <Trash2 className=\"h-3 w-3\" />\n                )} \n                Limpar Duplicados\n              </button>\n            </div>\n          </div>\n\n          {/* Loading State */}\n          {loading && (\n            <div className=\"flex justify-center items-center py-12\">\n              <RefreshCw className=\"h-8 w-8 text-indigo-500 animate-spin\" />\n              <span className=\"ml-2 text-gray-700\">Carregando alertas de segurança...</span>\n            </div>\n          )}\n          \n          {/* Error State */}\n          {error && (\n            <div className=\"bg-red-50 border border-red-200 text-red-800 px-4 py-3 rounded-md mb-6\">\n              <p className=\"flex items-center\">\n                <AlertCircle className=\"h-5 w-5 text-red-500 mr-2\" />\n                {error}\n              </p>\n            </div>\n          )}\n\n          {/* No Results State */}\n          {!loading && !error && filteredAlerts.length === 0 && (\n            <div className=\"bg-white rounded-lg p-8 text-center\">\n              <Shield className=\"mx-auto h-12 w-12 text-gray-400 mb-4\" />\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Nenhum alerta encontrado</h3>\n              <p className=\"text-gray-500 mb-4\">\n                {activeCategory === \"all\" \n                  ? \"Não há alertas de segurança para exibir no momento.\" \n                  : `Não há alertas de segurança para ${\n                      activeCategory === 'iam' \n                        ? 'IAM & Secrets' \n                        : activeCategory === 'ec2' \n                          ? 'EC2 & Rede' \n                          : activeCategory === 's3' \n                            ? 'S3 Storage' \n                            : 'RDS'\n                    } no momento.`}\n              </p>\n              {activeCategory === \"iam\" && (\n                <button\n                  onClick={handleScanIAMThreats}\n                  disabled={!selectedCredential || iamScanLoading}\n                  className=\"mt-2 px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors\"\n                >\n                  {iamScanLoading ? \"Verificando IAM...\" : \"Verificar Segurança IAM\"}\n                </button>\n              )}\n            </div>\n          )}\n\n          {/* Alerts by Service */}\n          {!loading && !error && filteredAlerts.length > 0 && (\n            <div className=\"space-y-6\">\n              {/* Group alerts by service type for organized display */}\n              {Object.entries(\n                filteredAlerts.reduce((acc, alert) => {\n                  let service = getAlertCategory(alert.resourceType);\n                  \n                  if (!acc[service]) acc[service] = [];\n                  acc[service].push(alert);\n                  return acc;\n                }, {} as Record<string, any[]>)\n              ).map(([service, serviceAlerts]) => (\n                <motion.div \n                  key={service}\n                  initial={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                  className=\"bg-white rounded-lg shadow-sm overflow-hidden border border-gray-200\"\n                >\n                  <div \n                    className=\"px-4 py-3 flex items-center justify-between cursor-pointer\"\n                    onClick={() => {\n                      const newExpandedSections = expandedSections || [];\n                      if (newExpandedSections.includes(service)) {\n                        setExpandedSections(newExpandedSections.filter(s => s !== service));\n                      } else {\n                        setExpandedSections([...newExpandedSections, service]);\n                      }\n                    }}\n                  >\n                    <div className=\"flex items-center\">\n                      {service === \"iam\" ? <User className=\"h-5 w-5 text-orange-500\" /> : \n                       service === \"ec2\" ? <Server className=\"h-5 w-5 text-blue-500\" /> : \n                       service === \"s3\" ? <Database className=\"h-5 w-5 text-yellow-500\" /> : \n                       service === \"rds\" ? <Database className=\"h-5 w-5 text-green-500\" /> : \n                       service === \"dynamodb\" ? <Database className=\"h-5 w-5 text-purple-500\" /> : \n                       service === \"lambda\" ? <Key className=\"h-5 w-5 text-pink-500\" /> : \n                       <Shield className=\"h-5 w-5 text-gray-500\" />}\n                      <h3 className=\"text-lg font-medium ml-2 text-gray-900\">\n                        {service === \"iam\" ? \"IAM & Secrets\" : \n                         service === \"ec2\" ? \"EC2 & Rede\" : \n                         service === \"s3\" ? \"S3 Storage\" : \n                         service === \"rds\" ? \"RDS Database\" : \n                         service === \"dynamodb\" ? \"DynamoDB\" : \n                         service === \"lambda\" ? \"Lambda\" : \n                         \"Outros\"} \n                        <span className=\"ml-2 text-sm font-normal text-gray-500\">\n                          {serviceAlerts.length} {serviceAlerts.length === 1 ? \"alerta\" : \"alertas\"}\n                        </span>\n                      </h3>\n                    </div>\n                    {expandedSections && expandedSections.includes(service) ? (\n                      <ChevronDown className=\"h-5 w-5 text-gray-500\" />\n                    ) : (\n                      <ChevronRight className=\"h-5 w-5 text-gray-500\" />\n                    )}\n                  </div>\n                  \n                  {expandedSections && expandedSections.includes(service) && (\n                    <div className=\"border-t border-gray-200\">\n                      <ul className=\"divide-y divide-gray-200\">\n                        {serviceAlerts.map(alert => (\n                          <li key={alert.id} className=\"px-4 py-3\">\n                            <div className=\"flex items-start\">\n                              <div className=\"flex-shrink-0 mt-1\">\n                                {getSeverityIcon(alert.severity)}\n                              </div>\n                              <div className=\"ml-3 flex-1\">\n                                <div className=\"flex flex-wrap justify-between items-start gap-2\">\n                                  <h4 \n                                    className=\"text-sm font-medium text-gray-900 cursor-pointer hover:text-indigo-600\"\n                                    onClick={(e) => {\n                                      e.stopPropagation();\n                                      openAlertDetails(alert);\n                                    }}\n                                  >\n                                    {alert.title}\n                                  </h4>\n                                  <div className=\"flex flex-wrap gap-2\">\n                                    <span className={`px-2 py-0.5 rounded-full text-xs font-medium ${getSeverityColor(alert.severity)}`}>\n                                      {alert.severity}\n                                    </span>\n                                    <span className=\"px-2 py-0.5 bg-gray-100 text-gray-800 rounded-full text-xs\">\n                                      {alert.status === \"active\" ? \"Ativo\" : alert.status === \"resolved\" ? \"Resolvido\" : \"Arquivado\"}\n                                    </span>\n                                  </div>\n                                </div>\n                                <p className=\"mt-1 text-sm text-gray-600\">{alert.description}</p>\n                                <div className=\"mt-2 flex items-center text-xs text-gray-500\">\n                                  <span className=\"mr-2\">Recurso: {formatResourceType(alert.resourceType)}</span>\n                                  <span className=\"mr-2\">ID: {alert.resourceId}</span>\n                                  <span>Detectado: {new Date(alert.createdAt).toLocaleString()}</span>\n                                </div>\n                                \n                                {alert.status === \"active\" && (\n                                  <div className=\"mt-3 flex gap-2\">\n                                    <button\n                                      onClick={() => handleResolve(alert.id)}\n                                      disabled={actionLoading === alert.id}\n                                      className=\"px-2 py-1 bg-green-100 text-green-800 rounded-md text-xs flex items-center hover:bg-green-200\"\n                                    >\n                                      <CheckCircle className=\"h-3 w-3 mr-1\" />\n                                      {actionLoading === alert.id ? \"...\" : \"Resolver\"}\n                                    </button>\n                                    <button\n                                      onClick={() => handleDismiss(alert.id)}\n                                      disabled={actionLoading === alert.id}\n                                      className=\"px-2 py-1 bg-gray-100 text-gray-800 rounded-md text-xs flex items-center hover:bg-gray-200\"\n                                    >\n                                      <Archive className=\"h-3 w-3 mr-1\" />\n                                      {actionLoading === alert.id ? \"...\" : \"Arquivar\"}\n                                    </button>\n                                    <button\n                                      onClick={(e) => {\n                                        e.stopPropagation();\n                                        openAlertDetails(alert);\n                                      }}\n                                      className=\"px-2 py-1 bg-indigo-100 text-indigo-800 rounded-md text-xs flex items-center hover:bg-indigo-200\"\n                                    >\n                                      <ExternalLink className=\"h-3 w-3 mr-1\" />\n                                      Detalhes\n                                    </button>\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n                  )}\n                </motion.div>\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Modal para exibir detalhes do alerta */}\n      {showModal && selectedAlert && (\n        <motion.div \n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          className=\"fixed inset-0 bg-gray-900 bg-opacity-60 backdrop-blur-sm z-50 flex items-center justify-center p-4 overflow-y-auto\"\n          onClick={closeModal}\n        >\n          <motion.div \n            initial={{ scale: 0.9, opacity: 0 }}\n            animate={{ scale: 1, opacity: 1 }}\n            exit={{ scale: 0.9, opacity: 0 }}\n            transition={{ type: \"spring\", damping: 25, stiffness: 300 }}\n            className=\"w-full max-w-4xl bg-white rounded-xl shadow-2xl overflow-hidden\"\n            onClick={(e) => e.stopPropagation()}\n          >\n            {/* Cabeçalho do modal com gradiente baseado na severidade */}\n            <div className={`relative overflow-hidden ${\n              selectedAlert.severity === 'CRITICAL' ? 'bg-gradient-to-r from-red-500 to-red-700' :\n              selectedAlert.severity === 'HIGH' ? 'bg-gradient-to-r from-orange-500 to-orange-700' :\n              selectedAlert.severity === 'MEDIUM' ? 'bg-gradient-to-r from-yellow-500 to-yellow-700' :\n              selectedAlert.severity === 'LOW' ? 'bg-gradient-to-r from-blue-500 to-blue-700' :\n              'bg-gradient-to-r from-gray-500 to-gray-700'\n            }`}>\n              {/* Formas decorativas no background */}\n              <div className=\"absolute top-0 left-0 w-full h-full overflow-hidden opacity-10\">\n                <div className=\"absolute -top-8 -left-8 w-40 h-40 rounded-full bg-white\"></div>\n                <div className=\"absolute top-10 right-10 w-20 h-20 rounded-full bg-white\"></div>\n                <div className=\"absolute -bottom-8 left-1/2 w-40 h-40 rounded-full bg-white\"></div>\n              </div>\n              \n              <div className=\"relative p-6 flex items-start justify-between z-10\">\n                <div className=\"flex items-start\">\n                  <div className=\"p-2 rounded-lg bg-white bg-opacity-20 backdrop-blur-sm mr-4\">\n                    {selectedAlert.severity === 'CRITICAL' ? <AlertCircle className=\"h-8 w-8 text-red-200\" /> :\n                     selectedAlert.severity === 'HIGH' ? <AlertTriangle className=\"h-8 w-8 text-orange-200\" /> :\n                     selectedAlert.severity === 'MEDIUM' ? <AlertTriangle className=\"h-8 w-8 text-yellow-200\" /> :\n                     selectedAlert.severity === 'LOW' ? <Info className=\"h-8 w-8 text-blue-200\" /> :\n                     <Info className=\"h-8 w-8 text-gray-200\" />}\n                  </div>\n                  <div>\n                    <h3 className=\"text-2xl font-bold text-white\">{selectedAlert.title}</h3>\n                    <div className=\"flex items-center mt-2\">\n                      <span className=\"px-3 py-1 rounded-full text-xs font-bold bg-white text-gray-800\">\n                        {selectedAlert.severity}\n                      </span>\n                      <span className=\"ml-3 text-sm text-white text-opacity-90 flex items-center\">\n                        <Clock className=\"h-3.5 w-3.5 mr-1\" />\n                        {new Date(selectedAlert.createdAt).toLocaleString()}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <button \n                  onClick={closeModal}\n                  className=\"p-2 rounded-full hover:bg-white hover:bg-opacity-20 transition-colors\"\n                >\n                  <X className=\"h-6 w-6 text-white\" />\n                </button>\n              </div>\n            </div>\n            \n            {/* Corpo do modal */}\n            <div className=\"p-6 bg-gradient-to-b from-white to-gray-50\">\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                {/* Coluna de informações */}\n                <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-5\">\n                  <h4 className=\"text-lg font-bold text-gray-900 mb-4 flex items-center\">\n                    <Shield className=\"h-5 w-5 text-indigo-600 mr-2\" />\n                    Informações do Alerta\n                  </h4>\n                  \n                  <div className=\"space-y-5\">\n                    <div className=\"bg-gray-50 rounded-lg p-4\">\n                      <h5 className=\"text-sm font-semibold text-gray-700 mb-2 flex items-center\">\n                        <FileText className=\"h-4 w-4 text-gray-500 mr-2\" />\n                        Descrição\n                      </h5>\n                      <p className=\"text-sm text-gray-700 leading-relaxed\">{selectedAlert.description}</p>\n                    </div>\n                    \n                    <div className=\"bg-gray-50 rounded-lg p-4\">\n                      <h5 className=\"text-sm font-semibold text-gray-700 mb-2 flex items-center\">\n                        <Server className=\"h-4 w-4 text-gray-500 mr-2\" />\n                        Recurso Afetado\n                      </h5>\n                      <div className=\"flex items-center mb-2 bg-white p-3 rounded-lg border border-gray-200\">\n                        <div className=\"p-2 rounded-full bg-indigo-100 mr-3\">\n                          {getResourceTypeIcon(selectedAlert.resourceType)}\n                        </div>\n                        <div>\n                          <div className=\"text-sm font-medium text-gray-900\">\n                            {getResourceTypeText(selectedAlert.resourceType)}\n                          </div>\n                          <div className=\"text-xs text-gray-500\">ID: {selectedAlert.resourceId}</div>\n                        </div>\n                      </div>\n                      {selectedAlert.resourceName && (\n                        <div className=\"text-sm text-gray-700 mt-2 bg-white p-3 rounded-lg border border-gray-200\">\n                          <span className=\"font-medium\">Nome:</span> {selectedAlert.resourceName}\n                        </div>\n                      )}\n                    </div>\n                    \n                    <div className=\"bg-gray-50 rounded-lg p-4\">\n                      <h5 className=\"text-sm font-semibold text-gray-700 mb-2 flex items-center\">\n                        <Database className=\"h-4 w-4 text-gray-500 mr-2\" />\n                        Dados Adicionais\n                      </h5>\n                      <div className=\"grid grid-cols-2 gap-3 text-sm\">\n                        <div className=\"bg-white p-3 rounded-lg border border-gray-200\">\n                          <div className=\"text-xs text-gray-500 mb-1\">Serviço</div>\n                          <div className=\"font-medium text-gray-900\">{selectedAlert.service || 'N/A'}</div>\n                        </div>\n                        <div className=\"bg-white p-3 rounded-lg border border-gray-200\">\n                          <div className=\"text-xs text-gray-500 mb-1\">Região</div>\n                          <div className=\"font-medium text-gray-900\">{selectedAlert.region || 'N/A'}</div>\n                        </div>\n                        <div className=\"bg-white p-3 rounded-lg border border-gray-200\">\n                          <div className=\"text-xs text-gray-500 mb-1\">Status</div>\n                          <div className=\"font-medium flex items-center\">\n                            {selectedAlert.status === \"active\" ? (\n                              <><AlertCircle className=\"h-3 w-3 text-red-500 mr-1\" /> <span className=\"text-red-600\">Ativo</span></>\n                            ) : selectedAlert.status === \"resolved\" ? (\n                              <><CheckCircle className=\"h-3 w-3 text-green-500 mr-1\" /> <span className=\"text-green-600\">Resolvido</span></>\n                            ) : (\n                              <><Archive className=\"h-3 w-3 text-gray-500 mr-1\" /> <span className=\"text-gray-600\">Arquivado</span></>\n                            )}\n                          </div>\n                        </div>\n                        <div className=\"bg-white p-3 rounded-lg border border-gray-200\">\n                          <div className=\"text-xs text-gray-500 mb-1\">CVSS</div>\n                          <div className=\"font-medium text-gray-900\">{selectedAlert.cvss || 'N/A'}</div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                \n                {/* Coluna de mitigação */}\n                <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-5\">\n                  <h4 className=\"text-lg font-bold text-gray-900 mb-4 flex items-center\">\n                    <Shield className=\"h-5 w-5 text-green-600 mr-2\" />\n                    Mitigação Recomendada\n                  </h4>\n                  \n                  <div className=\"space-y-5\">\n                    <div className={`rounded-lg p-5 ${\n                      selectedAlert.severity === 'CRITICAL' ? 'bg-red-50 border border-red-100' :\n                      selectedAlert.severity === 'HIGH' ? 'bg-orange-50 border border-orange-100' :\n                      selectedAlert.severity === 'MEDIUM' ? 'bg-yellow-50 border border-yellow-100' :\n                      selectedAlert.severity === 'LOW' ? 'bg-blue-50 border border-blue-100' :\n                      'bg-gray-50 border border-gray-100'\n                    }`}>\n                      <h5 className=\"text-sm font-semibold mb-3 flex items-center\">\n                        <CheckCircle className={`h-4 w-4 mr-2 ${\n                          selectedAlert.severity === 'CRITICAL' ? 'text-red-600' :\n                          selectedAlert.severity === 'HIGH' ? 'text-orange-600' :\n                          selectedAlert.severity === 'MEDIUM' ? 'text-yellow-600' :\n                          selectedAlert.severity === 'LOW' ? 'text-blue-600' :\n                          'text-gray-600'\n                        }`} />\n                        Como resolver\n                      </h5>\n                      <div className={`text-sm whitespace-pre-line leading-relaxed ${\n                        selectedAlert.severity === 'CRITICAL' ? 'text-red-700' :\n                        selectedAlert.severity === 'HIGH' ? 'text-orange-700' :\n                        selectedAlert.severity === 'MEDIUM' ? 'text-yellow-700' :\n                        selectedAlert.severity === 'LOW' ? 'text-blue-700' :\n                        'text-gray-700'\n                      }`}>\n                        {selectedAlert.remediation || 'Nenhuma recomendação específica disponível para este alerta.'}\n                      </div>\n                    </div>\n                    \n                    <div className=\"bg-indigo-50 rounded-lg p-5 border border-indigo-100\">\n                      <h5 className=\"text-sm font-semibold text-indigo-800 mb-3 flex items-center\">\n                        <FileText className=\"h-4 w-4 text-indigo-600 mr-2\" />\n                        Passos para mitigação\n                      </h5>\n                      <ol className=\"list-decimal ml-5 text-sm text-indigo-700 space-y-2\">\n                        {selectedAlert.remediation ? (\n                          selectedAlert.remediation.split('\\n').filter(Boolean).map((step: string, index: number) => (\n                            <li key={index} className=\"pl-1\">{step}</li>\n                          ))\n                        ) : (\n                          <>\n                            <li className=\"pl-1\">Analise o recurso afetado no console AWS</li>\n                            <li className=\"pl-1\">Aplique as melhores práticas de segurança da AWS</li>\n                            <li className=\"pl-1\">Verifique a documentação oficial da AWS para recomendações específicas</li>\n                            <li className=\"pl-1\">Implemente as alterações seguindo o princípio de privilégio mínimo</li>\n                            <li className=\"pl-1\">Valide as alterações para garantir que o problema foi resolvido</li>\n                          </>\n                        )}\n                      </ol>\n                    </div>\n                    \n                    <div className=\"bg-gray-50 rounded-lg p-5 border border-gray-100\">\n                      <h5 className=\"text-sm font-semibold text-gray-800 mb-3 flex items-center\">\n                        <AlertTriangle className={`h-4 w-4 mr-2 ${\n                          selectedAlert.severity === 'CRITICAL' ? 'text-red-600' :\n                          selectedAlert.severity === 'HIGH' ? 'text-orange-600' :\n                          selectedAlert.severity === 'MEDIUM' ? 'text-yellow-600' :\n                          selectedAlert.severity === 'LOW' ? 'text-blue-600' :\n                          'text-gray-600'\n                        }`} />\n                        Impacto de segurança\n                      </h5>\n                      <div className=\"flex items-center justify-between mb-3\">\n                        <span className=\"text-xs font-medium text-gray-600\">Severidade</span>\n                        <div className=\"flex items-center\">\n                          {Array(5).fill(0).map((_, i) => (\n                            <div \n                              key={i} \n                              className={`w-6 h-1.5 rounded-full ml-1 ${\n                                (selectedAlert.severity === 'CRITICAL' && i < 5) ||\n                                (selectedAlert.severity === 'HIGH' && i < 4) ||\n                                (selectedAlert.severity === 'MEDIUM' && i < 3) ||\n                                (selectedAlert.severity === 'LOW' && i < 2) ||\n                                (selectedAlert.severity === 'INFO' && i < 1)\n                                  ? selectedAlert.severity === 'CRITICAL' ? 'bg-red-500' :\n                                    selectedAlert.severity === 'HIGH' ? 'bg-orange-500' :\n                                    selectedAlert.severity === 'MEDIUM' ? 'bg-yellow-500' :\n                                    selectedAlert.severity === 'LOW' ? 'bg-blue-500' :\n                                    'bg-gray-500'\n                                  : 'bg-gray-200'\n                              }`}\n                            ></div>\n                          ))}\n                        </div>\n                      </div>\n                      <p className=\"text-sm text-gray-700 bg-white p-3 rounded-lg border border-gray-200\">\n                        {selectedAlert.severity === 'CRITICAL' ? 'Este problema representa um risco crítico de segurança que requer atenção imediata. A exploração pode levar a comprometimento completo do sistema.' :\n                         selectedAlert.severity === 'HIGH' ? 'Este problema representa um alto risco de segurança que deve ser tratado com prioridade. Sistemas afetados são vulneráveis a ataques significativos.' :\n                         selectedAlert.severity === 'MEDIUM' ? 'Este problema representa um risco moderado de segurança que deve ser resolvido dentro de um prazo razoável.' :\n                         selectedAlert.severity === 'LOW' ? 'Este problema representa um baixo risco de segurança, mas ainda deve ser tratado como parte das boas práticas de segurança.' :\n                         'Este é um item informativo que não representa um risco imediato de segurança, mas pode ser considerado para melhorias futuras.'}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            {/* Rodapé com ações */}\n            <div className=\"bg-gray-50 p-5 border-t border-gray-200 flex justify-between\">\n              <div className=\"text-sm text-gray-500 flex items-center\">\n                <Shield className=\"h-4 w-4 mr-1 text-indigo-500\" />\n                ID: {selectedAlert.id?.substring(0, 8)}...\n              </div>\n              \n              <div className=\"flex gap-3\">\n                {selectedAlert.status === \"active\" && (\n                  <>\n                    <button\n                      onClick={() => {\n                        handleResolve(selectedAlert.id).then(() => closeModal());\n                      }}\n                      disabled={actionLoading === selectedAlert.id}\n                      className=\"px-4 py-2 bg-gradient-to-r from-green-500 to-green-600 text-white rounded-lg text-sm font-medium flex items-center hover:from-green-600 hover:to-green-700 transition-colors shadow-sm disabled:opacity-70\"\n                    >\n                      <CheckCircle className=\"h-4 w-4 mr-2\" />\n                      {actionLoading === selectedAlert.id ? \"Processando...\" : \"Marcar como Resolvido\"}\n                    </button>\n                    <button\n                      onClick={() => {\n                        handleDismiss(selectedAlert.id).then(() => closeModal());\n                      }}\n                      disabled={actionLoading === selectedAlert.id}\n                      className=\"px-4 py-2 bg-gradient-to-r from-gray-500 to-gray-600 text-white rounded-lg text-sm font-medium flex items-center hover:from-gray-600 hover:to-gray-700 transition-colors shadow-sm disabled:opacity-70\"\n                    >\n                      <Archive className=\"h-4 w-4 mr-2\" />\n                      {actionLoading === selectedAlert.id ? \"Processando...\" : \"Arquivar Alerta\"}\n                    </button>\n                  </>\n                )}\n                <button\n                  onClick={closeModal}\n                  className=\"px-4 py-2 bg-white border border-gray-300 text-gray-700 rounded-lg text-sm font-medium hover:bg-gray-50 transition-colors shadow-sm\"\n                >\n                  Fechar\n                </button>\n              </div>\n            </div>\n          </motion.div>\n        </motion.div>\n      )}\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}}]
}