{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/hooks/useAlerts.ts"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useCallback, useEffect } from \"react\";\r\n\r\ninterface Alert {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  resourceId: string;\r\n  resourceType: string;\r\n  severity: string;\r\n  status: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\ninterface AlertFilters {\r\n  status?: string;\r\n  severity?: string;\r\n  resourceType?: string;\r\n}\r\n\r\ninterface UseAlertsResult {\r\n  alerts: Alert[];\r\n  loading: boolean;\r\n  error: string | null;\r\n  filters: AlertFilters;\r\n  setFilters: (filters: AlertFilters) => void;\r\n  fetchAlerts: () => Promise<void>;\r\n  dismissAlert: (id: string) => Promise<boolean>;\r\n  resolveAlert: (id: string) => Promise<boolean>;\r\n}\r\n\r\nexport function useAlerts(): UseAlertsResult {\r\n  const [alerts, setAlerts] = useState<Alert[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [filters, setFilters] = useState<AlertFilters>({});\r\n\r\n  const fetchAlerts = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      let url = \"/api/alerts\";\r\n      const params = new URLSearchParams();\r\n      \r\n      if (filters.status) {\r\n        params.append(\"status\", filters.status);\r\n      }\r\n      if (filters.severity) {\r\n        params.append(\"severity\", filters.severity);\r\n      }\r\n      if (filters.resourceType) {\r\n        params.append(\"resourceType\", filters.resourceType);\r\n      }\r\n      \r\n      if (params.toString()) {\r\n        url += `?${params.toString()}`;\r\n      }\r\n      \r\n      const response = await fetch(url);\r\n      \r\n      if (!response.ok) {\r\n        const { error } = await response.json();\r\n        throw new Error(error || \"Erro ao buscar alertas\");\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setAlerts(data.alerts || []);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : \"Erro ao buscar alertas\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [filters]);\r\n\r\n  const updateAlertStatus = useCallback(async (id: string, action: \"dismiss\" | \"resolve\") => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await fetch(\"/api/alerts\", {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          id,\r\n          action,\r\n        }),\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const { error } = await response.json();\r\n        throw new Error(error || `Erro ao ${action === \"dismiss\" ? \"arquivar\" : \"resolver\"} alerta`);\r\n      }\r\n      \r\n      // Atualizar lista de alertas\r\n      await fetchAlerts();\r\n      return true;\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : `Erro ao ${action === \"dismiss\" ? \"arquivar\" : \"resolver\"} alerta`);\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [fetchAlerts]);\r\n\r\n  const dismissAlert = useCallback((id: string) => {\r\n    return updateAlertStatus(id, \"dismiss\");\r\n  }, [updateAlertStatus]);\r\n\r\n  const resolveAlert = useCallback((id: string) => {\r\n    return updateAlertStatus(id, \"resolve\");\r\n  }, [updateAlertStatus]);\r\n\r\n  // Buscar alertas ao montar o componente ou quando os filtros mudarem\r\n  useEffect(() => {\r\n    fetchAlerts();\r\n  }, [fetchAlerts]);\r\n\r\n  return {\r\n    alerts,\r\n    loading,\r\n    error,\r\n    filters,\r\n    setFilters,\r\n    fetchAlerts,\r\n    dismissAlert,\r\n    resolveAlert,\r\n  };\r\n} "],"names":[],"mappings":";;;AAEA;AAFA;;AAiCO,SAAS;IACd,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW,EAAE;IAChD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IAChD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAgB,CAAC;IAEtD,MAAM,cAAc,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QAC9B,IAAI;YACF,WAAW;YACX,SAAS;YAET,IAAI,MAAM;YACV,MAAM,SAAS,IAAI;YAEnB,IAAI,QAAQ,MAAM,EAAE;gBAClB,OAAO,MAAM,CAAC,UAAU,QAAQ,MAAM;YACxC;YACA,IAAI,QAAQ,QAAQ,EAAE;gBACpB,OAAO,MAAM,CAAC,YAAY,QAAQ,QAAQ;YAC5C;YACA,IAAI,QAAQ,YAAY,EAAE;gBACxB,OAAO,MAAM,CAAC,gBAAgB,QAAQ,YAAY;YACpD;YAEA,IAAI,OAAO,QAAQ,IAAI;gBACrB,OAAO,CAAC,CAAC,EAAE,OAAO,QAAQ,IAAI;YAChC;YAEA,MAAM,WAAW,MAAM,MAAM;YAE7B,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI;gBACrC,MAAM,IAAI,MAAM,SAAS;YAC3B;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,UAAU,KAAK,MAAM,IAAI,EAAE;QAC7B,EAAE,OAAO,KAAK;YACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;QAChD,SAAU;YACR,WAAW;QACb;IACF,GAAG;QAAC;KAAQ;IAEZ,MAAM,oBAAoB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,OAAO,IAAY;QACvD,IAAI;YACF,WAAW;YACX,SAAS;YAET,MAAM,WAAW,MAAM,MAAM,eAAe;gBAC1C,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBACnB;oBACA;gBACF;YACF;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI;gBACrC,MAAM,IAAI,MAAM,SAAS,CAAC,QAAQ,EAAE,WAAW,YAAY,aAAa,WAAW,OAAO,CAAC;YAC7F;YAEA,6BAA6B;YAC7B,MAAM;YACN,OAAO;QACT,EAAE,OAAO,KAAK;YACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG,CAAC,QAAQ,EAAE,WAAW,YAAY,aAAa,WAAW,OAAO,CAAC;YAChH,OAAO;QACT,SAAU;YACR,WAAW;QACb;IACF,GAAG;QAAC;KAAY;IAEhB,MAAM,eAAe,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC;QAChC,OAAO,kBAAkB,IAAI;IAC/B,GAAG;QAAC;KAAkB;IAEtB,MAAM,eAAe,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC;QAChC,OAAO,kBAAkB,IAAI;IAC/B,GAAG;QAAC;KAAkB;IAEtB,qEAAqE;IACrE,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG;QAAC;KAAY;IAEhB,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/hooks/useAwsCredentials.ts"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from 'react';\n\nexport interface AwsCredential {\n  id: string;\n  name: string;\n  accountId?: string;\n  accessKeyId: string;\n  secretAccessKey: string;\n  region: string;\n}\n\nexport interface UseAwsCredentialsResult {\n  credentials: AwsCredential[];\n  selectedCredential: AwsCredential | null;\n  selectCredential: (id: string) => void;\n  addCredential: (credential: Omit<AwsCredential, 'id'>) => Promise<void>;\n  updateCredential: (id: string, data: Partial<Omit<AwsCredential, 'id'>>) => Promise<void>;\n  deleteCredential: (id: string) => Promise<void>;\n  loading: boolean;\n  isLoading: boolean; // Alias for loading - needed for compatibility\n  error: string | null;\n  refresh: () => Promise<void>;\n}\n\nexport function useAwsCredentials(): UseAwsCredentialsResult {\n  const [credentials, setCredentials] = useState<AwsCredential[]>([]);\n  const [selectedCredentialId, setSelectedCredentialId] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Function to fetch credentials from the API\n  const fetchCredentials = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch('/api/aws/credentials');\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch credentials: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      setCredentials(data);\n      \n      // If we have credentials but none selected, select the first one\n      if (data.length > 0 && !selectedCredentialId) {\n        setSelectedCredentialId(data[0].id);\n        // Save to localStorage\n        localStorage.setItem('selectedAwsCredentialId', data[0].id);\n      }\n      \n      return data;\n    } catch (err) {\n      setError(`Error fetching credentials: ${err instanceof Error ? err.message : String(err)}`);\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to select a credential\n  const selectCredential = (id: string) => {\n    setSelectedCredentialId(id);\n    localStorage.setItem('selectedAwsCredentialId', id);\n  };\n\n  // Function to add a new credential\n  const addCredential = async (credential: Omit<AwsCredential, 'id'>) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch('/api/aws/credentials', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(credential),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to add credential: ${response.status}`);\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      setError(`Error adding credential: ${err instanceof Error ? err.message : String(err)}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to update an existing credential\n  const updateCredential = async (id: string, data: Partial<Omit<AwsCredential, 'id'>>) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch(`/api/aws/credentials/${id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to update credential: ${response.status}`);\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      setError(`Error updating credential: ${err instanceof Error ? err.message : String(err)}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to delete a credential\n  const deleteCredential = async (id: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch(`/api/aws/credentials/${id}`, {\n        method: 'DELETE',\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to delete credential: ${response.status}`);\n      }\n      \n      // If we delete the selected credential, select another one\n      if (id === selectedCredentialId) {\n        const remainingCredentials = credentials.filter(c => c.id !== id);\n        if (remainingCredentials.length > 0) {\n          selectCredential(remainingCredentials[0].id);\n        } else {\n          setSelectedCredentialId(null);\n          localStorage.removeItem('selectedAwsCredentialId');\n        }\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      setError(`Error deleting credential: ${err instanceof Error ? err.message : String(err)}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Load credentials on mount\n  useEffect(() => {\n    // Try to restore selected credential from localStorage\n    const savedCredentialId = localStorage.getItem('selectedAwsCredentialId');\n    if (savedCredentialId) {\n      setSelectedCredentialId(savedCredentialId);\n    }\n    \n    fetchCredentials();\n  }, []);\n\n  // Find the selected credential object\n  const selectedCredential = credentials.find(c => c.id === selectedCredentialId) || null;\n\n  return {\n    credentials,\n    selectedCredential,\n    selectCredential,\n    addCredential,\n    updateCredential,\n    deleteCredential,\n    loading,\n    isLoading: loading, // Alias for loading\n    error,\n    refresh: fetchCredentials,\n  };\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/app/dashboard/alerts/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useAlerts } from \"@/hooks/useAlerts\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useAwsCredentials } from \"@/hooks/useAwsCredentials\";\r\nimport { \r\n  Bell, AlertTriangle, AlertCircle, Info, \r\n  CheckCircle, XCircle, Archive, Shield, \r\n  Search, Filter, RefreshCw, Trash2, \r\n  User, Key, Lock, Database, Server\r\n} from \"lucide-react\";\r\n\r\nexport default function AlertsPage() {\r\n  const { selectedCredential } = useAwsCredentials();\r\n  const { \r\n    alerts, \r\n    loading, \r\n    error, \r\n    filters, \r\n    setFilters, \r\n    dismissAlert, \r\n    resolveAlert,\r\n    fetchAlerts\r\n  } = useAlerts();\r\n  \r\n  const [cleanupLoading, setCleanupLoading] = useState(false);\r\n  const [cleanupMessage, setCleanupMessage] = useState<string | null>(null);\r\n  const [showFilters, setShowFilters] = useState(false);\r\n  const [actionLoading, setActionLoading] = useState<string | null>(null);\r\n  const [iamScanLoading, setIamScanLoading] = useState(false);\r\n  const [iamScanMessage, setIamScanMessage] = useState<string | null>(null);\r\n  const [activeCategory, setActiveCategory] = useState<string>('all'); // 'all', 'iam', 'ec2', etc.\r\n\r\n  const handleDismiss = async (id: string) => {\r\n    setActionLoading(id);\r\n    await dismissAlert(id);\r\n    setActionLoading(null);\r\n  };\r\n\r\n  const handleResolve = async (id: string) => {\r\n    setActionLoading(id);\r\n    await resolveAlert(id);\r\n    setActionLoading(null);\r\n  };\r\n\r\n  const handleRefresh = async () => {\r\n    await fetchAlerts();\r\n  };\r\n\r\n  const handleScanIAMThreats = async () => {\r\n    if (!selectedCredential) {\r\n      setIamScanMessage(\"Selecione uma credencial AWS para realizar a verificação\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIamScanLoading(true);\r\n      setIamScanMessage(null);\r\n      \r\n      const response = await fetch('/api/alerts/iam', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          credentialId: selectedCredential.id\r\n        })\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const data = await response.json();\r\n        throw new Error(data.error || 'Erro ao verificar ameaças do IAM');\r\n      }\r\n      \r\n      const result = await response.json();\r\n      setIamScanMessage(result.message);\r\n      \r\n      // Recarregar alertas\r\n      await fetchAlerts();\r\n      \r\n      // Ativar a categoria IAM\r\n      setActiveCategory('iam');\r\n    } catch (error) {\r\n      setIamScanMessage(`Erro: ${error instanceof Error ? error.message : 'Erro desconhecido'}`);\r\n    } finally {\r\n      setIamScanLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCleanupDuplicates = async () => {\r\n    if (window.confirm(\"Deseja remover todos os alertas duplicados? Esta ação não pode ser desfeita.\")) {\r\n      try {\r\n        setCleanupLoading(true);\r\n        setCleanupMessage(null);\r\n        \r\n        const response = await fetch('/api/alerts/cleanup', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n        \r\n        if (!response.ok) {\r\n          const data = await response.json();\r\n          throw new Error(data.error || 'Erro ao limpar alertas duplicados');\r\n        }\r\n        \r\n        const result = await response.json();\r\n        setCleanupMessage(result.message);\r\n        \r\n        // Recarregar alertas em vez de recarregar a página inteira\r\n        await fetchAlerts();\r\n      } catch (error) {\r\n        setCleanupMessage(`Erro: ${error instanceof Error ? error.message : 'Erro desconhecido'}`);\r\n      } finally {\r\n        setCleanupLoading(false);\r\n      }\r\n    }\r\n  };\r\n  \r\n  const filteredAlerts = alerts.filter(alert => {\r\n    // Filtrar por categoria\r\n    if (activeCategory === 'iam') {\r\n      return ['IAMUser', 'IAMAccessKey', 'SecretManagerSecret', 'IAMPolicy'].includes(alert.resourceType);\r\n    } else if (activeCategory === 'ec2') {\r\n      return ['EC2Instance', 'SecurityGroup', 'Volume'].includes(alert.resourceType);\r\n    } else if (activeCategory === 's3') {\r\n      return alert.resourceType === 'S3Bucket';\r\n    } else if (activeCategory === 'rds') {\r\n      return alert.resourceType === 'RDSInstance';\r\n    }\r\n    \r\n    // 'all' retorna todos os alertas\r\n    return true;\r\n  });\r\n\r\n  const getSeverityIcon = (severity: string) => {\r\n    switch (severity) {\r\n      case 'CRITICAL':\r\n        return <AlertCircle className=\"h-5 w-5 text-red-500\" />;\r\n      case 'HIGH':\r\n        return <AlertTriangle className=\"h-5 w-5 text-orange-500\" />;\r\n      case 'MEDIUM':\r\n        return <AlertTriangle className=\"h-5 w-5 text-yellow-500\" />;\r\n      case 'LOW':\r\n        return <Info className=\"h-5 w-5 text-blue-500\" />;\r\n      default:\r\n        return <Info className=\"h-5 w-5 text-gray-500\" />;\r\n    }\r\n  };\r\n\r\n  const getSeverityText = (severity: string): string => {\r\n    const severityMap: Record<string, string> = {\r\n      CRITICAL: 'Crítico',\r\n      HIGH: 'Alto',\r\n      MEDIUM: 'Médio',\r\n      LOW: 'Baixo',\r\n      INFO: 'Informativo',\r\n    };\r\n    return severityMap[severity] || severity;\r\n  };\r\n\r\n  const getSeverityColor = (severity: string) => {\r\n    switch (severity) {\r\n      case 'CRITICAL': return 'bg-red-50 text-red-800 border-red-200';\r\n      case 'HIGH': return 'bg-orange-50 text-orange-800 border-orange-200';\r\n      case 'MEDIUM': return 'bg-yellow-50 text-yellow-800 border-yellow-200';\r\n      case 'LOW': return 'bg-blue-50 text-blue-800 border-blue-200';\r\n      default: return 'bg-gray-50 text-gray-800 border-gray-200';\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'active': return 'bg-red-100 text-red-800';\r\n      case 'dismissed': return 'bg-gray-100 text-gray-800';\r\n      case 'resolved': return 'bg-green-100 text-green-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const getStatusText = (status: string) => {\r\n    switch (status) {\r\n      case 'active': return 'Ativo';\r\n      case 'dismissed': return 'Arquivado';\r\n      case 'resolved': return 'Resolvido';\r\n      default: return 'Desconhecido';\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (status: string) => {\r\n    switch (status) {\r\n      case 'active': return <Bell className=\"h-4 w-4\" />;\r\n      case 'dismissed': return <Archive className=\"h-4 w-4\" />;\r\n      case 'resolved': return <CheckCircle className=\"h-4 w-4\" />;\r\n      default: return <Info className=\"h-4 w-4\" />;\r\n    }\r\n  };\r\n  \r\n  const getResourceTypeIcon = (resourceType: string) => {\r\n    switch (resourceType) {\r\n      case 'IAMUser':\r\n        return <User className=\"h-4 w-4 text-orange-500\" />;\r\n      case 'IAMAccessKey':\r\n        return <Key className=\"h-4 w-4 text-orange-500\" />;\r\n      case 'SecretManagerSecret':\r\n        return <Lock className=\"h-4 w-4 text-purple-500\" />;\r\n      case 'IAMPolicy':\r\n        return <Shield className=\"h-4 w-4 text-orange-500\" />;\r\n      case 'EC2Instance':\r\n        return <Server className=\"h-4 w-4 text-blue-500\" />;\r\n      case 'SecurityGroup':\r\n        return <Shield className=\"h-4 w-4 text-blue-500\" />;\r\n      case 'Volume':\r\n        return <Database className=\"h-4 w-4 text-blue-500\" />;\r\n      case 'S3Bucket':\r\n        return <Database className=\"h-4 w-4 text-yellow-500\" />;\r\n      case 'RDSInstance':\r\n        return <Database className=\"h-4 w-4 text-green-500\" />;\r\n      default:\r\n        return <Info className=\"h-4 w-4 text-gray-500\" />;\r\n    }\r\n  };\r\n  \r\n  const getResourceTypeText = (resourceType: string): string => {\r\n    const resourceMap: Record<string, string> = {\r\n      'IAMUser': 'Usuário IAM',\r\n      'IAMAccessKey': 'Chave de Acesso',\r\n      'SecretManagerSecret': 'Secret',\r\n      'IAMPolicy': 'Política IAM',\r\n      'EC2Instance': 'Instância EC2',\r\n      'SecurityGroup': 'Grupo de Segurança',\r\n      'Volume': 'Volume EBS',\r\n      'S3Bucket': 'Bucket S3',\r\n      'RDSInstance': 'Instância RDS',\r\n    };\r\n    return resourceMap[resourceType] || resourceType;\r\n  };\r\n\r\n  // Estatísticas\r\n  const activeCount = filteredAlerts.filter(a => a.status === 'active').length;\r\n  const criticalCount = filteredAlerts.filter(a => a.severity === 'CRITICAL' && a.status === 'active').length;\r\n  const highCount = filteredAlerts.filter(a => a.severity === 'HIGH' && a.status === 'active').length;\r\n  \r\n  // Estatísticas por tipo\r\n  const iamAlertCount = alerts.filter(a => \r\n    ['IAMUser', 'IAMAccessKey', 'SecretManagerSecret', 'IAMPolicy'].includes(a.resourceType) && \r\n    a.status === 'active'\r\n  ).length;\r\n  \r\n  const ec2AlertCount = alerts.filter(a => \r\n    ['EC2Instance', 'SecurityGroup', 'Volume'].includes(a.resourceType) && \r\n    a.status === 'active'\r\n  ).length;\r\n\r\n  const getSeverityBorderColor = (severity: string): string => {\r\n    const colorMap: Record<string, string> = {\r\n      CRITICAL: '#d70000', // red\r\n      HIGH: '#ff5722',    // orange-red\r\n      MEDIUM: '#ff9800',  // orange\r\n      LOW: '#60a5fa',     // blue\r\n      INFO: '#2196f3',    // blue\r\n    };\r\n    return colorMap[severity] || '#9e9e9e'; // default gray\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <motion.div\r\n        className=\"mb-6\"\r\n        initial={{ opacity: 0, y: -20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.3 }}\r\n      >\r\n        <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\r\n          <div>\r\n            <h1 className=\"text-3xl font-bold text-gray-900 flex items-center\">\r\n              <Bell className=\"mr-2 h-6 w-6 text-indigo-600\" />\r\n              Alertas de Segurança\r\n            </h1>\r\n            <p className=\"mt-2 text-gray-600\">\r\n              Monitore e gerencie alertas de segurança dos seus recursos AWS.\r\n            </p>\r\n          </div>\r\n          <div className=\"flex gap-2 self-end sm:self-auto\">\r\n            <button\r\n              onClick={() => setShowFilters(!showFilters)}\r\n              className=\"p-2 bg-white text-gray-700 rounded-md border border-gray-300 hover:bg-gray-50 transition-colors\"\r\n              title=\"Filtros\"\r\n            >\r\n              <Filter className=\"h-5 w-5\" />\r\n            </button>\r\n            <button\r\n              onClick={handleRefresh}\r\n              disabled={loading}\r\n              className=\"p-2 bg-white text-gray-700 rounded-md border border-gray-300 hover:bg-gray-50 transition-colors disabled:opacity-50\"\r\n              title=\"Atualizar\"\r\n            >\r\n              <RefreshCw className={`h-5 w-5 ${loading ? 'animate-spin' : ''}`} />\r\n            </button>\r\n            <button\r\n              onClick={handleScanIAMThreats}\r\n              disabled={iamScanLoading || !selectedCredential}\r\n              className=\"p-2 bg-white text-orange-700 rounded-md border border-orange-300 hover:bg-orange-50 transition-colors disabled:opacity-50 flex items-center gap-1\"\r\n              title=\"Verificar ameaças do IAM\"\r\n            >\r\n              <User className={`h-5 w-5 ${iamScanLoading ? 'animate-pulse' : ''}`} />\r\n              <span className=\"hidden md:inline text-xs whitespace-nowrap\">Verificar IAM</span>\r\n            </button>\r\n            <button\r\n              onClick={handleCleanupDuplicates}\r\n              disabled={cleanupLoading}\r\n              className=\"p-2 bg-white text-indigo-700 rounded-md border border-indigo-300 hover:bg-indigo-50 transition-colors disabled:opacity-50\"\r\n              title=\"Remover alertas duplicados\"\r\n            >\r\n              <Trash2 className=\"h-5 w-5\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        {cleanupMessage && (\r\n          <div className=\"mt-4 bg-green-50 border border-green-200 text-green-800 px-4 py-3 rounded-md flex items-start gap-2\">\r\n            <CheckCircle className=\"h-5 w-5 text-green-500 flex-shrink-0 mt-0.5\" />\r\n            <div>{cleanupMessage}</div>\r\n          </div>\r\n        )}\r\n        \r\n        {iamScanMessage && (\r\n          <div className=\"mt-4 bg-blue-50 border border-blue-200 text-blue-800 px-4 py-3 rounded-md flex items-start gap-2\">\r\n            <Info className=\"h-5 w-5 text-blue-500 flex-shrink-0 mt-0.5\" />\r\n            <div>{iamScanMessage}</div>\r\n          </div>\r\n        )}\r\n      </motion.div>\r\n\r\n      {/* Categorias de alertas */}\r\n      <div className=\"mb-6 flex flex-wrap gap-2\">\r\n        <button\r\n          onClick={() => setActiveCategory('all')}\r\n          className={`px-3 py-1.5 rounded-full text-sm font-medium flex items-center gap-1.5 \r\n            ${activeCategory === 'all' \r\n              ? 'bg-indigo-100 text-indigo-800 border border-indigo-300' \r\n              : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'}`}\r\n        >\r\n          <Bell className=\"h-4 w-4\" />\r\n          <span>Todos ({activeCount})</span>\r\n        </button>\r\n        <button\r\n          onClick={() => setActiveCategory('iam')}\r\n          className={`px-3 py-1.5 rounded-full text-sm font-medium flex items-center gap-1.5 \r\n            ${activeCategory === 'iam' \r\n              ? 'bg-orange-100 text-orange-800 border border-orange-300' \r\n              : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'}`}\r\n        >\r\n          <User className=\"h-4 w-4\" />\r\n          <span>IAM ({iamAlertCount})</span>\r\n        </button>\r\n        <button\r\n          onClick={() => setActiveCategory('ec2')}\r\n          className={`px-3 py-1.5 rounded-full text-sm font-medium flex items-center gap-1.5 \r\n            ${activeCategory === 'ec2' \r\n              ? 'bg-blue-100 text-blue-800 border border-blue-300' \r\n              : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'}`}\r\n        >\r\n          <Server className=\"h-4 w-4\" />\r\n          <span>EC2 ({ec2AlertCount})</span>\r\n        </button>\r\n      </div>\r\n\r\n      {/* Filtros */}\r\n      {showFilters && (\r\n        <motion.div \r\n          initial={{ opacity: 0, height: 0 }}\r\n          animate={{ opacity: 1, height: 'auto' }}\r\n          exit={{ opacity: 0, height: 0 }}\r\n          className=\"bg-white rounded-lg shadow-md mb-6 overflow-hidden\"\r\n        >\r\n          <div className=\"p-4 border-b border-gray-200 bg-gray-50\">\r\n            <h2 className=\"text-lg font-medium flex items-center\">\r\n              <Filter className=\"mr-2 h-5 w-5 text-indigo-600\" />\r\n              Filtros\r\n            </h2>\r\n          </div>\r\n          <div className=\"p-4\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n              <div>\r\n                <label htmlFor=\"statusFilter\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Status\r\n                </label>\r\n                <select\r\n                  id=\"statusFilter\"\r\n                  className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\r\n                  value={filters.status || ''}\r\n                  onChange={(e) => setFilters({ ...filters, status: e.target.value || undefined })}\r\n                >\r\n                  <option value=\"\">Todos</option>\r\n                  <option value=\"active\">Ativos</option>\r\n                  <option value=\"dismissed\">Arquivados</option>\r\n                  <option value=\"resolved\">Resolvidos</option>\r\n                </select>\r\n              </div>\r\n              \r\n              <div>\r\n                <label htmlFor=\"severityFilter\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Severidade\r\n                </label>\r\n                <select\r\n                  id=\"severityFilter\"\r\n                  className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\r\n                  value={filters.severity || ''}\r\n                  onChange={(e) => setFilters({ ...filters, severity: e.target.value || undefined })}\r\n                >\r\n                  <option value=\"\">Todas</option>\r\n                  <option value=\"CRITICAL\">Crítica</option>\r\n                  <option value=\"HIGH\">Alta</option>\r\n                  <option value=\"MEDIUM\">Média</option>\r\n                  <option value=\"LOW\">Baixa</option>\r\n                </select>\r\n              </div>\r\n              \r\n              <div>\r\n                <label htmlFor=\"resourceFilter\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Tipo de Recurso\r\n                </label>\r\n                <select\r\n                  id=\"resourceFilter\"\r\n                  className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\r\n                  value={filters.resourceType || ''}\r\n                  onChange={(e) => setFilters({ ...filters, resourceType: e.target.value || undefined })}\r\n                >\r\n                  <option value=\"\">Todos</option>\r\n                  <option value=\"EC2\">EC2</option>\r\n                  <option value=\"S3\">S3</option>\r\n                  <option value=\"RDS\">RDS</option>\r\n                  <option value=\"IAM\">IAM</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      )}\r\n\r\n      {/* Estatísticas */}\r\n      <div className=\"mb-6 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-4\">\r\n        <motion.div \r\n          initial={{ opacity: 0, y: 10 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.1 }}\r\n          className=\"bg-white shadow-sm rounded-lg p-4\"\r\n        >\r\n          <p className=\"text-sm text-gray-500\">Total de Alertas</p>\r\n          <p className=\"text-2xl font-bold text-gray-900\">{filteredAlerts.length}</p>\r\n          <div className=\"mt-1 flex gap-2\">\r\n            <span className=\"text-xs inline-flex items-center rounded-full bg-red-100 px-2 py-0.5 text-red-800\">\r\n              <Bell className=\"mr-1 h-3 w-3\" />\r\n              {activeCount} ativos\r\n            </span>\r\n          </div>\r\n        </motion.div>\r\n        \r\n        <motion.div \r\n          initial={{ opacity: 0, y: 10 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.2 }}\r\n          className=\"bg-white shadow-sm rounded-lg p-4\"\r\n        >\r\n          <p className=\"text-sm text-gray-500\">Críticos</p>\r\n          <p className=\"text-2xl font-bold text-red-600\">{criticalCount}</p>\r\n          <div className=\"mt-1\">\r\n            <span className=\"text-xs inline-flex items-center rounded-full bg-red-100 px-2 py-0.5 text-red-800\">\r\n              <AlertCircle className=\"mr-1 h-3 w-3\" />\r\n              Atenção imediata\r\n            </span>\r\n          </div>\r\n        </motion.div>\r\n        \r\n        <motion.div \r\n          initial={{ opacity: 0, y: 10 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.3 }}\r\n          className=\"bg-white shadow-sm rounded-lg p-4\"\r\n        >\r\n          <p className=\"text-sm text-gray-500\">Alta Severidade</p>\r\n          <p className=\"text-2xl font-bold text-orange-600\">{highCount}</p>\r\n          <div className=\"mt-1\">\r\n            <span className=\"text-xs inline-flex items-center rounded-full bg-orange-100 px-2 py-0.5 text-orange-800\">\r\n              <AlertTriangle className=\"mr-1 h-3 w-3\" />\r\n              Resolução prioritária\r\n            </span>\r\n          </div>\r\n        </motion.div>\r\n        \r\n        <motion.div \r\n          initial={{ opacity: 0, y: 10 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.4 }}\r\n          className=\"bg-white shadow-sm rounded-lg p-4\"\r\n        >\r\n          <p className=\"text-sm text-gray-500\">IAM</p>\r\n          <p className=\"text-2xl font-bold text-indigo-600\">{iamAlertCount}</p>\r\n          <div className=\"mt-1\">\r\n            <span className=\"text-xs inline-flex items-center rounded-full bg-orange-100 px-2 py-0.5 text-orange-800\">\r\n              <User className=\"mr-1 h-3 w-3\" />\r\n              Segurança de acesso\r\n            </span>\r\n          </div>\r\n        </motion.div>\r\n      </div>\r\n\r\n      {error && (\r\n        <motion.div\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          className=\"bg-red-50 border border-red-200 text-red-800 px-4 py-3 rounded-md flex items-start gap-2 mb-6\"\r\n        >\r\n          <AlertTriangle className=\"h-5 w-5 text-red-500 flex-shrink-0 mt-0.5\" />\r\n          <div>{error}</div>\r\n        </motion.div>\r\n      )}\r\n      \r\n      {loading ? (\r\n        <div className=\"flex flex-col items-center justify-center py-12 bg-white rounded-lg shadow\">\r\n          <RefreshCw className=\"h-8 w-8 text-indigo-500 animate-spin mb-4\" />\r\n          <p className=\"text-gray-500\">Carregando alertas...</p>\r\n        </div>\r\n      ) : filteredAlerts.length === 0 ? (\r\n        <motion.div \r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          className=\"bg-white rounded-lg shadow p-12 text-center\"\r\n        >\r\n          <Bell className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Nenhum alerta encontrado</h3>\r\n          <p className=\"text-gray-500\">\r\n            {activeCategory === 'all' \r\n              ? 'Não há alertas de segurança ativos no momento.' \r\n              : `Não há alertas de segurança para ${activeCategory.toUpperCase()} no momento.`}\r\n          </p>\r\n          {activeCategory === 'iam' && (\r\n            <button\r\n              onClick={handleScanIAMThreats}\r\n              disabled={iamScanLoading || !selectedCredential}\r\n              className=\"mt-4 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n            >\r\n              {iamScanLoading ? 'Verificando...' : 'Verificar Ameaças IAM'}\r\n            </button>\r\n          )}\r\n        </motion.div>\r\n      ) : (\r\n        <div className=\"space-y-3\">\r\n          {filteredAlerts.map((alert) => (\r\n            <motion.div\r\n              key={alert.id}\r\n              initial={{ opacity: 0, x: -10 }}\r\n              animate={{ opacity: 1, x: 0 }}\r\n              transition={{ duration: 0.2 }}\r\n              className=\"rounded-md shadow-sm overflow-hidden border border-gray-200 hover:shadow-md transition-shadow flex items-center\"\r\n              style={{ borderLeft: `4px solid ${getSeverityBorderColor(alert.severity)}` }}\r\n            >\r\n              <div className=\"bg-white p-3 flex-1 flex items-center\">\r\n                <div className=\"flex-shrink-0 mr-3\">\r\n                  {getSeverityIcon(alert.severity)}\r\n                </div>\r\n                \r\n                <div className=\"flex-1 min-w-0\">\r\n                  <h3 className=\"text-sm font-medium text-gray-900 truncate\">{alert.title}</h3>\r\n                  <div className=\"flex items-center text-xs text-gray-500 mt-0.5\">\r\n                    {getResourceTypeIcon(alert.resourceType)}\r\n                    <span className=\"ml-1 mr-2\">{getResourceTypeText(alert.resourceType)}</span>\r\n                    <span className=\"font-mono bg-gray-100 px-1.5 py-0.5 rounded text-gray-800 truncate max-w-[120px]\">\r\n                      {alert.resourceId}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"flex items-center space-x-2 ml-4\">\r\n                  <span className={`inline-flex items-center rounded-full px-2.5 py-0.5 text-xs font-medium whitespace-nowrap ${getSeverityColor(alert.severity)}`}>\r\n                    {getSeverityText(alert.severity)}\r\n                  </span>\r\n                  <span className={`inline-flex items-center rounded-full px-2.5 py-0.5 text-xs font-medium whitespace-nowrap ${getStatusColor(alert.status)}`}>\r\n                    {getStatusIcon(alert.status)}\r\n                    <span className=\"ml-1\">{getStatusText(alert.status)}</span>\r\n                  </span>\r\n                </div>\r\n                \r\n                {alert.status === 'active' && (\r\n                  <div className=\"ml-4 flex space-x-2\">\r\n                    <button\r\n                      onClick={() => handleResolve(alert.id)}\r\n                      disabled={actionLoading === alert.id}\r\n                      className=\"flex items-center text-green-700 hover:text-green-900 p-1\"\r\n                      title=\"Resolver\"\r\n                    >\r\n                      <CheckCircle className=\"h-4 w-4\" />\r\n                    </button>\r\n                    \r\n                    <button\r\n                      onClick={() => handleDismiss(alert.id)}\r\n                      disabled={actionLoading === alert.id}\r\n                      className=\"flex items-center text-gray-500 hover:text-gray-700 p-1\"\r\n                      title=\"Arquivar\"\r\n                    >\r\n                      <Archive className=\"h-4 w-4\" />\r\n                    </button>\r\n                  </div>\r\n                )}\r\n                \r\n                <button\r\n                  onClick={() => {}}\r\n                  className=\"ml-2 text-gray-400 hover:text-gray-600 p-1\"\r\n                  title=\"Ver detalhes\"\r\n                >\r\n                  <Info className=\"h-4 w-4\" />\r\n                </button>\r\n              </div>\r\n            </motion.div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}}]
}