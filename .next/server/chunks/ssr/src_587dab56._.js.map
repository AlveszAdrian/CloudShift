{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/hooks/useAwsCredentials.ts"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useCallback, useEffect } from \"react\";\r\n\r\ninterface AwsCredential {\r\n  id: string;\r\n  name: string;\r\n  region: string;\r\n  createdAt: string;\r\n}\r\n\r\ninterface UseAwsCredentialsResult {\r\n  credentials: AwsCredential[];\r\n  selectedCredential: AwsCredential | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n  fetchCredentials: () => Promise<void>;\r\n  selectCredential: (id: string) => void;\r\n  addCredential: (\r\n    name: string,\r\n    accessKeyId: string,\r\n    secretKey: string,\r\n    region: string\r\n  ) => Promise<boolean>;\r\n}\r\n\r\nexport function useAwsCredentials(): UseAwsCredentialsResult {\r\n  const [credentials, setCredentials] = useState<AwsCredential[]>([]);\r\n  const [selectedCredential, setSelectedCredential] = useState<AwsCredential | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const fetchCredentials = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await fetch(\"/api/aws/credentials\");\r\n      \r\n      if (!response.ok) {\r\n        const { error } = await response.json();\r\n        throw new Error(error || \"Erro ao buscar credenciais\");\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setCredentials(data);\r\n      \r\n      // Auto-selecionar a primeira credencial, se disponível\r\n      if (data.length > 0 && !selectedCredential) {\r\n        setSelectedCredential(data[0]);\r\n      }\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : \"Erro ao buscar credenciais\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [selectedCredential]);\r\n\r\n  const selectCredential = useCallback((id: string) => {\r\n    const credential = credentials.find(cred => cred.id === id);\r\n    if (credential) {\r\n      setSelectedCredential(credential);\r\n    }\r\n  }, [credentials]);\r\n\r\n  const addCredential = useCallback(async (\r\n    name: string,\r\n    accessKeyId: string,\r\n    secretKey: string,\r\n    region: string\r\n  ) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await fetch(\"/api/aws/credentials\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          name,\r\n          accessKeyId,\r\n          secretKey,\r\n          region,\r\n        }),\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const { error } = await response.json();\r\n        throw new Error(error || \"Erro ao adicionar credencial\");\r\n      }\r\n      \r\n      // Atualizar lista de credenciais\r\n      await fetchCredentials();\r\n      return true;\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : \"Erro ao adicionar credencial\");\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [fetchCredentials]);\r\n\r\n  // Buscar credenciais ao montar o componente\r\n  useEffect(() => {\r\n    fetchCredentials();\r\n  }, [fetchCredentials]);\r\n\r\n  return {\r\n    credentials,\r\n    selectedCredential,\r\n    loading,\r\n    error,\r\n    fetchCredentials,\r\n    selectCredential,\r\n    addCredential,\r\n  };\r\n} "],"names":[],"mappings":";;;AAEA;AAFA;;AA0BO,SAAS;IACd,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAmB,EAAE;IAClE,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAwB;IACnF,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IAChD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,MAAM,mBAAmB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QACnC,IAAI;YACF,WAAW;YACX,SAAS;YAET,MAAM,WAAW,MAAM,MAAM;YAE7B,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI;gBACrC,MAAM,IAAI,MAAM,SAAS;YAC3B;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,eAAe;YAEf,uDAAuD;YACvD,IAAI,KAAK,MAAM,GAAG,KAAK,CAAC,oBAAoB;gBAC1C,sBAAsB,IAAI,CAAC,EAAE;YAC/B;QACF,EAAE,OAAO,KAAK;YACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;QAChD,SAAU;YACR,WAAW;QACb;IACF,GAAG;QAAC;KAAmB;IAEvB,MAAM,mBAAmB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC;QACpC,MAAM,aAAa,YAAY,IAAI,CAAC,CAAA,OAAQ,KAAK,EAAE,KAAK;QACxD,IAAI,YAAY;YACd,sBAAsB;QACxB;IACF,GAAG;QAAC;KAAY;IAEhB,MAAM,gBAAgB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,OAChC,MACA,aACA,WACA;QAEA,IAAI;YACF,WAAW;YACX,SAAS;YAET,MAAM,WAAW,MAAM,MAAM,wBAAwB;gBACnD,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBACnB;oBACA;oBACA;oBACA;gBACF;YACF;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI;gBACrC,MAAM,IAAI,MAAM,SAAS;YAC3B;YAEA,iCAAiC;YACjC,MAAM;YACN,OAAO;QACT,EAAE,OAAO,KAAK;YACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;YAC9C,OAAO;QACT,SAAU;YACR,WAAW;QACb;IACF,GAAG;QAAC;KAAiB;IAErB,4CAA4C;IAC5C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG;QAAC;KAAiB;IAErB,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/app/dashboard/s3/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { useAwsCredentials } from \"@/hooks/useAwsCredentials\";\r\nimport { motion } from \"framer-motion\";\r\n\r\ninterface S3Bucket {\r\n  name: string;\r\n  creationDate: string;\r\n}\r\n\r\nexport default function S3Page() {\r\n  const { selectedCredential } = useAwsCredentials();\r\n  const [buckets, setBuckets] = useState<S3Bucket[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchBuckets() {\r\n      if (!selectedCredential) {\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        \r\n        console.log(`Buscando buckets S3 para credencial: ${selectedCredential.id}`);\r\n        const response = await fetch(`/api/aws/resources?credentialId=${selectedCredential.id}&type=S3`);\r\n        \r\n        if (!response.ok) {\r\n          const errorData = await response.json();\r\n          throw new Error(errorData.error || \"Erro ao buscar buckets S3\");\r\n        }\r\n        \r\n        const data = await response.json();\r\n        console.log(\"Resposta da API:\", data);\r\n        setBuckets(data.resources || []);\r\n      } catch (err) {\r\n        console.error(\"Erro ao buscar buckets:\", err);\r\n        setError(err instanceof Error ? err.message : \"Erro ao buscar buckets\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n    fetchBuckets();\r\n  }, [selectedCredential]);\r\n\r\n  return (\r\n    <div>\r\n      <motion.div\r\n        className=\"mb-6\"\r\n        initial={{ opacity: 0, y: -20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.3 }}\r\n      >\r\n        <h1 className=\"text-3xl font-bold text-gray-900\">Buckets S3</h1>\r\n        <p className=\"mt-2 text-gray-600\">\r\n          Visualize e monitore seus buckets de armazenamento S3 na AWS.\r\n        </p>\r\n      </motion.div>\r\n\r\n      <motion.div\r\n        className=\"bg-white rounded-lg shadow-md p-6\"\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.3 }}\r\n      >\r\n        {!selectedCredential ? (\r\n          <div className=\"text-center py-6\">\r\n            <p className=\"text-gray-500\">Selecione uma credencial AWS para visualizar os buckets.</p>\r\n          </div>\r\n        ) : loading ? (\r\n          <div className=\"flex justify-center py-8\">\r\n            <div className=\"animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-indigo-500\"></div>\r\n          </div>\r\n        ) : error ? (\r\n          <div className=\"p-4 bg-red-50 rounded-md\">\r\n            <p className=\"text-red-700\">{error}</p>\r\n          </div>\r\n        ) : buckets.length === 0 ? (\r\n          <div className=\"text-center py-6\">\r\n            <p className=\"text-gray-500\">Nenhum bucket S3 encontrado.</p>\r\n            <p className=\"text-sm text-gray-400 mt-2\">\r\n              Os buckets S3 são globais na AWS, mas podem ser limitados pela permissão da credencial.\r\n            </p>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <h2 className=\"text-lg font-medium text-gray-900\">\r\n                {buckets.length} {buckets.length === 1 ? \"Bucket\" : \"Buckets\"} Encontrados\r\n              </h2>\r\n              <span className=\"text-sm text-gray-500\">\r\n                Região da Credencial: {selectedCredential.region}\r\n              </span>\r\n            </div>\r\n            \r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n              {buckets.map((bucket) => (\r\n                <div key={bucket.name} className=\"border rounded-lg p-4 hover:bg-gray-50 transition-colors\">\r\n                  <div className=\"flex items-start space-x-3\">\r\n                    <div className=\"flex-shrink-0\">\r\n                      <svg className=\"h-8 w-8 text-indigo-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 8h14M5 8a2 2 0 110-4h14a2 2 0 110 4M5 8v10a2 2 0 002 2h10a2 2 0 002-2V8m-9 4h4\" />\r\n                      </svg>\r\n                    </div>\r\n                    <div>\r\n                      <h3 className=\"text-md font-medium text-gray-900\">{bucket.name}</h3>\r\n                      <p className=\"mt-1 text-sm text-gray-500\">\r\n                        Criado em: {new Date(bucket.creationDate).toLocaleDateString()}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </motion.div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}}]
}