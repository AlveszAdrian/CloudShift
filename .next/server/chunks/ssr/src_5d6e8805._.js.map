{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/src/hooks/useAwsCredentials.ts"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from 'react';\n\nexport interface AwsCredential {\n  id: string;\n  name: string;\n  accountId?: string;\n  accessKeyId: string;\n  secretAccessKey: string;\n  region: string;\n  createdAt?: string;\n}\n\nexport interface UseAwsCredentialsResult {\n  credentials: AwsCredential[];\n  selectedCredential: AwsCredential | null;\n  selectCredential: (id: string) => void;\n  addCredential: (credential: Omit<AwsCredential, 'id'>) => Promise<void>;\n  updateCredential: (id: string, data: Partial<Omit<AwsCredential, 'id'>>) => Promise<void>;\n  deleteCredential: (id: string) => Promise<void>;\n  loading: boolean;\n  isLoading: boolean; // Alias for loading - needed for compatibility\n  error: string | null;\n  refresh: () => Promise<void>;\n}\n\nexport function useAwsCredentials(): UseAwsCredentialsResult {\n  const [credentials, setCredentials] = useState<AwsCredential[]>([]);\n  const [selectedCredentialId, setSelectedCredentialId] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Function to fetch credentials from the API\n  const fetchCredentials = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch('/api/aws/credentials');\n      \n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        const errorMessage = errorData.error || `Falha ao buscar credenciais: Código ${response.status}`;\n        throw new Error(errorMessage);\n      }\n      \n      const data = await response.json();\n      setCredentials(data);\n      \n      // If we have credentials but none selected, select the first one\n      if (data.length > 0 && !selectedCredentialId) {\n        setSelectedCredentialId(data[0].id);\n        // Save to localStorage\n        localStorage.setItem('selectedAwsCredentialId', data[0].id);\n      }\n      \n      return data;\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : String(err);\n      setError(`Erro ao buscar credenciais: ${errorMessage}`);\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to select a credential\n  const selectCredential = (id: string) => {\n    setSelectedCredentialId(id);\n    localStorage.setItem('selectedAwsCredentialId', id);\n  };\n\n  // Function to add a new credential\n  const addCredential = async (credential: Omit<AwsCredential, 'id'>) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // Criar um objeto com o formato esperado pela API\n      const apiCredential = {\n        name: credential.name,\n        accessKeyId: credential.accessKeyId,\n        secretKey: credential.secretAccessKey, // Renomear o campo para secretKey\n        region: credential.region\n      };\n      \n      const response = await fetch('/api/aws/credentials', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(apiCredential),\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        const errorMessage = errorData.error || `Falha ao adicionar credencial: Código ${response.status}`;\n        throw new Error(errorMessage);\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : String(err);\n      setError(`Erro ao adicionar credencial: ${errorMessage}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to update an existing credential\n  const updateCredential = async (id: string, data: Partial<Omit<AwsCredential, 'id'>>) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch(`/api/aws/credentials/${id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        const errorMessage = errorData.error || `Falha ao atualizar credencial: Código ${response.status}`;\n        throw new Error(errorMessage);\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : String(err);\n      setError(`Erro ao atualizar credencial: ${errorMessage}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to delete a credential\n  const deleteCredential = async (id: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch(`/api/aws/credentials/${id}`, {\n        method: 'DELETE',\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        const errorMessage = errorData.error || `Falha ao excluir credencial: Código ${response.status}`;\n        throw new Error(errorMessage);\n      }\n      \n      // If we delete the selected credential, select another one\n      if (id === selectedCredentialId) {\n        const remainingCredentials = credentials.filter(c => c.id !== id);\n        if (remainingCredentials.length > 0) {\n          selectCredential(remainingCredentials[0].id);\n        } else {\n          setSelectedCredentialId(null);\n          localStorage.removeItem('selectedAwsCredentialId');\n        }\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : String(err);\n      setError(`Erro ao excluir credencial: ${errorMessage}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Load credentials on mount\n  useEffect(() => {\n    // Try to restore selected credential from localStorage\n    const savedCredentialId = localStorage.getItem('selectedAwsCredentialId');\n    if (savedCredentialId) {\n      setSelectedCredentialId(savedCredentialId);\n    }\n    \n    fetchCredentials();\n  }, []);\n\n  // Find the selected credential object\n  const selectedCredential = credentials.find(c => c.id === selectedCredentialId) || null;\n\n  return {\n    credentials,\n    selectedCredential,\n    selectCredential,\n    addCredential,\n    updateCredential,\n    deleteCredential,\n    loading,\n    isLoading: loading, // Alias for loading\n    error,\n    refresh: fetchCredentials,\n  };\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/src/hooks/useAlerts.ts"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useCallback, useEffect } from \"react\";\r\nimport { useAwsCredentials } from \"./useAwsCredentials\";\r\n\r\ninterface Alert {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  resourceId: string;\r\n  resourceType: string;\r\n  severity: string;\r\n  status: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  credentialId?: string;\r\n  credential?: {\r\n    name: string;\r\n  };\r\n}\r\n\r\ninterface AlertFilters {\r\n  status?: string;\r\n  severity?: string;\r\n  resourceType?: string;\r\n  credentialId?: string;\r\n}\r\n\r\ninterface UseAlertsResult {\r\n  alerts: Alert[];\r\n  loading: boolean;\r\n  error: string | null;\r\n  filters: AlertFilters;\r\n  setFilters: (filters: AlertFilters) => void;\r\n  fetchAlerts: () => Promise<void>;\r\n  dismissAlert: (id: string) => Promise<boolean>;\r\n  resolveAlert: (id: string) => Promise<boolean>;\r\n}\r\n\r\nexport function useAlerts(): UseAlertsResult {\r\n  const { selectedCredential } = useAwsCredentials();\r\n  const [alerts, setAlerts] = useState<Alert[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [filters, setFilters] = useState<AlertFilters>({});\r\n\r\n  const fetchAlerts = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      let url = \"/api/alerts\";\r\n      const params = new URLSearchParams();\r\n      \r\n      if (filters.status) {\r\n        params.append(\"status\", filters.status);\r\n      }\r\n      if (filters.severity) {\r\n        params.append(\"severity\", filters.severity);\r\n      }\r\n      if (filters.resourceType) {\r\n        params.append(\"resourceType\", filters.resourceType);\r\n      }\r\n      // Use the selected credential or a specific credentialId from filters\r\n      const credentialId = filters.credentialId || selectedCredential?.id;\r\n      if (credentialId) {\r\n        params.append(\"credentialId\", credentialId);\r\n      }\r\n      \r\n      if (params.toString()) {\r\n        url += `?${params.toString()}`;\r\n      }\r\n      \r\n      console.log('Buscando alertas em:', url);\r\n      const response = await fetch(url);\r\n      \r\n      if (!response.ok) {\r\n        const { error } = await response.json();\r\n        throw new Error(error || \"Erro ao buscar alertas\");\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log('Alertas recebidos:', data.alerts?.length || 0);\r\n      setAlerts(data.alerts || []);\r\n    } catch (err) {\r\n      console.error('Erro ao buscar alertas:', err);\r\n      setError(err instanceof Error ? err.message : \"Erro ao buscar alertas\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [filters, selectedCredential]);\r\n\r\n  const updateAlertStatus = useCallback(async (id: string, action: \"dismiss\" | \"resolve\") => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await fetch(\"/api/alerts\", {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          id,\r\n          action,\r\n        }),\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const { error } = await response.json();\r\n        throw new Error(error || `Erro ao ${action === \"dismiss\" ? \"arquivar\" : \"resolver\"} alerta`);\r\n      }\r\n      \r\n      // Atualizar lista de alertas\r\n      await fetchAlerts();\r\n      return true;\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : `Erro ao ${action === \"dismiss\" ? \"arquivar\" : \"resolver\"} alerta`);\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [fetchAlerts]);\r\n\r\n  const dismissAlert = useCallback((id: string) => {\r\n    return updateAlertStatus(id, \"dismiss\");\r\n  }, [updateAlertStatus]);\r\n\r\n  const resolveAlert = useCallback((id: string) => {\r\n    return updateAlertStatus(id, \"resolve\");\r\n  }, [updateAlertStatus]);\r\n\r\n  // Buscar alertas ao montar o componente ou quando os filtros ou a credencial selecionada mudarem\r\n  useEffect(() => {\r\n    fetchAlerts();\r\n  }, [fetchAlerts, selectedCredential]);\r\n\r\n  return {\r\n    alerts,\r\n    loading,\r\n    error,\r\n    filters,\r\n    setFilters,\r\n    fetchAlerts,\r\n    dismissAlert,\r\n    resolveAlert,\r\n  };\r\n} "],"names":[],"mappings":";;;AAEA;AACA;AAHA;;;AAuCO,SAAS;IACd,MAAM,EAAE,kBAAkB,EAAE,GAAG,CAAA,GAAA,iIAAA,CAAA,oBAAiB,AAAD;IAC/C,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW,EAAE;IAChD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IAChD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAgB,CAAC;IAEtD,MAAM,cAAc,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QAC9B,IAAI;YACF,WAAW;YACX,SAAS;YAET,IAAI,MAAM;YACV,MAAM,SAAS,IAAI;YAEnB,IAAI,QAAQ,MAAM,EAAE;gBAClB,OAAO,MAAM,CAAC,UAAU,QAAQ,MAAM;YACxC;YACA,IAAI,QAAQ,QAAQ,EAAE;gBACpB,OAAO,MAAM,CAAC,YAAY,QAAQ,QAAQ;YAC5C;YACA,IAAI,QAAQ,YAAY,EAAE;gBACxB,OAAO,MAAM,CAAC,gBAAgB,QAAQ,YAAY;YACpD;YACA,sEAAsE;YACtE,MAAM,eAAe,QAAQ,YAAY,IAAI,oBAAoB;YACjE,IAAI,cAAc;gBAChB,OAAO,MAAM,CAAC,gBAAgB;YAChC;YAEA,IAAI,OAAO,QAAQ,IAAI;gBACrB,OAAO,CAAC,CAAC,EAAE,OAAO,QAAQ,IAAI;YAChC;YAEA,QAAQ,GAAG,CAAC,wBAAwB;YACpC,MAAM,WAAW,MAAM,MAAM;YAE7B,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI;gBACrC,MAAM,IAAI,MAAM,SAAS;YAC3B;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,QAAQ,GAAG,CAAC,sBAAsB,KAAK,MAAM,EAAE,UAAU;YACzD,UAAU,KAAK,MAAM,IAAI,EAAE;QAC7B,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,2BAA2B;YACzC,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;QAChD,SAAU;YACR,WAAW;QACb;IACF,GAAG;QAAC;QAAS;KAAmB;IAEhC,MAAM,oBAAoB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,OAAO,IAAY;QACvD,IAAI;YACF,WAAW;YACX,SAAS;YAET,MAAM,WAAW,MAAM,MAAM,eAAe;gBAC1C,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBACnB;oBACA;gBACF;YACF;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI;gBACrC,MAAM,IAAI,MAAM,SAAS,CAAC,QAAQ,EAAE,WAAW,YAAY,aAAa,WAAW,OAAO,CAAC;YAC7F;YAEA,6BAA6B;YAC7B,MAAM;YACN,OAAO;QACT,EAAE,OAAO,KAAK;YACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG,CAAC,QAAQ,EAAE,WAAW,YAAY,aAAa,WAAW,OAAO,CAAC;YAChH,OAAO;QACT,SAAU;YACR,WAAW;QACb;IACF,GAAG;QAAC;KAAY;IAEhB,MAAM,eAAe,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC;QAChC,OAAO,kBAAkB,IAAI;IAC/B,GAAG;QAAC;KAAkB;IAEtB,MAAM,eAAe,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC;QAChC,OAAO,kBAAkB,IAAI;IAC/B,GAAG;QAAC;KAAkB;IAEtB,iGAAiG;IACjG,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG;QAAC;QAAa;KAAmB;IAEpC,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 292, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/src/components/dashboard/ResourceDistributionChart.tsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer\r\n} from 'recharts';\r\n\r\ninterface ResourcesDistributionProps {\r\n  resources: {\r\n    ec2: number;\r\n    s3: number;\r\n    rds: number;\r\n    lambda: number;\r\n    cloudfront: number;\r\n  };\r\n}\r\n\r\nconst ResourceDistributionChart: React.FC<ResourcesDistributionProps> = ({ resources }) => {\r\n  // Transformar os dados em formato compatível com o gráfico\r\n  const data = [\r\n    {\r\n      name: 'EC2',\r\n      value: resources.ec2,\r\n      color: '#3B82F6' // blue\r\n    },\r\n    {\r\n      name: 'S3',\r\n      value: resources.s3,\r\n      color: '#10B981' // green\r\n    },\r\n    {\r\n      name: 'RDS',\r\n      value: resources.rds,\r\n      color: '#8B5CF6' // purple\r\n    },\r\n    {\r\n      name: 'Lambda',\r\n      value: resources.lambda,\r\n      color: '#F59E0B' // yellow\r\n    },\r\n    {\r\n      name: 'CloudFront',\r\n      value: resources.cloudfront,\r\n      color: '#6366F1' // indigo\r\n    }\r\n  ];\r\n\r\n  const COLORS = data.map(item => item.color);\r\n  \r\n  // Customizando o tooltip\r\n  const CustomTooltip = ({ active, payload }: any) => {\r\n    if (active && payload && payload.length) {\r\n      const entry = payload[0];\r\n      const total = data.reduce((sum, item) => sum + item.value, 0);\r\n      const percentage = ((entry.value / total) * 100).toFixed(1);\r\n      \r\n      return (\r\n        <div className=\"bg-white p-3 shadow-md rounded border border-gray-200\">\r\n          <p className=\"font-semibold\" style={{ color: entry.color }}>{entry.name}</p>\r\n          <p className=\"text-sm\">Quantidade: {entry.value}</p>\r\n          <p className=\"text-sm\">Percentual: {percentage}%</p>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n  \r\n  // Customizando a legenda\r\n  const renderCustomizedLegend = (props: any) => {\r\n    const { payload } = props;\r\n    \r\n    return (\r\n      <div className=\"flex flex-wrap justify-center gap-3 mt-4\">\r\n        {payload.map((entry: any, index: number) => (\r\n          <div key={`item-${index}`} className=\"flex items-center\">\r\n            <div\r\n              className=\"w-3 h-3 mr-2 rounded-sm\"\r\n              style={{ backgroundColor: entry.color }}\r\n            />\r\n            <span className=\"text-xs\">{entry.value}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      <ResponsiveContainer width=\"100%\" height={250}>\r\n        <PieChart>\r\n          <Pie\r\n            data={data}\r\n            cx=\"50%\"\r\n            cy=\"50%\"\r\n            labelLine={false}\r\n            outerRadius={80}\r\n            fill=\"#8884d8\"\r\n            dataKey=\"value\"\r\n            animationDuration={1000}\r\n            animationBegin={0}\r\n          >\r\n            {data.map((entry, index) => (\r\n              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n            ))}\r\n          </Pie>\r\n          <Tooltip content={<CustomTooltip />} />\r\n          <Legend \r\n            content={renderCustomizedLegend}\r\n            verticalAlign=\"bottom\"\r\n            height={36}\r\n          />\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResourceDistributionChart; "],"names":[],"mappings":";;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAmBA,MAAM,4BAAkE,CAAC,EAAE,SAAS,EAAE;IACpF,2DAA2D;IAC3D,MAAM,OAAO;QACX;YACE,MAAM;YACN,OAAO,UAAU,GAAG;YACpB,OAAO,UAAU,OAAO;QAC1B;QACA;YACE,MAAM;YACN,OAAO,UAAU,EAAE;YACnB,OAAO,UAAU,QAAQ;QAC3B;QACA;YACE,MAAM;YACN,OAAO,UAAU,GAAG;YACpB,OAAO,UAAU,SAAS;QAC5B;QACA;YACE,MAAM;YACN,OAAO,UAAU,MAAM;YACvB,OAAO,UAAU,SAAS;QAC5B;QACA;YACE,MAAM;YACN,OAAO,UAAU,UAAU;YAC3B,OAAO,UAAU,SAAS;QAC5B;KACD;IAED,MAAM,SAAS,KAAK,GAAG,CAAC,CAAA,OAAQ,KAAK,KAAK;IAE1C,yBAAyB;IACzB,MAAM,gBAAgB,CAAC,EAAE,MAAM,EAAE,OAAO,EAAO;QAC7C,IAAI,UAAU,WAAW,QAAQ,MAAM,EAAE;YACvC,MAAM,QAAQ,OAAO,CAAC,EAAE;YACxB,MAAM,QAAQ,KAAK,MAAM,CAAC,CAAC,KAAK,OAAS,MAAM,KAAK,KAAK,EAAE;YAC3D,MAAM,aAAa,CAAC,AAAC,MAAM,KAAK,GAAG,QAAS,GAAG,EAAE,OAAO,CAAC;YAEzD,qBACE,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAE,WAAU;wBAAgB,OAAO;4BAAE,OAAO,MAAM,KAAK;wBAAC;kCAAI,MAAM,IAAI;;;;;;kCACvE,8OAAC;wBAAE,WAAU;;4BAAU;4BAAa,MAAM,KAAK;;;;;;;kCAC/C,8OAAC;wBAAE,WAAU;;4BAAU;4BAAa;4BAAW;;;;;;;;;;;;;QAGrD;QACA,OAAO;IACT;IAEA,yBAAyB;IACzB,MAAM,yBAAyB,CAAC;QAC9B,MAAM,EAAE,OAAO,EAAE,GAAG;QAEpB,qBACE,8OAAC;YAAI,WAAU;sBACZ,QAAQ,GAAG,CAAC,CAAC,OAAY,sBACxB,8OAAC;oBAA0B,WAAU;;sCACnC,8OAAC;4BACC,WAAU;4BACV,OAAO;gCAAE,iBAAiB,MAAM,KAAK;4BAAC;;;;;;sCAExC,8OAAC;4BAAK,WAAU;sCAAW,MAAM,KAAK;;;;;;;mBAL9B,CAAC,KAAK,EAAE,OAAO;;;;;;;;;;IAUjC;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC,mKAAA,CAAA,sBAAmB;YAAC,OAAM;YAAO,QAAQ;sBACxC,cAAA,8OAAC,oJAAA,CAAA,WAAQ;;kCACP,8OAAC,+IAAA,CAAA,MAAG;wBACF,MAAM;wBACN,IAAG;wBACH,IAAG;wBACH,WAAW;wBACX,aAAa;wBACb,MAAK;wBACL,SAAQ;wBACR,mBAAmB;wBACnB,gBAAgB;kCAEf,KAAK,GAAG,CAAC,CAAC,OAAO,sBAChB,8OAAC,oJAAA,CAAA,OAAI;gCAAuB,MAAM,MAAM,CAAC,QAAQ,OAAO,MAAM,CAAC;+BAApD,CAAC,KAAK,EAAE,OAAO;;;;;;;;;;kCAG9B,8OAAC,uJAAA,CAAA,UAAO;wBAAC,uBAAS,8OAAC;;;;;;;;;;kCACnB,8OAAC,sJAAA,CAAA,SAAM;wBACL,SAAS;wBACT,eAAc;wBACd,QAAQ;;;;;;;;;;;;;;;;;;;;;;AAMpB;uCAEe","debugId":null}},
    {"offset": {"line": 497, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/src/components/dashboard/SecurityIssuesChart.tsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer\r\n} from 'recharts';\r\n\r\ninterface SecurityIssuesChartProps {\r\n  issues: {\r\n    critical: number;\r\n    high: number;\r\n    medium: number;\r\n    low: number;\r\n  };\r\n}\r\n\r\nconst SecurityIssuesChart: React.FC<SecurityIssuesChartProps> = ({ issues }) => {\r\n  // Transformar os dados em formato compatível com o gráfico\r\n  const data = [\r\n    {\r\n      name: 'Crítica',\r\n      value: issues.critical,\r\n      color: '#EF4444'\r\n    },\r\n    {\r\n      name: 'Alta',\r\n      value: issues.high,\r\n      color: '#F97316'\r\n    },\r\n    {\r\n      name: 'Média',\r\n      value: issues.medium,\r\n      color: '#EAB308'\r\n    },\r\n    {\r\n      name: 'Baixa',\r\n      value: issues.low,\r\n      color: '#3B82F6'\r\n    }\r\n  ];\r\n\r\n  // Customizando o tooltip\r\n  const CustomTooltip = ({ active, payload, label }: any) => {\r\n    if (active && payload && payload.length) {\r\n      return (\r\n        <div className=\"bg-white p-3 shadow-md rounded border border-gray-200\">\r\n          <p className=\"font-semibold\">Severidade: {label}</p>\r\n          <p className=\"text-sm\">Quantidade: {payload[0].value}</p>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      <ResponsiveContainer width=\"100%\" height={220}>\r\n        <BarChart\r\n          data={data}\r\n          margin={{\r\n            top: 10,\r\n            right: 10,\r\n            left: 10,\r\n            bottom: 10\r\n          }}\r\n          barSize={40}\r\n          layout=\"vertical\"\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" horizontal={true} vertical={false} />\r\n          <XAxis type=\"number\" />\r\n          <YAxis dataKey=\"name\" type=\"category\" />\r\n          <Tooltip content={<CustomTooltip />} />\r\n          <Legend />\r\n          <Bar \r\n            dataKey=\"value\" \r\n            name=\"Issues de Segurança\"\r\n            radius={[0, 4, 4, 0]}\r\n          >\r\n            {data.map((entry, index) => (\r\n              <rect key={`cell-${index}`} fill={entry.color} />\r\n            ))}\r\n          </Bar>\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SecurityIssuesChart; "],"names":[],"mappings":";;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAoBA,MAAM,sBAA0D,CAAC,EAAE,MAAM,EAAE;IACzE,2DAA2D;IAC3D,MAAM,OAAO;QACX;YACE,MAAM;YACN,OAAO,OAAO,QAAQ;YACtB,OAAO;QACT;QACA;YACE,MAAM;YACN,OAAO,OAAO,IAAI;YAClB,OAAO;QACT;QACA;YACE,MAAM;YACN,OAAO,OAAO,MAAM;YACpB,OAAO;QACT;QACA;YACE,MAAM;YACN,OAAO,OAAO,GAAG;YACjB,OAAO;QACT;KACD;IAED,yBAAyB;IACzB,MAAM,gBAAgB,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAO;QACpD,IAAI,UAAU,WAAW,QAAQ,MAAM,EAAE;YACvC,qBACE,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAE,WAAU;;4BAAgB;4BAAa;;;;;;;kCAC1C,8OAAC;wBAAE,WAAU;;4BAAU;4BAAa,OAAO,CAAC,EAAE,CAAC,KAAK;;;;;;;;;;;;;QAG1D;QACA,OAAO;IACT;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC,mKAAA,CAAA,sBAAmB;YAAC,OAAM;YAAO,QAAQ;sBACxC,cAAA,8OAAC,oJAAA,CAAA,WAAQ;gBACP,MAAM;gBACN,QAAQ;oBACN,KAAK;oBACL,OAAO;oBACP,MAAM;oBACN,QAAQ;gBACV;gBACA,SAAS;gBACT,QAAO;;kCAEP,8OAAC,6JAAA,CAAA,gBAAa;wBAAC,iBAAgB;wBAAM,YAAY;wBAAM,UAAU;;;;;;kCACjE,8OAAC,qJAAA,CAAA,QAAK;wBAAC,MAAK;;;;;;kCACZ,8OAAC,qJAAA,CAAA,QAAK;wBAAC,SAAQ;wBAAO,MAAK;;;;;;kCAC3B,8OAAC,uJAAA,CAAA,UAAO;wBAAC,uBAAS,8OAAC;;;;;;;;;;kCACnB,8OAAC,sJAAA,CAAA,SAAM;;;;;kCACP,8OAAC,mJAAA,CAAA,MAAG;wBACF,SAAQ;wBACR,MAAK;wBACL,QAAQ;4BAAC;4BAAG;4BAAG;4BAAG;yBAAE;kCAEnB,KAAK,GAAG,CAAC,CAAC,OAAO,sBAChB,8OAAC;gCAA2B,MAAM,MAAM,KAAK;+BAAlC,CAAC,KAAK,EAAE,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;AAOxC;uCAEe","debugId":null}},
    {"offset": {"line": 673, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/src/components/dashboard/DashboardContainer.tsx"],"sourcesContent":["import React from 'react';\r\n\r\ninterface DashboardContainerProps {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\n/**\r\n * Um container padronizado para gráficos e visualizações de dados\r\n * que elimina efeitos de degradê e gradientes nas bordas\r\n */\r\nconst DashboardContainer: React.FC<DashboardContainerProps> = ({ children, className = '' }) => {\r\n  return (\r\n    <div \r\n      className={`bg-white dark:bg-slate-900 border border-gray-200 dark:border-slate-700 rounded-lg shadow-sm p-4 clean-chart-container ${className}`}\r\n      style={{ \r\n        overflow: 'hidden', // Garante que os conteúdos não ultrapassem as bordas\r\n        position: 'relative'\r\n      }}\r\n    >\r\n      {/* Este estilo inline é adicionado para garantir que nenhum efeito de degradê seja aplicado */}\r\n      <style jsx>{`\r\n        .clean-chart-container::before,\r\n        .clean-chart-container::after {\r\n          display: none !important;\r\n          content: none !important;\r\n          background: none !important;\r\n        }\r\n        \r\n        .clean-chart-container :global(.recharts-wrapper::before),\r\n        .clean-chart-container :global(.recharts-wrapper::after) {\r\n          display: none !important;\r\n          content: none !important;\r\n          background: none !important;\r\n        }\r\n      `}</style>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardContainer; "],"names":[],"mappings":";;;;;;;AAOA;;;CAGC,GACD,MAAM,qBAAwD,CAAC,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE;IACzF,qBACE,8OAAC;QAEC,OAAO;YACL,UAAU;YACV,UAAU;QACZ;kDAJW,CAAC,uHAAuH,EAAE,WAAW;;;;;;YAsB/I;;;;;;;AAGP;uCAEe","debugId":null}},
    {"offset": {"line": 710, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Github%20Projects/AWS-Monitor/src/app/dashboard/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useAwsCredentials } from \"@/hooks/useAwsCredentials\";\nimport { useRouter } from \"next/navigation\";\nimport { useState, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { useAlerts } from \"@/hooks/useAlerts\";\nimport AlertsDashboard from \"@/components/dashboard/AlertsDashboard\";\nimport SecurityScoreChart from \"@/components/dashboard/SecurityScoreChart\";\nimport ResourcesChart from \"@/components/dashboard/ResourcesChart\";\nimport ResourceDistributionChart from \"@/components/dashboard/ResourceDistributionChart\";\nimport ComplianceChart from \"@/components/dashboard/ComplianceChart\";\nimport SecurityIssuesChart from \"@/components/dashboard/SecurityIssuesChart\";\nimport DashboardContainer from \"@/components/dashboard/DashboardContainer\";\nimport { \n  AlertCircle, \n  AlertTriangle, \n  Info, \n  RefreshCw, \n  Shield, \n  Server, \n  Database, \n  Cloud, \n  HardDrive,\n  Code\n} from \"lucide-react\";\n\n// Interface para os dados do dashboard\ninterface DashboardData {\n  resources: {\n    ec2: number;\n    s3: number;\n    rds: number;\n    lambda: number;\n    cloudfront: number;\n  };\n  security: {\n    score: number;\n    issues: {\n      critical: number;\n      high: number;\n      medium: number;\n      low: number;\n    };\n    highRiskUsers: number;\n    mediumRiskUsers: number;\n    lowRiskUsers: number;\n  };\n  compliance: {\n    pci: number;\n    hipaa: number;\n    gdpr: number;\n    nist: number;\n  };\n}\n\nexport default function DashboardPage() {\n  const { credentials, selectedCredential, loading: credentialsLoading } = useAwsCredentials();\n  const { alerts, loading: alertsLoading, error: alertsError, fetchAlerts } = useAlerts();\n  const router = useRouter();\n  const [dashboardData, setDashboardData] = useState<DashboardData | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [backgroundLoading, setBackgroundLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [lastUpdated, setLastUpdated] = useState<Date | null>(null);\n  const [lastCredentialId, setLastCredentialId] = useState<string | null>(null);\n\n  // Carregar dados do dashboard quando a credencial mudar\n  useEffect(() => {\n    if (!selectedCredential) {\n      setLoading(false);\n      return;\n    }\n    \n    // Verificar se já temos dados no localStorage\n    try {\n      const dashboardCache = localStorage.getItem('dashboardData');\n      const cachedCredentialId = localStorage.getItem('dashboardLastCredentialId');\n      const cachedTimestamp = localStorage.getItem('dashboardLastUpdateTime');\n      \n      if (dashboardCache && cachedCredentialId === selectedCredential.id) {\n        // Usar dados do cache\n        const parsedData = JSON.parse(dashboardCache);\n        setDashboardData(parsedData);\n        setLoading(false);\n        \n        if (cachedTimestamp) {\n          setLastUpdated(new Date(parseInt(cachedTimestamp)));\n        }\n        \n        // Verificar se é hora de atualizar em background\n        if (cachedTimestamp) {\n          const timeSinceLastUpdate = Date.now() - parseInt(cachedTimestamp);\n          const fiveMinutesInMs = 5 * 60 * 1000;\n          \n          if (timeSinceLastUpdate > fiveMinutesInMs) {\n            // Atualiza em background se passou mais de 5 minutos\n            fetchDashboardDataInBackground();\n          }\n        }\n      } else {\n        // Se não tem cache ou a credencial mudou, buscar novos dados\n        fetchDashboardData();\n      }\n      \n      setLastCredentialId(selectedCredential.id);\n    } catch (error) {\n      console.error(\"Erro ao restaurar cache:\", error);\n      fetchDashboardData();\n    }\n  }, [selectedCredential]);\n\n  // Carregar alertas quando a credencial mudar\n  useEffect(() => {\n    if (selectedCredential) {\n      fetchAlerts();\n    }\n  }, [selectedCredential, fetchAlerts]);\n\n  // Função para buscar dados do dashboard com feedback visual\n  async function fetchDashboardData() {\n    if (!selectedCredential) {\n      setLoading(false);\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(`/api/aws/dashboard?credentialId=${selectedCredential.id}`);\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `Erro ${response.status}`);\n      }\n\n      const data = await response.json();\n      setDashboardData(data);\n      const currentTime = new Date();\n      setLastUpdated(currentTime);\n      \n      // Salvar no cache\n      localStorage.setItem('dashboardData', JSON.stringify(data));\n      localStorage.setItem('dashboardLastCredentialId', selectedCredential.id);\n      localStorage.setItem('dashboardLastUpdateTime', currentTime.getTime().toString());\n    } catch (err) {\n      console.error('Erro ao carregar dados do dashboard:', err);\n      setError(err instanceof Error ? err.message : 'Erro desconhecido');\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  // Função para atualizar em background sem interferir na experiência do usuário\n  async function fetchDashboardDataInBackground() {\n    if (!selectedCredential) return;\n    \n    try {\n      setBackgroundLoading(true);\n      \n      const response = await fetch(`/api/aws/dashboard?credentialId=${selectedCredential.id}`);\n      \n      if (!response.ok) {\n        throw new Error(\"Erro na atualização em background\");\n      }\n      \n      const data = await response.json();\n      setDashboardData(data);\n      const currentTime = new Date();\n      setLastUpdated(currentTime);\n      \n      // Salvar no cache\n      localStorage.setItem('dashboardData', JSON.stringify(data));\n      localStorage.setItem('dashboardLastCredentialId', selectedCredential.id);\n      localStorage.setItem('dashboardLastUpdateTime', currentTime.getTime().toString());\n      \n      console.log(\"Atualização em background do dashboard concluída\");\n    } catch (err) {\n      console.error(\"Erro na atualização em background:\", err);\n      // Não exibimos erros de background para o usuário\n    } finally {\n      setBackgroundLoading(false);\n    }\n  }\n\n  // Função para atualizar dados manualmente\n  const handleRefresh = async () => {\n    await fetchDashboardData();\n    await fetchAlerts();\n  };\n\n  // Filtrar alertas ativos por severidade\n  const activeAlerts = alerts.filter(a => a.status === 'active' || a.status === 'OPEN');\n  const criticalAlerts = activeAlerts.filter(a => a.severity === 'CRITICAL');\n  const highAlerts = activeAlerts.filter(a => a.severity === 'HIGH');\n  const mediumAlerts = activeAlerts.filter(a => a.severity === 'MEDIUM');\n  const lowAlerts = activeAlerts.filter(a => a.severity === 'LOW');\n\n  // Calcular score de segurança baseado nos alertas (alternativa quando não há dados)\n  const calculateSecurityScore = () => {\n    if (dashboardData) return dashboardData.security.score;\n    \n    // Pontuação base é 100, e reduz com base na ponderação dos alertas\n    const totalWeight = criticalAlerts.length * 10 + highAlerts.length * 5 + \n                         mediumAlerts.length * 2 + lowAlerts.length * 0.5;\n    let score = 100 - totalWeight;\n    \n    // Garantir que a pontuação esteja entre 0 e 100\n    score = Math.max(0, Math.min(100, score));\n    \n    // Arredondar para o inteiro mais próximo\n    return Math.round(score);\n  };\n  \n  // Função para agrupar alertas por tipo de recurso\n  const getResourceAlertCounts = () => {\n    const resourceCounts = {\n      ec2: 0,\n      s3: 0,\n      rds: 0,\n      lambda: 0,\n      cloudfront: 0\n    };\n    \n    activeAlerts.forEach(alert => {\n      const resourceType = alert.resourceType.toLowerCase();\n      \n      if (resourceType.includes('ec2') || resourceType.includes('instance')) {\n        resourceCounts.ec2++;\n      } else if (resourceType.includes('s3') || resourceType.includes('bucket')) {\n        resourceCounts.s3++;\n      } else if (resourceType.includes('rds') || resourceType.includes('database')) {\n        resourceCounts.rds++;\n      } else if (resourceType.includes('lambda') || resourceType.includes('function')) {\n        resourceCounts.lambda++;\n      } else if (resourceType.includes('cloudfront') || resourceType.includes('distribution')) {\n        resourceCounts.cloudfront++;\n      }\n    });\n    \n    return resourceCounts;\n  };\n\n  const securityScore = calculateSecurityScore();\n  const resourceAlertCounts = getResourceAlertCounts();\n\n  return (\n    <div>\n      <motion.div\n        className=\"mb-6\"\n        initial={{ opacity: 0, y: -20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.3 }}\n      >\n        <div className=\"flex justify-between items-center\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-900\">Dashboard</h1>\n            <p className=\"mt-2 text-gray-600\">\n              Visão geral dos seus recursos AWS e segurança.\n            </p>\n          </div>\n          {selectedCredential && (\n            <div className=\"bg-white shadow rounded-lg px-4 py-2 flex items-center\">\n              <div className=\"h-8 w-8 bg-indigo-100 rounded-full flex items-center justify-center text-indigo-800 font-bold mr-3\">\n                {selectedCredential.name.charAt(0).toUpperCase()}\n              </div>\n              <div>\n                <p className=\"text-sm font-medium text-gray-900\">{selectedCredential.name}</p>\n                <p className=\"text-xs text-gray-500\">{selectedCredential.region}</p>\n              </div>\n            </div>\n          )}\n        </div>\n      </motion.div>\n\n      {/* Header com botão de atualização e última atualização */}\n      <div className=\"flex justify-between items-center mb-4\">\n        <div className=\"text-sm text-gray-500\">\n          {lastUpdated && (\n            <span>Última atualização: {lastUpdated.toLocaleTimeString()}</span>\n          )}\n          {backgroundLoading && (\n            <span className=\"ml-3 inline-flex items-center\">\n              <div className=\"animate-spin h-3 w-3 border-t-2 border-b-2 border-indigo-500 mr-1\"></div>\n              Atualizando...\n            </span>\n          )}\n        </div>\n        <button\n          onClick={handleRefresh}\n          disabled={loading || alertsLoading}\n          className=\"flex items-center px-3 py-2 bg-gray-100 text-gray-600 rounded-md hover:bg-gray-200 disabled:opacity-50\"\n        >\n          <RefreshCw className={`h-4 w-4 mr-1 ${(loading || alertsLoading) ? 'animate-spin' : ''}`} />\n          Atualizar\n        </button>\n      </div>\n\n      {credentialsLoading || loading ? (\n        <div className=\"flex justify-center py-12 bg-white rounded-lg shadow\">\n          <RefreshCw className=\"h-12 w-12 text-indigo-500 animate-spin\" />\n        </div>\n      ) : error ? (\n        <motion.div\n          className=\"bg-white rounded-lg shadow-md p-6\"\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.3 }}\n        >\n          <div className=\"p-4 bg-red-50 rounded-md mb-4\">\n            <p className=\"text-red-700 flex items-center\">\n              <AlertCircle className=\"h-5 w-5 mr-2 text-red-500\" />\n              {error}\n            </p>\n          </div>\n          <button\n            onClick={handleRefresh}\n            className=\"px-4 py-2 bg-indigo-500 text-white rounded-md hover:bg-indigo-600 disabled:opacity-50\"\n          >\n            Tentar novamente\n          </button>\n        </motion.div>\n      ) : credentials.length === 0 ? (\n        <motion.div\n          className=\"bg-white rounded-lg shadow-md p-6 text-center\"\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.3 }}\n        >\n          <h2 className=\"text-xl font-semibold text-gray-800 mb-4\">Bem-vindo ao AWS Monitoring</h2>\n          <p className=\"text-gray-600 mb-6\">\n            Para começar a monitorar seus recursos AWS, adicione sua primeira credencial.\n          </p>\n          <button\n            onClick={() => router.push(\"/dashboard/credentials\")}\n            className=\"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n          >\n            Adicionar Credencial AWS\n          </button>\n        </motion.div>\n      ) : (\n        <div className=\"space-y-6\">\n          {/* Resumo de alertas */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            <div className=\"bg-white rounded-lg shadow p-6\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <h2 className=\"text-lg font-medium text-gray-900\">Alertas Críticos</h2>\n                <div className=\"h-10 w-10 bg-red-100 rounded-full flex items-center justify-center\">\n                  <AlertCircle className=\"h-6 w-6 text-red-500\" />\n                </div>\n              </div>\n              <div className=\"text-3xl font-bold text-gray-900\">{criticalAlerts.length}</div>\n              <div className=\"mt-2 text-sm text-gray-500\">\n                {criticalAlerts.length === 0 ? 'Nenhum alerta crítico' : 'Requer atenção imediata'}\n              </div>\n            </div>\n            \n            <div className=\"bg-white rounded-lg shadow p-6\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <h2 className=\"text-lg font-medium text-gray-900\">Alertas Altos</h2>\n                <div className=\"h-10 w-10 bg-orange-100 rounded-full flex items-center justify-center\">\n                  <AlertTriangle className=\"h-6 w-6 text-orange-500\" />\n                </div>\n              </div>\n              <div className=\"text-3xl font-bold text-gray-900\">{highAlerts.length}</div>\n              <div className=\"mt-2 text-sm text-gray-500\">\n                {highAlerts.length === 0 ? 'Nenhum alerta alto' : 'Risco significativo'}\n              </div>\n            </div>\n            \n            <div className=\"bg-white rounded-lg shadow p-6\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <h2 className=\"text-lg font-medium text-gray-900\">Total de Alertas</h2>\n                <div className=\"h-10 w-10 bg-indigo-100 rounded-full flex items-center justify-center\">\n                  <Shield className=\"h-6 w-6 text-indigo-500\" />\n                </div>\n              </div>\n              <div className=\"text-3xl font-bold text-gray-900\">{activeAlerts.length}</div>\n              <div className=\"mt-2 text-sm text-gray-500\">\n                {activeAlerts.length === 0 ? 'Ambiente seguro' : 'Alertas ativos'}\n              </div>\n            </div>\n            \n            <div className=\"bg-white rounded-lg shadow p-6\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <h2 className=\"text-lg font-medium text-gray-900\">Score de Segurança</h2>\n                <div className=\"h-10 w-10 bg-green-100 rounded-full flex items-center justify-center\">\n                  <Shield className=\"h-6 w-6 text-green-500\" />\n                </div>\n              </div>\n              <div className=\"text-3xl font-bold text-gray-900\">{securityScore}%</div>\n              <div className=\"mt-2 text-sm text-gray-500\">\n                {securityScore > 80 ? 'Boa postura de segurança' : 'Requer melhorias'}\n              </div>\n            </div>\n          </div>\n\n          {/* Gráficos principais */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {/* Alertas por severidade */}\n            <div className=\"bg-white rounded-lg shadow p-6\">\n              <h2 className=\"text-lg font-medium text-gray-900 mb-4\">Distribuição de Alertas</h2>\n              <div className=\"h-64\">\n                <DashboardContainer>\n                  <SecurityIssuesChart \n                    issues={{\n                      critical: criticalAlerts.length,\n                      high: highAlerts.length,\n                      medium: mediumAlerts.length,\n                      low: lowAlerts.length\n                    }} \n                  />\n                </DashboardContainer>\n              </div>\n            </div>\n            \n            {/* Alertas por tipo de recurso */}\n            <div className=\"bg-white rounded-lg shadow p-6\">\n              <h2 className=\"text-lg font-medium text-gray-900 mb-4\">Alertas por Serviço</h2>\n              <div className=\"h-64\">\n                <DashboardContainer>\n                  <ResourceDistributionChart resources={resourceAlertCounts} />\n                </DashboardContainer>\n              </div>\n            </div>\n          </div>\n\n          {/* Alertas recentes */}\n          <div className=\"bg-white rounded-lg shadow p-6\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h2 className=\"text-lg font-medium text-gray-900\">Alertas Recentes</h2>\n              <button \n                onClick={() => router.push('/dashboard/security')}\n                className=\"text-sm text-indigo-600 hover:text-indigo-800\"\n              >\n                Ver todos\n              </button>\n            </div>\n            \n            {alertsLoading ? (\n              <div className=\"flex justify-center py-8\">\n                <RefreshCw className=\"h-8 w-8 text-indigo-500 animate-spin\" />\n              </div>\n            ) : alertsError ? (\n              <div className=\"py-4 px-4 bg-red-50 text-red-700 rounded-md\">\n                {alertsError}\n              </div>\n            ) : activeAlerts.length === 0 ? (\n              <div className=\"py-8 text-center text-gray-500\">\n                <Shield className=\"h-12 w-12 text-gray-300 mx-auto mb-2\" />\n                <p>Nenhum alerta de segurança ativo.</p>\n              </div>\n            ) : (\n              <div className=\"space-y-3\">\n                {activeAlerts.slice(0, 5).map((alert) => (\n                  <motion.div\n                    key={alert.id}\n                    className=\"flex items-center p-3 border rounded-lg hover:bg-gray-50 transition-colors\"\n                    initial={{ opacity: 0, y: 5 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.2 }}\n                  >\n                    <div className={`w-3 h-3 rounded-full ${getSeverityColor(alert.severity)} mr-3`}></div>\n                    <div className=\"flex-1\">\n                      <h3 className=\"text-sm font-medium text-gray-800\">{alert.title}</h3>\n                      <p className=\"text-xs text-gray-500 truncate\">\n                        {alert.resourceType}: {alert.resourceId}\n                      </p>\n                    </div>\n                    <div className=\"text-xs text-gray-500\">\n                      {new Date(alert.createdAt).toLocaleDateString()}\n                    </div>\n                  </motion.div>\n                ))}\n              </div>\n            )}\n          </div>\n\n          {/* Recursos AWS */}\n          {dashboardData && (\n            <div className=\"bg-white rounded-lg shadow p-6\">\n              <h2 className=\"text-lg font-medium text-gray-900 mb-4\">Recursos AWS</h2>\n              \n              <div className=\"grid grid-cols-2 md:grid-cols-5 gap-4 mb-6\">\n                <div className=\"bg-blue-50 p-4 rounded-lg flex items-center\">\n                  <Server className=\"h-6 w-6 text-blue-500 mr-3\" />\n                  <div>\n                    <p className=\"text-sm font-medium text-blue-800\">EC2</p>\n                    <p className=\"text-xl font-bold text-blue-700\">{dashboardData.resources.ec2}</p>\n                  </div>\n                </div>\n                <div className=\"bg-amber-50 p-4 rounded-lg flex items-center\">\n                  <Cloud className=\"h-6 w-6 text-amber-500 mr-3\" />\n                  <div>\n                    <p className=\"text-sm font-medium text-amber-800\">S3</p>\n                    <p className=\"text-xl font-bold text-amber-700\">{dashboardData.resources.s3}</p>\n                  </div>\n                </div>\n                <div className=\"bg-purple-50 p-4 rounded-lg flex items-center\">\n                  <Database className=\"h-6 w-6 text-purple-500 mr-3\" />\n                  <div>\n                    <p className=\"text-sm font-medium text-purple-800\">RDS</p>\n                    <p className=\"text-xl font-bold text-purple-700\">{dashboardData.resources.rds}</p>\n                  </div>\n                </div>\n                <div className=\"bg-green-50 p-4 rounded-lg flex items-center\">\n                  <Code className=\"h-6 w-6 text-green-500 mr-3\" />\n                  <div>\n                    <p className=\"text-sm font-medium text-green-800\">Lambda</p>\n                    <p className=\"text-xl font-bold text-green-700\">{dashboardData.resources.lambda}</p>\n                  </div>\n                </div>\n                <div className=\"bg-indigo-50 p-4 rounded-lg flex items-center\">\n                  <HardDrive className=\"h-6 w-6 text-indigo-500 mr-3\" />\n                  <div>\n                    <p className=\"text-sm font-medium text-indigo-800\">CloudFront</p>\n                    <p className=\"text-xl font-bold text-indigo-700\">{dashboardData.resources.cloudfront}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Função para obter a cor da severidade\nfunction getSeverityColor(severity: string): string {\n  switch (severity) {\n    case 'CRITICAL':\n      return 'bg-red-500';\n    case 'HIGH':\n      return 'bg-orange-500';\n    case 'MEDIUM':\n      return 'bg-yellow-500';\n    case 'LOW':\n      return 'bg-blue-500';\n    default:\n      return 'bg-gray-500';\n  }\n}\n\nfunction getTotalResources(data: DashboardData) {\n  return data.resources.ec2 + \n    data.resources.s3 + \n    data.resources.rds + \n    data.resources.lambda + \n    data.resources.cloudfront;\n} "],"names":[],"mappings":"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","debugId":null}}]
}