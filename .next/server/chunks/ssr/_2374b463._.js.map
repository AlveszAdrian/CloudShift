{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/app/dashboard/iam/groups/page.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { \r\n  UserIcon, \r\n  UsersIcon, \r\n  PlusIcon, \r\n  TrashIcon, \r\n  PencilIcon, \r\n  ShieldCheckIcon, \r\n  XCircleIcon, \r\n  RefreshIcon,\r\n  ExclamationIcon\r\n} from '@heroicons/react/outline';\r\n\r\ninterface IAMGroup {\r\n  groupName: string;\r\n  groupId: string;\r\n  arn: string;\r\n  createDate: string;\r\n  path: string;\r\n  userCount?: number;\r\n  policyCount?: number;\r\n}\r\n\r\nexport default function IAMGroupsPage() {\r\n  const [groups, setGroups] = useState<IAMGroup[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [showCreateModal, setShowCreateModal] = useState(false);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [currentGroup, setCurrentGroup] = useState<IAMGroup | null>(null);\r\n  const [newGroupName, setNewGroupName] = useState('');\r\n  const [newGroupPath, setNewGroupPath] = useState('/');\r\n\r\n  // Estado para adicionar/remover usuários\r\n  const [availableUsers, setAvailableUsers] = useState<string[]>([]);\r\n  const [selectedUser, setSelectedUser] = useState<string>('');\r\n\r\n  // Fetch groups on load\r\n  useEffect(() => {\r\n    fetchGroups();\r\n  }, []);\r\n\r\n  const fetchGroups = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // Assume we have a stored credential ID\r\n      const credentialId = localStorage.getItem('selectedCredentialId');\r\n      \r\n      if (!credentialId) {\r\n        setError('Nenhuma credencial selecionada. Por favor, adicione e selecione uma credencial AWS.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      \r\n      // Fetch groups\r\n      const res = await fetch(`/api/aws/iam/groups?credentialId=${credentialId}`);\r\n      \r\n      if (!res.ok) {\r\n        const errorData = await res.json();\r\n        throw new Error(errorData.error || 'Erro ao buscar grupos');\r\n      }\r\n      \r\n      const data = await res.json();\r\n      \r\n      // For each group, fetch user and policy counts\r\n      const groupsWithDetails = await Promise.all(data.groups.map(async (group: IAMGroup) => {\r\n        // We could have additional API endpoints to get these counts\r\n        // For now, we'll simulate this with random data\r\n        return {\r\n          ...group,\r\n          userCount: Math.floor(Math.random() * 5),\r\n          policyCount: Math.floor(Math.random() * 3)\r\n        };\r\n      }));\r\n      \r\n      setGroups(groupsWithDetails);\r\n    } catch (err: any) {\r\n      console.error('Erro ao buscar grupos:', err);\r\n      setError(err.message || 'Falha ao buscar grupos IAM');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCreateGroup = async () => {\r\n    if (!newGroupName.trim()) {\r\n      setError('Nome do grupo é obrigatório');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const credentialId = localStorage.getItem('selectedCredentialId');\r\n      \r\n      if (!credentialId) {\r\n        setError('Nenhuma credencial selecionada');\r\n        return;\r\n      }\r\n      \r\n      const res = await fetch('/api/aws/iam/groups', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          credentialId,\r\n          groupName: newGroupName,\r\n          path: newGroupPath,\r\n        }),\r\n      });\r\n      \r\n      if (!res.ok) {\r\n        const errorData = await res.json();\r\n        throw new Error(errorData.error || 'Erro ao criar grupo');\r\n      }\r\n      \r\n      // Reset form and close modal\r\n      setNewGroupName('');\r\n      setNewGroupPath('/');\r\n      setShowCreateModal(false);\r\n      \r\n      // Refresh groups list\r\n      await fetchGroups();\r\n    } catch (err: any) {\r\n      console.error('Erro ao criar grupo:', err);\r\n      setError(err.message || 'Falha ao criar grupo IAM');\r\n    }\r\n  };\r\n\r\n  const handleDeleteGroup = async () => {\r\n    if (!currentGroup) return;\r\n    \r\n    try {\r\n      const credentialId = localStorage.getItem('selectedCredentialId');\r\n      \r\n      if (!credentialId) {\r\n        setError('Nenhuma credencial selecionada');\r\n        return;\r\n      }\r\n      \r\n      const res = await fetch(`/api/aws/iam/groups?credentialId=${credentialId}&groupName=${currentGroup.groupName}`, {\r\n        method: 'DELETE',\r\n      });\r\n      \r\n      if (!res.ok) {\r\n        const errorData = await res.json();\r\n        throw new Error(errorData.error || 'Erro ao excluir grupo');\r\n      }\r\n      \r\n      // Close modal and reset current group\r\n      setShowDeleteModal(false);\r\n      setCurrentGroup(null);\r\n      \r\n      // Refresh groups list\r\n      await fetchGroups();\r\n    } catch (err: any) {\r\n      console.error('Erro ao excluir grupo:', err);\r\n      setError(err.message || 'Falha ao excluir grupo IAM');\r\n    }\r\n  };\r\n\r\n  const handleAddUserToGroup = async () => {\r\n    if (!currentGroup || !selectedUser) return;\r\n    \r\n    try {\r\n      const credentialId = localStorage.getItem('selectedCredentialId');\r\n      \r\n      if (!credentialId) {\r\n        setError('Nenhuma credencial selecionada');\r\n        return;\r\n      }\r\n      \r\n      const res = await fetch('/api/aws/iam/groups', {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          credentialId,\r\n          groupName: currentGroup.groupName,\r\n          action: 'addUser',\r\n          userName: selectedUser,\r\n        }),\r\n      });\r\n      \r\n      if (!res.ok) {\r\n        const errorData = await res.json();\r\n        throw new Error(errorData.error || 'Erro ao adicionar usuário ao grupo');\r\n      }\r\n      \r\n      // Reset selected user\r\n      setSelectedUser('');\r\n      \r\n      // Refresh groups list to update counts\r\n      await fetchGroups();\r\n    } catch (err: any) {\r\n      console.error('Erro ao adicionar usuário ao grupo:', err);\r\n      setError(err.message || 'Falha ao adicionar usuário ao grupo');\r\n    }\r\n  };\r\n\r\n  // Função para buscar usuários disponíveis ao abrir modal de edição\r\n  const fetchAvailableUsers = async () => {\r\n    try {\r\n      const credentialId = localStorage.getItem('selectedCredentialId');\r\n      \r\n      if (!credentialId) {\r\n        setError('Nenhuma credencial selecionada');\r\n        return;\r\n      }\r\n      \r\n      const res = await fetch(`/api/aws/iam?credentialId=${credentialId}`);\r\n      \r\n      if (!res.ok) {\r\n        const errorData = await res.json();\r\n        throw new Error(errorData.error || 'Erro ao buscar usuários');\r\n      }\r\n      \r\n      const data = await res.json();\r\n      setAvailableUsers(data.users.map((user: any) => user.userName));\r\n    } catch (err: any) {\r\n      console.error('Erro ao buscar usuários:', err);\r\n      setError(err.message || 'Falha ao buscar usuários IAM');\r\n    }\r\n  };\r\n\r\n  const openEditModal = (group: IAMGroup) => {\r\n    setCurrentGroup(group);\r\n    fetchAvailableUsers();\r\n    setShowEditModal(true);\r\n  };\r\n\r\n  // UI de carregamento\r\n  if (loading) {\r\n    return (\r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        <div className=\"flex flex-col items-center justify-center h-64\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"></div>\r\n          <p className=\"mt-4 text-lg text-gray-600\">Carregando grupos IAM...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // UI de erro\r\n  if (error) {\r\n    return (\r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        <div className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 rounded shadow\">\r\n          <div className=\"flex items-center\">\r\n            <ExclamationIcon className=\"h-6 w-6 mr-2\" />\r\n            <p>{error}</p>\r\n          </div>\r\n          <button \r\n            onClick={fetchGroups} \r\n            className=\"mt-4 bg-red-500 hover:bg-red-600 text-white font-semibold py-2 px-4 rounded flex items-center\"\r\n          >\r\n            <RefreshIcon className=\"h-5 w-5 mr-2\" />\r\n            Tentar novamente\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8\">\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.5 }}\r\n      >\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <h1 className=\"text-2xl font-bold text-gray-800 flex items-center\">\r\n            <UsersIcon className=\"h-6 w-6 mr-2\" />\r\n            Gerenciamento de Grupos IAM\r\n          </h1>\r\n          <div className=\"flex space-x-3\">\r\n            <button\r\n              onClick={fetchGroups}\r\n              className=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-semibold py-2 px-3 rounded flex items-center\"\r\n            >\r\n              <RefreshIcon className=\"h-5 w-5 mr-1\" />\r\n              Atualizar\r\n            </button>\r\n            <button\r\n              onClick={() => setShowCreateModal(true)}\r\n              className=\"bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-3 rounded flex items-center\"\r\n            >\r\n              <PlusIcon className=\"h-5 w-5 mr-1\" />\r\n              Novo Grupo\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {groups.length === 0 ? (\r\n          <div className=\"bg-gray-50 rounded-lg shadow p-8 text-center\">\r\n            <UsersIcon className=\"h-12 w-12 mx-auto text-gray-400\" />\r\n            <h3 className=\"mt-4 text-lg font-medium text-gray-900\">Nenhum grupo encontrado</h3>\r\n            <p className=\"mt-2 text-gray-600\">\r\n              Você ainda não possui grupos IAM nesta conta AWS. Crie um novo grupo para começar.\r\n            </p>\r\n            <button\r\n              onClick={() => setShowCreateModal(true)}\r\n              className=\"mt-4 bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded flex items-center mx-auto\"\r\n            >\r\n              <PlusIcon className=\"h-5 w-5 mr-2\" />\r\n              Criar Grupo\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"bg-white shadow-md rounded-lg overflow-x-auto\">\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n              <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Nome do Grupo\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    ID do Grupo\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Data de Criação\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Usuários\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Políticas\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Ações\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {groups.map((group) => (\r\n                  <motion.tr \r\n                    key={group.groupId}\r\n                    initial={{ opacity: 0 }}\r\n                    animate={{ opacity: 1 }}\r\n                    transition={{ duration: 0.3 }}\r\n                  >\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <div className=\"flex items-center\">\r\n                        <div className=\"flex-shrink-0 h-10 w-10 bg-blue-100 rounded-full flex items-center justify-center\">\r\n                          <UsersIcon className=\"h-6 w-6 text-blue-500\" />\r\n                        </div>\r\n                        <div className=\"ml-4\">\r\n                          <div className=\"text-sm font-medium text-gray-900\">{group.groupName}</div>\r\n                          <div className=\"text-xs text-gray-500 truncate max-w-xs\" title={group.path}>\r\n                            Caminho: {group.path}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <div className=\"text-sm text-gray-500 truncate max-w-xs\" title={group.groupId}>\r\n                        {group.groupId}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <div className=\"text-sm text-gray-500\">\r\n                        {new Date(group.createDate).toLocaleDateString('pt-BR')}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <div className=\"flex items-center\">\r\n                        <UserIcon className=\"h-5 w-5 text-gray-400 mr-2\" />\r\n                        <span className=\"text-sm text-gray-900\">{group.userCount}</span>\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <div className=\"flex items-center\">\r\n                        <ShieldCheckIcon className=\"h-5 w-5 text-gray-400 mr-2\" />\r\n                        <span className=\"text-sm text-gray-900\">{group.policyCount}</span>\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                      <div className=\"flex space-x-2\">\r\n                        <button\r\n                          onClick={() => openEditModal(group)}\r\n                          className=\"text-indigo-600 hover:text-indigo-900 p-1 rounded hover:bg-indigo-100\"\r\n                          title=\"Editar Grupo\"\r\n                        >\r\n                          <PencilIcon className=\"h-5 w-5\" />\r\n                        </button>\r\n                        <button\r\n                          onClick={() => {\r\n                            setCurrentGroup(group);\r\n                            setShowDeleteModal(true);\r\n                          }}\r\n                          className=\"text-red-600 hover:text-red-900 p-1 rounded hover:bg-red-100\"\r\n                          title=\"Excluir Grupo\"\r\n                        >\r\n                          <TrashIcon className=\"h-5 w-5\" />\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </motion.tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </motion.div>\r\n\r\n      {/* Modal de criação de grupo */}\r\n      {showCreateModal && (\r\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n          <motion.div\r\n            initial={{ scale: 0.9, opacity: 0 }}\r\n            animate={{ scale: 1, opacity: 1 }}\r\n            className=\"bg-white rounded-lg shadow-xl max-w-md w-full p-6\"\r\n          >\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <h3 className=\"text-lg font-medium text-gray-900\">Criar Novo Grupo</h3>\r\n              <button\r\n                onClick={() => setShowCreateModal(false)}\r\n                className=\"text-gray-400 hover:text-gray-500\"\r\n              >\r\n                <XCircleIcon className=\"h-6 w-6\" />\r\n              </button>\r\n            </div>\r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <label htmlFor=\"groupName\" className=\"block text-sm font-medium text-gray-700\">\r\n                  Nome do Grupo *\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"groupName\"\r\n                  value={newGroupName}\r\n                  onChange={(e) => setNewGroupName(e.target.value)}\r\n                  className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n                  placeholder=\"dev-team\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"groupPath\" className=\"block text-sm font-medium text-gray-700\">\r\n                  Caminho (opcional)\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"groupPath\"\r\n                  value={newGroupPath}\r\n                  onChange={(e) => setNewGroupPath(e.target.value)}\r\n                  className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n                  placeholder=\"/\"\r\n                />\r\n              </div>\r\n              <div className=\"flex justify-end space-x-3 pt-4\">\r\n                <button\r\n                  onClick={() => setShowCreateModal(false)}\r\n                  className=\"bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n                >\r\n                  Cancelar\r\n                </button>\r\n                <button\r\n                  onClick={handleCreateGroup}\r\n                  className=\"bg-blue-500 py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n                >\r\n                  Criar Grupo\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </motion.div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Modal de exclusão de grupo */}\r\n      {showDeleteModal && currentGroup && (\r\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n          <motion.div\r\n            initial={{ scale: 0.9, opacity: 0 }}\r\n            animate={{ scale: 1, opacity: 1 }}\r\n            className=\"bg-white rounded-lg shadow-xl max-w-md w-full p-6\"\r\n          >\r\n            <div className=\"text-center\">\r\n              <div className=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-red-100\">\r\n                <ExclamationIcon className=\"h-6 w-6 text-red-600\" />\r\n              </div>\r\n              <h3 className=\"mt-3 text-lg font-medium text-gray-900\">Excluir Grupo</h3>\r\n              <div className=\"mt-2 px-7 py-3\">\r\n                <p className=\"text-sm text-gray-500\">\r\n                  Tem certeza que deseja excluir o grupo <span className=\"font-semibold\">{currentGroup.groupName}</span>? \r\n                  Esta ação removerá todos os usuários do grupo e desvinculará todas as políticas.\r\n                  Esta ação não pode ser desfeita.\r\n                </p>\r\n              </div>\r\n              <div className=\"flex justify-center space-x-4 mt-5\">\r\n                <button\r\n                  onClick={() => setShowDeleteModal(false)}\r\n                  className=\"bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n                >\r\n                  Cancelar\r\n                </button>\r\n                <button\r\n                  onClick={handleDeleteGroup}\r\n                  className=\"bg-red-500 py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\r\n                >\r\n                  Sim, Excluir\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </motion.div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Modal de edição de grupo (adicionar usuários) */}\r\n      {showEditModal && currentGroup && (\r\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n          <motion.div\r\n            initial={{ scale: 0.9, opacity: 0 }}\r\n            animate={{ scale: 1, opacity: 1 }}\r\n            className=\"bg-white rounded-lg shadow-xl max-w-md w-full p-6\"\r\n          >\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <h3 className=\"text-lg font-medium text-gray-900\">\r\n                Gerenciar Grupo: {currentGroup.groupName}\r\n              </h3>\r\n              <button\r\n                onClick={() => setShowEditModal(false)}\r\n                className=\"text-gray-400 hover:text-gray-500\"\r\n              >\r\n                <XCircleIcon className=\"h-6 w-6\" />\r\n              </button>\r\n            </div>\r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <label htmlFor=\"addUser\" className=\"block text-sm font-medium text-gray-700\">\r\n                  Adicionar Usuário ao Grupo\r\n                </label>\r\n                <div className=\"mt-1 flex space-x-2\">\r\n                  <select\r\n                    id=\"addUser\"\r\n                    value={selectedUser}\r\n                    onChange={(e) => setSelectedUser(e.target.value)}\r\n                    className=\"block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n                  >\r\n                    <option value=\"\">Selecione um usuário</option>\r\n                    {availableUsers.map((user) => (\r\n                      <option key={user} value={user}>\r\n                        {user}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  <button\r\n                    onClick={handleAddUserToGroup}\r\n                    disabled={!selectedUser}\r\n                    className={`flex-shrink-0 py-2 px-3 border border-transparent rounded-md shadow-sm text-sm font-medium text-white\r\n                      ${selectedUser ? 'bg-blue-500 hover:bg-blue-600' : 'bg-gray-300 cursor-not-allowed'}`}\r\n                  >\r\n                    Adicionar\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div className=\"pt-4\">\r\n                <button\r\n                  onClick={() => setShowEditModal(false)}\r\n                  className=\"w-full bg-gray-100 py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n                >\r\n                  Fechar\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </motion.div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}}]
}