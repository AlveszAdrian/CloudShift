{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/hooks/useAwsCredentials.ts"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from 'react';\n\nexport interface AwsCredential {\n  id: string;\n  name: string;\n  accountId?: string;\n  accessKeyId: string;\n  secretAccessKey: string;\n  region: string;\n}\n\nexport interface UseAwsCredentialsResult {\n  credentials: AwsCredential[];\n  selectedCredential: AwsCredential | null;\n  selectCredential: (id: string) => void;\n  addCredential: (credential: Omit<AwsCredential, 'id'>) => Promise<void>;\n  updateCredential: (id: string, data: Partial<Omit<AwsCredential, 'id'>>) => Promise<void>;\n  deleteCredential: (id: string) => Promise<void>;\n  loading: boolean;\n  isLoading: boolean; // Alias for loading - needed for compatibility\n  error: string | null;\n  refresh: () => Promise<void>;\n}\n\nexport function useAwsCredentials(): UseAwsCredentialsResult {\n  const [credentials, setCredentials] = useState<AwsCredential[]>([]);\n  const [selectedCredentialId, setSelectedCredentialId] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Function to fetch credentials from the API\n  const fetchCredentials = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch('/api/aws/credentials');\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch credentials: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      setCredentials(data);\n      \n      // If we have credentials but none selected, select the first one\n      if (data.length > 0 && !selectedCredentialId) {\n        setSelectedCredentialId(data[0].id);\n        // Save to localStorage\n        localStorage.setItem('selectedAwsCredentialId', data[0].id);\n      }\n      \n      return data;\n    } catch (err) {\n      setError(`Error fetching credentials: ${err instanceof Error ? err.message : String(err)}`);\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to select a credential\n  const selectCredential = (id: string) => {\n    setSelectedCredentialId(id);\n    localStorage.setItem('selectedAwsCredentialId', id);\n  };\n\n  // Function to add a new credential\n  const addCredential = async (credential: Omit<AwsCredential, 'id'>) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch('/api/aws/credentials', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(credential),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to add credential: ${response.status}`);\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      setError(`Error adding credential: ${err instanceof Error ? err.message : String(err)}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to update an existing credential\n  const updateCredential = async (id: string, data: Partial<Omit<AwsCredential, 'id'>>) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch(`/api/aws/credentials/${id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to update credential: ${response.status}`);\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      setError(`Error updating credential: ${err instanceof Error ? err.message : String(err)}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to delete a credential\n  const deleteCredential = async (id: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch(`/api/aws/credentials/${id}`, {\n        method: 'DELETE',\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to delete credential: ${response.status}`);\n      }\n      \n      // If we delete the selected credential, select another one\n      if (id === selectedCredentialId) {\n        const remainingCredentials = credentials.filter(c => c.id !== id);\n        if (remainingCredentials.length > 0) {\n          selectCredential(remainingCredentials[0].id);\n        } else {\n          setSelectedCredentialId(null);\n          localStorage.removeItem('selectedAwsCredentialId');\n        }\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      setError(`Error deleting credential: ${err instanceof Error ? err.message : String(err)}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Load credentials on mount\n  useEffect(() => {\n    // Try to restore selected credential from localStorage\n    const savedCredentialId = localStorage.getItem('selectedAwsCredentialId');\n    if (savedCredentialId) {\n      setSelectedCredentialId(savedCredentialId);\n    }\n    \n    fetchCredentials();\n  }, []);\n\n  // Find the selected credential object\n  const selectedCredential = credentials.find(c => c.id === selectedCredentialId) || null;\n\n  return {\n    credentials,\n    selectedCredential,\n    selectCredential,\n    addCredential,\n    updateCredential,\n    deleteCredential,\n    loading,\n    isLoading: loading, // Alias for loading\n    error,\n    refresh: fetchCredentials,\n  };\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/components/aws/CredentialSelector.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useAwsCredentials } from \"@/hooks/useAwsCredentials\";\r\nimport { useRouter } from \"next/navigation\";\r\n\r\nexport default function CredentialSelector() {\r\n  const { credentials, selectedCredential, selectCredential, loading } = useAwsCredentials();\r\n  const router = useRouter();\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"bg-white rounded-lg shadow-sm p-4 mb-6 flex items-center space-x-2\">\r\n        <span className=\"text-gray-700\">Carregando credenciais...</span>\r\n        <div className=\"animate-spin rounded-full h-4 w-4 border-t-2 border-b-2 border-indigo-500\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (credentials.length === 0) {\r\n    return (\r\n      <div className=\"bg-white rounded-lg shadow-sm p-4 mb-6\">\r\n        <div className=\"flex justify-between items-center\">\r\n          <span className=\"text-gray-700\">Nenhuma credencial AWS encontrada</span>\r\n          <button\r\n            onClick={() => router.push(\"/dashboard/credentials\")}\r\n            className=\"px-3 py-1 text-sm text-white bg-indigo-600 rounded-md hover:bg-indigo-700\"\r\n          >\r\n            Adicionar Credencial\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-sm p-4 mb-6\">\r\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\r\n        <label htmlFor=\"credential-selector\" className=\"block text-sm font-medium text-gray-700 mb-2 sm:mb-0\">\r\n          Selecionar Credencial AWS:\r\n        </label>\r\n        <div className=\"flex-1 sm:ml-4 max-w-md\">\r\n          <select\r\n            id=\"credential-selector\"\r\n            value={selectedCredential?.id || \"\"}\r\n            onChange={(e) => selectCredential(e.target.value)}\r\n            className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\r\n          >\r\n            <option value=\"\" disabled>\r\n              Selecione uma credencial\r\n            </option>\r\n            {credentials.map((cred) => (\r\n              <option key={cred.id} value={cred.id}>\r\n                {cred.name} ({cred.region})\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKe,SAAS;IACtB,MAAM,EAAE,WAAW,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,iIAAA,CAAA,oBAAiB,AAAD;IACvF,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,IAAI,SAAS;QACX,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAK,WAAU;8BAAgB;;;;;;8BAChC,8OAAC;oBAAI,WAAU;;;;;;;;;;;;IAGrB;IAEA,IAAI,YAAY,MAAM,KAAK,GAAG;QAC5B,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAK,WAAU;kCAAgB;;;;;;kCAChC,8OAAC;wBACC,SAAS,IAAM,OAAO,IAAI,CAAC;wBAC3B,WAAU;kCACX;;;;;;;;;;;;;;;;;IAMT;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAM,SAAQ;oBAAsB,WAAU;8BAAuD;;;;;;8BAGtG,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBACC,IAAG;wBACH,OAAO,oBAAoB,MAAM;wBACjC,UAAU,CAAC,IAAM,iBAAiB,EAAE,MAAM,CAAC,KAAK;wBAChD,WAAU;;0CAEV,8OAAC;gCAAO,OAAM;gCAAG,QAAQ;0CAAC;;;;;;4BAGzB,YAAY,GAAG,CAAC,CAAC,qBAChB,8OAAC;oCAAqB,OAAO,KAAK,EAAE;;wCACjC,KAAK,IAAI;wCAAC;wCAAG,KAAK,MAAM;wCAAC;;mCADf,KAAK,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;AASlC","debugId":null}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/components/iam/UsersTab.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\ninterface IAMUser {\r\n  id: string;\r\n  name: string;\r\n  arn: string;\r\n  createDate: string;\r\n  passwordLastUsed?: string;\r\n  hasConsoleAccess: boolean;\r\n  hasMfa: boolean;\r\n  accessKeysCount: number;\r\n  policiesCount: number;\r\n  riskLevel: 'high' | 'medium' | 'low' | 'safe';\r\n}\r\n\r\ninterface UsersTabProps {\r\n  credentialId: string | null;\r\n}\r\n\r\nexport default function UsersTab({ credentialId }: UsersTabProps) {\r\n  const [users, setUsers] = useState<IAMUser[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [showUserModal, setShowUserModal] = useState(false);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [selectedUser, setSelectedUser] = useState<IAMUser | null>(null);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [actionSuccess, setActionSuccess] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (credentialId) {\r\n      loadUsers();\r\n    } else {\r\n      setLoading(false);\r\n      setUsers([]);\r\n    }\r\n  }, [credentialId]);\r\n\r\n  const loadUsers = async () => {\r\n    if (!credentialId) return;\r\n    \r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await fetch(`/api/aws/iam/users?credentialId=${credentialId}`);\r\n      if (!response.ok) {\r\n        throw new Error(`Erro ao carregar usuários: ${response.statusText}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (data.users && Array.isArray(data.users)) {\r\n        // Transformar os dados para o formato esperado\r\n        const formattedUsers = data.users.map((user: any) => ({\r\n          id: user.UserId || user.id || '',\r\n          name: user.UserName || user.name || '',\r\n          arn: user.Arn || user.arn || '',\r\n          createDate: user.CreateDate || user.createDate || '',\r\n          passwordLastUsed: user.PasswordLastUsed || user.passwordLastUsed,\r\n          hasConsoleAccess: user.hasConsoleAccess || false,\r\n          hasMfa: user.hasMfa || false,\r\n          accessKeysCount: user.accessKeysCount || 0,\r\n          policiesCount: user.policiesCount || 0,\r\n          riskLevel: user.riskLevel || 'low'\r\n        }));\r\n        \r\n        setUsers(formattedUsers);\r\n      } else {\r\n        throw new Error(\"Formato de dados inesperado\");\r\n      }\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Erro desconhecido ao carregar usuários');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRefresh = async () => {\r\n    setRefreshing(true);\r\n    await loadUsers();\r\n    setRefreshing(false);\r\n  };\r\n\r\n  const openAddUserModal = () => {\r\n    setSelectedUser(null);\r\n    setShowUserModal(true);\r\n  };\r\n\r\n  const openEditUserModal = (user: IAMUser) => {\r\n    setSelectedUser(user);\r\n    setShowUserModal(true);\r\n  };\r\n\r\n  const openDeleteModal = (user: IAMUser) => {\r\n    setSelectedUser(user);\r\n    setShowDeleteModal(true);\r\n  };\r\n\r\n  const closeModals = () => {\r\n    setShowUserModal(false);\r\n    setShowDeleteModal(false);\r\n    setSelectedUser(null);\r\n  };\r\n\r\n  const handleCreateUser = async (userData: any) => {\r\n    if (!credentialId) return;\r\n    \r\n    try {\r\n      const response = await fetch('/api/aws/iam/users', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          credentialId,\r\n          userName: userData.username,\r\n          createConsoleAccess: userData.consoleAccess,\r\n          consolePassword: userData.password,\r\n          policyArns: userData.policies\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const data = await response.json();\r\n        throw new Error(data.error || 'Erro ao criar usuário');\r\n      }\r\n\r\n      setActionSuccess(`Usuário ${userData.username} criado com sucesso!`);\r\n      closeModals();\r\n      loadUsers();\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Erro desconhecido ao criar usuário');\r\n    }\r\n  };\r\n\r\n  const handleDeleteUser = async () => {\r\n    if (!credentialId || !selectedUser) return;\r\n    \r\n    try {\r\n      const response = await fetch('/api/aws/iam/users', {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          credentialId,\r\n          userName: selectedUser.name\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const data = await response.json();\r\n        throw new Error(data.error || 'Erro ao excluir usuário');\r\n      }\r\n\r\n      setActionSuccess(`Usuário ${selectedUser.name} excluído com sucesso!`);\r\n      closeModals();\r\n      loadUsers();\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Erro desconhecido ao excluir usuário');\r\n    }\r\n  };\r\n\r\n  const handleEnableMFA = async (user: IAMUser) => {\r\n    try {\r\n      // Implementação de habilitação de MFA\r\n      setActionSuccess(`MFA habilitado para ${user.name}!`);\r\n      loadUsers();\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Erro desconhecido ao habilitar MFA');\r\n    }\r\n  };\r\n\r\n  // Helper para cores dos níveis de risco\r\n  const getRiskColor = (level: string) => {\r\n    switch (level) {\r\n      case \"high\": return \"bg-red-100 text-red-800\";\r\n      case \"medium\": return \"bg-yellow-100 text-yellow-800\";\r\n      case \"low\": return \"bg-blue-100 text-blue-800\";\r\n      case \"safe\": return \"bg-green-100 text-green-800\";\r\n      default: return \"bg-gray-100 text-gray-800\";\r\n    }\r\n  };\r\n  \r\n  const getRiskLabel = (level: string) => {\r\n    switch (level) {\r\n      case \"high\": return \"Alto\";\r\n      case \"medium\": return \"Médio\";\r\n      case \"low\": return \"Baixo\";\r\n      case \"safe\": return \"Seguro\";\r\n      default: return \"Desconhecido\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex justify-between items-center mb-4\">\r\n        <h2 className=\"text-xl font-semibold\">Usuários IAM</h2>\r\n        <div className=\"flex space-x-2\">\r\n          <button\r\n            onClick={handleRefresh}\r\n            disabled={refreshing || loading}\r\n            className=\"px-3 py-1 bg-gray-100 hover:bg-gray-200 rounded text-gray-800 flex items-center text-sm\"\r\n          >\r\n            <span className={`mr-1 ${refreshing ? 'animate-spin' : ''}`}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\r\n              </svg>\r\n            </span>\r\n            Atualizar\r\n          </button>\r\n          <button\r\n            onClick={openAddUserModal}\r\n            className=\"px-3 py-1 bg-indigo-600 hover:bg-indigo-700 rounded text-white flex items-center text-sm\"\r\n          >\r\n            <span className=\"mr-1\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n              </svg>\r\n            </span>\r\n            Novo Usuário\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {actionSuccess && (\r\n        <motion.div \r\n          className=\"mb-4 p-4 rounded-md bg-green-50 border border-green-100 text-green-800 flex justify-between items-center\"\r\n          initial={{ opacity: 0, y: -10 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.3 }}\r\n        >\r\n          <span>{actionSuccess}</span>\r\n          <button \r\n            onClick={() => setActionSuccess(null)}\r\n            className=\"text-green-600 hover:text-green-800\"\r\n          >\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n              <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n            </svg>\r\n          </button>\r\n        </motion.div>\r\n      )}\r\n\r\n      {error && (\r\n        <div className=\"mb-4 p-3 bg-red-50 border border-red-200 text-red-700 rounded\">\r\n          {error}\r\n        </div>\r\n      )}\r\n\r\n      {loading ? (\r\n        <div className=\"flex justify-center items-center h-64\">\r\n          <div className=\"animate-spin rounded-full h-10 w-10 border-t-2 border-b-2 border-indigo-500\"></div>\r\n        </div>\r\n      ) : users.length === 0 ? (\r\n        <div className=\"bg-white rounded-lg shadow p-6 text-center\">\r\n          <p className=\"text-gray-500\">Nenhum usuário IAM encontrado.</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"bg-white rounded-lg shadow overflow-hidden\">\r\n          <table className=\"min-w-full divide-y divide-gray-200\">\r\n            <thead className=\"bg-gray-50\">\r\n              <tr>\r\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Usuário\r\n                </th>\r\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Último Acesso\r\n                </th>\r\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  MFA\r\n                </th>\r\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Chaves de Acesso\r\n                </th>\r\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Políticas\r\n                </th>\r\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Risco\r\n                </th>\r\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Ações\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n              {users.map((user) => (\r\n                <motion.tr \r\n                  key={user.id}\r\n                  initial={{ opacity: 0 }}\r\n                  animate={{ opacity: 1 }}\r\n                  transition={{ duration: 0.2 }}\r\n                >\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <div className=\"flex items-center\">\r\n                      <div className=\"flex-shrink-0 h-10 w-10 bg-indigo-100 rounded-full flex items-center justify-center\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 text-indigo-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\r\n                        </svg>\r\n                      </div>\r\n                      <div className=\"ml-4\">\r\n                        <div className=\"text-sm font-medium text-gray-900\">{user.name}</div>\r\n                        <div className=\"text-xs text-gray-500\">{new Date(user.createDate).toLocaleDateString('pt-BR')}</div>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <div className=\"text-sm text-gray-900\">\r\n                      {user.passwordLastUsed \r\n                        ? new Date(user.passwordLastUsed).toLocaleDateString('pt-BR')\r\n                        : '-'}\r\n                    </div>\r\n                    <div className=\"text-xs text-gray-500\">\r\n                      {user.passwordLastUsed \r\n                        ? new Date(user.passwordLastUsed).toLocaleTimeString('pt-BR')\r\n                        : 'Nunca acessou'}\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    {user.hasMfa ? (\r\n                      <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800\">\r\n                        Ativo\r\n                      </span>\r\n                    ) : (\r\n                      <button\r\n                        onClick={() => handleEnableMFA(user)}\r\n                        className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800 hover:bg-red-200\"\r\n                      >\r\n                        Inativo\r\n                      </button>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                    {user.accessKeysCount}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                    {user.policiesCount}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${getRiskColor(user.riskLevel)}`}>\r\n                      {getRiskLabel(user.riskLevel)}\r\n                    </span>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                    <button \r\n                      className=\"text-indigo-600 hover:text-indigo-900 mr-3\"\r\n                      onClick={() => openEditUserModal(user)}\r\n                    >\r\n                      Editar\r\n                    </button>\r\n                    <button \r\n                      className=\"text-red-600 hover:text-red-900\"\r\n                      onClick={() => openDeleteModal(user)}\r\n                    >\r\n                      Excluir\r\n                    </button>\r\n                  </td>\r\n                </motion.tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n\r\n      {/* Modal para adicionar/editar usuário */}\r\n      {showUserModal && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <motion.div \r\n            className=\"bg-white rounded-lg p-6 w-full max-w-md\"\r\n            initial={{ scale: 0.9, opacity: 0 }}\r\n            animate={{ scale: 1, opacity: 1 }}\r\n          >\r\n            <h3 className=\"text-lg font-medium mb-4\">\r\n              {selectedUser ? `Editar ${selectedUser.name}` : 'Adicionar Novo Usuário'}\r\n            </h3>\r\n            <form onSubmit={(e) => {\r\n              e.preventDefault();\r\n              const form = e.target as HTMLFormElement;\r\n              const formData = new FormData(form);\r\n              \r\n              const userData = {\r\n                username: formData.get('username') as string,\r\n                consoleAccess: formData.get('consoleAccess') === 'on',\r\n                password: formData.get('password') as string,\r\n                policies: [] // Normalmente viriam de um componente seletor de políticas\r\n              };\r\n              \r\n              handleCreateUser(userData);\r\n            }}>\r\n              <div className=\"mb-4\">\r\n                <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Nome de Usuário\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"username\"\r\n                  name=\"username\"\r\n                  defaultValue={selectedUser?.name}\r\n                  required\r\n                  className=\"w-full p-2 border border-gray-300 rounded\"\r\n                  readOnly={!!selectedUser}\r\n                />\r\n              </div>\r\n              \r\n              {!selectedUser && (\r\n                <>\r\n                  <div className=\"mb-4\">\r\n                    <div className=\"flex items-center\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        id=\"consoleAccess\"\r\n                        name=\"consoleAccess\"\r\n                        className=\"h-4 w-4 text-indigo-600 border-gray-300 rounded\"\r\n                      />\r\n                      <label htmlFor=\"consoleAccess\" className=\"ml-2 block text-sm text-gray-700\">\r\n                        Permitir acesso ao console AWS\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"mb-4\">\r\n                    <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                      Senha Inicial (se acesso ao console)\r\n                    </label>\r\n                    <input\r\n                      type=\"password\"\r\n                      id=\"password\"\r\n                      name=\"password\"\r\n                      className=\"w-full p-2 border border-gray-300 rounded\"\r\n                    />\r\n                    <p className=\"text-xs text-gray-500 mt-1\">\r\n                      A senha deve ter pelo menos 8 caracteres e incluir letras maiúsculas, minúsculas, números e símbolos.\r\n                    </p>\r\n                  </div>\r\n                </>\r\n              )}\r\n              \r\n              <div className=\"flex justify-end space-x-2\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={closeModals}\r\n                  className=\"px-4 py-2 bg-gray-200 rounded hover:bg-gray-300\"\r\n                >\r\n                  Cancelar\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"px-4 py-2 bg-indigo-600 text-white rounded hover:bg-indigo-700\"\r\n                >\r\n                  {selectedUser ? 'Salvar' : 'Adicionar'}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </motion.div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Modal para confirmar exclusão */}\r\n      {showDeleteModal && selectedUser && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <motion.div \r\n            className=\"bg-white rounded-lg p-6 w-full max-w-md\"\r\n            initial={{ scale: 0.9, opacity: 0 }}\r\n            animate={{ scale: 1, opacity: 1 }}\r\n          >\r\n            <h3 className=\"text-lg font-medium mb-4\">Confirmar Exclusão</h3>\r\n            <p className=\"mb-4\">\r\n              Tem certeza que deseja excluir o usuário <strong>{selectedUser.name}</strong>?\r\n              Esta ação removerá o usuário, suas chaves de acesso e suas políticas anexadas.\r\n            </p>\r\n            <div className=\"flex justify-end space-x-2\">\r\n              <button\r\n                onClick={closeModals}\r\n                className=\"px-4 py-2 bg-gray-200 rounded hover:bg-gray-300\"\r\n              >\r\n                Cancelar\r\n              </button>\r\n              <button\r\n                onClick={handleDeleteUser}\r\n                className=\"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700\"\r\n              >\r\n                Excluir\r\n              </button>\r\n            </div>\r\n          </motion.div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1238, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/components/iam/GroupsTab.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\ninterface IAMGroup {\r\n  id: string;\r\n  name: string;\r\n  arn: string;\r\n  createDate: string;\r\n  userCount: number;\r\n  policiesCount: number;\r\n}\r\n\r\ninterface GroupsTabProps {\r\n  credentialId: string | null;\r\n}\r\n\r\nexport default function GroupsTab({ credentialId }: GroupsTabProps) {\r\n  const [groups, setGroups] = useState<IAMGroup[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [showAddModal, setShowAddModal] = useState(false);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [selectedGroup, setSelectedGroup] = useState<IAMGroup | null>(null);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (credentialId) {\r\n      loadGroups();\r\n    } else {\r\n      setLoading(false);\r\n      setGroups([]);\r\n    }\r\n  }, [credentialId]);\r\n\r\n  const loadGroups = async () => {\r\n    if (!credentialId) return;\r\n    \r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await fetch(`/api/aws/iam?credentialId=${credentialId}&type=groups`);\r\n      if (!response.ok) {\r\n        throw new Error(`Erro ao carregar grupos: ${response.statusText}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (data.groups && Array.isArray(data.groups)) {\r\n        // Transformar os dados para o formato esperado\r\n        const formattedGroups = data.groups.map((group: any) => ({\r\n          id: group.GroupId || group.id || '',\r\n          name: group.GroupName || group.name || '',\r\n          arn: group.Arn || group.arn || '',\r\n          createDate: group.CreateDate || group.createDate || '',\r\n          userCount: group.userCount || 0,\r\n          policiesCount: group.policiesCount || 0\r\n        }));\r\n        \r\n        setGroups(formattedGroups);\r\n      } else {\r\n        throw new Error(\"Formato de dados inesperado\");\r\n      }\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Erro desconhecido ao carregar grupos');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRefresh = async () => {\r\n    setRefreshing(true);\r\n    await loadGroups();\r\n    setRefreshing(false);\r\n  };\r\n\r\n  const openAddModal = () => {\r\n    setSelectedGroup(null);\r\n    setShowAddModal(true);\r\n  };\r\n\r\n  const openDeleteModal = (group: IAMGroup) => {\r\n    setSelectedGroup(group);\r\n    setShowDeleteModal(true);\r\n  };\r\n\r\n  const closeModals = () => {\r\n    setShowAddModal(false);\r\n    setShowDeleteModal(false);\r\n    setSelectedGroup(null);\r\n  };\r\n\r\n  const handleCreateGroup = async (groupData: { groupName: string }) => {\r\n    if (!credentialId) return;\r\n    \r\n    try {\r\n      const response = await fetch('/api/aws/iam', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          credentialId,\r\n          resourceType: 'group',\r\n          groupName: groupData.groupName\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const data = await response.json();\r\n        throw new Error(data.error || 'Erro ao criar grupo');\r\n      }\r\n\r\n      closeModals();\r\n      loadGroups();\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Erro desconhecido ao criar grupo');\r\n    }\r\n  };\r\n\r\n  const handleDeleteGroup = async () => {\r\n    if (!credentialId || !selectedGroup) return;\r\n    \r\n    try {\r\n      const url = `/api/aws/iam?resourceType=group&credentialId=${credentialId}&groupName=${selectedGroup.name}`;\r\n      const response = await fetch(url, {\r\n        method: 'DELETE',\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const data = await response.json();\r\n        throw new Error(data.error || 'Erro ao excluir grupo');\r\n      }\r\n\r\n      closeModals();\r\n      loadGroups();\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Erro desconhecido ao excluir grupo');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex justify-between items-center mb-4\">\r\n        <h2 className=\"text-xl font-semibold\">Grupos IAM</h2>\r\n        <div className=\"flex space-x-2\">\r\n          <button\r\n            onClick={handleRefresh}\r\n            disabled={refreshing || loading}\r\n            className=\"px-3 py-1 bg-gray-100 hover:bg-gray-200 rounded text-gray-800 flex items-center text-sm\"\r\n          >\r\n            <span className={`mr-1 ${refreshing ? 'animate-spin' : ''}`}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\r\n              </svg>\r\n            </span>\r\n            Atualizar\r\n          </button>\r\n          <button\r\n            onClick={openAddModal}\r\n            className=\"px-3 py-1 bg-indigo-600 hover:bg-indigo-700 rounded text-white flex items-center text-sm\"\r\n          >\r\n            <span className=\"mr-1\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n              </svg>\r\n            </span>\r\n            Novo Grupo\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"mb-4 p-3 bg-red-50 border border-red-200 text-red-700 rounded\">\r\n          {error}\r\n        </div>\r\n      )}\r\n\r\n      {loading ? (\r\n        <div className=\"flex justify-center items-center h-64\">\r\n          <div className=\"animate-spin rounded-full h-10 w-10 border-t-2 border-b-2 border-indigo-500\"></div>\r\n        </div>\r\n      ) : groups.length === 0 ? (\r\n        <div className=\"bg-white rounded-lg shadow p-6 text-center\">\r\n          <p className=\"text-gray-500\">Nenhum grupo IAM encontrado.</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"bg-white rounded-lg shadow overflow-hidden\">\r\n          <table className=\"min-w-full divide-y divide-gray-200\">\r\n            <thead className=\"bg-gray-50\">\r\n              <tr>\r\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Nome do Grupo\r\n                </th>\r\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Data de Criação\r\n                </th>\r\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Usuários\r\n                </th>\r\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Políticas\r\n                </th>\r\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Ações\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n              {groups.map((group) => (\r\n                <motion.tr \r\n                  key={group.id}\r\n                  initial={{ opacity: 0 }}\r\n                  animate={{ opacity: 1 }}\r\n                  transition={{ duration: 0.2 }}\r\n                >\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <div className=\"flex items-center\">\r\n                      <div className=\"flex-shrink-0 h-10 w-10 bg-indigo-100 rounded-full flex items-center justify-center\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 text-indigo-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\" />\r\n                        </svg>\r\n                      </div>\r\n                      <div className=\"ml-4\">\r\n                        <div className=\"text-sm font-medium text-gray-900\">{group.name}</div>\r\n                        <div className=\"text-xs text-gray-500 truncate max-w-xs\">{group.arn}</div>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <div className=\"text-sm text-gray-900\">\r\n                      {new Date(group.createDate).toLocaleDateString('pt-BR')}\r\n                    </div>\r\n                    <div className=\"text-xs text-gray-500\">\r\n                      {new Date(group.createDate).toLocaleTimeString('pt-BR')}\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <div className=\"text-sm text-gray-900\">{group.userCount}</div>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <div className=\"text-sm text-gray-900\">{group.policiesCount}</div>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                    <button \r\n                      className=\"text-indigo-600 hover:text-indigo-900 mr-3\"\r\n                      onClick={() => window.alert('Visualizar detalhes: ' + group.name)}\r\n                    >\r\n                      Detalhes\r\n                    </button>\r\n                    <button \r\n                      className=\"text-red-600 hover:text-red-900\"\r\n                      onClick={() => openDeleteModal(group)}\r\n                    >\r\n                      Excluir\r\n                    </button>\r\n                  </td>\r\n                </motion.tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n\r\n      {/* Modal para adicionar grupo */}\r\n      {showAddModal && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <motion.div \r\n            className=\"bg-white rounded-lg p-6 w-full max-w-md\"\r\n            initial={{ scale: 0.9, opacity: 0 }}\r\n            animate={{ scale: 1, opacity: 1 }}\r\n          >\r\n            <h3 className=\"text-lg font-medium mb-4\">Adicionar Novo Grupo</h3>\r\n            <form onSubmit={(e) => {\r\n              e.preventDefault();\r\n              const form = e.target as HTMLFormElement;\r\n              const formData = new FormData(form);\r\n              handleCreateGroup({ groupName: formData.get('groupName') as string });\r\n            }}>\r\n              <div className=\"mb-4\">\r\n                <label htmlFor=\"groupName\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Nome do Grupo\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"groupName\"\r\n                  name=\"groupName\"\r\n                  required\r\n                  className=\"w-full p-2 border border-gray-300 rounded\"\r\n                />\r\n              </div>\r\n              <div className=\"flex justify-end space-x-2\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={closeModals}\r\n                  className=\"px-4 py-2 bg-gray-200 rounded hover:bg-gray-300\"\r\n                >\r\n                  Cancelar\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"px-4 py-2 bg-indigo-600 text-white rounded hover:bg-indigo-700\"\r\n                >\r\n                  Adicionar\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </motion.div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Modal para confirmar exclusão */}\r\n      {showDeleteModal && selectedGroup && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <motion.div \r\n            className=\"bg-white rounded-lg p-6 w-full max-w-md\"\r\n            initial={{ scale: 0.9, opacity: 0 }}\r\n            animate={{ scale: 1, opacity: 1 }}\r\n          >\r\n            <h3 className=\"text-lg font-medium mb-4\">Confirmar Exclusão</h3>\r\n            <p className=\"mb-4\">\r\n              Tem certeza que deseja excluir o grupo <strong>{selectedGroup.name}</strong>?\r\n              Esta ação removerá todos os usuários do grupo e desvinculará todas as políticas.\r\n            </p>\r\n            <div className=\"flex justify-end space-x-2\">\r\n              <button\r\n                onClick={closeModals}\r\n                className=\"px-4 py-2 bg-gray-200 rounded hover:bg-gray-300\"\r\n              >\r\n                Cancelar\r\n              </button>\r\n              <button\r\n                onClick={handleDeleteGroup}\r\n                className=\"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700\"\r\n              >\r\n                Excluir\r\n              </button>\r\n            </div>\r\n          </motion.div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAAA;AACA;;;;AAee,SAAS,UAAU,EAAE,YAAY,EAAkB;IAChE,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAc,EAAE;IACnD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAmB;IACpE,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,cAAc;YAChB;QACF,OAAO;YACL,WAAW;YACX,UAAU,EAAE;QACd;IACF,GAAG;QAAC;KAAa;IAEjB,MAAM,aAAa;QACjB,IAAI,CAAC,cAAc;QAEnB,WAAW;QACX,SAAS;QAET,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,CAAC,0BAA0B,EAAE,aAAa,YAAY,CAAC;YACpF,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM,CAAC,yBAAyB,EAAE,SAAS,UAAU,EAAE;YACnE;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAEhC,IAAI,KAAK,MAAM,IAAI,MAAM,OAAO,CAAC,KAAK,MAAM,GAAG;gBAC7C,+CAA+C;gBAC/C,MAAM,kBAAkB,KAAK,MAAM,CAAC,GAAG,CAAC,CAAC,QAAe,CAAC;wBACvD,IAAI,MAAM,OAAO,IAAI,MAAM,EAAE,IAAI;wBACjC,MAAM,MAAM,SAAS,IAAI,MAAM,IAAI,IAAI;wBACvC,KAAK,MAAM,GAAG,IAAI,MAAM,GAAG,IAAI;wBAC/B,YAAY,MAAM,UAAU,IAAI,MAAM,UAAU,IAAI;wBACpD,WAAW,MAAM,SAAS,IAAI;wBAC9B,eAAe,MAAM,aAAa,IAAI;oBACxC,CAAC;gBAED,UAAU;YACZ,OAAO;gBACL,MAAM,IAAI,MAAM;YAClB;QACF,EAAE,OAAO,KAAK;YACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;QAChD,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,gBAAgB;QACpB,cAAc;QACd,MAAM;QACN,cAAc;IAChB;IAEA,MAAM,eAAe;QACnB,iBAAiB;QACjB,gBAAgB;IAClB;IAEA,MAAM,kBAAkB,CAAC;QACvB,iBAAiB;QACjB,mBAAmB;IACrB;IAEA,MAAM,cAAc;QAClB,gBAAgB;QAChB,mBAAmB;QACnB,iBAAiB;IACnB;IAEA,MAAM,oBAAoB,OAAO;QAC/B,IAAI,CAAC,cAAc;QAEnB,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,gBAAgB;gBAC3C,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBACnB;oBACA,cAAc;oBACd,WAAW,UAAU,SAAS;gBAChC;YACF;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,MAAM,IAAI,MAAM,KAAK,KAAK,IAAI;YAChC;YAEA;YACA;QACF,EAAE,OAAO,KAAK;YACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;QAChD;IACF;IAEA,MAAM,oBAAoB;QACxB,IAAI,CAAC,gBAAgB,CAAC,eAAe;QAErC,IAAI;YACF,MAAM,MAAM,CAAC,6CAA6C,EAAE,aAAa,WAAW,EAAE,cAAc,IAAI,EAAE;YAC1G,MAAM,WAAW,MAAM,MAAM,KAAK;gBAChC,QAAQ;YACV;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,MAAM,IAAI,MAAM,KAAK,KAAK,IAAI;YAChC;YAEA;YACA;QACF,EAAE,OAAO,KAAK;YACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;QAChD;IACF;IAEA,qBACE,8OAAC;;0BACC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAwB;;;;;;kCACtC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCACC,SAAS;gCACT,UAAU,cAAc;gCACxB,WAAU;;kDAEV,8OAAC;wCAAK,WAAW,CAAC,KAAK,EAAE,aAAa,iBAAiB,IAAI;kDACzD,cAAA,8OAAC;4CAAI,OAAM;4CAA6B,WAAU;4CAAU,MAAK;4CAAO,SAAQ;4CAAY,QAAO;sDACjG,cAAA,8OAAC;gDAAK,eAAc;gDAAQ,gBAAe;gDAAQ,aAAa;gDAAG,GAAE;;;;;;;;;;;;;;;;oCAElE;;;;;;;0CAGT,8OAAC;gCACC,SAAS;gCACT,WAAU;;kDAEV,8OAAC;wCAAK,WAAU;kDACd,cAAA,8OAAC;4CAAI,OAAM;4CAA6B,WAAU;4CAAU,MAAK;4CAAO,SAAQ;4CAAY,QAAO;sDACjG,cAAA,8OAAC;gDAAK,eAAc;gDAAQ,gBAAe;gDAAQ,aAAa;gDAAG,GAAE;;;;;;;;;;;;;;;;oCAElE;;;;;;;;;;;;;;;;;;;YAMZ,uBACC,8OAAC;gBAAI,WAAU;0BACZ;;;;;;YAIJ,wBACC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;;;;;;;;;uBAEf,OAAO,MAAM,KAAK,kBACpB,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAE,WAAU;8BAAgB;;;;;;;;;;qCAG/B,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAM,WAAU;;sCACf,8OAAC;4BAAM,WAAU;sCACf,cAAA,8OAAC;;kDACC,8OAAC;wCAAG,OAAM;wCAAM,WAAU;kDAAiF;;;;;;kDAG3G,8OAAC;wCAAG,OAAM;wCAAM,WAAU;kDAAiF;;;;;;kDAG3G,8OAAC;wCAAG,OAAM;wCAAM,WAAU;kDAAiF;;;;;;kDAG3G,8OAAC;wCAAG,OAAM;wCAAM,WAAU;kDAAiF;;;;;;kDAG3G,8OAAC;wCAAG,OAAM;wCAAM,WAAU;kDAAiF;;;;;;;;;;;;;;;;;sCAK/G,8OAAC;4BAAM,WAAU;sCACd,OAAO,GAAG,CAAC,CAAC,sBACX,8OAAC,0LAAA,CAAA,SAAM,CAAC,EAAE;oCAER,SAAS;wCAAE,SAAS;oCAAE;oCACtB,SAAS;wCAAE,SAAS;oCAAE;oCACtB,YAAY;wCAAE,UAAU;oCAAI;;sDAE5B,8OAAC;4CAAG,WAAU;sDACZ,cAAA,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAI,WAAU;kEACb,cAAA,8OAAC;4DAAI,OAAM;4DAA6B,WAAU;4DAA0B,MAAK;4DAAO,SAAQ;4DAAY,QAAO;sEACjH,cAAA,8OAAC;gEAAK,eAAc;gEAAQ,gBAAe;gEAAQ,aAAa;gEAAG,GAAE;;;;;;;;;;;;;;;;kEAGzE,8OAAC;wDAAI,WAAU;;0EACb,8OAAC;gEAAI,WAAU;0EAAqC,MAAM,IAAI;;;;;;0EAC9D,8OAAC;gEAAI,WAAU;0EAA2C,MAAM,GAAG;;;;;;;;;;;;;;;;;;;;;;;sDAIzE,8OAAC;4CAAG,WAAU;;8DACZ,8OAAC;oDAAI,WAAU;8DACZ,IAAI,KAAK,MAAM,UAAU,EAAE,kBAAkB,CAAC;;;;;;8DAEjD,8OAAC;oDAAI,WAAU;8DACZ,IAAI,KAAK,MAAM,UAAU,EAAE,kBAAkB,CAAC;;;;;;;;;;;;sDAGnD,8OAAC;4CAAG,WAAU;sDACZ,cAAA,8OAAC;gDAAI,WAAU;0DAAyB,MAAM,SAAS;;;;;;;;;;;sDAEzD,8OAAC;4CAAG,WAAU;sDACZ,cAAA,8OAAC;gDAAI,WAAU;0DAAyB,MAAM,aAAa;;;;;;;;;;;sDAE7D,8OAAC;4CAAG,WAAU;;8DACZ,8OAAC;oDACC,WAAU;oDACV,SAAS,IAAM,OAAO,KAAK,CAAC,0BAA0B,MAAM,IAAI;8DACjE;;;;;;8DAGD,8OAAC;oDACC,WAAU;oDACV,SAAS,IAAM,gBAAgB;8DAChC;;;;;;;;;;;;;mCA1CE,MAAM,EAAE;;;;;;;;;;;;;;;;;;;;;YAsDxB,8BACC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;oBACT,WAAU;oBACV,SAAS;wBAAE,OAAO;wBAAK,SAAS;oBAAE;oBAClC,SAAS;wBAAE,OAAO;wBAAG,SAAS;oBAAE;;sCAEhC,8OAAC;4BAAG,WAAU;sCAA2B;;;;;;sCACzC,8OAAC;4BAAK,UAAU,CAAC;gCACf,EAAE,cAAc;gCAChB,MAAM,OAAO,EAAE,MAAM;gCACrB,MAAM,WAAW,IAAI,SAAS;gCAC9B,kBAAkB;oCAAE,WAAW,SAAS,GAAG,CAAC;gCAAuB;4BACrE;;8CACE,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAM,SAAQ;4CAAY,WAAU;sDAA+C;;;;;;sDAGpF,8OAAC;4CACC,MAAK;4CACL,IAAG;4CACH,MAAK;4CACL,QAAQ;4CACR,WAAU;;;;;;;;;;;;8CAGd,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CACC,MAAK;4CACL,SAAS;4CACT,WAAU;sDACX;;;;;;sDAGD,8OAAC;4CACC,MAAK;4CACL,WAAU;sDACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAUV,mBAAmB,+BAClB,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;oBACT,WAAU;oBACV,SAAS;wBAAE,OAAO;wBAAK,SAAS;oBAAE;oBAClC,SAAS;wBAAE,OAAO;wBAAG,SAAS;oBAAE;;sCAEhC,8OAAC;4BAAG,WAAU;sCAA2B;;;;;;sCACzC,8OAAC;4BAAE,WAAU;;gCAAO;8CACqB,8OAAC;8CAAQ,cAAc,IAAI;;;;;;gCAAU;;;;;;;sCAG9E,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCACC,SAAS;oCACT,WAAU;8CACX;;;;;;8CAGD,8OAAC;oCACC,SAAS;oCACT,WAAU;8CACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASf","debugId":null}},
    {"offset": {"line": 1942, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/app/dashboard/iam/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { useAwsCredentials } from \"@/hooks/useAwsCredentials\";\nimport { motion } from \"framer-motion\";\nimport CredentialSelector from \"@/components/aws/CredentialSelector\";\nimport UsersTab from \"@/components/iam/UsersTab\";\nimport GroupsTab from \"@/components/iam/GroupsTab\";\n\ninterface IAMUser {\n  id: string;\n  name: string;\n  arn: string;\n  createDate: string;\n  passwordLastUsed?: string;\n  hasConsoleAccess: boolean;\n  hasMfa: boolean;\n  accessKeysCount: number;\n  policiesCount: number;\n  riskLevel: 'high' | 'medium' | 'low' | 'safe';\n}\n\nexport default function IAMPage() {\n  const { selectedCredential, isLoading: credentialsLoading, error: credentialsError } = useAwsCredentials();\n  const [activeTab, setActiveTab] = useState<'users' | 'groups' | 'roles' | 'policies'>('users');\n  const [error, setError] = useState<string | null>(null);\n  \n  // Detectar erros nas credenciais\n  useEffect(() => {\n    if (credentialsError) {\n      setError(`Erro ao carregar credenciais: ${credentialsError}`);\n    } else {\n      setError(null);\n    }\n  }, [credentialsError]);\n\n  // Verificar conexão com a API\n  useEffect(() => {\n    const checkApiConnection = async () => {\n      try {\n        const response = await fetch('/api/health');\n        if (!response.ok) {\n          setError('Problemas de conexão com a API. Verifique se o servidor está rodando corretamente.');\n        }\n      } catch (err) {\n        console.error('Erro ao verificar API:', err);\n        // Não definimos o erro aqui para não interferir com outros fluxos\n      }\n    };\n\n    checkApiConnection();\n  }, []);\n\n  return (\n    <div>\n      <motion.div\n        className=\"mb-6\"\n        initial={{ opacity: 0, y: -20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.3 }}\n      >\n        <h1 className=\"text-3xl font-bold text-gray-900\">Gerenciamento IAM</h1>\n        <p className=\"mt-2 text-gray-600\">\n          Monitore e gerencie usuários, grupos, funções e políticas IAM na sua conta AWS.\n        </p>\n      </motion.div>\n\n      <CredentialSelector />\n      \n      {error && (\n        <motion.div \n          className=\"mb-4 p-4 rounded-md bg-red-50 border border-red-100 text-red-700\"\n          initial={{ opacity: 0, y: -10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.3 }}\n        >\n          <div className=\"flex\">\n            <div className=\"flex-shrink-0\">\n              <svg className=\"h-5 w-5 text-red-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n            <div className=\"ml-3\">\n              <p className=\"text-sm font-medium text-red-800\">{error}</p>\n            </div>\n          </div>\n        </motion.div>\n      )}\n\n      {credentialsLoading ? (\n        <motion.div\n          className=\"bg-white rounded-lg shadow-md p-6 flex justify-center\"\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.3 }}\n        >\n          <div className=\"flex flex-col items-center\">\n            <div className=\"animate-spin rounded-full h-10 w-10 border-t-2 border-b-2 border-indigo-500 mb-4\"></div>\n            <p className=\"text-gray-500\">Carregando credenciais AWS...</p>\n          </div>\n        </motion.div>\n      ) : !selectedCredential ? (\n        <motion.div\n          className=\"bg-white rounded-lg shadow-md p-6 text-center\"\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.3 }}\n        >\n          <p className=\"text-gray-500 mb-4\">Selecione uma credencial AWS para visualizar os dados de IAM.</p>\n        </motion.div>\n      ) : (\n        <>\n          {/* Tabs de navegação */}\n          <div className=\"mb-6 border-b border-gray-200\">\n            <nav className=\"-mb-px flex space-x-8\">\n              <button\n                onClick={() => setActiveTab('users')}\n                className={`py-4 px-1 border-b-2 font-medium text-sm ${\n                  activeTab === 'users'\n                    ? 'border-indigo-500 text-indigo-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                }`}\n              >\n                Usuários\n              </button>\n              <button\n                onClick={() => setActiveTab('groups')}\n                className={`py-4 px-1 border-b-2 font-medium text-sm ${\n                  activeTab === 'groups'\n                    ? 'border-indigo-500 text-indigo-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                }`}\n              >\n                Grupos\n              </button>\n              <button\n                onClick={() => setActiveTab('roles')}\n                className={`py-4 px-1 border-b-2 font-medium text-sm ${\n                  activeTab === 'roles'\n                    ? 'border-indigo-500 text-indigo-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                }`}\n              >\n                Funções\n              </button>\n              <button\n                onClick={() => setActiveTab('policies')}\n                className={`py-4 px-1 border-b-2 font-medium text-sm ${\n                  activeTab === 'policies'\n                    ? 'border-indigo-500 text-indigo-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                }`}\n              >\n                Políticas\n              </button>\n            </nav>\n          </div>\n\n          {/* Conteúdo da tab ativa */}\n          <motion.div\n            key={activeTab}\n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.3 }}\n            className=\"min-h-[400px]\"\n          >\n            {activeTab === 'users' && (\n              <UsersTab credentialId={selectedCredential.id} />\n            )}\n            \n            {activeTab === 'groups' && (\n              <GroupsTab credentialId={selectedCredential.id} />\n            )}\n            \n            {activeTab === 'roles' && (\n              <div className=\"p-6 bg-white rounded-lg shadow text-center\">\n                <p className=\"text-gray-500\">Gerenciamento de Funções em breve.</p>\n              </div>\n            )}\n            \n            {activeTab === 'policies' && (\n              <div className=\"p-6 bg-white rounded-lg shadow text-center\">\n                <p className=\"text-gray-500\">Gerenciamento de Políticas em breve.</p>\n              </div>\n            )}\n          </motion.div>\n\n          {/* Informação de segurança */}\n          <div className=\"mt-8 p-4 bg-blue-50 border border-blue-100 rounded-lg\">\n            <h3 className=\"text-blue-800 font-medium mb-2\">💡 Boas Práticas de Segurança IAM</h3>\n            <ul className=\"text-sm text-blue-700 ml-5 list-disc\">\n              <li>Habilite autenticação de múltiplos fatores (MFA) para todos os usuários</li>\n              <li>Siga o princípio do menor privilégio ao conceder permissões</li>\n              <li>Use grupos para atribuir permissões em vez de usuários individuais</li>\n              <li>Revise regularmente as políticas e permissões de acesso</li>\n              <li>Substitua credenciais de longo prazo por temporárias sempre que possível</li>\n            </ul>\n          </div>\n        </>\n      )}\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}}]
}