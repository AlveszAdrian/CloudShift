"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@aws-sdk";
exports.ids = ["vendor-chunks/@aws-sdk"];
exports.modules = {

/***/ "(rsc)/./node_modules/@aws-sdk/client-iam/dist-cjs/auth/httpAuthSchemeProvider.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-iam/dist-cjs/auth/httpAuthSchemeProvider.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.resolveHttpAuthSchemeConfig = exports.defaultIAMHttpAuthSchemeProvider = exports.defaultIAMHttpAuthSchemeParametersProvider = void 0;\nconst core_1 = __webpack_require__(/*! @aws-sdk/core */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/index.js\");\nconst util_middleware_1 = __webpack_require__(/*! @smithy/util-middleware */ \"(rsc)/./node_modules/@smithy/util-middleware/dist-cjs/index.js\");\nconst defaultIAMHttpAuthSchemeParametersProvider = async (config, context, input)=>{\n    return {\n        operation: (0, util_middleware_1.getSmithyContext)(context).operation,\n        region: await (0, util_middleware_1.normalizeProvider)(config.region)() || (()=>{\n            throw new Error(\"expected `region` to be configured for `aws.auth#sigv4`\");\n        })()\n    };\n};\nexports.defaultIAMHttpAuthSchemeParametersProvider = defaultIAMHttpAuthSchemeParametersProvider;\nfunction createAwsAuthSigv4HttpAuthOption(authParameters) {\n    return {\n        schemeId: \"aws.auth#sigv4\",\n        signingProperties: {\n            name: \"iam\",\n            region: authParameters.region\n        },\n        propertiesExtractor: (config, context)=>({\n                signingProperties: {\n                    config,\n                    context\n                }\n            })\n    };\n}\nconst defaultIAMHttpAuthSchemeProvider = (authParameters)=>{\n    const options = [];\n    switch(authParameters.operation){\n        default:\n            {\n                options.push(createAwsAuthSigv4HttpAuthOption(authParameters));\n            }\n    }\n    return options;\n};\nexports.defaultIAMHttpAuthSchemeProvider = defaultIAMHttpAuthSchemeProvider;\nconst resolveHttpAuthSchemeConfig = (config)=>{\n    const config_0 = (0, core_1.resolveAwsSdkSigV4Config)(config);\n    return Object.assign(config_0, {\n        authSchemePreference: (0, util_middleware_1.normalizeProvider)(config.authSchemePreference ?? [])\n    });\n};\nexports.resolveHttpAuthSchemeConfig = resolveHttpAuthSchemeConfig;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY2xpZW50LWlhbS9kaXN0LWNqcy9hdXRoL2h0dHBBdXRoU2NoZW1lUHJvdmlkZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELG1DQUFtQyxHQUFHQSx3Q0FBd0MsR0FBR0Esa0RBQWtELEdBQUcsS0FBSztBQUMzSSxNQUFNSyxTQUFTQyxtQkFBT0EsQ0FBQywwRUFBZTtBQUN0QyxNQUFNQyxvQkFBb0JELG1CQUFPQSxDQUFDLCtGQUF5QjtBQUMzRCxNQUFNRiw2Q0FBNkMsT0FBT0ksUUFBUUMsU0FBU0M7SUFDdkUsT0FBTztRQUNIQyxXQUFXLENBQUMsR0FBR0osa0JBQWtCSyxnQkFBZ0IsRUFBRUgsU0FBU0UsU0FBUztRQUNyRUUsUUFBUSxNQUFPLENBQUMsR0FBR04sa0JBQWtCTyxpQkFBaUIsRUFBRU4sT0FBT0ssTUFBTSxPQUNqRSxDQUFDO1lBQ0csTUFBTSxJQUFJRSxNQUFNO1FBQ3BCO0lBQ1I7QUFDSjtBQUNBZixrREFBa0QsR0FBR0k7QUFDckQsU0FBU1ksaUNBQWlDQyxjQUFjO0lBQ3BELE9BQU87UUFDSEMsVUFBVTtRQUNWQyxtQkFBbUI7WUFDZkMsTUFBTTtZQUNOUCxRQUFRSSxlQUFlSixNQUFNO1FBQ2pDO1FBQ0FRLHFCQUFxQixDQUFDYixRQUFRQyxVQUFhO2dCQUN2Q1UsbUJBQW1CO29CQUNmWDtvQkFDQUM7Z0JBQ0o7WUFDSjtJQUNKO0FBQ0o7QUFDQSxNQUFNTixtQ0FBbUMsQ0FBQ2M7SUFDdEMsTUFBTUssVUFBVSxFQUFFO0lBQ2xCLE9BQVFMLGVBQWVOLFNBQVM7UUFDNUI7WUFBUztnQkFDTFcsUUFBUUMsSUFBSSxDQUFDUCxpQ0FBaUNDO1lBQ2xEO0lBQ0o7SUFDQSxPQUFPSztBQUNYO0FBQ0F0Qix3Q0FBd0MsR0FBR0c7QUFDM0MsTUFBTUQsOEJBQThCLENBQUNNO0lBQ2pDLE1BQU1nQixXQUFXLENBQUMsR0FBR25CLE9BQU9vQix3QkFBd0IsRUFBRWpCO0lBQ3RELE9BQU9WLE9BQU80QixNQUFNLENBQUNGLFVBQVU7UUFDM0JHLHNCQUFzQixDQUFDLEdBQUdwQixrQkFBa0JPLGlCQUFpQixFQUFFTixPQUFPbUIsb0JBQW9CLElBQUksRUFBRTtJQUNwRztBQUNKO0FBQ0EzQixtQ0FBbUMsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbG91ZHNoaWZ0Ly4vbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL2NsaWVudC1pYW0vZGlzdC1janMvYXV0aC9odHRwQXV0aFNjaGVtZVByb3ZpZGVyLmpzPzNlNmMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnJlc29sdmVIdHRwQXV0aFNjaGVtZUNvbmZpZyA9IGV4cG9ydHMuZGVmYXVsdElBTUh0dHBBdXRoU2NoZW1lUHJvdmlkZXIgPSBleHBvcnRzLmRlZmF1bHRJQU1IdHRwQXV0aFNjaGVtZVBhcmFtZXRlcnNQcm92aWRlciA9IHZvaWQgMDtcbmNvbnN0IGNvcmVfMSA9IHJlcXVpcmUoXCJAYXdzLXNkay9jb3JlXCIpO1xuY29uc3QgdXRpbF9taWRkbGV3YXJlXzEgPSByZXF1aXJlKFwiQHNtaXRoeS91dGlsLW1pZGRsZXdhcmVcIik7XG5jb25zdCBkZWZhdWx0SUFNSHR0cEF1dGhTY2hlbWVQYXJhbWV0ZXJzUHJvdmlkZXIgPSBhc3luYyAoY29uZmlnLCBjb250ZXh0LCBpbnB1dCkgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICAgIG9wZXJhdGlvbjogKDAsIHV0aWxfbWlkZGxld2FyZV8xLmdldFNtaXRoeUNvbnRleHQpKGNvbnRleHQpLm9wZXJhdGlvbixcbiAgICAgICAgcmVnaW9uOiAoYXdhaXQgKDAsIHV0aWxfbWlkZGxld2FyZV8xLm5vcm1hbGl6ZVByb3ZpZGVyKShjb25maWcucmVnaW9uKSgpKSB8fFxuICAgICAgICAgICAgKCgpID0+IHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJleHBlY3RlZCBgcmVnaW9uYCB0byBiZSBjb25maWd1cmVkIGZvciBgYXdzLmF1dGgjc2lndjRgXCIpO1xuICAgICAgICAgICAgfSkoKSxcbiAgICB9O1xufTtcbmV4cG9ydHMuZGVmYXVsdElBTUh0dHBBdXRoU2NoZW1lUGFyYW1ldGVyc1Byb3ZpZGVyID0gZGVmYXVsdElBTUh0dHBBdXRoU2NoZW1lUGFyYW1ldGVyc1Byb3ZpZGVyO1xuZnVuY3Rpb24gY3JlYXRlQXdzQXV0aFNpZ3Y0SHR0cEF1dGhPcHRpb24oYXV0aFBhcmFtZXRlcnMpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBzY2hlbWVJZDogXCJhd3MuYXV0aCNzaWd2NFwiLFxuICAgICAgICBzaWduaW5nUHJvcGVydGllczoge1xuICAgICAgICAgICAgbmFtZTogXCJpYW1cIixcbiAgICAgICAgICAgIHJlZ2lvbjogYXV0aFBhcmFtZXRlcnMucmVnaW9uLFxuICAgICAgICB9LFxuICAgICAgICBwcm9wZXJ0aWVzRXh0cmFjdG9yOiAoY29uZmlnLCBjb250ZXh0KSA9PiAoe1xuICAgICAgICAgICAgc2lnbmluZ1Byb3BlcnRpZXM6IHtcbiAgICAgICAgICAgICAgICBjb25maWcsXG4gICAgICAgICAgICAgICAgY29udGV4dCxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pLFxuICAgIH07XG59XG5jb25zdCBkZWZhdWx0SUFNSHR0cEF1dGhTY2hlbWVQcm92aWRlciA9IChhdXRoUGFyYW1ldGVycykgPT4ge1xuICAgIGNvbnN0IG9wdGlvbnMgPSBbXTtcbiAgICBzd2l0Y2ggKGF1dGhQYXJhbWV0ZXJzLm9wZXJhdGlvbikge1xuICAgICAgICBkZWZhdWx0OiB7XG4gICAgICAgICAgICBvcHRpb25zLnB1c2goY3JlYXRlQXdzQXV0aFNpZ3Y0SHR0cEF1dGhPcHRpb24oYXV0aFBhcmFtZXRlcnMpKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gb3B0aW9ucztcbn07XG5leHBvcnRzLmRlZmF1bHRJQU1IdHRwQXV0aFNjaGVtZVByb3ZpZGVyID0gZGVmYXVsdElBTUh0dHBBdXRoU2NoZW1lUHJvdmlkZXI7XG5jb25zdCByZXNvbHZlSHR0cEF1dGhTY2hlbWVDb25maWcgPSAoY29uZmlnKSA9PiB7XG4gICAgY29uc3QgY29uZmlnXzAgPSAoMCwgY29yZV8xLnJlc29sdmVBd3NTZGtTaWdWNENvbmZpZykoY29uZmlnKTtcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihjb25maWdfMCwge1xuICAgICAgICBhdXRoU2NoZW1lUHJlZmVyZW5jZTogKDAsIHV0aWxfbWlkZGxld2FyZV8xLm5vcm1hbGl6ZVByb3ZpZGVyKShjb25maWcuYXV0aFNjaGVtZVByZWZlcmVuY2UgPz8gW10pLFxuICAgIH0pO1xufTtcbmV4cG9ydHMucmVzb2x2ZUh0dHBBdXRoU2NoZW1lQ29uZmlnID0gcmVzb2x2ZUh0dHBBdXRoU2NoZW1lQ29uZmlnO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwicmVzb2x2ZUh0dHBBdXRoU2NoZW1lQ29uZmlnIiwiZGVmYXVsdElBTUh0dHBBdXRoU2NoZW1lUHJvdmlkZXIiLCJkZWZhdWx0SUFNSHR0cEF1dGhTY2hlbWVQYXJhbWV0ZXJzUHJvdmlkZXIiLCJjb3JlXzEiLCJyZXF1aXJlIiwidXRpbF9taWRkbGV3YXJlXzEiLCJjb25maWciLCJjb250ZXh0IiwiaW5wdXQiLCJvcGVyYXRpb24iLCJnZXRTbWl0aHlDb250ZXh0IiwicmVnaW9uIiwibm9ybWFsaXplUHJvdmlkZXIiLCJFcnJvciIsImNyZWF0ZUF3c0F1dGhTaWd2NEh0dHBBdXRoT3B0aW9uIiwiYXV0aFBhcmFtZXRlcnMiLCJzY2hlbWVJZCIsInNpZ25pbmdQcm9wZXJ0aWVzIiwibmFtZSIsInByb3BlcnRpZXNFeHRyYWN0b3IiLCJvcHRpb25zIiwicHVzaCIsImNvbmZpZ18wIiwicmVzb2x2ZUF3c1Nka1NpZ1Y0Q29uZmlnIiwiYXNzaWduIiwiYXV0aFNjaGVtZVByZWZlcmVuY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/client-iam/dist-cjs/auth/httpAuthSchemeProvider.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/client-iam/dist-cjs/endpoint/endpointResolver.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-iam/dist-cjs/endpoint/endpointResolver.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.defaultEndpointResolver = void 0;\nconst util_endpoints_1 = __webpack_require__(/*! @aws-sdk/util-endpoints */ \"(rsc)/./node_modules/@aws-sdk/util-endpoints/dist-cjs/index.js\");\nconst util_endpoints_2 = __webpack_require__(/*! @smithy/util-endpoints */ \"(rsc)/./node_modules/@smithy/util-endpoints/dist-cjs/index.js\");\nconst ruleset_1 = __webpack_require__(/*! ./ruleset */ \"(rsc)/./node_modules/@aws-sdk/client-iam/dist-cjs/endpoint/ruleset.js\");\nconst cache = new util_endpoints_2.EndpointCache({\n    size: 50,\n    params: [\n        \"Endpoint\",\n        \"Region\",\n        \"UseDualStack\",\n        \"UseFIPS\"\n    ]\n});\nconst defaultEndpointResolver = (endpointParams, context = {})=>{\n    return cache.get(endpointParams, ()=>(0, util_endpoints_2.resolveEndpoint)(ruleset_1.ruleSet, {\n            endpointParams: endpointParams,\n            logger: context.logger\n        }));\n};\nexports.defaultEndpointResolver = defaultEndpointResolver;\nutil_endpoints_2.customEndpointFunctions.aws = util_endpoints_1.awsEndpointFunctions;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY2xpZW50LWlhbS9kaXN0LWNqcy9lbmRwb2ludC9lbmRwb2ludFJlc29sdmVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCwrQkFBK0IsR0FBRyxLQUFLO0FBQ3ZDLE1BQU1HLG1CQUFtQkMsbUJBQU9BLENBQUMsK0ZBQXlCO0FBQzFELE1BQU1DLG1CQUFtQkQsbUJBQU9BLENBQUMsNkZBQXdCO0FBQ3pELE1BQU1FLFlBQVlGLG1CQUFPQSxDQUFDLHdGQUFXO0FBQ3JDLE1BQU1HLFFBQVEsSUFBSUYsaUJBQWlCRyxhQUFhLENBQUM7SUFDN0NDLE1BQU07SUFDTkMsUUFBUTtRQUFDO1FBQVk7UUFBVTtRQUFnQjtLQUFVO0FBQzdEO0FBQ0EsTUFBTVIsMEJBQTBCLENBQUNTLGdCQUFnQkMsVUFBVSxDQUFDLENBQUM7SUFDekQsT0FBT0wsTUFBTU0sR0FBRyxDQUFDRixnQkFBZ0IsSUFBTSxDQUFDLEdBQUdOLGlCQUFpQlMsZUFBZSxFQUFFUixVQUFVUyxPQUFPLEVBQUU7WUFDNUZKLGdCQUFnQkE7WUFDaEJLLFFBQVFKLFFBQVFJLE1BQU07UUFDMUI7QUFDSjtBQUNBaEIsK0JBQStCLEdBQUdFO0FBQ2xDRyxpQkFBaUJZLHVCQUF1QixDQUFDQyxHQUFHLEdBQUdmLGlCQUFpQmdCLG9CQUFvQiIsInNvdXJjZXMiOlsid2VicGFjazovL2Nsb3Vkc2hpZnQvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY2xpZW50LWlhbS9kaXN0LWNqcy9lbmRwb2ludC9lbmRwb2ludFJlc29sdmVyLmpzPzViMzciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRlZmF1bHRFbmRwb2ludFJlc29sdmVyID0gdm9pZCAwO1xuY29uc3QgdXRpbF9lbmRwb2ludHNfMSA9IHJlcXVpcmUoXCJAYXdzLXNkay91dGlsLWVuZHBvaW50c1wiKTtcbmNvbnN0IHV0aWxfZW5kcG9pbnRzXzIgPSByZXF1aXJlKFwiQHNtaXRoeS91dGlsLWVuZHBvaW50c1wiKTtcbmNvbnN0IHJ1bGVzZXRfMSA9IHJlcXVpcmUoXCIuL3J1bGVzZXRcIik7XG5jb25zdCBjYWNoZSA9IG5ldyB1dGlsX2VuZHBvaW50c18yLkVuZHBvaW50Q2FjaGUoe1xuICAgIHNpemU6IDUwLFxuICAgIHBhcmFtczogW1wiRW5kcG9pbnRcIiwgXCJSZWdpb25cIiwgXCJVc2VEdWFsU3RhY2tcIiwgXCJVc2VGSVBTXCJdLFxufSk7XG5jb25zdCBkZWZhdWx0RW5kcG9pbnRSZXNvbHZlciA9IChlbmRwb2ludFBhcmFtcywgY29udGV4dCA9IHt9KSA9PiB7XG4gICAgcmV0dXJuIGNhY2hlLmdldChlbmRwb2ludFBhcmFtcywgKCkgPT4gKDAsIHV0aWxfZW5kcG9pbnRzXzIucmVzb2x2ZUVuZHBvaW50KShydWxlc2V0XzEucnVsZVNldCwge1xuICAgICAgICBlbmRwb2ludFBhcmFtczogZW5kcG9pbnRQYXJhbXMsXG4gICAgICAgIGxvZ2dlcjogY29udGV4dC5sb2dnZXIsXG4gICAgfSkpO1xufTtcbmV4cG9ydHMuZGVmYXVsdEVuZHBvaW50UmVzb2x2ZXIgPSBkZWZhdWx0RW5kcG9pbnRSZXNvbHZlcjtcbnV0aWxfZW5kcG9pbnRzXzIuY3VzdG9tRW5kcG9pbnRGdW5jdGlvbnMuYXdzID0gdXRpbF9lbmRwb2ludHNfMS5hd3NFbmRwb2ludEZ1bmN0aW9ucztcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHRFbmRwb2ludFJlc29sdmVyIiwidXRpbF9lbmRwb2ludHNfMSIsInJlcXVpcmUiLCJ1dGlsX2VuZHBvaW50c18yIiwicnVsZXNldF8xIiwiY2FjaGUiLCJFbmRwb2ludENhY2hlIiwic2l6ZSIsInBhcmFtcyIsImVuZHBvaW50UGFyYW1zIiwiY29udGV4dCIsImdldCIsInJlc29sdmVFbmRwb2ludCIsInJ1bGVTZXQiLCJsb2dnZXIiLCJjdXN0b21FbmRwb2ludEZ1bmN0aW9ucyIsImF3cyIsImF3c0VuZHBvaW50RnVuY3Rpb25zIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/client-iam/dist-cjs/endpoint/endpointResolver.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/client-iam/dist-cjs/endpoint/ruleset.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-iam/dist-cjs/endpoint/ruleset.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ruleSet = void 0;\nconst H = \"required\", I = \"fn\", J = \"argv\", K = \"ref\", L = \"properties\", M = \"headers\", N = \"authSchemes\", O = \"name\", P = \"signingRegion\";\nconst a = true, b = \"isSet\", c = \"booleanEquals\", d = \"error\", e = \"endpoint\", f = \"tree\", g = \"PartitionResult\", h = \"stringEquals\", i = \"sigv4\", j = {\n    [H]: true,\n    \"default\": false,\n    \"type\": \"Boolean\"\n}, k = {\n    [H]: false,\n    \"type\": \"String\"\n}, l = {\n    [K]: \"Endpoint\"\n}, m = {\n    [I]: c,\n    [J]: [\n        {\n            [K]: \"UseFIPS\"\n        },\n        true\n    ]\n}, n = {\n    [I]: c,\n    [J]: [\n        {\n            [K]: \"UseDualStack\"\n        },\n        true\n    ]\n}, o = {}, p = {\n    [I]: h,\n    [J]: [\n        {\n            [I]: \"getAttr\",\n            [J]: [\n                {\n                    [K]: g\n                },\n                \"name\"\n            ]\n        },\n        \"aws\"\n    ]\n}, q = {\n    [I]: \"getAttr\",\n    [J]: [\n        {\n            [K]: g\n        },\n        \"name\"\n    ]\n}, r = {\n    [I]: c,\n    [J]: [\n        {\n            [K]: \"UseFIPS\"\n        },\n        false\n    ]\n}, s = {\n    [N]: [\n        {\n            [O]: i,\n            [P]: \"us-east-1\"\n        }\n    ]\n}, t = {\n    [I]: h,\n    [J]: [\n        q,\n        \"aws-cn\"\n    ]\n}, u = {\n    [N]: [\n        {\n            [O]: i,\n            [P]: \"cn-north-1\"\n        }\n    ]\n}, v = {\n    [I]: c,\n    [J]: [\n        {\n            [K]: \"UseDualStack\"\n        },\n        false\n    ]\n}, w = {\n    [I]: h,\n    [J]: [\n        q,\n        \"aws-us-gov\"\n    ]\n}, x = {\n    \"url\": \"https://iam.us-gov.api.aws\",\n    [L]: {\n        [N]: [\n            {\n                [O]: i,\n                [P]: \"us-gov-west-1\"\n            }\n        ]\n    },\n    [M]: {}\n}, y = {\n    \"url\": \"https://iam.us-gov.amazonaws.com\",\n    [L]: {\n        [N]: [\n            {\n                [O]: i,\n                [P]: \"us-gov-west-1\"\n            }\n        ]\n    },\n    [M]: {}\n}, z = {\n    [I]: h,\n    [J]: [\n        q,\n        \"aws-iso\"\n    ]\n}, A = {\n    [N]: [\n        {\n            [O]: i,\n            [P]: \"us-iso-east-1\"\n        }\n    ]\n}, B = {\n    [I]: h,\n    [J]: [\n        q,\n        \"aws-iso-b\"\n    ]\n}, C = {\n    [N]: [\n        {\n            [O]: i,\n            [P]: \"us-isob-east-1\"\n        }\n    ]\n}, D = {\n    [I]: \"getAttr\",\n    [J]: [\n        {\n            [K]: g\n        },\n        \"supportsFIPS\"\n    ]\n}, E = {\n    [I]: c,\n    [J]: [\n        true,\n        {\n            [I]: \"getAttr\",\n            [J]: [\n                {\n                    [K]: g\n                },\n                \"supportsDualStack\"\n            ]\n        }\n    ]\n}, F = {\n    [N]: [\n        {\n            [O]: i,\n            [P]: \"{PartitionResult#implicitGlobalRegion}\"\n        }\n    ]\n}, G = [\n    {\n        [K]: \"Region\"\n    }\n];\nconst _data = {\n    version: \"1.0\",\n    parameters: {\n        UseDualStack: j,\n        UseFIPS: j,\n        Endpoint: k,\n        Region: k\n    },\n    rules: [\n        {\n            conditions: [\n                {\n                    [I]: b,\n                    [J]: [\n                        l\n                    ]\n                }\n            ],\n            rules: [\n                {\n                    conditions: [\n                        m\n                    ],\n                    error: \"Invalid Configuration: FIPS and custom endpoint are not supported\",\n                    type: d\n                },\n                {\n                    rules: [\n                        {\n                            conditions: [\n                                n\n                            ],\n                            error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\",\n                            type: d\n                        },\n                        {\n                            endpoint: {\n                                url: l,\n                                [L]: o,\n                                [M]: o\n                            },\n                            type: e\n                        }\n                    ],\n                    type: f\n                }\n            ],\n            type: f\n        },\n        {\n            rules: [\n                {\n                    conditions: [\n                        {\n                            [I]: b,\n                            [J]: G\n                        }\n                    ],\n                    rules: [\n                        {\n                            conditions: [\n                                {\n                                    [I]: \"aws.partition\",\n                                    [J]: G,\n                                    assign: g\n                                }\n                            ],\n                            rules: [\n                                {\n                                    conditions: [\n                                        p,\n                                        r,\n                                        n\n                                    ],\n                                    endpoint: {\n                                        url: \"https://iam.global.api.aws\",\n                                        [L]: s,\n                                        [M]: o\n                                    },\n                                    type: e\n                                },\n                                {\n                                    conditions: [\n                                        p,\n                                        m,\n                                        n\n                                    ],\n                                    endpoint: {\n                                        url: \"https://iam-fips.global.api.aws\",\n                                        [L]: s,\n                                        [M]: o\n                                    },\n                                    type: e\n                                },\n                                {\n                                    conditions: [\n                                        t,\n                                        r,\n                                        n\n                                    ],\n                                    endpoint: {\n                                        url: \"https://iam.global.api.amazonwebservices.com.cn\",\n                                        [L]: u,\n                                        [M]: o\n                                    },\n                                    type: e\n                                },\n                                {\n                                    conditions: [\n                                        t,\n                                        r,\n                                        v\n                                    ],\n                                    endpoint: {\n                                        url: \"https://iam.cn-north-1.amazonaws.com.cn\",\n                                        [L]: u,\n                                        [M]: o\n                                    },\n                                    type: e\n                                },\n                                {\n                                    conditions: [\n                                        w,\n                                        r,\n                                        n\n                                    ],\n                                    endpoint: x,\n                                    type: e\n                                },\n                                {\n                                    conditions: [\n                                        w,\n                                        m,\n                                        n\n                                    ],\n                                    endpoint: x,\n                                    type: e\n                                },\n                                {\n                                    conditions: [\n                                        w,\n                                        r,\n                                        v\n                                    ],\n                                    endpoint: y,\n                                    type: e\n                                },\n                                {\n                                    conditions: [\n                                        w,\n                                        m,\n                                        v\n                                    ],\n                                    endpoint: y,\n                                    type: e\n                                },\n                                {\n                                    conditions: [\n                                        z,\n                                        r,\n                                        v\n                                    ],\n                                    endpoint: {\n                                        url: \"https://iam.us-iso-east-1.c2s.ic.gov\",\n                                        [L]: A,\n                                        [M]: o\n                                    },\n                                    type: e\n                                },\n                                {\n                                    conditions: [\n                                        z,\n                                        m,\n                                        v\n                                    ],\n                                    endpoint: {\n                                        url: \"https://iam-fips.us-iso-east-1.c2s.ic.gov\",\n                                        [L]: A,\n                                        [M]: o\n                                    },\n                                    type: e\n                                },\n                                {\n                                    conditions: [\n                                        B,\n                                        r,\n                                        v\n                                    ],\n                                    endpoint: {\n                                        url: \"https://iam.us-isob-east-1.sc2s.sgov.gov\",\n                                        [L]: C,\n                                        [M]: o\n                                    },\n                                    type: e\n                                },\n                                {\n                                    conditions: [\n                                        B,\n                                        m,\n                                        v\n                                    ],\n                                    endpoint: {\n                                        url: \"https://iam-fips.us-isob-east-1.sc2s.sgov.gov\",\n                                        [L]: C,\n                                        [M]: o\n                                    },\n                                    type: e\n                                },\n                                {\n                                    conditions: [\n                                        {\n                                            [I]: h,\n                                            [J]: [\n                                                q,\n                                                \"aws-iso-e\"\n                                            ]\n                                        },\n                                        r,\n                                        v\n                                    ],\n                                    endpoint: {\n                                        url: \"https://iam.eu-isoe-west-1.cloud.adc-e.uk\",\n                                        [L]: {\n                                            [N]: [\n                                                {\n                                                    [O]: i,\n                                                    [P]: \"eu-isoe-west-1\"\n                                                }\n                                            ]\n                                        },\n                                        [M]: o\n                                    },\n                                    type: e\n                                },\n                                {\n                                    conditions: [\n                                        {\n                                            [I]: h,\n                                            [J]: [\n                                                q,\n                                                \"aws-iso-f\"\n                                            ]\n                                        },\n                                        r,\n                                        v\n                                    ],\n                                    endpoint: {\n                                        url: \"https://iam.us-isof-south-1.csp.hci.ic.gov\",\n                                        [L]: {\n                                            [N]: [\n                                                {\n                                                    [O]: i,\n                                                    [P]: \"us-isof-south-1\"\n                                                }\n                                            ]\n                                        },\n                                        [M]: o\n                                    },\n                                    type: e\n                                },\n                                {\n                                    conditions: [\n                                        m,\n                                        n\n                                    ],\n                                    rules: [\n                                        {\n                                            conditions: [\n                                                {\n                                                    [I]: c,\n                                                    [J]: [\n                                                        a,\n                                                        D\n                                                    ]\n                                                },\n                                                E\n                                            ],\n                                            rules: [\n                                                {\n                                                    endpoint: {\n                                                        url: \"https://iam-fips.{PartitionResult#dualStackDnsSuffix}\",\n                                                        [L]: F,\n                                                        [M]: o\n                                                    },\n                                                    type: e\n                                                }\n                                            ],\n                                            type: f\n                                        },\n                                        {\n                                            error: \"FIPS and DualStack are enabled, but this partition does not support one or both\",\n                                            type: d\n                                        }\n                                    ],\n                                    type: f\n                                },\n                                {\n                                    conditions: [\n                                        m,\n                                        v\n                                    ],\n                                    rules: [\n                                        {\n                                            conditions: [\n                                                {\n                                                    [I]: c,\n                                                    [J]: [\n                                                        D,\n                                                        a\n                                                    ]\n                                                }\n                                            ],\n                                            rules: [\n                                                {\n                                                    endpoint: {\n                                                        url: \"https://iam-fips.{PartitionResult#dnsSuffix}\",\n                                                        [L]: F,\n                                                        [M]: o\n                                                    },\n                                                    type: e\n                                                }\n                                            ],\n                                            type: f\n                                        },\n                                        {\n                                            error: \"FIPS is enabled but this partition does not support FIPS\",\n                                            type: d\n                                        }\n                                    ],\n                                    type: f\n                                },\n                                {\n                                    conditions: [\n                                        r,\n                                        n\n                                    ],\n                                    rules: [\n                                        {\n                                            conditions: [\n                                                E\n                                            ],\n                                            rules: [\n                                                {\n                                                    endpoint: {\n                                                        url: \"https://iam.{PartitionResult#dualStackDnsSuffix}\",\n                                                        [L]: F,\n                                                        [M]: o\n                                                    },\n                                                    type: e\n                                                }\n                                            ],\n                                            type: f\n                                        },\n                                        {\n                                            error: \"DualStack is enabled but this partition does not support DualStack\",\n                                            type: d\n                                        }\n                                    ],\n                                    type: f\n                                },\n                                {\n                                    endpoint: {\n                                        url: \"https://iam.{PartitionResult#dnsSuffix}\",\n                                        [L]: F,\n                                        [M]: o\n                                    },\n                                    type: e\n                                }\n                            ],\n                            type: f\n                        }\n                    ],\n                    type: f\n                },\n                {\n                    error: \"Invalid Configuration: Missing Region\",\n                    type: d\n                }\n            ],\n            type: f\n        }\n    ]\n};\nexports.ruleSet = _data;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/client-iam/dist-cjs/endpoint/ruleset.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/client-iam/dist-cjs/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-iam/dist-cjs/index.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value)=>__defProp(target, \"name\", {\n        value,\n        configurable: true\n    });\nvar __export = (target, all)=>{\n    for(var name in all)__defProp(target, name, {\n        get: all[name],\n        enumerable: true\n    });\n};\nvar __copyProps = (to, from, except, desc)=>{\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n            get: ()=>from[key],\n            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n    }\n    return to;\n};\nvar __toCommonJS = (mod)=>__copyProps(__defProp({}, \"__esModule\", {\n        value: true\n    }), mod);\n// src/index.ts\nvar index_exports = {};\n__export(index_exports, {\n    AccessAdvisorUsageGranularityType: ()=>AccessAdvisorUsageGranularityType,\n    AccessKeyFilterSensitiveLog: ()=>AccessKeyFilterSensitiveLog,\n    AccountNotManagementOrDelegatedAdministratorException: ()=>AccountNotManagementOrDelegatedAdministratorException,\n    AddClientIDToOpenIDConnectProviderCommand: ()=>AddClientIDToOpenIDConnectProviderCommand,\n    AddRoleToInstanceProfileCommand: ()=>AddRoleToInstanceProfileCommand,\n    AddUserToGroupCommand: ()=>AddUserToGroupCommand,\n    AssertionEncryptionModeType: ()=>AssertionEncryptionModeType,\n    AssignmentStatusType: ()=>AssignmentStatusType,\n    AttachGroupPolicyCommand: ()=>AttachGroupPolicyCommand,\n    AttachRolePolicyCommand: ()=>AttachRolePolicyCommand,\n    AttachUserPolicyCommand: ()=>AttachUserPolicyCommand,\n    CallerIsNotManagementAccountException: ()=>CallerIsNotManagementAccountException,\n    ChangePasswordCommand: ()=>ChangePasswordCommand,\n    ChangePasswordRequestFilterSensitiveLog: ()=>ChangePasswordRequestFilterSensitiveLog,\n    ConcurrentModificationException: ()=>ConcurrentModificationException,\n    ContextKeyTypeEnum: ()=>ContextKeyTypeEnum,\n    CreateAccessKeyCommand: ()=>CreateAccessKeyCommand,\n    CreateAccessKeyResponseFilterSensitiveLog: ()=>CreateAccessKeyResponseFilterSensitiveLog,\n    CreateAccountAliasCommand: ()=>CreateAccountAliasCommand,\n    CreateGroupCommand: ()=>CreateGroupCommand,\n    CreateInstanceProfileCommand: ()=>CreateInstanceProfileCommand,\n    CreateLoginProfileCommand: ()=>CreateLoginProfileCommand,\n    CreateLoginProfileRequestFilterSensitiveLog: ()=>CreateLoginProfileRequestFilterSensitiveLog,\n    CreateOpenIDConnectProviderCommand: ()=>CreateOpenIDConnectProviderCommand,\n    CreatePolicyCommand: ()=>CreatePolicyCommand,\n    CreatePolicyVersionCommand: ()=>CreatePolicyVersionCommand,\n    CreateRoleCommand: ()=>CreateRoleCommand,\n    CreateSAMLProviderCommand: ()=>CreateSAMLProviderCommand,\n    CreateSAMLProviderRequestFilterSensitiveLog: ()=>CreateSAMLProviderRequestFilterSensitiveLog,\n    CreateServiceLinkedRoleCommand: ()=>CreateServiceLinkedRoleCommand,\n    CreateServiceSpecificCredentialCommand: ()=>CreateServiceSpecificCredentialCommand,\n    CreateServiceSpecificCredentialResponseFilterSensitiveLog: ()=>CreateServiceSpecificCredentialResponseFilterSensitiveLog,\n    CreateUserCommand: ()=>CreateUserCommand,\n    CreateVirtualMFADeviceCommand: ()=>CreateVirtualMFADeviceCommand,\n    CreateVirtualMFADeviceResponseFilterSensitiveLog: ()=>CreateVirtualMFADeviceResponseFilterSensitiveLog,\n    CredentialReportExpiredException: ()=>CredentialReportExpiredException,\n    CredentialReportNotPresentException: ()=>CredentialReportNotPresentException,\n    CredentialReportNotReadyException: ()=>CredentialReportNotReadyException,\n    DeactivateMFADeviceCommand: ()=>DeactivateMFADeviceCommand,\n    DeleteAccessKeyCommand: ()=>DeleteAccessKeyCommand,\n    DeleteAccountAliasCommand: ()=>DeleteAccountAliasCommand,\n    DeleteAccountPasswordPolicyCommand: ()=>DeleteAccountPasswordPolicyCommand,\n    DeleteConflictException: ()=>DeleteConflictException,\n    DeleteGroupCommand: ()=>DeleteGroupCommand,\n    DeleteGroupPolicyCommand: ()=>DeleteGroupPolicyCommand,\n    DeleteInstanceProfileCommand: ()=>DeleteInstanceProfileCommand,\n    DeleteLoginProfileCommand: ()=>DeleteLoginProfileCommand,\n    DeleteOpenIDConnectProviderCommand: ()=>DeleteOpenIDConnectProviderCommand,\n    DeletePolicyCommand: ()=>DeletePolicyCommand,\n    DeletePolicyVersionCommand: ()=>DeletePolicyVersionCommand,\n    DeleteRoleCommand: ()=>DeleteRoleCommand,\n    DeleteRolePermissionsBoundaryCommand: ()=>DeleteRolePermissionsBoundaryCommand,\n    DeleteRolePolicyCommand: ()=>DeleteRolePolicyCommand,\n    DeleteSAMLProviderCommand: ()=>DeleteSAMLProviderCommand,\n    DeleteSSHPublicKeyCommand: ()=>DeleteSSHPublicKeyCommand,\n    DeleteServerCertificateCommand: ()=>DeleteServerCertificateCommand,\n    DeleteServiceLinkedRoleCommand: ()=>DeleteServiceLinkedRoleCommand,\n    DeleteServiceSpecificCredentialCommand: ()=>DeleteServiceSpecificCredentialCommand,\n    DeleteSigningCertificateCommand: ()=>DeleteSigningCertificateCommand,\n    DeleteUserCommand: ()=>DeleteUserCommand,\n    DeleteUserPermissionsBoundaryCommand: ()=>DeleteUserPermissionsBoundaryCommand,\n    DeleteUserPolicyCommand: ()=>DeleteUserPolicyCommand,\n    DeleteVirtualMFADeviceCommand: ()=>DeleteVirtualMFADeviceCommand,\n    DeletionTaskStatusType: ()=>DeletionTaskStatusType,\n    DetachGroupPolicyCommand: ()=>DetachGroupPolicyCommand,\n    DetachRolePolicyCommand: ()=>DetachRolePolicyCommand,\n    DetachUserPolicyCommand: ()=>DetachUserPolicyCommand,\n    DisableOrganizationsRootCredentialsManagementCommand: ()=>DisableOrganizationsRootCredentialsManagementCommand,\n    DisableOrganizationsRootSessionsCommand: ()=>DisableOrganizationsRootSessionsCommand,\n    DuplicateCertificateException: ()=>DuplicateCertificateException,\n    DuplicateSSHPublicKeyException: ()=>DuplicateSSHPublicKeyException,\n    EnableMFADeviceCommand: ()=>EnableMFADeviceCommand,\n    EnableOrganizationsRootCredentialsManagementCommand: ()=>EnableOrganizationsRootCredentialsManagementCommand,\n    EnableOrganizationsRootSessionsCommand: ()=>EnableOrganizationsRootSessionsCommand,\n    EncodingType: ()=>EncodingType,\n    EntityAlreadyExistsException: ()=>EntityAlreadyExistsException,\n    EntityTemporarilyUnmodifiableException: ()=>EntityTemporarilyUnmodifiableException,\n    EntityType: ()=>EntityType,\n    FeatureType: ()=>FeatureType,\n    GenerateCredentialReportCommand: ()=>GenerateCredentialReportCommand,\n    GenerateOrganizationsAccessReportCommand: ()=>GenerateOrganizationsAccessReportCommand,\n    GenerateServiceLastAccessedDetailsCommand: ()=>GenerateServiceLastAccessedDetailsCommand,\n    GetAccessKeyLastUsedCommand: ()=>GetAccessKeyLastUsedCommand,\n    GetAccountAuthorizationDetailsCommand: ()=>GetAccountAuthorizationDetailsCommand,\n    GetAccountPasswordPolicyCommand: ()=>GetAccountPasswordPolicyCommand,\n    GetAccountSummaryCommand: ()=>GetAccountSummaryCommand,\n    GetContextKeysForCustomPolicyCommand: ()=>GetContextKeysForCustomPolicyCommand,\n    GetContextKeysForPrincipalPolicyCommand: ()=>GetContextKeysForPrincipalPolicyCommand,\n    GetCredentialReportCommand: ()=>GetCredentialReportCommand,\n    GetGroupCommand: ()=>GetGroupCommand,\n    GetGroupPolicyCommand: ()=>GetGroupPolicyCommand,\n    GetInstanceProfileCommand: ()=>GetInstanceProfileCommand,\n    GetLoginProfileCommand: ()=>GetLoginProfileCommand,\n    GetMFADeviceCommand: ()=>GetMFADeviceCommand,\n    GetOpenIDConnectProviderCommand: ()=>GetOpenIDConnectProviderCommand,\n    GetOrganizationsAccessReportCommand: ()=>GetOrganizationsAccessReportCommand,\n    GetPolicyCommand: ()=>GetPolicyCommand,\n    GetPolicyVersionCommand: ()=>GetPolicyVersionCommand,\n    GetRoleCommand: ()=>GetRoleCommand,\n    GetRolePolicyCommand: ()=>GetRolePolicyCommand,\n    GetSAMLProviderCommand: ()=>GetSAMLProviderCommand,\n    GetSSHPublicKeyCommand: ()=>GetSSHPublicKeyCommand,\n    GetServerCertificateCommand: ()=>GetServerCertificateCommand,\n    GetServiceLastAccessedDetailsCommand: ()=>GetServiceLastAccessedDetailsCommand,\n    GetServiceLastAccessedDetailsWithEntitiesCommand: ()=>GetServiceLastAccessedDetailsWithEntitiesCommand,\n    GetServiceLinkedRoleDeletionStatusCommand: ()=>GetServiceLinkedRoleDeletionStatusCommand,\n    GetUserCommand: ()=>GetUserCommand,\n    GetUserPolicyCommand: ()=>GetUserPolicyCommand,\n    GlobalEndpointTokenVersion: ()=>GlobalEndpointTokenVersion,\n    IAM: ()=>IAM,\n    IAMClient: ()=>IAMClient,\n    IAMServiceException: ()=>IAMServiceException,\n    InvalidAuthenticationCodeException: ()=>InvalidAuthenticationCodeException,\n    InvalidCertificateException: ()=>InvalidCertificateException,\n    InvalidInputException: ()=>InvalidInputException,\n    InvalidPublicKeyException: ()=>InvalidPublicKeyException,\n    InvalidUserTypeException: ()=>InvalidUserTypeException,\n    JobStatusType: ()=>JobStatusType,\n    KeyPairMismatchException: ()=>KeyPairMismatchException,\n    LimitExceededException: ()=>LimitExceededException,\n    ListAccessKeysCommand: ()=>ListAccessKeysCommand,\n    ListAccountAliasesCommand: ()=>ListAccountAliasesCommand,\n    ListAttachedGroupPoliciesCommand: ()=>ListAttachedGroupPoliciesCommand,\n    ListAttachedRolePoliciesCommand: ()=>ListAttachedRolePoliciesCommand,\n    ListAttachedUserPoliciesCommand: ()=>ListAttachedUserPoliciesCommand,\n    ListEntitiesForPolicyCommand: ()=>ListEntitiesForPolicyCommand,\n    ListGroupPoliciesCommand: ()=>ListGroupPoliciesCommand,\n    ListGroupsCommand: ()=>ListGroupsCommand,\n    ListGroupsForUserCommand: ()=>ListGroupsForUserCommand,\n    ListInstanceProfileTagsCommand: ()=>ListInstanceProfileTagsCommand,\n    ListInstanceProfilesCommand: ()=>ListInstanceProfilesCommand,\n    ListInstanceProfilesForRoleCommand: ()=>ListInstanceProfilesForRoleCommand,\n    ListMFADeviceTagsCommand: ()=>ListMFADeviceTagsCommand,\n    ListMFADevicesCommand: ()=>ListMFADevicesCommand,\n    ListOpenIDConnectProviderTagsCommand: ()=>ListOpenIDConnectProviderTagsCommand,\n    ListOpenIDConnectProvidersCommand: ()=>ListOpenIDConnectProvidersCommand,\n    ListOrganizationsFeaturesCommand: ()=>ListOrganizationsFeaturesCommand,\n    ListPoliciesCommand: ()=>ListPoliciesCommand,\n    ListPoliciesGrantingServiceAccessCommand: ()=>ListPoliciesGrantingServiceAccessCommand,\n    ListPolicyTagsCommand: ()=>ListPolicyTagsCommand,\n    ListPolicyVersionsCommand: ()=>ListPolicyVersionsCommand,\n    ListRolePoliciesCommand: ()=>ListRolePoliciesCommand,\n    ListRoleTagsCommand: ()=>ListRoleTagsCommand,\n    ListRolesCommand: ()=>ListRolesCommand,\n    ListSAMLProviderTagsCommand: ()=>ListSAMLProviderTagsCommand,\n    ListSAMLProvidersCommand: ()=>ListSAMLProvidersCommand,\n    ListSSHPublicKeysCommand: ()=>ListSSHPublicKeysCommand,\n    ListServerCertificateTagsCommand: ()=>ListServerCertificateTagsCommand,\n    ListServerCertificatesCommand: ()=>ListServerCertificatesCommand,\n    ListServiceSpecificCredentialsCommand: ()=>ListServiceSpecificCredentialsCommand,\n    ListSigningCertificatesCommand: ()=>ListSigningCertificatesCommand,\n    ListUserPoliciesCommand: ()=>ListUserPoliciesCommand,\n    ListUserTagsCommand: ()=>ListUserTagsCommand,\n    ListUsersCommand: ()=>ListUsersCommand,\n    ListVirtualMFADevicesCommand: ()=>ListVirtualMFADevicesCommand,\n    ListVirtualMFADevicesResponseFilterSensitiveLog: ()=>ListVirtualMFADevicesResponseFilterSensitiveLog,\n    MalformedCertificateException: ()=>MalformedCertificateException,\n    MalformedPolicyDocumentException: ()=>MalformedPolicyDocumentException,\n    NoSuchEntityException: ()=>NoSuchEntityException,\n    OpenIdIdpCommunicationErrorException: ()=>OpenIdIdpCommunicationErrorException,\n    OrganizationNotFoundException: ()=>OrganizationNotFoundException,\n    OrganizationNotInAllFeaturesModeException: ()=>OrganizationNotInAllFeaturesModeException,\n    PasswordPolicyViolationException: ()=>PasswordPolicyViolationException,\n    PermissionsBoundaryAttachmentType: ()=>PermissionsBoundaryAttachmentType,\n    PolicyEvaluationDecisionType: ()=>PolicyEvaluationDecisionType,\n    PolicyEvaluationException: ()=>PolicyEvaluationException,\n    PolicyNotAttachableException: ()=>PolicyNotAttachableException,\n    PolicyOwnerEntityType: ()=>PolicyOwnerEntityType,\n    PolicyScopeType: ()=>PolicyScopeType,\n    PolicySourceType: ()=>PolicySourceType,\n    PolicyType: ()=>PolicyType,\n    PolicyUsageType: ()=>PolicyUsageType,\n    PutGroupPolicyCommand: ()=>PutGroupPolicyCommand,\n    PutRolePermissionsBoundaryCommand: ()=>PutRolePermissionsBoundaryCommand,\n    PutRolePolicyCommand: ()=>PutRolePolicyCommand,\n    PutUserPermissionsBoundaryCommand: ()=>PutUserPermissionsBoundaryCommand,\n    PutUserPolicyCommand: ()=>PutUserPolicyCommand,\n    RemoveClientIDFromOpenIDConnectProviderCommand: ()=>RemoveClientIDFromOpenIDConnectProviderCommand,\n    RemoveRoleFromInstanceProfileCommand: ()=>RemoveRoleFromInstanceProfileCommand,\n    RemoveUserFromGroupCommand: ()=>RemoveUserFromGroupCommand,\n    ReportFormatType: ()=>ReportFormatType,\n    ReportGenerationLimitExceededException: ()=>ReportGenerationLimitExceededException,\n    ReportStateType: ()=>ReportStateType,\n    ResetServiceSpecificCredentialCommand: ()=>ResetServiceSpecificCredentialCommand,\n    ResetServiceSpecificCredentialResponseFilterSensitiveLog: ()=>ResetServiceSpecificCredentialResponseFilterSensitiveLog,\n    ResyncMFADeviceCommand: ()=>ResyncMFADeviceCommand,\n    ServiceAccessNotEnabledException: ()=>ServiceAccessNotEnabledException,\n    ServiceFailureException: ()=>ServiceFailureException,\n    ServiceNotSupportedException: ()=>ServiceNotSupportedException,\n    ServiceSpecificCredentialFilterSensitiveLog: ()=>ServiceSpecificCredentialFilterSensitiveLog,\n    SetDefaultPolicyVersionCommand: ()=>SetDefaultPolicyVersionCommand,\n    SetSecurityTokenServicePreferencesCommand: ()=>SetSecurityTokenServicePreferencesCommand,\n    SimulateCustomPolicyCommand: ()=>SimulateCustomPolicyCommand,\n    SimulatePrincipalPolicyCommand: ()=>SimulatePrincipalPolicyCommand,\n    SortKeyType: ()=>SortKeyType,\n    StatusType: ()=>StatusType,\n    SummaryKeyType: ()=>SummaryKeyType,\n    TagInstanceProfileCommand: ()=>TagInstanceProfileCommand,\n    TagMFADeviceCommand: ()=>TagMFADeviceCommand,\n    TagOpenIDConnectProviderCommand: ()=>TagOpenIDConnectProviderCommand,\n    TagPolicyCommand: ()=>TagPolicyCommand,\n    TagRoleCommand: ()=>TagRoleCommand,\n    TagSAMLProviderCommand: ()=>TagSAMLProviderCommand,\n    TagServerCertificateCommand: ()=>TagServerCertificateCommand,\n    TagUserCommand: ()=>TagUserCommand,\n    UnmodifiableEntityException: ()=>UnmodifiableEntityException,\n    UnrecognizedPublicKeyEncodingException: ()=>UnrecognizedPublicKeyEncodingException,\n    UntagInstanceProfileCommand: ()=>UntagInstanceProfileCommand,\n    UntagMFADeviceCommand: ()=>UntagMFADeviceCommand,\n    UntagOpenIDConnectProviderCommand: ()=>UntagOpenIDConnectProviderCommand,\n    UntagPolicyCommand: ()=>UntagPolicyCommand,\n    UntagRoleCommand: ()=>UntagRoleCommand,\n    UntagSAMLProviderCommand: ()=>UntagSAMLProviderCommand,\n    UntagServerCertificateCommand: ()=>UntagServerCertificateCommand,\n    UntagUserCommand: ()=>UntagUserCommand,\n    UpdateAccessKeyCommand: ()=>UpdateAccessKeyCommand,\n    UpdateAccountPasswordPolicyCommand: ()=>UpdateAccountPasswordPolicyCommand,\n    UpdateAssumeRolePolicyCommand: ()=>UpdateAssumeRolePolicyCommand,\n    UpdateGroupCommand: ()=>UpdateGroupCommand,\n    UpdateLoginProfileCommand: ()=>UpdateLoginProfileCommand,\n    UpdateLoginProfileRequestFilterSensitiveLog: ()=>UpdateLoginProfileRequestFilterSensitiveLog,\n    UpdateOpenIDConnectProviderThumbprintCommand: ()=>UpdateOpenIDConnectProviderThumbprintCommand,\n    UpdateRoleCommand: ()=>UpdateRoleCommand,\n    UpdateRoleDescriptionCommand: ()=>UpdateRoleDescriptionCommand,\n    UpdateSAMLProviderCommand: ()=>UpdateSAMLProviderCommand,\n    UpdateSAMLProviderRequestFilterSensitiveLog: ()=>UpdateSAMLProviderRequestFilterSensitiveLog,\n    UpdateSSHPublicKeyCommand: ()=>UpdateSSHPublicKeyCommand,\n    UpdateServerCertificateCommand: ()=>UpdateServerCertificateCommand,\n    UpdateServiceSpecificCredentialCommand: ()=>UpdateServiceSpecificCredentialCommand,\n    UpdateSigningCertificateCommand: ()=>UpdateSigningCertificateCommand,\n    UpdateUserCommand: ()=>UpdateUserCommand,\n    UploadSSHPublicKeyCommand: ()=>UploadSSHPublicKeyCommand,\n    UploadServerCertificateCommand: ()=>UploadServerCertificateCommand,\n    UploadServerCertificateRequestFilterSensitiveLog: ()=>UploadServerCertificateRequestFilterSensitiveLog,\n    UploadSigningCertificateCommand: ()=>UploadSigningCertificateCommand,\n    VirtualMFADeviceFilterSensitiveLog: ()=>VirtualMFADeviceFilterSensitiveLog,\n    __Client: ()=>import_smithy_client.Client,\n    paginateGetAccountAuthorizationDetails: ()=>paginateGetAccountAuthorizationDetails,\n    paginateGetGroup: ()=>paginateGetGroup,\n    paginateListAccessKeys: ()=>paginateListAccessKeys,\n    paginateListAccountAliases: ()=>paginateListAccountAliases,\n    paginateListAttachedGroupPolicies: ()=>paginateListAttachedGroupPolicies,\n    paginateListAttachedRolePolicies: ()=>paginateListAttachedRolePolicies,\n    paginateListAttachedUserPolicies: ()=>paginateListAttachedUserPolicies,\n    paginateListEntitiesForPolicy: ()=>paginateListEntitiesForPolicy,\n    paginateListGroupPolicies: ()=>paginateListGroupPolicies,\n    paginateListGroups: ()=>paginateListGroups,\n    paginateListGroupsForUser: ()=>paginateListGroupsForUser,\n    paginateListInstanceProfileTags: ()=>paginateListInstanceProfileTags,\n    paginateListInstanceProfiles: ()=>paginateListInstanceProfiles,\n    paginateListInstanceProfilesForRole: ()=>paginateListInstanceProfilesForRole,\n    paginateListMFADeviceTags: ()=>paginateListMFADeviceTags,\n    paginateListMFADevices: ()=>paginateListMFADevices,\n    paginateListOpenIDConnectProviderTags: ()=>paginateListOpenIDConnectProviderTags,\n    paginateListPolicies: ()=>paginateListPolicies,\n    paginateListPolicyTags: ()=>paginateListPolicyTags,\n    paginateListPolicyVersions: ()=>paginateListPolicyVersions,\n    paginateListRolePolicies: ()=>paginateListRolePolicies,\n    paginateListRoleTags: ()=>paginateListRoleTags,\n    paginateListRoles: ()=>paginateListRoles,\n    paginateListSAMLProviderTags: ()=>paginateListSAMLProviderTags,\n    paginateListSSHPublicKeys: ()=>paginateListSSHPublicKeys,\n    paginateListServerCertificateTags: ()=>paginateListServerCertificateTags,\n    paginateListServerCertificates: ()=>paginateListServerCertificates,\n    paginateListSigningCertificates: ()=>paginateListSigningCertificates,\n    paginateListUserPolicies: ()=>paginateListUserPolicies,\n    paginateListUserTags: ()=>paginateListUserTags,\n    paginateListUsers: ()=>paginateListUsers,\n    paginateListVirtualMFADevices: ()=>paginateListVirtualMFADevices,\n    paginateSimulateCustomPolicy: ()=>paginateSimulateCustomPolicy,\n    paginateSimulatePrincipalPolicy: ()=>paginateSimulatePrincipalPolicy,\n    waitForInstanceProfileExists: ()=>waitForInstanceProfileExists,\n    waitForPolicyExists: ()=>waitForPolicyExists,\n    waitForRoleExists: ()=>waitForRoleExists,\n    waitForUserExists: ()=>waitForUserExists,\n    waitUntilInstanceProfileExists: ()=>waitUntilInstanceProfileExists,\n    waitUntilPolicyExists: ()=>waitUntilPolicyExists,\n    waitUntilRoleExists: ()=>waitUntilRoleExists,\n    waitUntilUserExists: ()=>waitUntilUserExists\n});\nmodule.exports = __toCommonJS(index_exports);\n// src/IAMClient.ts\nvar import_middleware_host_header = __webpack_require__(/*! @aws-sdk/middleware-host-header */ \"(rsc)/./node_modules/@aws-sdk/middleware-host-header/dist-cjs/index.js\");\nvar import_middleware_logger = __webpack_require__(/*! @aws-sdk/middleware-logger */ \"(rsc)/./node_modules/@aws-sdk/middleware-logger/dist-cjs/index.js\");\nvar import_middleware_recursion_detection = __webpack_require__(/*! @aws-sdk/middleware-recursion-detection */ \"(rsc)/./node_modules/@aws-sdk/middleware-recursion-detection/dist-cjs/index.js\");\nvar import_middleware_user_agent = __webpack_require__(/*! @aws-sdk/middleware-user-agent */ \"(rsc)/./node_modules/@aws-sdk/middleware-user-agent/dist-cjs/index.js\");\nvar import_config_resolver = __webpack_require__(/*! @smithy/config-resolver */ \"(rsc)/./node_modules/@smithy/config-resolver/dist-cjs/index.js\");\nvar import_core = __webpack_require__(/*! @smithy/core */ \"(rsc)/./node_modules/@smithy/core/dist-es/index.js\");\nvar import_middleware_content_length = __webpack_require__(/*! @smithy/middleware-content-length */ \"(rsc)/./node_modules/@smithy/middleware-content-length/dist-cjs/index.js\");\nvar import_middleware_endpoint = __webpack_require__(/*! @smithy/middleware-endpoint */ \"(rsc)/./node_modules/@smithy/middleware-endpoint/dist-cjs/index.js\");\nvar import_middleware_retry = __webpack_require__(/*! @smithy/middleware-retry */ \"(rsc)/./node_modules/@smithy/middleware-retry/dist-cjs/index.js\");\nvar import_httpAuthSchemeProvider = __webpack_require__(/*! ./auth/httpAuthSchemeProvider */ \"(rsc)/./node_modules/@aws-sdk/client-iam/dist-cjs/auth/httpAuthSchemeProvider.js\");\n// src/endpoint/EndpointParameters.ts\nvar resolveClientEndpointParameters = /* @__PURE__ */ __name((options)=>{\n    return Object.assign(options, {\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        defaultSigningName: \"iam\"\n    });\n}, \"resolveClientEndpointParameters\");\nvar commonParams = {\n    UseFIPS: {\n        type: \"builtInParams\",\n        name: \"useFipsEndpoint\"\n    },\n    Endpoint: {\n        type: \"builtInParams\",\n        name: \"endpoint\"\n    },\n    Region: {\n        type: \"builtInParams\",\n        name: \"region\"\n    },\n    UseDualStack: {\n        type: \"builtInParams\",\n        name: \"useDualstackEndpoint\"\n    }\n};\n// src/IAMClient.ts\nvar import_runtimeConfig = __webpack_require__(/*! ././runtimeConfig */ \"(rsc)/./node_modules/@aws-sdk/client-iam/dist-cjs/runtimeConfig.js\");\n// src/runtimeExtensions.ts\nvar import_region_config_resolver = __webpack_require__(/*! @aws-sdk/region-config-resolver */ \"(rsc)/./node_modules/@aws-sdk/region-config-resolver/dist-cjs/index.js\");\nvar import_protocol_http = __webpack_require__(/*! @smithy/protocol-http */ \"(rsc)/./node_modules/@smithy/protocol-http/dist-cjs/index.js\");\nvar import_smithy_client = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/./node_modules/@smithy/smithy-client/dist-cjs/index.js\");\n// src/auth/httpAuthExtensionConfiguration.ts\nvar getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig)=>{\n    const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;\n    let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;\n    let _credentials = runtimeConfig.credentials;\n    return {\n        setHttpAuthScheme (httpAuthScheme) {\n            const index = _httpAuthSchemes.findIndex((scheme)=>scheme.schemeId === httpAuthScheme.schemeId);\n            if (index === -1) {\n                _httpAuthSchemes.push(httpAuthScheme);\n            } else {\n                _httpAuthSchemes.splice(index, 1, httpAuthScheme);\n            }\n        },\n        httpAuthSchemes () {\n            return _httpAuthSchemes;\n        },\n        setHttpAuthSchemeProvider (httpAuthSchemeProvider) {\n            _httpAuthSchemeProvider = httpAuthSchemeProvider;\n        },\n        httpAuthSchemeProvider () {\n            return _httpAuthSchemeProvider;\n        },\n        setCredentials (credentials) {\n            _credentials = credentials;\n        },\n        credentials () {\n            return _credentials;\n        }\n    };\n}, \"getHttpAuthExtensionConfiguration\");\nvar resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config)=>{\n    return {\n        httpAuthSchemes: config.httpAuthSchemes(),\n        httpAuthSchemeProvider: config.httpAuthSchemeProvider(),\n        credentials: config.credentials()\n    };\n}, \"resolveHttpAuthRuntimeConfig\");\n// src/runtimeExtensions.ts\nvar resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions)=>{\n    const extensionConfiguration = Object.assign((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig), (0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig), (0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig), getHttpAuthExtensionConfiguration(runtimeConfig));\n    extensions.forEach((extension)=>extension.configure(extensionConfiguration));\n    return Object.assign(runtimeConfig, (0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration), (0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration), (0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration), resolveHttpAuthRuntimeConfig(extensionConfiguration));\n}, \"resolveRuntimeExtensions\");\n// src/IAMClient.ts\nvar IAMClient = class extends import_smithy_client.Client {\n    static{\n        __name(this, \"IAMClient\");\n    }\n    constructor(...[configuration]){\n        const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});\n        super(_config_0);\n        this.initConfig = _config_0;\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_1);\n        const _config_3 = (0, import_middleware_retry.resolveRetryConfig)(_config_2);\n        const _config_4 = (0, import_config_resolver.resolveRegionConfig)(_config_3);\n        const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);\n        const _config_6 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_5);\n        const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);\n        const _config_8 = resolveRuntimeExtensions(_config_7, configuration?.extensions || []);\n        this.config = _config_8;\n        this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));\n        this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));\n        this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));\n        this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));\n        this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));\n        this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));\n        this.middlewareStack.use((0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {\n            httpAuthSchemeParametersProvider: import_httpAuthSchemeProvider.defaultIAMHttpAuthSchemeParametersProvider,\n            identityProviderConfigProvider: /* @__PURE__ */ __name(async (config)=>new import_core.DefaultIdentityProviderConfig({\n                    \"aws.auth#sigv4\": config.credentials\n                }), \"identityProviderConfigProvider\")\n        }));\n        this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));\n    }\n    /**\n   * Destroy underlying resources, like sockets. It's usually not necessary to do this.\n   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.\n   * Otherwise, sockets might stay open for quite a long time before the server terminates them.\n   */ destroy() {\n        super.destroy();\n    }\n};\n// src/IAM.ts\n// src/commands/AddClientIDToOpenIDConnectProviderCommand.ts\nvar import_middleware_serde = __webpack_require__(/*! @smithy/middleware-serde */ \"(rsc)/./node_modules/@smithy/middleware-serde/dist-cjs/index.js\");\n// src/protocols/Aws_query.ts\nvar import_core2 = __webpack_require__(/*! @aws-sdk/core */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/index.js\");\n// src/models/IAMServiceException.ts\nvar IAMServiceException = class _IAMServiceException extends import_smithy_client.ServiceException {\n    static{\n        __name(this, \"IAMServiceException\");\n    }\n    /**\n   * @internal\n   */ constructor(options){\n        super(options);\n        Object.setPrototypeOf(this, _IAMServiceException.prototype);\n    }\n};\n// src/models/models_0.ts\nvar AccessAdvisorUsageGranularityType = {\n    ACTION_LEVEL: \"ACTION_LEVEL\",\n    SERVICE_LEVEL: \"SERVICE_LEVEL\"\n};\nvar StatusType = {\n    Active: \"Active\",\n    Inactive: \"Inactive\"\n};\nvar AccountNotManagementOrDelegatedAdministratorException = class _AccountNotManagementOrDelegatedAdministratorException extends IAMServiceException {\n    static{\n        __name(this, \"AccountNotManagementOrDelegatedAdministratorException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"AccountNotManagementOrDelegatedAdministratorException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"AccountNotManagementOrDelegatedAdministratorException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _AccountNotManagementOrDelegatedAdministratorException.prototype);\n        this.Message = opts.Message;\n    }\n};\nvar InvalidInputException = class _InvalidInputException extends IAMServiceException {\n    static{\n        __name(this, \"InvalidInputException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"InvalidInputException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidInputException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _InvalidInputException.prototype);\n    }\n};\nvar LimitExceededException = class _LimitExceededException extends IAMServiceException {\n    static{\n        __name(this, \"LimitExceededException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"LimitExceededException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"LimitExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _LimitExceededException.prototype);\n    }\n};\nvar NoSuchEntityException = class _NoSuchEntityException extends IAMServiceException {\n    static{\n        __name(this, \"NoSuchEntityException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"NoSuchEntityException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"NoSuchEntityException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _NoSuchEntityException.prototype);\n    }\n};\nvar ServiceFailureException = class _ServiceFailureException extends IAMServiceException {\n    static{\n        __name(this, \"ServiceFailureException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"ServiceFailureException\",\n            $fault: \"server\",\n            ...opts\n        });\n        this.name = \"ServiceFailureException\";\n        this.$fault = \"server\";\n        Object.setPrototypeOf(this, _ServiceFailureException.prototype);\n    }\n};\nvar EntityAlreadyExistsException = class _EntityAlreadyExistsException extends IAMServiceException {\n    static{\n        __name(this, \"EntityAlreadyExistsException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"EntityAlreadyExistsException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"EntityAlreadyExistsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _EntityAlreadyExistsException.prototype);\n    }\n};\nvar UnmodifiableEntityException = class _UnmodifiableEntityException extends IAMServiceException {\n    static{\n        __name(this, \"UnmodifiableEntityException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"UnmodifiableEntityException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"UnmodifiableEntityException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _UnmodifiableEntityException.prototype);\n    }\n};\nvar AssertionEncryptionModeType = {\n    Allowed: \"Allowed\",\n    Required: \"Required\"\n};\nvar AssignmentStatusType = {\n    Any: \"Any\",\n    Assigned: \"Assigned\",\n    Unassigned: \"Unassigned\"\n};\nvar PermissionsBoundaryAttachmentType = {\n    Policy: \"PermissionsBoundaryPolicy\"\n};\nvar PolicyNotAttachableException = class _PolicyNotAttachableException extends IAMServiceException {\n    static{\n        __name(this, \"PolicyNotAttachableException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"PolicyNotAttachableException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"PolicyNotAttachableException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _PolicyNotAttachableException.prototype);\n    }\n};\nvar EntityTemporarilyUnmodifiableException = class _EntityTemporarilyUnmodifiableException extends IAMServiceException {\n    static{\n        __name(this, \"EntityTemporarilyUnmodifiableException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"EntityTemporarilyUnmodifiableException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"EntityTemporarilyUnmodifiableException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _EntityTemporarilyUnmodifiableException.prototype);\n    }\n};\nvar InvalidUserTypeException = class _InvalidUserTypeException extends IAMServiceException {\n    static{\n        __name(this, \"InvalidUserTypeException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"InvalidUserTypeException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidUserTypeException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _InvalidUserTypeException.prototype);\n    }\n};\nvar PasswordPolicyViolationException = class _PasswordPolicyViolationException extends IAMServiceException {\n    static{\n        __name(this, \"PasswordPolicyViolationException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"PasswordPolicyViolationException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"PasswordPolicyViolationException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _PasswordPolicyViolationException.prototype);\n    }\n};\nvar ConcurrentModificationException = class _ConcurrentModificationException extends IAMServiceException {\n    static{\n        __name(this, \"ConcurrentModificationException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"ConcurrentModificationException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"ConcurrentModificationException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _ConcurrentModificationException.prototype);\n    }\n};\nvar OpenIdIdpCommunicationErrorException = class _OpenIdIdpCommunicationErrorException extends IAMServiceException {\n    static{\n        __name(this, \"OpenIdIdpCommunicationErrorException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"OpenIdIdpCommunicationErrorException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"OpenIdIdpCommunicationErrorException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _OpenIdIdpCommunicationErrorException.prototype);\n    }\n};\nvar MalformedPolicyDocumentException = class _MalformedPolicyDocumentException extends IAMServiceException {\n    static{\n        __name(this, \"MalformedPolicyDocumentException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"MalformedPolicyDocumentException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"MalformedPolicyDocumentException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _MalformedPolicyDocumentException.prototype);\n    }\n};\nvar ServiceNotSupportedException = class _ServiceNotSupportedException extends IAMServiceException {\n    static{\n        __name(this, \"ServiceNotSupportedException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"ServiceNotSupportedException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"ServiceNotSupportedException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _ServiceNotSupportedException.prototype);\n    }\n};\nvar DeleteConflictException = class _DeleteConflictException extends IAMServiceException {\n    static{\n        __name(this, \"DeleteConflictException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"DeleteConflictException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"DeleteConflictException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _DeleteConflictException.prototype);\n    }\n};\nvar FeatureType = {\n    ROOT_CREDENTIALS_MANAGEMENT: \"RootCredentialsManagement\",\n    ROOT_SESSIONS: \"RootSessions\"\n};\nvar OrganizationNotFoundException = class _OrganizationNotFoundException extends IAMServiceException {\n    static{\n        __name(this, \"OrganizationNotFoundException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"OrganizationNotFoundException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"OrganizationNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _OrganizationNotFoundException.prototype);\n        this.Message = opts.Message;\n    }\n};\nvar OrganizationNotInAllFeaturesModeException = class _OrganizationNotInAllFeaturesModeException extends IAMServiceException {\n    static{\n        __name(this, \"OrganizationNotInAllFeaturesModeException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"OrganizationNotInAllFeaturesModeException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"OrganizationNotInAllFeaturesModeException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _OrganizationNotInAllFeaturesModeException.prototype);\n        this.Message = opts.Message;\n    }\n};\nvar ServiceAccessNotEnabledException = class _ServiceAccessNotEnabledException extends IAMServiceException {\n    static{\n        __name(this, \"ServiceAccessNotEnabledException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"ServiceAccessNotEnabledException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"ServiceAccessNotEnabledException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _ServiceAccessNotEnabledException.prototype);\n        this.Message = opts.Message;\n    }\n};\nvar InvalidAuthenticationCodeException = class _InvalidAuthenticationCodeException extends IAMServiceException {\n    static{\n        __name(this, \"InvalidAuthenticationCodeException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"InvalidAuthenticationCodeException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidAuthenticationCodeException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _InvalidAuthenticationCodeException.prototype);\n    }\n};\nvar CallerIsNotManagementAccountException = class _CallerIsNotManagementAccountException extends IAMServiceException {\n    static{\n        __name(this, \"CallerIsNotManagementAccountException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"CallerIsNotManagementAccountException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"CallerIsNotManagementAccountException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _CallerIsNotManagementAccountException.prototype);\n        this.Message = opts.Message;\n    }\n};\nvar ReportStateType = {\n    COMPLETE: \"COMPLETE\",\n    INPROGRESS: \"INPROGRESS\",\n    STARTED: \"STARTED\"\n};\nvar ReportGenerationLimitExceededException = class _ReportGenerationLimitExceededException extends IAMServiceException {\n    static{\n        __name(this, \"ReportGenerationLimitExceededException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"ReportGenerationLimitExceededException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"ReportGenerationLimitExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _ReportGenerationLimitExceededException.prototype);\n    }\n};\nvar EntityType = {\n    AWSManagedPolicy: \"AWSManagedPolicy\",\n    Group: \"Group\",\n    LocalManagedPolicy: \"LocalManagedPolicy\",\n    Role: \"Role\",\n    User: \"User\"\n};\nvar SummaryKeyType = {\n    AccessKeysPerUserQuota: \"AccessKeysPerUserQuota\",\n    AccountAccessKeysPresent: \"AccountAccessKeysPresent\",\n    AccountMFAEnabled: \"AccountMFAEnabled\",\n    AccountPasswordPresent: \"AccountPasswordPresent\",\n    AccountSigningCertificatesPresent: \"AccountSigningCertificatesPresent\",\n    AttachedPoliciesPerGroupQuota: \"AttachedPoliciesPerGroupQuota\",\n    AttachedPoliciesPerRoleQuota: \"AttachedPoliciesPerRoleQuota\",\n    AttachedPoliciesPerUserQuota: \"AttachedPoliciesPerUserQuota\",\n    GlobalEndpointTokenVersion: \"GlobalEndpointTokenVersion\",\n    GroupPolicySizeQuota: \"GroupPolicySizeQuota\",\n    Groups: \"Groups\",\n    GroupsPerUserQuota: \"GroupsPerUserQuota\",\n    GroupsQuota: \"GroupsQuota\",\n    MFADevices: \"MFADevices\",\n    MFADevicesInUse: \"MFADevicesInUse\",\n    Policies: \"Policies\",\n    PoliciesQuota: \"PoliciesQuota\",\n    PolicySizeQuota: \"PolicySizeQuota\",\n    PolicyVersionsInUse: \"PolicyVersionsInUse\",\n    PolicyVersionsInUseQuota: \"PolicyVersionsInUseQuota\",\n    ServerCertificates: \"ServerCertificates\",\n    ServerCertificatesQuota: \"ServerCertificatesQuota\",\n    SigningCertificatesPerUserQuota: \"SigningCertificatesPerUserQuota\",\n    UserPolicySizeQuota: \"UserPolicySizeQuota\",\n    Users: \"Users\",\n    UsersQuota: \"UsersQuota\",\n    VersionsPerPolicyQuota: \"VersionsPerPolicyQuota\"\n};\nvar CredentialReportExpiredException = class _CredentialReportExpiredException extends IAMServiceException {\n    static{\n        __name(this, \"CredentialReportExpiredException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"CredentialReportExpiredException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"CredentialReportExpiredException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _CredentialReportExpiredException.prototype);\n    }\n};\nvar CredentialReportNotPresentException = class _CredentialReportNotPresentException extends IAMServiceException {\n    static{\n        __name(this, \"CredentialReportNotPresentException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"CredentialReportNotPresentException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"CredentialReportNotPresentException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _CredentialReportNotPresentException.prototype);\n    }\n};\nvar CredentialReportNotReadyException = class _CredentialReportNotReadyException extends IAMServiceException {\n    static{\n        __name(this, \"CredentialReportNotReadyException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"CredentialReportNotReadyException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"CredentialReportNotReadyException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _CredentialReportNotReadyException.prototype);\n    }\n};\nvar ReportFormatType = {\n    text_csv: \"text/csv\"\n};\nvar SortKeyType = {\n    LAST_AUTHENTICATED_TIME_ASCENDING: \"LAST_AUTHENTICATED_TIME_ASCENDING\",\n    LAST_AUTHENTICATED_TIME_DESCENDING: \"LAST_AUTHENTICATED_TIME_DESCENDING\",\n    SERVICE_NAMESPACE_ASCENDING: \"SERVICE_NAMESPACE_ASCENDING\",\n    SERVICE_NAMESPACE_DESCENDING: \"SERVICE_NAMESPACE_DESCENDING\"\n};\nvar JobStatusType = {\n    COMPLETED: \"COMPLETED\",\n    FAILED: \"FAILED\",\n    IN_PROGRESS: \"IN_PROGRESS\"\n};\nvar PolicyOwnerEntityType = {\n    GROUP: \"GROUP\",\n    ROLE: \"ROLE\",\n    USER: \"USER\"\n};\nvar DeletionTaskStatusType = {\n    FAILED: \"FAILED\",\n    IN_PROGRESS: \"IN_PROGRESS\",\n    NOT_STARTED: \"NOT_STARTED\",\n    SUCCEEDED: \"SUCCEEDED\"\n};\nvar EncodingType = {\n    PEM: \"PEM\",\n    SSH: \"SSH\"\n};\nvar UnrecognizedPublicKeyEncodingException = class _UnrecognizedPublicKeyEncodingException extends IAMServiceException {\n    static{\n        __name(this, \"UnrecognizedPublicKeyEncodingException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"UnrecognizedPublicKeyEncodingException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"UnrecognizedPublicKeyEncodingException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _UnrecognizedPublicKeyEncodingException.prototype);\n    }\n};\nvar PolicyUsageType = {\n    PermissionsBoundary: \"PermissionsBoundary\",\n    PermissionsPolicy: \"PermissionsPolicy\"\n};\nvar PolicyScopeType = {\n    AWS: \"AWS\",\n    All: \"All\",\n    Local: \"Local\"\n};\nvar PolicyType = {\n    INLINE: \"INLINE\",\n    MANAGED: \"MANAGED\"\n};\nvar GlobalEndpointTokenVersion = {\n    v1Token: \"v1Token\",\n    v2Token: \"v2Token\"\n};\nvar PolicyEvaluationException = class _PolicyEvaluationException extends IAMServiceException {\n    static{\n        __name(this, \"PolicyEvaluationException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"PolicyEvaluationException\",\n            $fault: \"server\",\n            ...opts\n        });\n        this.name = \"PolicyEvaluationException\";\n        this.$fault = \"server\";\n        Object.setPrototypeOf(this, _PolicyEvaluationException.prototype);\n    }\n};\nvar ContextKeyTypeEnum = {\n    BINARY: \"binary\",\n    BINARY_LIST: \"binaryList\",\n    BOOLEAN: \"boolean\",\n    BOOLEAN_LIST: \"booleanList\",\n    DATE: \"date\",\n    DATE_LIST: \"dateList\",\n    IP: \"ip\",\n    IP_LIST: \"ipList\",\n    NUMERIC: \"numeric\",\n    NUMERIC_LIST: \"numericList\",\n    STRING: \"string\",\n    STRING_LIST: \"stringList\"\n};\nvar AccessKeyFilterSensitiveLog = /* @__PURE__ */ __name((obj)=>({\n        ...obj,\n        ...obj.SecretAccessKey && {\n            SecretAccessKey: import_smithy_client.SENSITIVE_STRING\n        }\n    }), \"AccessKeyFilterSensitiveLog\");\nvar ChangePasswordRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj)=>({\n        ...obj,\n        ...obj.OldPassword && {\n            OldPassword: import_smithy_client.SENSITIVE_STRING\n        },\n        ...obj.NewPassword && {\n            NewPassword: import_smithy_client.SENSITIVE_STRING\n        }\n    }), \"ChangePasswordRequestFilterSensitiveLog\");\nvar CreateAccessKeyResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj)=>({\n        ...obj,\n        ...obj.AccessKey && {\n            AccessKey: AccessKeyFilterSensitiveLog(obj.AccessKey)\n        }\n    }), \"CreateAccessKeyResponseFilterSensitiveLog\");\nvar CreateLoginProfileRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj)=>({\n        ...obj,\n        ...obj.Password && {\n            Password: import_smithy_client.SENSITIVE_STRING\n        }\n    }), \"CreateLoginProfileRequestFilterSensitiveLog\");\nvar CreateSAMLProviderRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj)=>({\n        ...obj,\n        ...obj.AddPrivateKey && {\n            AddPrivateKey: import_smithy_client.SENSITIVE_STRING\n        }\n    }), \"CreateSAMLProviderRequestFilterSensitiveLog\");\nvar ServiceSpecificCredentialFilterSensitiveLog = /* @__PURE__ */ __name((obj)=>({\n        ...obj,\n        ...obj.ServicePassword && {\n            ServicePassword: import_smithy_client.SENSITIVE_STRING\n        }\n    }), \"ServiceSpecificCredentialFilterSensitiveLog\");\nvar CreateServiceSpecificCredentialResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj)=>({\n        ...obj,\n        ...obj.ServiceSpecificCredential && {\n            ServiceSpecificCredential: ServiceSpecificCredentialFilterSensitiveLog(obj.ServiceSpecificCredential)\n        }\n    }), \"CreateServiceSpecificCredentialResponseFilterSensitiveLog\");\nvar VirtualMFADeviceFilterSensitiveLog = /* @__PURE__ */ __name((obj)=>({\n        ...obj,\n        ...obj.Base32StringSeed && {\n            Base32StringSeed: import_smithy_client.SENSITIVE_STRING\n        },\n        ...obj.QRCodePNG && {\n            QRCodePNG: import_smithy_client.SENSITIVE_STRING\n        }\n    }), \"VirtualMFADeviceFilterSensitiveLog\");\nvar CreateVirtualMFADeviceResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj)=>({\n        ...obj,\n        ...obj.VirtualMFADevice && {\n            VirtualMFADevice: VirtualMFADeviceFilterSensitiveLog(obj.VirtualMFADevice)\n        }\n    }), \"CreateVirtualMFADeviceResponseFilterSensitiveLog\");\nvar ListVirtualMFADevicesResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj)=>({\n        ...obj,\n        ...obj.VirtualMFADevices && {\n            VirtualMFADevices: obj.VirtualMFADevices.map((item)=>VirtualMFADeviceFilterSensitiveLog(item))\n        }\n    }), \"ListVirtualMFADevicesResponseFilterSensitiveLog\");\nvar ResetServiceSpecificCredentialResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj)=>({\n        ...obj,\n        ...obj.ServiceSpecificCredential && {\n            ServiceSpecificCredential: ServiceSpecificCredentialFilterSensitiveLog(obj.ServiceSpecificCredential)\n        }\n    }), \"ResetServiceSpecificCredentialResponseFilterSensitiveLog\");\n// src/models/models_1.ts\nvar PolicyEvaluationDecisionType = {\n    ALLOWED: \"allowed\",\n    EXPLICIT_DENY: \"explicitDeny\",\n    IMPLICIT_DENY: \"implicitDeny\"\n};\nvar PolicySourceType = {\n    AWS_MANAGED: \"aws-managed\",\n    GROUP: \"group\",\n    NONE: \"none\",\n    RESOURCE: \"resource\",\n    ROLE: \"role\",\n    USER: \"user\",\n    USER_MANAGED: \"user-managed\"\n};\nvar KeyPairMismatchException = class _KeyPairMismatchException extends IAMServiceException {\n    static{\n        __name(this, \"KeyPairMismatchException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"KeyPairMismatchException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"KeyPairMismatchException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _KeyPairMismatchException.prototype);\n    }\n};\nvar MalformedCertificateException = class _MalformedCertificateException extends IAMServiceException {\n    static{\n        __name(this, \"MalformedCertificateException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"MalformedCertificateException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"MalformedCertificateException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _MalformedCertificateException.prototype);\n    }\n};\nvar DuplicateCertificateException = class _DuplicateCertificateException extends IAMServiceException {\n    static{\n        __name(this, \"DuplicateCertificateException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"DuplicateCertificateException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"DuplicateCertificateException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _DuplicateCertificateException.prototype);\n    }\n};\nvar InvalidCertificateException = class _InvalidCertificateException extends IAMServiceException {\n    static{\n        __name(this, \"InvalidCertificateException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"InvalidCertificateException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidCertificateException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _InvalidCertificateException.prototype);\n    }\n};\nvar DuplicateSSHPublicKeyException = class _DuplicateSSHPublicKeyException extends IAMServiceException {\n    static{\n        __name(this, \"DuplicateSSHPublicKeyException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"DuplicateSSHPublicKeyException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"DuplicateSSHPublicKeyException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _DuplicateSSHPublicKeyException.prototype);\n    }\n};\nvar InvalidPublicKeyException = class _InvalidPublicKeyException extends IAMServiceException {\n    static{\n        __name(this, \"InvalidPublicKeyException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"InvalidPublicKeyException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidPublicKeyException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _InvalidPublicKeyException.prototype);\n    }\n};\nvar UpdateLoginProfileRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj)=>({\n        ...obj,\n        ...obj.Password && {\n            Password: import_smithy_client.SENSITIVE_STRING\n        }\n    }), \"UpdateLoginProfileRequestFilterSensitiveLog\");\nvar UpdateSAMLProviderRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj)=>({\n        ...obj,\n        ...obj.AddPrivateKey && {\n            AddPrivateKey: import_smithy_client.SENSITIVE_STRING\n        }\n    }), \"UpdateSAMLProviderRequestFilterSensitiveLog\");\nvar UploadServerCertificateRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj)=>({\n        ...obj,\n        ...obj.PrivateKey && {\n            PrivateKey: import_smithy_client.SENSITIVE_STRING\n        }\n    }), \"UploadServerCertificateRequestFilterSensitiveLog\");\n// src/protocols/Aws_query.ts\nvar se_AddClientIDToOpenIDConnectProviderCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_AddClientIDToOpenIDConnectProviderRequest(input, context),\n        [_A]: _ACIDTOIDCP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_AddClientIDToOpenIDConnectProviderCommand\");\nvar se_AddRoleToInstanceProfileCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_AddRoleToInstanceProfileRequest(input, context),\n        [_A]: _ARTIP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_AddRoleToInstanceProfileCommand\");\nvar se_AddUserToGroupCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_AddUserToGroupRequest(input, context),\n        [_A]: _AUTG,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_AddUserToGroupCommand\");\nvar se_AttachGroupPolicyCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_AttachGroupPolicyRequest(input, context),\n        [_A]: _AGP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_AttachGroupPolicyCommand\");\nvar se_AttachRolePolicyCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_AttachRolePolicyRequest(input, context),\n        [_A]: _ARP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_AttachRolePolicyCommand\");\nvar se_AttachUserPolicyCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_AttachUserPolicyRequest(input, context),\n        [_A]: _AUP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_AttachUserPolicyCommand\");\nvar se_ChangePasswordCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ChangePasswordRequest(input, context),\n        [_A]: _CP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ChangePasswordCommand\");\nvar se_CreateAccessKeyCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_CreateAccessKeyRequest(input, context),\n        [_A]: _CAK,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_CreateAccessKeyCommand\");\nvar se_CreateAccountAliasCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_CreateAccountAliasRequest(input, context),\n        [_A]: _CAA,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_CreateAccountAliasCommand\");\nvar se_CreateGroupCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_CreateGroupRequest(input, context),\n        [_A]: _CG,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_CreateGroupCommand\");\nvar se_CreateInstanceProfileCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_CreateInstanceProfileRequest(input, context),\n        [_A]: _CIP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_CreateInstanceProfileCommand\");\nvar se_CreateLoginProfileCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_CreateLoginProfileRequest(input, context),\n        [_A]: _CLP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_CreateLoginProfileCommand\");\nvar se_CreateOpenIDConnectProviderCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_CreateOpenIDConnectProviderRequest(input, context),\n        [_A]: _COIDCP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_CreateOpenIDConnectProviderCommand\");\nvar se_CreatePolicyCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_CreatePolicyRequest(input, context),\n        [_A]: _CPr,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_CreatePolicyCommand\");\nvar se_CreatePolicyVersionCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_CreatePolicyVersionRequest(input, context),\n        [_A]: _CPV,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_CreatePolicyVersionCommand\");\nvar se_CreateRoleCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_CreateRoleRequest(input, context),\n        [_A]: _CR,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_CreateRoleCommand\");\nvar se_CreateSAMLProviderCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_CreateSAMLProviderRequest(input, context),\n        [_A]: _CSAMLP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_CreateSAMLProviderCommand\");\nvar se_CreateServiceLinkedRoleCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_CreateServiceLinkedRoleRequest(input, context),\n        [_A]: _CSLR,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_CreateServiceLinkedRoleCommand\");\nvar se_CreateServiceSpecificCredentialCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_CreateServiceSpecificCredentialRequest(input, context),\n        [_A]: _CSSC,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_CreateServiceSpecificCredentialCommand\");\nvar se_CreateUserCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_CreateUserRequest(input, context),\n        [_A]: _CU,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_CreateUserCommand\");\nvar se_CreateVirtualMFADeviceCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_CreateVirtualMFADeviceRequest(input, context),\n        [_A]: _CVMFAD,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_CreateVirtualMFADeviceCommand\");\nvar se_DeactivateMFADeviceCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DeactivateMFADeviceRequest(input, context),\n        [_A]: _DMFAD,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeactivateMFADeviceCommand\");\nvar se_DeleteAccessKeyCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DeleteAccessKeyRequest(input, context),\n        [_A]: _DAK,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeleteAccessKeyCommand\");\nvar se_DeleteAccountAliasCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DeleteAccountAliasRequest(input, context),\n        [_A]: _DAA,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeleteAccountAliasCommand\");\nvar se_DeleteAccountPasswordPolicyCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    const body = buildFormUrlencodedString({\n        [_A]: _DAPP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeleteAccountPasswordPolicyCommand\");\nvar se_DeleteGroupCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DeleteGroupRequest(input, context),\n        [_A]: _DG,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeleteGroupCommand\");\nvar se_DeleteGroupPolicyCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DeleteGroupPolicyRequest(input, context),\n        [_A]: _DGP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeleteGroupPolicyCommand\");\nvar se_DeleteInstanceProfileCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DeleteInstanceProfileRequest(input, context),\n        [_A]: _DIP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeleteInstanceProfileCommand\");\nvar se_DeleteLoginProfileCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DeleteLoginProfileRequest(input, context),\n        [_A]: _DLP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeleteLoginProfileCommand\");\nvar se_DeleteOpenIDConnectProviderCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DeleteOpenIDConnectProviderRequest(input, context),\n        [_A]: _DOIDCP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeleteOpenIDConnectProviderCommand\");\nvar se_DeletePolicyCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DeletePolicyRequest(input, context),\n        [_A]: _DP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeletePolicyCommand\");\nvar se_DeletePolicyVersionCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DeletePolicyVersionRequest(input, context),\n        [_A]: _DPV,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeletePolicyVersionCommand\");\nvar se_DeleteRoleCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DeleteRoleRequest(input, context),\n        [_A]: _DR,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeleteRoleCommand\");\nvar se_DeleteRolePermissionsBoundaryCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DeleteRolePermissionsBoundaryRequest(input, context),\n        [_A]: _DRPB,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeleteRolePermissionsBoundaryCommand\");\nvar se_DeleteRolePolicyCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DeleteRolePolicyRequest(input, context),\n        [_A]: _DRP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeleteRolePolicyCommand\");\nvar se_DeleteSAMLProviderCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DeleteSAMLProviderRequest(input, context),\n        [_A]: _DSAMLP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeleteSAMLProviderCommand\");\nvar se_DeleteServerCertificateCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DeleteServerCertificateRequest(input, context),\n        [_A]: _DSC,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeleteServerCertificateCommand\");\nvar se_DeleteServiceLinkedRoleCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DeleteServiceLinkedRoleRequest(input, context),\n        [_A]: _DSLR,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeleteServiceLinkedRoleCommand\");\nvar se_DeleteServiceSpecificCredentialCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DeleteServiceSpecificCredentialRequest(input, context),\n        [_A]: _DSSC,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeleteServiceSpecificCredentialCommand\");\nvar se_DeleteSigningCertificateCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DeleteSigningCertificateRequest(input, context),\n        [_A]: _DSCe,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeleteSigningCertificateCommand\");\nvar se_DeleteSSHPublicKeyCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DeleteSSHPublicKeyRequest(input, context),\n        [_A]: _DSSHPK,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeleteSSHPublicKeyCommand\");\nvar se_DeleteUserCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DeleteUserRequest(input, context),\n        [_A]: _DU,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeleteUserCommand\");\nvar se_DeleteUserPermissionsBoundaryCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DeleteUserPermissionsBoundaryRequest(input, context),\n        [_A]: _DUPB,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeleteUserPermissionsBoundaryCommand\");\nvar se_DeleteUserPolicyCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DeleteUserPolicyRequest(input, context),\n        [_A]: _DUP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeleteUserPolicyCommand\");\nvar se_DeleteVirtualMFADeviceCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DeleteVirtualMFADeviceRequest(input, context),\n        [_A]: _DVMFAD,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeleteVirtualMFADeviceCommand\");\nvar se_DetachGroupPolicyCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DetachGroupPolicyRequest(input, context),\n        [_A]: _DGPe,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DetachGroupPolicyCommand\");\nvar se_DetachRolePolicyCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DetachRolePolicyRequest(input, context),\n        [_A]: _DRPe,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DetachRolePolicyCommand\");\nvar se_DetachUserPolicyCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DetachUserPolicyRequest(input, context),\n        [_A]: _DUPe,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DetachUserPolicyCommand\");\nvar se_DisableOrganizationsRootCredentialsManagementCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DisableOrganizationsRootCredentialsManagementRequest(input, context),\n        [_A]: _DORCM,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DisableOrganizationsRootCredentialsManagementCommand\");\nvar se_DisableOrganizationsRootSessionsCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DisableOrganizationsRootSessionsRequest(input, context),\n        [_A]: _DORS,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DisableOrganizationsRootSessionsCommand\");\nvar se_EnableMFADeviceCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_EnableMFADeviceRequest(input, context),\n        [_A]: _EMFAD,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_EnableMFADeviceCommand\");\nvar se_EnableOrganizationsRootCredentialsManagementCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_EnableOrganizationsRootCredentialsManagementRequest(input, context),\n        [_A]: _EORCM,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_EnableOrganizationsRootCredentialsManagementCommand\");\nvar se_EnableOrganizationsRootSessionsCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_EnableOrganizationsRootSessionsRequest(input, context),\n        [_A]: _EORS,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_EnableOrganizationsRootSessionsCommand\");\nvar se_GenerateCredentialReportCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    const body = buildFormUrlencodedString({\n        [_A]: _GCR,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GenerateCredentialReportCommand\");\nvar se_GenerateOrganizationsAccessReportCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GenerateOrganizationsAccessReportRequest(input, context),\n        [_A]: _GOAR,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GenerateOrganizationsAccessReportCommand\");\nvar se_GenerateServiceLastAccessedDetailsCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GenerateServiceLastAccessedDetailsRequest(input, context),\n        [_A]: _GSLAD,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GenerateServiceLastAccessedDetailsCommand\");\nvar se_GetAccessKeyLastUsedCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetAccessKeyLastUsedRequest(input, context),\n        [_A]: _GAKLU,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetAccessKeyLastUsedCommand\");\nvar se_GetAccountAuthorizationDetailsCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetAccountAuthorizationDetailsRequest(input, context),\n        [_A]: _GAAD,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetAccountAuthorizationDetailsCommand\");\nvar se_GetAccountPasswordPolicyCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    const body = buildFormUrlencodedString({\n        [_A]: _GAPP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetAccountPasswordPolicyCommand\");\nvar se_GetAccountSummaryCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    const body = buildFormUrlencodedString({\n        [_A]: _GAS,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetAccountSummaryCommand\");\nvar se_GetContextKeysForCustomPolicyCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetContextKeysForCustomPolicyRequest(input, context),\n        [_A]: _GCKFCP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetContextKeysForCustomPolicyCommand\");\nvar se_GetContextKeysForPrincipalPolicyCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetContextKeysForPrincipalPolicyRequest(input, context),\n        [_A]: _GCKFPP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetContextKeysForPrincipalPolicyCommand\");\nvar se_GetCredentialReportCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    const body = buildFormUrlencodedString({\n        [_A]: _GCRe,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetCredentialReportCommand\");\nvar se_GetGroupCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetGroupRequest(input, context),\n        [_A]: _GG,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetGroupCommand\");\nvar se_GetGroupPolicyCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetGroupPolicyRequest(input, context),\n        [_A]: _GGP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetGroupPolicyCommand\");\nvar se_GetInstanceProfileCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetInstanceProfileRequest(input, context),\n        [_A]: _GIP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetInstanceProfileCommand\");\nvar se_GetLoginProfileCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetLoginProfileRequest(input, context),\n        [_A]: _GLP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetLoginProfileCommand\");\nvar se_GetMFADeviceCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetMFADeviceRequest(input, context),\n        [_A]: _GMFAD,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetMFADeviceCommand\");\nvar se_GetOpenIDConnectProviderCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetOpenIDConnectProviderRequest(input, context),\n        [_A]: _GOIDCP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetOpenIDConnectProviderCommand\");\nvar se_GetOrganizationsAccessReportCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetOrganizationsAccessReportRequest(input, context),\n        [_A]: _GOARe,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetOrganizationsAccessReportCommand\");\nvar se_GetPolicyCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetPolicyRequest(input, context),\n        [_A]: _GP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetPolicyCommand\");\nvar se_GetPolicyVersionCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetPolicyVersionRequest(input, context),\n        [_A]: _GPV,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetPolicyVersionCommand\");\nvar se_GetRoleCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetRoleRequest(input, context),\n        [_A]: _GR,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetRoleCommand\");\nvar se_GetRolePolicyCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetRolePolicyRequest(input, context),\n        [_A]: _GRP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetRolePolicyCommand\");\nvar se_GetSAMLProviderCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetSAMLProviderRequest(input, context),\n        [_A]: _GSAMLP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetSAMLProviderCommand\");\nvar se_GetServerCertificateCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetServerCertificateRequest(input, context),\n        [_A]: _GSC,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetServerCertificateCommand\");\nvar se_GetServiceLastAccessedDetailsCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetServiceLastAccessedDetailsRequest(input, context),\n        [_A]: _GSLADe,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetServiceLastAccessedDetailsCommand\");\nvar se_GetServiceLastAccessedDetailsWithEntitiesCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetServiceLastAccessedDetailsWithEntitiesRequest(input, context),\n        [_A]: _GSLADWE,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetServiceLastAccessedDetailsWithEntitiesCommand\");\nvar se_GetServiceLinkedRoleDeletionStatusCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetServiceLinkedRoleDeletionStatusRequest(input, context),\n        [_A]: _GSLRDS,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetServiceLinkedRoleDeletionStatusCommand\");\nvar se_GetSSHPublicKeyCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetSSHPublicKeyRequest(input, context),\n        [_A]: _GSSHPK,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetSSHPublicKeyCommand\");\nvar se_GetUserCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetUserRequest(input, context),\n        [_A]: _GU,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetUserCommand\");\nvar se_GetUserPolicyCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetUserPolicyRequest(input, context),\n        [_A]: _GUP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetUserPolicyCommand\");\nvar se_ListAccessKeysCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ListAccessKeysRequest(input, context),\n        [_A]: _LAK,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListAccessKeysCommand\");\nvar se_ListAccountAliasesCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ListAccountAliasesRequest(input, context),\n        [_A]: _LAA,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListAccountAliasesCommand\");\nvar se_ListAttachedGroupPoliciesCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ListAttachedGroupPoliciesRequest(input, context),\n        [_A]: _LAGP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListAttachedGroupPoliciesCommand\");\nvar se_ListAttachedRolePoliciesCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ListAttachedRolePoliciesRequest(input, context),\n        [_A]: _LARP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListAttachedRolePoliciesCommand\");\nvar se_ListAttachedUserPoliciesCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ListAttachedUserPoliciesRequest(input, context),\n        [_A]: _LAUP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListAttachedUserPoliciesCommand\");\nvar se_ListEntitiesForPolicyCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ListEntitiesForPolicyRequest(input, context),\n        [_A]: _LEFP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListEntitiesForPolicyCommand\");\nvar se_ListGroupPoliciesCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ListGroupPoliciesRequest(input, context),\n        [_A]: _LGP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListGroupPoliciesCommand\");\nvar se_ListGroupsCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ListGroupsRequest(input, context),\n        [_A]: _LG,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListGroupsCommand\");\nvar se_ListGroupsForUserCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ListGroupsForUserRequest(input, context),\n        [_A]: _LGFU,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListGroupsForUserCommand\");\nvar se_ListInstanceProfilesCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ListInstanceProfilesRequest(input, context),\n        [_A]: _LIP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListInstanceProfilesCommand\");\nvar se_ListInstanceProfilesForRoleCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ListInstanceProfilesForRoleRequest(input, context),\n        [_A]: _LIPFR,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListInstanceProfilesForRoleCommand\");\nvar se_ListInstanceProfileTagsCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ListInstanceProfileTagsRequest(input, context),\n        [_A]: _LIPT,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListInstanceProfileTagsCommand\");\nvar se_ListMFADevicesCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ListMFADevicesRequest(input, context),\n        [_A]: _LMFAD,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListMFADevicesCommand\");\nvar se_ListMFADeviceTagsCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ListMFADeviceTagsRequest(input, context),\n        [_A]: _LMFADT,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListMFADeviceTagsCommand\");\nvar se_ListOpenIDConnectProvidersCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ListOpenIDConnectProvidersRequest(input, context),\n        [_A]: _LOIDCP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListOpenIDConnectProvidersCommand\");\nvar se_ListOpenIDConnectProviderTagsCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ListOpenIDConnectProviderTagsRequest(input, context),\n        [_A]: _LOIDCPT,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListOpenIDConnectProviderTagsCommand\");\nvar se_ListOrganizationsFeaturesCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ListOrganizationsFeaturesRequest(input, context),\n        [_A]: _LOF,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListOrganizationsFeaturesCommand\");\nvar se_ListPoliciesCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ListPoliciesRequest(input, context),\n        [_A]: _LP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListPoliciesCommand\");\nvar se_ListPoliciesGrantingServiceAccessCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ListPoliciesGrantingServiceAccessRequest(input, context),\n        [_A]: _LPGSA,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListPoliciesGrantingServiceAccessCommand\");\nvar se_ListPolicyTagsCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ListPolicyTagsRequest(input, context),\n        [_A]: _LPT,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListPolicyTagsCommand\");\nvar se_ListPolicyVersionsCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ListPolicyVersionsRequest(input, context),\n        [_A]: _LPV,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListPolicyVersionsCommand\");\nvar se_ListRolePoliciesCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ListRolePoliciesRequest(input, context),\n        [_A]: _LRP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListRolePoliciesCommand\");\nvar se_ListRolesCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ListRolesRequest(input, context),\n        [_A]: _LR,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListRolesCommand\");\nvar se_ListRoleTagsCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ListRoleTagsRequest(input, context),\n        [_A]: _LRT,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListRoleTagsCommand\");\nvar se_ListSAMLProvidersCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ListSAMLProvidersRequest(input, context),\n        [_A]: _LSAMLP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListSAMLProvidersCommand\");\nvar se_ListSAMLProviderTagsCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ListSAMLProviderTagsRequest(input, context),\n        [_A]: _LSAMLPT,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListSAMLProviderTagsCommand\");\nvar se_ListServerCertificatesCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ListServerCertificatesRequest(input, context),\n        [_A]: _LSC,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListServerCertificatesCommand\");\nvar se_ListServerCertificateTagsCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ListServerCertificateTagsRequest(input, context),\n        [_A]: _LSCT,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListServerCertificateTagsCommand\");\nvar se_ListServiceSpecificCredentialsCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ListServiceSpecificCredentialsRequest(input, context),\n        [_A]: _LSSC,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListServiceSpecificCredentialsCommand\");\nvar se_ListSigningCertificatesCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ListSigningCertificatesRequest(input, context),\n        [_A]: _LSCi,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListSigningCertificatesCommand\");\nvar se_ListSSHPublicKeysCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ListSSHPublicKeysRequest(input, context),\n        [_A]: _LSSHPK,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListSSHPublicKeysCommand\");\nvar se_ListUserPoliciesCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ListUserPoliciesRequest(input, context),\n        [_A]: _LUP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListUserPoliciesCommand\");\nvar se_ListUsersCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ListUsersRequest(input, context),\n        [_A]: _LU,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListUsersCommand\");\nvar se_ListUserTagsCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ListUserTagsRequest(input, context),\n        [_A]: _LUT,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListUserTagsCommand\");\nvar se_ListVirtualMFADevicesCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ListVirtualMFADevicesRequest(input, context),\n        [_A]: _LVMFAD,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListVirtualMFADevicesCommand\");\nvar se_PutGroupPolicyCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_PutGroupPolicyRequest(input, context),\n        [_A]: _PGP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_PutGroupPolicyCommand\");\nvar se_PutRolePermissionsBoundaryCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_PutRolePermissionsBoundaryRequest(input, context),\n        [_A]: _PRPB,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_PutRolePermissionsBoundaryCommand\");\nvar se_PutRolePolicyCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_PutRolePolicyRequest(input, context),\n        [_A]: _PRP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_PutRolePolicyCommand\");\nvar se_PutUserPermissionsBoundaryCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_PutUserPermissionsBoundaryRequest(input, context),\n        [_A]: _PUPB,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_PutUserPermissionsBoundaryCommand\");\nvar se_PutUserPolicyCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_PutUserPolicyRequest(input, context),\n        [_A]: _PUP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_PutUserPolicyCommand\");\nvar se_RemoveClientIDFromOpenIDConnectProviderCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_RemoveClientIDFromOpenIDConnectProviderRequest(input, context),\n        [_A]: _RCIDFOIDCP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_RemoveClientIDFromOpenIDConnectProviderCommand\");\nvar se_RemoveRoleFromInstanceProfileCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_RemoveRoleFromInstanceProfileRequest(input, context),\n        [_A]: _RRFIP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_RemoveRoleFromInstanceProfileCommand\");\nvar se_RemoveUserFromGroupCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_RemoveUserFromGroupRequest(input, context),\n        [_A]: _RUFG,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_RemoveUserFromGroupCommand\");\nvar se_ResetServiceSpecificCredentialCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ResetServiceSpecificCredentialRequest(input, context),\n        [_A]: _RSSC,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ResetServiceSpecificCredentialCommand\");\nvar se_ResyncMFADeviceCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ResyncMFADeviceRequest(input, context),\n        [_A]: _RMFAD,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ResyncMFADeviceCommand\");\nvar se_SetDefaultPolicyVersionCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_SetDefaultPolicyVersionRequest(input, context),\n        [_A]: _SDPV,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_SetDefaultPolicyVersionCommand\");\nvar se_SetSecurityTokenServicePreferencesCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_SetSecurityTokenServicePreferencesRequest(input, context),\n        [_A]: _SSTSP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_SetSecurityTokenServicePreferencesCommand\");\nvar se_SimulateCustomPolicyCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_SimulateCustomPolicyRequest(input, context),\n        [_A]: _SCP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_SimulateCustomPolicyCommand\");\nvar se_SimulatePrincipalPolicyCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_SimulatePrincipalPolicyRequest(input, context),\n        [_A]: _SPP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_SimulatePrincipalPolicyCommand\");\nvar se_TagInstanceProfileCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_TagInstanceProfileRequest(input, context),\n        [_A]: _TIP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_TagInstanceProfileCommand\");\nvar se_TagMFADeviceCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_TagMFADeviceRequest(input, context),\n        [_A]: _TMFAD,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_TagMFADeviceCommand\");\nvar se_TagOpenIDConnectProviderCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_TagOpenIDConnectProviderRequest(input, context),\n        [_A]: _TOIDCP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_TagOpenIDConnectProviderCommand\");\nvar se_TagPolicyCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_TagPolicyRequest(input, context),\n        [_A]: _TP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_TagPolicyCommand\");\nvar se_TagRoleCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_TagRoleRequest(input, context),\n        [_A]: _TR,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_TagRoleCommand\");\nvar se_TagSAMLProviderCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_TagSAMLProviderRequest(input, context),\n        [_A]: _TSAMLP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_TagSAMLProviderCommand\");\nvar se_TagServerCertificateCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_TagServerCertificateRequest(input, context),\n        [_A]: _TSC,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_TagServerCertificateCommand\");\nvar se_TagUserCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_TagUserRequest(input, context),\n        [_A]: _TU,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_TagUserCommand\");\nvar se_UntagInstanceProfileCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_UntagInstanceProfileRequest(input, context),\n        [_A]: _UIP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UntagInstanceProfileCommand\");\nvar se_UntagMFADeviceCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_UntagMFADeviceRequest(input, context),\n        [_A]: _UMFAD,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UntagMFADeviceCommand\");\nvar se_UntagOpenIDConnectProviderCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_UntagOpenIDConnectProviderRequest(input, context),\n        [_A]: _UOIDCP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UntagOpenIDConnectProviderCommand\");\nvar se_UntagPolicyCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_UntagPolicyRequest(input, context),\n        [_A]: _UP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UntagPolicyCommand\");\nvar se_UntagRoleCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_UntagRoleRequest(input, context),\n        [_A]: _UR,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UntagRoleCommand\");\nvar se_UntagSAMLProviderCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_UntagSAMLProviderRequest(input, context),\n        [_A]: _USAMLP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UntagSAMLProviderCommand\");\nvar se_UntagServerCertificateCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_UntagServerCertificateRequest(input, context),\n        [_A]: _USC,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UntagServerCertificateCommand\");\nvar se_UntagUserCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_UntagUserRequest(input, context),\n        [_A]: _UU,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UntagUserCommand\");\nvar se_UpdateAccessKeyCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_UpdateAccessKeyRequest(input, context),\n        [_A]: _UAK,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UpdateAccessKeyCommand\");\nvar se_UpdateAccountPasswordPolicyCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_UpdateAccountPasswordPolicyRequest(input, context),\n        [_A]: _UAPP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UpdateAccountPasswordPolicyCommand\");\nvar se_UpdateAssumeRolePolicyCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_UpdateAssumeRolePolicyRequest(input, context),\n        [_A]: _UARP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UpdateAssumeRolePolicyCommand\");\nvar se_UpdateGroupCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_UpdateGroupRequest(input, context),\n        [_A]: _UG,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UpdateGroupCommand\");\nvar se_UpdateLoginProfileCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_UpdateLoginProfileRequest(input, context),\n        [_A]: _ULP,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UpdateLoginProfileCommand\");\nvar se_UpdateOpenIDConnectProviderThumbprintCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_UpdateOpenIDConnectProviderThumbprintRequest(input, context),\n        [_A]: _UOIDCPT,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UpdateOpenIDConnectProviderThumbprintCommand\");\nvar se_UpdateRoleCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_UpdateRoleRequest(input, context),\n        [_A]: _URp,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UpdateRoleCommand\");\nvar se_UpdateRoleDescriptionCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_UpdateRoleDescriptionRequest(input, context),\n        [_A]: _URD,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UpdateRoleDescriptionCommand\");\nvar se_UpdateSAMLProviderCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_UpdateSAMLProviderRequest(input, context),\n        [_A]: _USAMLPp,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UpdateSAMLProviderCommand\");\nvar se_UpdateServerCertificateCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_UpdateServerCertificateRequest(input, context),\n        [_A]: _USCp,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UpdateServerCertificateCommand\");\nvar se_UpdateServiceSpecificCredentialCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_UpdateServiceSpecificCredentialRequest(input, context),\n        [_A]: _USSC,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UpdateServiceSpecificCredentialCommand\");\nvar se_UpdateSigningCertificateCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_UpdateSigningCertificateRequest(input, context),\n        [_A]: _USCpd,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UpdateSigningCertificateCommand\");\nvar se_UpdateSSHPublicKeyCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_UpdateSSHPublicKeyRequest(input, context),\n        [_A]: _USSHPK,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UpdateSSHPublicKeyCommand\");\nvar se_UpdateUserCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_UpdateUserRequest(input, context),\n        [_A]: _UUp,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UpdateUserCommand\");\nvar se_UploadServerCertificateCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_UploadServerCertificateRequest(input, context),\n        [_A]: _USCpl,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UploadServerCertificateCommand\");\nvar se_UploadSigningCertificateCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_UploadSigningCertificateRequest(input, context),\n        [_A]: _USCplo,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UploadSigningCertificateCommand\");\nvar se_UploadSSHPublicKeyCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_UploadSSHPublicKeyRequest(input, context),\n        [_A]: _USSHPKp,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UploadSSHPublicKeyCommand\");\nvar de_AddClientIDToOpenIDConnectProviderCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_AddClientIDToOpenIDConnectProviderCommand\");\nvar de_AddRoleToInstanceProfileCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_AddRoleToInstanceProfileCommand\");\nvar de_AddUserToGroupCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_AddUserToGroupCommand\");\nvar de_AttachGroupPolicyCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_AttachGroupPolicyCommand\");\nvar de_AttachRolePolicyCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_AttachRolePolicyCommand\");\nvar de_AttachUserPolicyCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_AttachUserPolicyCommand\");\nvar de_ChangePasswordCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_ChangePasswordCommand\");\nvar de_CreateAccessKeyCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_CreateAccessKeyResponse(data.CreateAccessKeyResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_CreateAccessKeyCommand\");\nvar de_CreateAccountAliasCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_CreateAccountAliasCommand\");\nvar de_CreateGroupCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_CreateGroupResponse(data.CreateGroupResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_CreateGroupCommand\");\nvar de_CreateInstanceProfileCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_CreateInstanceProfileResponse(data.CreateInstanceProfileResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_CreateInstanceProfileCommand\");\nvar de_CreateLoginProfileCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_CreateLoginProfileResponse(data.CreateLoginProfileResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_CreateLoginProfileCommand\");\nvar de_CreateOpenIDConnectProviderCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_CreateOpenIDConnectProviderResponse(data.CreateOpenIDConnectProviderResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_CreateOpenIDConnectProviderCommand\");\nvar de_CreatePolicyCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_CreatePolicyResponse(data.CreatePolicyResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_CreatePolicyCommand\");\nvar de_CreatePolicyVersionCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_CreatePolicyVersionResponse(data.CreatePolicyVersionResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_CreatePolicyVersionCommand\");\nvar de_CreateRoleCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_CreateRoleResponse(data.CreateRoleResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_CreateRoleCommand\");\nvar de_CreateSAMLProviderCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_CreateSAMLProviderResponse(data.CreateSAMLProviderResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_CreateSAMLProviderCommand\");\nvar de_CreateServiceLinkedRoleCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_CreateServiceLinkedRoleResponse(data.CreateServiceLinkedRoleResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_CreateServiceLinkedRoleCommand\");\nvar de_CreateServiceSpecificCredentialCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_CreateServiceSpecificCredentialResponse(data.CreateServiceSpecificCredentialResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_CreateServiceSpecificCredentialCommand\");\nvar de_CreateUserCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_CreateUserResponse(data.CreateUserResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_CreateUserCommand\");\nvar de_CreateVirtualMFADeviceCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_CreateVirtualMFADeviceResponse(data.CreateVirtualMFADeviceResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_CreateVirtualMFADeviceCommand\");\nvar de_DeactivateMFADeviceCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_DeactivateMFADeviceCommand\");\nvar de_DeleteAccessKeyCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_DeleteAccessKeyCommand\");\nvar de_DeleteAccountAliasCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_DeleteAccountAliasCommand\");\nvar de_DeleteAccountPasswordPolicyCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_DeleteAccountPasswordPolicyCommand\");\nvar de_DeleteGroupCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_DeleteGroupCommand\");\nvar de_DeleteGroupPolicyCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_DeleteGroupPolicyCommand\");\nvar de_DeleteInstanceProfileCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_DeleteInstanceProfileCommand\");\nvar de_DeleteLoginProfileCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_DeleteLoginProfileCommand\");\nvar de_DeleteOpenIDConnectProviderCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_DeleteOpenIDConnectProviderCommand\");\nvar de_DeletePolicyCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_DeletePolicyCommand\");\nvar de_DeletePolicyVersionCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_DeletePolicyVersionCommand\");\nvar de_DeleteRoleCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_DeleteRoleCommand\");\nvar de_DeleteRolePermissionsBoundaryCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_DeleteRolePermissionsBoundaryCommand\");\nvar de_DeleteRolePolicyCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_DeleteRolePolicyCommand\");\nvar de_DeleteSAMLProviderCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_DeleteSAMLProviderCommand\");\nvar de_DeleteServerCertificateCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_DeleteServerCertificateCommand\");\nvar de_DeleteServiceLinkedRoleCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_DeleteServiceLinkedRoleResponse(data.DeleteServiceLinkedRoleResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_DeleteServiceLinkedRoleCommand\");\nvar de_DeleteServiceSpecificCredentialCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_DeleteServiceSpecificCredentialCommand\");\nvar de_DeleteSigningCertificateCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_DeleteSigningCertificateCommand\");\nvar de_DeleteSSHPublicKeyCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_DeleteSSHPublicKeyCommand\");\nvar de_DeleteUserCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_DeleteUserCommand\");\nvar de_DeleteUserPermissionsBoundaryCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_DeleteUserPermissionsBoundaryCommand\");\nvar de_DeleteUserPolicyCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_DeleteUserPolicyCommand\");\nvar de_DeleteVirtualMFADeviceCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_DeleteVirtualMFADeviceCommand\");\nvar de_DetachGroupPolicyCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_DetachGroupPolicyCommand\");\nvar de_DetachRolePolicyCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_DetachRolePolicyCommand\");\nvar de_DetachUserPolicyCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_DetachUserPolicyCommand\");\nvar de_DisableOrganizationsRootCredentialsManagementCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_DisableOrganizationsRootCredentialsManagementResponse(data.DisableOrganizationsRootCredentialsManagementResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_DisableOrganizationsRootCredentialsManagementCommand\");\nvar de_DisableOrganizationsRootSessionsCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_DisableOrganizationsRootSessionsResponse(data.DisableOrganizationsRootSessionsResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_DisableOrganizationsRootSessionsCommand\");\nvar de_EnableMFADeviceCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_EnableMFADeviceCommand\");\nvar de_EnableOrganizationsRootCredentialsManagementCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_EnableOrganizationsRootCredentialsManagementResponse(data.EnableOrganizationsRootCredentialsManagementResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_EnableOrganizationsRootCredentialsManagementCommand\");\nvar de_EnableOrganizationsRootSessionsCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_EnableOrganizationsRootSessionsResponse(data.EnableOrganizationsRootSessionsResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_EnableOrganizationsRootSessionsCommand\");\nvar de_GenerateCredentialReportCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_GenerateCredentialReportResponse(data.GenerateCredentialReportResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_GenerateCredentialReportCommand\");\nvar de_GenerateOrganizationsAccessReportCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_GenerateOrganizationsAccessReportResponse(data.GenerateOrganizationsAccessReportResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_GenerateOrganizationsAccessReportCommand\");\nvar de_GenerateServiceLastAccessedDetailsCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_GenerateServiceLastAccessedDetailsResponse(data.GenerateServiceLastAccessedDetailsResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_GenerateServiceLastAccessedDetailsCommand\");\nvar de_GetAccessKeyLastUsedCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_GetAccessKeyLastUsedResponse(data.GetAccessKeyLastUsedResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_GetAccessKeyLastUsedCommand\");\nvar de_GetAccountAuthorizationDetailsCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_GetAccountAuthorizationDetailsResponse(data.GetAccountAuthorizationDetailsResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_GetAccountAuthorizationDetailsCommand\");\nvar de_GetAccountPasswordPolicyCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_GetAccountPasswordPolicyResponse(data.GetAccountPasswordPolicyResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_GetAccountPasswordPolicyCommand\");\nvar de_GetAccountSummaryCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_GetAccountSummaryResponse(data.GetAccountSummaryResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_GetAccountSummaryCommand\");\nvar de_GetContextKeysForCustomPolicyCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_GetContextKeysForPolicyResponse(data.GetContextKeysForCustomPolicyResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_GetContextKeysForCustomPolicyCommand\");\nvar de_GetContextKeysForPrincipalPolicyCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_GetContextKeysForPolicyResponse(data.GetContextKeysForPrincipalPolicyResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_GetContextKeysForPrincipalPolicyCommand\");\nvar de_GetCredentialReportCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_GetCredentialReportResponse(data.GetCredentialReportResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_GetCredentialReportCommand\");\nvar de_GetGroupCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_GetGroupResponse(data.GetGroupResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_GetGroupCommand\");\nvar de_GetGroupPolicyCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_GetGroupPolicyResponse(data.GetGroupPolicyResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_GetGroupPolicyCommand\");\nvar de_GetInstanceProfileCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_GetInstanceProfileResponse(data.GetInstanceProfileResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_GetInstanceProfileCommand\");\nvar de_GetLoginProfileCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_GetLoginProfileResponse(data.GetLoginProfileResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_GetLoginProfileCommand\");\nvar de_GetMFADeviceCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_GetMFADeviceResponse(data.GetMFADeviceResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_GetMFADeviceCommand\");\nvar de_GetOpenIDConnectProviderCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_GetOpenIDConnectProviderResponse(data.GetOpenIDConnectProviderResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_GetOpenIDConnectProviderCommand\");\nvar de_GetOrganizationsAccessReportCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_GetOrganizationsAccessReportResponse(data.GetOrganizationsAccessReportResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_GetOrganizationsAccessReportCommand\");\nvar de_GetPolicyCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_GetPolicyResponse(data.GetPolicyResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_GetPolicyCommand\");\nvar de_GetPolicyVersionCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_GetPolicyVersionResponse(data.GetPolicyVersionResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_GetPolicyVersionCommand\");\nvar de_GetRoleCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_GetRoleResponse(data.GetRoleResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_GetRoleCommand\");\nvar de_GetRolePolicyCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_GetRolePolicyResponse(data.GetRolePolicyResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_GetRolePolicyCommand\");\nvar de_GetSAMLProviderCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_GetSAMLProviderResponse(data.GetSAMLProviderResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_GetSAMLProviderCommand\");\nvar de_GetServerCertificateCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_GetServerCertificateResponse(data.GetServerCertificateResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_GetServerCertificateCommand\");\nvar de_GetServiceLastAccessedDetailsCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_GetServiceLastAccessedDetailsResponse(data.GetServiceLastAccessedDetailsResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_GetServiceLastAccessedDetailsCommand\");\nvar de_GetServiceLastAccessedDetailsWithEntitiesCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_GetServiceLastAccessedDetailsWithEntitiesResponse(data.GetServiceLastAccessedDetailsWithEntitiesResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_GetServiceLastAccessedDetailsWithEntitiesCommand\");\nvar de_GetServiceLinkedRoleDeletionStatusCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_GetServiceLinkedRoleDeletionStatusResponse(data.GetServiceLinkedRoleDeletionStatusResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_GetServiceLinkedRoleDeletionStatusCommand\");\nvar de_GetSSHPublicKeyCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_GetSSHPublicKeyResponse(data.GetSSHPublicKeyResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_GetSSHPublicKeyCommand\");\nvar de_GetUserCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_GetUserResponse(data.GetUserResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_GetUserCommand\");\nvar de_GetUserPolicyCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_GetUserPolicyResponse(data.GetUserPolicyResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_GetUserPolicyCommand\");\nvar de_ListAccessKeysCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_ListAccessKeysResponse(data.ListAccessKeysResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_ListAccessKeysCommand\");\nvar de_ListAccountAliasesCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_ListAccountAliasesResponse(data.ListAccountAliasesResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_ListAccountAliasesCommand\");\nvar de_ListAttachedGroupPoliciesCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_ListAttachedGroupPoliciesResponse(data.ListAttachedGroupPoliciesResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_ListAttachedGroupPoliciesCommand\");\nvar de_ListAttachedRolePoliciesCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_ListAttachedRolePoliciesResponse(data.ListAttachedRolePoliciesResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_ListAttachedRolePoliciesCommand\");\nvar de_ListAttachedUserPoliciesCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_ListAttachedUserPoliciesResponse(data.ListAttachedUserPoliciesResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_ListAttachedUserPoliciesCommand\");\nvar de_ListEntitiesForPolicyCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_ListEntitiesForPolicyResponse(data.ListEntitiesForPolicyResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_ListEntitiesForPolicyCommand\");\nvar de_ListGroupPoliciesCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_ListGroupPoliciesResponse(data.ListGroupPoliciesResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_ListGroupPoliciesCommand\");\nvar de_ListGroupsCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_ListGroupsResponse(data.ListGroupsResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_ListGroupsCommand\");\nvar de_ListGroupsForUserCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_ListGroupsForUserResponse(data.ListGroupsForUserResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_ListGroupsForUserCommand\");\nvar de_ListInstanceProfilesCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_ListInstanceProfilesResponse(data.ListInstanceProfilesResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_ListInstanceProfilesCommand\");\nvar de_ListInstanceProfilesForRoleCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_ListInstanceProfilesForRoleResponse(data.ListInstanceProfilesForRoleResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_ListInstanceProfilesForRoleCommand\");\nvar de_ListInstanceProfileTagsCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_ListInstanceProfileTagsResponse(data.ListInstanceProfileTagsResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_ListInstanceProfileTagsCommand\");\nvar de_ListMFADevicesCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_ListMFADevicesResponse(data.ListMFADevicesResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_ListMFADevicesCommand\");\nvar de_ListMFADeviceTagsCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_ListMFADeviceTagsResponse(data.ListMFADeviceTagsResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_ListMFADeviceTagsCommand\");\nvar de_ListOpenIDConnectProvidersCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_ListOpenIDConnectProvidersResponse(data.ListOpenIDConnectProvidersResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_ListOpenIDConnectProvidersCommand\");\nvar de_ListOpenIDConnectProviderTagsCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_ListOpenIDConnectProviderTagsResponse(data.ListOpenIDConnectProviderTagsResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_ListOpenIDConnectProviderTagsCommand\");\nvar de_ListOrganizationsFeaturesCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_ListOrganizationsFeaturesResponse(data.ListOrganizationsFeaturesResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_ListOrganizationsFeaturesCommand\");\nvar de_ListPoliciesCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_ListPoliciesResponse(data.ListPoliciesResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_ListPoliciesCommand\");\nvar de_ListPoliciesGrantingServiceAccessCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_ListPoliciesGrantingServiceAccessResponse(data.ListPoliciesGrantingServiceAccessResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_ListPoliciesGrantingServiceAccessCommand\");\nvar de_ListPolicyTagsCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_ListPolicyTagsResponse(data.ListPolicyTagsResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_ListPolicyTagsCommand\");\nvar de_ListPolicyVersionsCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_ListPolicyVersionsResponse(data.ListPolicyVersionsResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_ListPolicyVersionsCommand\");\nvar de_ListRolePoliciesCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_ListRolePoliciesResponse(data.ListRolePoliciesResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_ListRolePoliciesCommand\");\nvar de_ListRolesCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_ListRolesResponse(data.ListRolesResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_ListRolesCommand\");\nvar de_ListRoleTagsCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_ListRoleTagsResponse(data.ListRoleTagsResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_ListRoleTagsCommand\");\nvar de_ListSAMLProvidersCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_ListSAMLProvidersResponse(data.ListSAMLProvidersResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_ListSAMLProvidersCommand\");\nvar de_ListSAMLProviderTagsCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_ListSAMLProviderTagsResponse(data.ListSAMLProviderTagsResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_ListSAMLProviderTagsCommand\");\nvar de_ListServerCertificatesCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_ListServerCertificatesResponse(data.ListServerCertificatesResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_ListServerCertificatesCommand\");\nvar de_ListServerCertificateTagsCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_ListServerCertificateTagsResponse(data.ListServerCertificateTagsResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_ListServerCertificateTagsCommand\");\nvar de_ListServiceSpecificCredentialsCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_ListServiceSpecificCredentialsResponse(data.ListServiceSpecificCredentialsResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_ListServiceSpecificCredentialsCommand\");\nvar de_ListSigningCertificatesCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_ListSigningCertificatesResponse(data.ListSigningCertificatesResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_ListSigningCertificatesCommand\");\nvar de_ListSSHPublicKeysCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_ListSSHPublicKeysResponse(data.ListSSHPublicKeysResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_ListSSHPublicKeysCommand\");\nvar de_ListUserPoliciesCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_ListUserPoliciesResponse(data.ListUserPoliciesResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_ListUserPoliciesCommand\");\nvar de_ListUsersCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_ListUsersResponse(data.ListUsersResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_ListUsersCommand\");\nvar de_ListUserTagsCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_ListUserTagsResponse(data.ListUserTagsResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_ListUserTagsCommand\");\nvar de_ListVirtualMFADevicesCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_ListVirtualMFADevicesResponse(data.ListVirtualMFADevicesResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_ListVirtualMFADevicesCommand\");\nvar de_PutGroupPolicyCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_PutGroupPolicyCommand\");\nvar de_PutRolePermissionsBoundaryCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_PutRolePermissionsBoundaryCommand\");\nvar de_PutRolePolicyCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_PutRolePolicyCommand\");\nvar de_PutUserPermissionsBoundaryCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_PutUserPermissionsBoundaryCommand\");\nvar de_PutUserPolicyCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_PutUserPolicyCommand\");\nvar de_RemoveClientIDFromOpenIDConnectProviderCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_RemoveClientIDFromOpenIDConnectProviderCommand\");\nvar de_RemoveRoleFromInstanceProfileCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_RemoveRoleFromInstanceProfileCommand\");\nvar de_RemoveUserFromGroupCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_RemoveUserFromGroupCommand\");\nvar de_ResetServiceSpecificCredentialCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_ResetServiceSpecificCredentialResponse(data.ResetServiceSpecificCredentialResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_ResetServiceSpecificCredentialCommand\");\nvar de_ResyncMFADeviceCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_ResyncMFADeviceCommand\");\nvar de_SetDefaultPolicyVersionCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_SetDefaultPolicyVersionCommand\");\nvar de_SetSecurityTokenServicePreferencesCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_SetSecurityTokenServicePreferencesCommand\");\nvar de_SimulateCustomPolicyCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_SimulatePolicyResponse(data.SimulateCustomPolicyResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_SimulateCustomPolicyCommand\");\nvar de_SimulatePrincipalPolicyCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_SimulatePolicyResponse(data.SimulatePrincipalPolicyResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_SimulatePrincipalPolicyCommand\");\nvar de_TagInstanceProfileCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_TagInstanceProfileCommand\");\nvar de_TagMFADeviceCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_TagMFADeviceCommand\");\nvar de_TagOpenIDConnectProviderCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_TagOpenIDConnectProviderCommand\");\nvar de_TagPolicyCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_TagPolicyCommand\");\nvar de_TagRoleCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_TagRoleCommand\");\nvar de_TagSAMLProviderCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_TagSAMLProviderCommand\");\nvar de_TagServerCertificateCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_TagServerCertificateCommand\");\nvar de_TagUserCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_TagUserCommand\");\nvar de_UntagInstanceProfileCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_UntagInstanceProfileCommand\");\nvar de_UntagMFADeviceCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_UntagMFADeviceCommand\");\nvar de_UntagOpenIDConnectProviderCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_UntagOpenIDConnectProviderCommand\");\nvar de_UntagPolicyCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_UntagPolicyCommand\");\nvar de_UntagRoleCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_UntagRoleCommand\");\nvar de_UntagSAMLProviderCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_UntagSAMLProviderCommand\");\nvar de_UntagServerCertificateCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_UntagServerCertificateCommand\");\nvar de_UntagUserCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_UntagUserCommand\");\nvar de_UpdateAccessKeyCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_UpdateAccessKeyCommand\");\nvar de_UpdateAccountPasswordPolicyCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_UpdateAccountPasswordPolicyCommand\");\nvar de_UpdateAssumeRolePolicyCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_UpdateAssumeRolePolicyCommand\");\nvar de_UpdateGroupCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_UpdateGroupCommand\");\nvar de_UpdateLoginProfileCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_UpdateLoginProfileCommand\");\nvar de_UpdateOpenIDConnectProviderThumbprintCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_UpdateOpenIDConnectProviderThumbprintCommand\");\nvar de_UpdateRoleCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_UpdateRoleResponse(data.UpdateRoleResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_UpdateRoleCommand\");\nvar de_UpdateRoleDescriptionCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_UpdateRoleDescriptionResponse(data.UpdateRoleDescriptionResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_UpdateRoleDescriptionCommand\");\nvar de_UpdateSAMLProviderCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_UpdateSAMLProviderResponse(data.UpdateSAMLProviderResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_UpdateSAMLProviderCommand\");\nvar de_UpdateServerCertificateCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_UpdateServerCertificateCommand\");\nvar de_UpdateServiceSpecificCredentialCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_UpdateServiceSpecificCredentialCommand\");\nvar de_UpdateSigningCertificateCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_UpdateSigningCertificateCommand\");\nvar de_UpdateSSHPublicKeyCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_UpdateSSHPublicKeyCommand\");\nvar de_UpdateUserCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_UpdateUserCommand\");\nvar de_UploadServerCertificateCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_UploadServerCertificateResponse(data.UploadServerCertificateResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_UploadServerCertificateCommand\");\nvar de_UploadSigningCertificateCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_UploadSigningCertificateResponse(data.UploadSigningCertificateResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_UploadSigningCertificateCommand\");\nvar de_UploadSSHPublicKeyCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_UploadSSHPublicKeyResponse(data.UploadSSHPublicKeyResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_UploadSSHPublicKeyCommand\");\nvar de_CommandError = /* @__PURE__ */ __name(async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await (0, import_core2.parseXmlErrorBody)(output.body, context)\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InvalidInput\":\n        case \"com.amazonaws.iam#InvalidInputException\":\n            throw await de_InvalidInputExceptionRes(parsedOutput, context);\n        case \"LimitExceeded\":\n        case \"com.amazonaws.iam#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        case \"NoSuchEntity\":\n        case \"com.amazonaws.iam#NoSuchEntityException\":\n            throw await de_NoSuchEntityExceptionRes(parsedOutput, context);\n        case \"ServiceFailure\":\n        case \"com.amazonaws.iam#ServiceFailureException\":\n            throw await de_ServiceFailureExceptionRes(parsedOutput, context);\n        case \"EntityAlreadyExists\":\n        case \"com.amazonaws.iam#EntityAlreadyExistsException\":\n            throw await de_EntityAlreadyExistsExceptionRes(parsedOutput, context);\n        case \"UnmodifiableEntity\":\n        case \"com.amazonaws.iam#UnmodifiableEntityException\":\n            throw await de_UnmodifiableEntityExceptionRes(parsedOutput, context);\n        case \"PolicyNotAttachable\":\n        case \"com.amazonaws.iam#PolicyNotAttachableException\":\n            throw await de_PolicyNotAttachableExceptionRes(parsedOutput, context);\n        case \"EntityTemporarilyUnmodifiable\":\n        case \"com.amazonaws.iam#EntityTemporarilyUnmodifiableException\":\n            throw await de_EntityTemporarilyUnmodifiableExceptionRes(parsedOutput, context);\n        case \"InvalidUserType\":\n        case \"com.amazonaws.iam#InvalidUserTypeException\":\n            throw await de_InvalidUserTypeExceptionRes(parsedOutput, context);\n        case \"PasswordPolicyViolation\":\n        case \"com.amazonaws.iam#PasswordPolicyViolationException\":\n            throw await de_PasswordPolicyViolationExceptionRes(parsedOutput, context);\n        case \"ConcurrentModification\":\n        case \"com.amazonaws.iam#ConcurrentModificationException\":\n            throw await de_ConcurrentModificationExceptionRes(parsedOutput, context);\n        case \"OpenIdIdpCommunicationError\":\n        case \"com.amazonaws.iam#OpenIdIdpCommunicationErrorException\":\n            throw await de_OpenIdIdpCommunicationErrorExceptionRes(parsedOutput, context);\n        case \"MalformedPolicyDocument\":\n        case \"com.amazonaws.iam#MalformedPolicyDocumentException\":\n            throw await de_MalformedPolicyDocumentExceptionRes(parsedOutput, context);\n        case \"NotSupportedService\":\n        case \"com.amazonaws.iam#ServiceNotSupportedException\":\n            throw await de_ServiceNotSupportedExceptionRes(parsedOutput, context);\n        case \"DeleteConflict\":\n        case \"com.amazonaws.iam#DeleteConflictException\":\n            throw await de_DeleteConflictExceptionRes(parsedOutput, context);\n        case \"AccountNotManagementOrDelegatedAdministratorException\":\n        case \"com.amazonaws.iam#AccountNotManagementOrDelegatedAdministratorException\":\n            throw await de_AccountNotManagementOrDelegatedAdministratorExceptionRes(parsedOutput, context);\n        case \"OrganizationNotFoundException\":\n        case \"com.amazonaws.iam#OrganizationNotFoundException\":\n            throw await de_OrganizationNotFoundExceptionRes(parsedOutput, context);\n        case \"OrganizationNotInAllFeaturesModeException\":\n        case \"com.amazonaws.iam#OrganizationNotInAllFeaturesModeException\":\n            throw await de_OrganizationNotInAllFeaturesModeExceptionRes(parsedOutput, context);\n        case \"ServiceAccessNotEnabledException\":\n        case \"com.amazonaws.iam#ServiceAccessNotEnabledException\":\n            throw await de_ServiceAccessNotEnabledExceptionRes(parsedOutput, context);\n        case \"InvalidAuthenticationCode\":\n        case \"com.amazonaws.iam#InvalidAuthenticationCodeException\":\n            throw await de_InvalidAuthenticationCodeExceptionRes(parsedOutput, context);\n        case \"CallerIsNotManagementAccountException\":\n        case \"com.amazonaws.iam#CallerIsNotManagementAccountException\":\n            throw await de_CallerIsNotManagementAccountExceptionRes(parsedOutput, context);\n        case \"ReportGenerationLimitExceeded\":\n        case \"com.amazonaws.iam#ReportGenerationLimitExceededException\":\n            throw await de_ReportGenerationLimitExceededExceptionRes(parsedOutput, context);\n        case \"ReportExpired\":\n        case \"com.amazonaws.iam#CredentialReportExpiredException\":\n            throw await de_CredentialReportExpiredExceptionRes(parsedOutput, context);\n        case \"ReportInProgress\":\n        case \"com.amazonaws.iam#CredentialReportNotReadyException\":\n            throw await de_CredentialReportNotReadyExceptionRes(parsedOutput, context);\n        case \"ReportNotPresent\":\n        case \"com.amazonaws.iam#CredentialReportNotPresentException\":\n            throw await de_CredentialReportNotPresentExceptionRes(parsedOutput, context);\n        case \"UnrecognizedPublicKeyEncoding\":\n        case \"com.amazonaws.iam#UnrecognizedPublicKeyEncodingException\":\n            throw await de_UnrecognizedPublicKeyEncodingExceptionRes(parsedOutput, context);\n        case \"PolicyEvaluation\":\n        case \"com.amazonaws.iam#PolicyEvaluationException\":\n            throw await de_PolicyEvaluationExceptionRes(parsedOutput, context);\n        case \"KeyPairMismatch\":\n        case \"com.amazonaws.iam#KeyPairMismatchException\":\n            throw await de_KeyPairMismatchExceptionRes(parsedOutput, context);\n        case \"MalformedCertificate\":\n        case \"com.amazonaws.iam#MalformedCertificateException\":\n            throw await de_MalformedCertificateExceptionRes(parsedOutput, context);\n        case \"DuplicateCertificate\":\n        case \"com.amazonaws.iam#DuplicateCertificateException\":\n            throw await de_DuplicateCertificateExceptionRes(parsedOutput, context);\n        case \"InvalidCertificate\":\n        case \"com.amazonaws.iam#InvalidCertificateException\":\n            throw await de_InvalidCertificateExceptionRes(parsedOutput, context);\n        case \"DuplicateSSHPublicKey\":\n        case \"com.amazonaws.iam#DuplicateSSHPublicKeyException\":\n            throw await de_DuplicateSSHPublicKeyExceptionRes(parsedOutput, context);\n        case \"InvalidPublicKey\":\n        case \"com.amazonaws.iam#InvalidPublicKeyException\":\n            throw await de_InvalidPublicKeyExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode\n            });\n    }\n}, \"de_CommandError\");\nvar de_AccountNotManagementOrDelegatedAdministratorExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = de_AccountNotManagementOrDelegatedAdministratorException(body.Error, context);\n    const exception = new AccountNotManagementOrDelegatedAdministratorException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_AccountNotManagementOrDelegatedAdministratorExceptionRes\");\nvar de_CallerIsNotManagementAccountExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = de_CallerIsNotManagementAccountException(body.Error, context);\n    const exception = new CallerIsNotManagementAccountException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_CallerIsNotManagementAccountExceptionRes\");\nvar de_ConcurrentModificationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = de_ConcurrentModificationException(body.Error, context);\n    const exception = new ConcurrentModificationException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_ConcurrentModificationExceptionRes\");\nvar de_CredentialReportExpiredExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = de_CredentialReportExpiredException(body.Error, context);\n    const exception = new CredentialReportExpiredException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_CredentialReportExpiredExceptionRes\");\nvar de_CredentialReportNotPresentExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = de_CredentialReportNotPresentException(body.Error, context);\n    const exception = new CredentialReportNotPresentException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_CredentialReportNotPresentExceptionRes\");\nvar de_CredentialReportNotReadyExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = de_CredentialReportNotReadyException(body.Error, context);\n    const exception = new CredentialReportNotReadyException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_CredentialReportNotReadyExceptionRes\");\nvar de_DeleteConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = de_DeleteConflictException(body.Error, context);\n    const exception = new DeleteConflictException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_DeleteConflictExceptionRes\");\nvar de_DuplicateCertificateExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = de_DuplicateCertificateException(body.Error, context);\n    const exception = new DuplicateCertificateException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_DuplicateCertificateExceptionRes\");\nvar de_DuplicateSSHPublicKeyExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = de_DuplicateSSHPublicKeyException(body.Error, context);\n    const exception = new DuplicateSSHPublicKeyException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_DuplicateSSHPublicKeyExceptionRes\");\nvar de_EntityAlreadyExistsExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = de_EntityAlreadyExistsException(body.Error, context);\n    const exception = new EntityAlreadyExistsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_EntityAlreadyExistsExceptionRes\");\nvar de_EntityTemporarilyUnmodifiableExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = de_EntityTemporarilyUnmodifiableException(body.Error, context);\n    const exception = new EntityTemporarilyUnmodifiableException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_EntityTemporarilyUnmodifiableExceptionRes\");\nvar de_InvalidAuthenticationCodeExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = de_InvalidAuthenticationCodeException(body.Error, context);\n    const exception = new InvalidAuthenticationCodeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidAuthenticationCodeExceptionRes\");\nvar de_InvalidCertificateExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = de_InvalidCertificateException(body.Error, context);\n    const exception = new InvalidCertificateException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidCertificateExceptionRes\");\nvar de_InvalidInputExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = de_InvalidInputException(body.Error, context);\n    const exception = new InvalidInputException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidInputExceptionRes\");\nvar de_InvalidPublicKeyExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = de_InvalidPublicKeyException(body.Error, context);\n    const exception = new InvalidPublicKeyException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidPublicKeyExceptionRes\");\nvar de_InvalidUserTypeExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = de_InvalidUserTypeException(body.Error, context);\n    const exception = new InvalidUserTypeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidUserTypeExceptionRes\");\nvar de_KeyPairMismatchExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = de_KeyPairMismatchException(body.Error, context);\n    const exception = new KeyPairMismatchException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_KeyPairMismatchExceptionRes\");\nvar de_LimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = de_LimitExceededException(body.Error, context);\n    const exception = new LimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_LimitExceededExceptionRes\");\nvar de_MalformedCertificateExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = de_MalformedCertificateException(body.Error, context);\n    const exception = new MalformedCertificateException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_MalformedCertificateExceptionRes\");\nvar de_MalformedPolicyDocumentExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = de_MalformedPolicyDocumentException(body.Error, context);\n    const exception = new MalformedPolicyDocumentException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_MalformedPolicyDocumentExceptionRes\");\nvar de_NoSuchEntityExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = de_NoSuchEntityException(body.Error, context);\n    const exception = new NoSuchEntityException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_NoSuchEntityExceptionRes\");\nvar de_OpenIdIdpCommunicationErrorExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = de_OpenIdIdpCommunicationErrorException(body.Error, context);\n    const exception = new OpenIdIdpCommunicationErrorException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_OpenIdIdpCommunicationErrorExceptionRes\");\nvar de_OrganizationNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = de_OrganizationNotFoundException(body.Error, context);\n    const exception = new OrganizationNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_OrganizationNotFoundExceptionRes\");\nvar de_OrganizationNotInAllFeaturesModeExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = de_OrganizationNotInAllFeaturesModeException(body.Error, context);\n    const exception = new OrganizationNotInAllFeaturesModeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_OrganizationNotInAllFeaturesModeExceptionRes\");\nvar de_PasswordPolicyViolationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = de_PasswordPolicyViolationException(body.Error, context);\n    const exception = new PasswordPolicyViolationException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_PasswordPolicyViolationExceptionRes\");\nvar de_PolicyEvaluationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = de_PolicyEvaluationException(body.Error, context);\n    const exception = new PolicyEvaluationException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_PolicyEvaluationExceptionRes\");\nvar de_PolicyNotAttachableExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = de_PolicyNotAttachableException(body.Error, context);\n    const exception = new PolicyNotAttachableException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_PolicyNotAttachableExceptionRes\");\nvar de_ReportGenerationLimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = de_ReportGenerationLimitExceededException(body.Error, context);\n    const exception = new ReportGenerationLimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_ReportGenerationLimitExceededExceptionRes\");\nvar de_ServiceAccessNotEnabledExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = de_ServiceAccessNotEnabledException(body.Error, context);\n    const exception = new ServiceAccessNotEnabledException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_ServiceAccessNotEnabledExceptionRes\");\nvar de_ServiceFailureExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = de_ServiceFailureException(body.Error, context);\n    const exception = new ServiceFailureException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_ServiceFailureExceptionRes\");\nvar de_ServiceNotSupportedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = de_ServiceNotSupportedException(body.Error, context);\n    const exception = new ServiceNotSupportedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_ServiceNotSupportedExceptionRes\");\nvar de_UnmodifiableEntityExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = de_UnmodifiableEntityException(body.Error, context);\n    const exception = new UnmodifiableEntityException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_UnmodifiableEntityExceptionRes\");\nvar de_UnrecognizedPublicKeyEncodingExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = de_UnrecognizedPublicKeyEncodingException(body.Error, context);\n    const exception = new UnrecognizedPublicKeyEncodingException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_UnrecognizedPublicKeyEncodingExceptionRes\");\nvar se_ActionNameListType = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    let counter = 1;\n    for (const entry of input){\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n}, \"se_ActionNameListType\");\nvar se_AddClientIDToOpenIDConnectProviderRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_OIDCPA] != null) {\n        entries[_OIDCPA] = input[_OIDCPA];\n    }\n    if (input[_CID] != null) {\n        entries[_CID] = input[_CID];\n    }\n    return entries;\n}, \"se_AddClientIDToOpenIDConnectProviderRequest\");\nvar se_AddRoleToInstanceProfileRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_IPN] != null) {\n        entries[_IPN] = input[_IPN];\n    }\n    if (input[_RN] != null) {\n        entries[_RN] = input[_RN];\n    }\n    return entries;\n}, \"se_AddRoleToInstanceProfileRequest\");\nvar se_AddUserToGroupRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_GN] != null) {\n        entries[_GN] = input[_GN];\n    }\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    return entries;\n}, \"se_AddUserToGroupRequest\");\nvar se_AttachGroupPolicyRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_GN] != null) {\n        entries[_GN] = input[_GN];\n    }\n    if (input[_PA] != null) {\n        entries[_PA] = input[_PA];\n    }\n    return entries;\n}, \"se_AttachGroupPolicyRequest\");\nvar se_AttachRolePolicyRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_RN] != null) {\n        entries[_RN] = input[_RN];\n    }\n    if (input[_PA] != null) {\n        entries[_PA] = input[_PA];\n    }\n    return entries;\n}, \"se_AttachRolePolicyRequest\");\nvar se_AttachUserPolicyRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    if (input[_PA] != null) {\n        entries[_PA] = input[_PA];\n    }\n    return entries;\n}, \"se_AttachUserPolicyRequest\");\nvar se_ChangePasswordRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_OP] != null) {\n        entries[_OP] = input[_OP];\n    }\n    if (input[_NP] != null) {\n        entries[_NP] = input[_NP];\n    }\n    return entries;\n}, \"se_ChangePasswordRequest\");\nvar se_clientIDListType = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    let counter = 1;\n    for (const entry of input){\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n}, \"se_clientIDListType\");\nvar se_ContextEntry = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_CKN] != null) {\n        entries[_CKN] = input[_CKN];\n    }\n    if (input[_CKV] != null) {\n        const memberEntries = se_ContextKeyValueListType(input[_CKV], context);\n        if (input[_CKV]?.length === 0) {\n            entries.ContextKeyValues = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `ContextKeyValues.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_CKT] != null) {\n        entries[_CKT] = input[_CKT];\n    }\n    return entries;\n}, \"se_ContextEntry\");\nvar se_ContextEntryListType = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    let counter = 1;\n    for (const entry of input){\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_ContextEntry(entry, context);\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n}, \"se_ContextEntryListType\");\nvar se_ContextKeyValueListType = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    let counter = 1;\n    for (const entry of input){\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n}, \"se_ContextKeyValueListType\");\nvar se_CreateAccessKeyRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    return entries;\n}, \"se_CreateAccessKeyRequest\");\nvar se_CreateAccountAliasRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_AA] != null) {\n        entries[_AA] = input[_AA];\n    }\n    return entries;\n}, \"se_CreateAccountAliasRequest\");\nvar se_CreateGroupRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_GN] != null) {\n        entries[_GN] = input[_GN];\n    }\n    return entries;\n}, \"se_CreateGroupRequest\");\nvar se_CreateInstanceProfileRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_IPN] != null) {\n        entries[_IPN] = input[_IPN];\n    }\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_T] != null) {\n        const memberEntries = se_tagListType(input[_T], context);\n        if (input[_T]?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n}, \"se_CreateInstanceProfileRequest\");\nvar se_CreateLoginProfileRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    if (input[_Pa] != null) {\n        entries[_Pa] = input[_Pa];\n    }\n    if (input[_PRR] != null) {\n        entries[_PRR] = input[_PRR];\n    }\n    return entries;\n}, \"se_CreateLoginProfileRequest\");\nvar se_CreateOpenIDConnectProviderRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_U] != null) {\n        entries[_U] = input[_U];\n    }\n    if (input[_CIDL] != null) {\n        const memberEntries = se_clientIDListType(input[_CIDL], context);\n        if (input[_CIDL]?.length === 0) {\n            entries.ClientIDList = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `ClientIDList.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_TL] != null) {\n        const memberEntries = se_thumbprintListType(input[_TL], context);\n        if (input[_TL]?.length === 0) {\n            entries.ThumbprintList = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `ThumbprintList.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_T] != null) {\n        const memberEntries = se_tagListType(input[_T], context);\n        if (input[_T]?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n}, \"se_CreateOpenIDConnectProviderRequest\");\nvar se_CreatePolicyRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_PN] != null) {\n        entries[_PN] = input[_PN];\n    }\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_PD] != null) {\n        entries[_PD] = input[_PD];\n    }\n    if (input[_D] != null) {\n        entries[_D] = input[_D];\n    }\n    if (input[_T] != null) {\n        const memberEntries = se_tagListType(input[_T], context);\n        if (input[_T]?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n}, \"se_CreatePolicyRequest\");\nvar se_CreatePolicyVersionRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_PA] != null) {\n        entries[_PA] = input[_PA];\n    }\n    if (input[_PD] != null) {\n        entries[_PD] = input[_PD];\n    }\n    if (input[_SAD] != null) {\n        entries[_SAD] = input[_SAD];\n    }\n    return entries;\n}, \"se_CreatePolicyVersionRequest\");\nvar se_CreateRoleRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_RN] != null) {\n        entries[_RN] = input[_RN];\n    }\n    if (input[_ARPD] != null) {\n        entries[_ARPD] = input[_ARPD];\n    }\n    if (input[_D] != null) {\n        entries[_D] = input[_D];\n    }\n    if (input[_MSD] != null) {\n        entries[_MSD] = input[_MSD];\n    }\n    if (input[_PB] != null) {\n        entries[_PB] = input[_PB];\n    }\n    if (input[_T] != null) {\n        const memberEntries = se_tagListType(input[_T], context);\n        if (input[_T]?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n}, \"se_CreateRoleRequest\");\nvar se_CreateSAMLProviderRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_SAMLMD] != null) {\n        entries[_SAMLMD] = input[_SAMLMD];\n    }\n    if (input[_N] != null) {\n        entries[_N] = input[_N];\n    }\n    if (input[_T] != null) {\n        const memberEntries = se_tagListType(input[_T], context);\n        if (input[_T]?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_AEM] != null) {\n        entries[_AEM] = input[_AEM];\n    }\n    if (input[_APK] != null) {\n        entries[_APK] = input[_APK];\n    }\n    return entries;\n}, \"se_CreateSAMLProviderRequest\");\nvar se_CreateServiceLinkedRoleRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_AWSSN] != null) {\n        entries[_AWSSN] = input[_AWSSN];\n    }\n    if (input[_D] != null) {\n        entries[_D] = input[_D];\n    }\n    if (input[_CS] != null) {\n        entries[_CS] = input[_CS];\n    }\n    return entries;\n}, \"se_CreateServiceLinkedRoleRequest\");\nvar se_CreateServiceSpecificCredentialRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    if (input[_SN] != null) {\n        entries[_SN] = input[_SN];\n    }\n    return entries;\n}, \"se_CreateServiceSpecificCredentialRequest\");\nvar se_CreateUserRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    if (input[_PB] != null) {\n        entries[_PB] = input[_PB];\n    }\n    if (input[_T] != null) {\n        const memberEntries = se_tagListType(input[_T], context);\n        if (input[_T]?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n}, \"se_CreateUserRequest\");\nvar se_CreateVirtualMFADeviceRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_VMFADN] != null) {\n        entries[_VMFADN] = input[_VMFADN];\n    }\n    if (input[_T] != null) {\n        const memberEntries = se_tagListType(input[_T], context);\n        if (input[_T]?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n}, \"se_CreateVirtualMFADeviceRequest\");\nvar se_DeactivateMFADeviceRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    if (input[_SNe] != null) {\n        entries[_SNe] = input[_SNe];\n    }\n    return entries;\n}, \"se_DeactivateMFADeviceRequest\");\nvar se_DeleteAccessKeyRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    if (input[_AKI] != null) {\n        entries[_AKI] = input[_AKI];\n    }\n    return entries;\n}, \"se_DeleteAccessKeyRequest\");\nvar se_DeleteAccountAliasRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_AA] != null) {\n        entries[_AA] = input[_AA];\n    }\n    return entries;\n}, \"se_DeleteAccountAliasRequest\");\nvar se_DeleteGroupPolicyRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_GN] != null) {\n        entries[_GN] = input[_GN];\n    }\n    if (input[_PN] != null) {\n        entries[_PN] = input[_PN];\n    }\n    return entries;\n}, \"se_DeleteGroupPolicyRequest\");\nvar se_DeleteGroupRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_GN] != null) {\n        entries[_GN] = input[_GN];\n    }\n    return entries;\n}, \"se_DeleteGroupRequest\");\nvar se_DeleteInstanceProfileRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_IPN] != null) {\n        entries[_IPN] = input[_IPN];\n    }\n    return entries;\n}, \"se_DeleteInstanceProfileRequest\");\nvar se_DeleteLoginProfileRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    return entries;\n}, \"se_DeleteLoginProfileRequest\");\nvar se_DeleteOpenIDConnectProviderRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_OIDCPA] != null) {\n        entries[_OIDCPA] = input[_OIDCPA];\n    }\n    return entries;\n}, \"se_DeleteOpenIDConnectProviderRequest\");\nvar se_DeletePolicyRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_PA] != null) {\n        entries[_PA] = input[_PA];\n    }\n    return entries;\n}, \"se_DeletePolicyRequest\");\nvar se_DeletePolicyVersionRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_PA] != null) {\n        entries[_PA] = input[_PA];\n    }\n    if (input[_VI] != null) {\n        entries[_VI] = input[_VI];\n    }\n    return entries;\n}, \"se_DeletePolicyVersionRequest\");\nvar se_DeleteRolePermissionsBoundaryRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_RN] != null) {\n        entries[_RN] = input[_RN];\n    }\n    return entries;\n}, \"se_DeleteRolePermissionsBoundaryRequest\");\nvar se_DeleteRolePolicyRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_RN] != null) {\n        entries[_RN] = input[_RN];\n    }\n    if (input[_PN] != null) {\n        entries[_PN] = input[_PN];\n    }\n    return entries;\n}, \"se_DeleteRolePolicyRequest\");\nvar se_DeleteRoleRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_RN] != null) {\n        entries[_RN] = input[_RN];\n    }\n    return entries;\n}, \"se_DeleteRoleRequest\");\nvar se_DeleteSAMLProviderRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_SAMLPA] != null) {\n        entries[_SAMLPA] = input[_SAMLPA];\n    }\n    return entries;\n}, \"se_DeleteSAMLProviderRequest\");\nvar se_DeleteServerCertificateRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_SCN] != null) {\n        entries[_SCN] = input[_SCN];\n    }\n    return entries;\n}, \"se_DeleteServerCertificateRequest\");\nvar se_DeleteServiceLinkedRoleRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_RN] != null) {\n        entries[_RN] = input[_RN];\n    }\n    return entries;\n}, \"se_DeleteServiceLinkedRoleRequest\");\nvar se_DeleteServiceSpecificCredentialRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    if (input[_SSCI] != null) {\n        entries[_SSCI] = input[_SSCI];\n    }\n    return entries;\n}, \"se_DeleteServiceSpecificCredentialRequest\");\nvar se_DeleteSigningCertificateRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    if (input[_CI] != null) {\n        entries[_CI] = input[_CI];\n    }\n    return entries;\n}, \"se_DeleteSigningCertificateRequest\");\nvar se_DeleteSSHPublicKeyRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    if (input[_SSHPKI] != null) {\n        entries[_SSHPKI] = input[_SSHPKI];\n    }\n    return entries;\n}, \"se_DeleteSSHPublicKeyRequest\");\nvar se_DeleteUserPermissionsBoundaryRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    return entries;\n}, \"se_DeleteUserPermissionsBoundaryRequest\");\nvar se_DeleteUserPolicyRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    if (input[_PN] != null) {\n        entries[_PN] = input[_PN];\n    }\n    return entries;\n}, \"se_DeleteUserPolicyRequest\");\nvar se_DeleteUserRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    return entries;\n}, \"se_DeleteUserRequest\");\nvar se_DeleteVirtualMFADeviceRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_SNe] != null) {\n        entries[_SNe] = input[_SNe];\n    }\n    return entries;\n}, \"se_DeleteVirtualMFADeviceRequest\");\nvar se_DetachGroupPolicyRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_GN] != null) {\n        entries[_GN] = input[_GN];\n    }\n    if (input[_PA] != null) {\n        entries[_PA] = input[_PA];\n    }\n    return entries;\n}, \"se_DetachGroupPolicyRequest\");\nvar se_DetachRolePolicyRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_RN] != null) {\n        entries[_RN] = input[_RN];\n    }\n    if (input[_PA] != null) {\n        entries[_PA] = input[_PA];\n    }\n    return entries;\n}, \"se_DetachRolePolicyRequest\");\nvar se_DetachUserPolicyRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    if (input[_PA] != null) {\n        entries[_PA] = input[_PA];\n    }\n    return entries;\n}, \"se_DetachUserPolicyRequest\");\nvar se_DisableOrganizationsRootCredentialsManagementRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    return entries;\n}, \"se_DisableOrganizationsRootCredentialsManagementRequest\");\nvar se_DisableOrganizationsRootSessionsRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    return entries;\n}, \"se_DisableOrganizationsRootSessionsRequest\");\nvar se_EnableMFADeviceRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    if (input[_SNe] != null) {\n        entries[_SNe] = input[_SNe];\n    }\n    if (input[_AC] != null) {\n        entries[_AC] = input[_AC];\n    }\n    if (input[_ACu] != null) {\n        entries[_ACu] = input[_ACu];\n    }\n    return entries;\n}, \"se_EnableMFADeviceRequest\");\nvar se_EnableOrganizationsRootCredentialsManagementRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    return entries;\n}, \"se_EnableOrganizationsRootCredentialsManagementRequest\");\nvar se_EnableOrganizationsRootSessionsRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    return entries;\n}, \"se_EnableOrganizationsRootSessionsRequest\");\nvar se_entityListType = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    let counter = 1;\n    for (const entry of input){\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n}, \"se_entityListType\");\nvar se_GenerateOrganizationsAccessReportRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_EP] != null) {\n        entries[_EP] = input[_EP];\n    }\n    if (input[_OPI] != null) {\n        entries[_OPI] = input[_OPI];\n    }\n    return entries;\n}, \"se_GenerateOrganizationsAccessReportRequest\");\nvar se_GenerateServiceLastAccessedDetailsRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_Ar] != null) {\n        entries[_Ar] = input[_Ar];\n    }\n    if (input[_G] != null) {\n        entries[_G] = input[_G];\n    }\n    return entries;\n}, \"se_GenerateServiceLastAccessedDetailsRequest\");\nvar se_GetAccessKeyLastUsedRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_AKI] != null) {\n        entries[_AKI] = input[_AKI];\n    }\n    return entries;\n}, \"se_GetAccessKeyLastUsedRequest\");\nvar se_GetAccountAuthorizationDetailsRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_F] != null) {\n        const memberEntries = se_entityListType(input[_F], context);\n        if (input[_F]?.length === 0) {\n            entries.Filter = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `Filter.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_MI] != null) {\n        entries[_MI] = input[_MI];\n    }\n    if (input[_M] != null) {\n        entries[_M] = input[_M];\n    }\n    return entries;\n}, \"se_GetAccountAuthorizationDetailsRequest\");\nvar se_GetContextKeysForCustomPolicyRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_PIL] != null) {\n        const memberEntries = se_SimulationPolicyListType(input[_PIL], context);\n        if (input[_PIL]?.length === 0) {\n            entries.PolicyInputList = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `PolicyInputList.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n}, \"se_GetContextKeysForCustomPolicyRequest\");\nvar se_GetContextKeysForPrincipalPolicyRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_PSA] != null) {\n        entries[_PSA] = input[_PSA];\n    }\n    if (input[_PIL] != null) {\n        const memberEntries = se_SimulationPolicyListType(input[_PIL], context);\n        if (input[_PIL]?.length === 0) {\n            entries.PolicyInputList = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `PolicyInputList.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n}, \"se_GetContextKeysForPrincipalPolicyRequest\");\nvar se_GetGroupPolicyRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_GN] != null) {\n        entries[_GN] = input[_GN];\n    }\n    if (input[_PN] != null) {\n        entries[_PN] = input[_PN];\n    }\n    return entries;\n}, \"se_GetGroupPolicyRequest\");\nvar se_GetGroupRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_GN] != null) {\n        entries[_GN] = input[_GN];\n    }\n    if (input[_M] != null) {\n        entries[_M] = input[_M];\n    }\n    if (input[_MI] != null) {\n        entries[_MI] = input[_MI];\n    }\n    return entries;\n}, \"se_GetGroupRequest\");\nvar se_GetInstanceProfileRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_IPN] != null) {\n        entries[_IPN] = input[_IPN];\n    }\n    return entries;\n}, \"se_GetInstanceProfileRequest\");\nvar se_GetLoginProfileRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    return entries;\n}, \"se_GetLoginProfileRequest\");\nvar se_GetMFADeviceRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_SNe] != null) {\n        entries[_SNe] = input[_SNe];\n    }\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    return entries;\n}, \"se_GetMFADeviceRequest\");\nvar se_GetOpenIDConnectProviderRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_OIDCPA] != null) {\n        entries[_OIDCPA] = input[_OIDCPA];\n    }\n    return entries;\n}, \"se_GetOpenIDConnectProviderRequest\");\nvar se_GetOrganizationsAccessReportRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_JI] != null) {\n        entries[_JI] = input[_JI];\n    }\n    if (input[_MI] != null) {\n        entries[_MI] = input[_MI];\n    }\n    if (input[_M] != null) {\n        entries[_M] = input[_M];\n    }\n    if (input[_SK] != null) {\n        entries[_SK] = input[_SK];\n    }\n    return entries;\n}, \"se_GetOrganizationsAccessReportRequest\");\nvar se_GetPolicyRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_PA] != null) {\n        entries[_PA] = input[_PA];\n    }\n    return entries;\n}, \"se_GetPolicyRequest\");\nvar se_GetPolicyVersionRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_PA] != null) {\n        entries[_PA] = input[_PA];\n    }\n    if (input[_VI] != null) {\n        entries[_VI] = input[_VI];\n    }\n    return entries;\n}, \"se_GetPolicyVersionRequest\");\nvar se_GetRolePolicyRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_RN] != null) {\n        entries[_RN] = input[_RN];\n    }\n    if (input[_PN] != null) {\n        entries[_PN] = input[_PN];\n    }\n    return entries;\n}, \"se_GetRolePolicyRequest\");\nvar se_GetRoleRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_RN] != null) {\n        entries[_RN] = input[_RN];\n    }\n    return entries;\n}, \"se_GetRoleRequest\");\nvar se_GetSAMLProviderRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_SAMLPA] != null) {\n        entries[_SAMLPA] = input[_SAMLPA];\n    }\n    return entries;\n}, \"se_GetSAMLProviderRequest\");\nvar se_GetServerCertificateRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_SCN] != null) {\n        entries[_SCN] = input[_SCN];\n    }\n    return entries;\n}, \"se_GetServerCertificateRequest\");\nvar se_GetServiceLastAccessedDetailsRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_JI] != null) {\n        entries[_JI] = input[_JI];\n    }\n    if (input[_MI] != null) {\n        entries[_MI] = input[_MI];\n    }\n    if (input[_M] != null) {\n        entries[_M] = input[_M];\n    }\n    return entries;\n}, \"se_GetServiceLastAccessedDetailsRequest\");\nvar se_GetServiceLastAccessedDetailsWithEntitiesRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_JI] != null) {\n        entries[_JI] = input[_JI];\n    }\n    if (input[_SNer] != null) {\n        entries[_SNer] = input[_SNer];\n    }\n    if (input[_MI] != null) {\n        entries[_MI] = input[_MI];\n    }\n    if (input[_M] != null) {\n        entries[_M] = input[_M];\n    }\n    return entries;\n}, \"se_GetServiceLastAccessedDetailsWithEntitiesRequest\");\nvar se_GetServiceLinkedRoleDeletionStatusRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_DTI] != null) {\n        entries[_DTI] = input[_DTI];\n    }\n    return entries;\n}, \"se_GetServiceLinkedRoleDeletionStatusRequest\");\nvar se_GetSSHPublicKeyRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    if (input[_SSHPKI] != null) {\n        entries[_SSHPKI] = input[_SSHPKI];\n    }\n    if (input[_E] != null) {\n        entries[_E] = input[_E];\n    }\n    return entries;\n}, \"se_GetSSHPublicKeyRequest\");\nvar se_GetUserPolicyRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    if (input[_PN] != null) {\n        entries[_PN] = input[_PN];\n    }\n    return entries;\n}, \"se_GetUserPolicyRequest\");\nvar se_GetUserRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    return entries;\n}, \"se_GetUserRequest\");\nvar se_ListAccessKeysRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    if (input[_M] != null) {\n        entries[_M] = input[_M];\n    }\n    if (input[_MI] != null) {\n        entries[_MI] = input[_MI];\n    }\n    return entries;\n}, \"se_ListAccessKeysRequest\");\nvar se_ListAccountAliasesRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_M] != null) {\n        entries[_M] = input[_M];\n    }\n    if (input[_MI] != null) {\n        entries[_MI] = input[_MI];\n    }\n    return entries;\n}, \"se_ListAccountAliasesRequest\");\nvar se_ListAttachedGroupPoliciesRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_GN] != null) {\n        entries[_GN] = input[_GN];\n    }\n    if (input[_PP] != null) {\n        entries[_PP] = input[_PP];\n    }\n    if (input[_M] != null) {\n        entries[_M] = input[_M];\n    }\n    if (input[_MI] != null) {\n        entries[_MI] = input[_MI];\n    }\n    return entries;\n}, \"se_ListAttachedGroupPoliciesRequest\");\nvar se_ListAttachedRolePoliciesRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_RN] != null) {\n        entries[_RN] = input[_RN];\n    }\n    if (input[_PP] != null) {\n        entries[_PP] = input[_PP];\n    }\n    if (input[_M] != null) {\n        entries[_M] = input[_M];\n    }\n    if (input[_MI] != null) {\n        entries[_MI] = input[_MI];\n    }\n    return entries;\n}, \"se_ListAttachedRolePoliciesRequest\");\nvar se_ListAttachedUserPoliciesRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    if (input[_PP] != null) {\n        entries[_PP] = input[_PP];\n    }\n    if (input[_M] != null) {\n        entries[_M] = input[_M];\n    }\n    if (input[_MI] != null) {\n        entries[_MI] = input[_MI];\n    }\n    return entries;\n}, \"se_ListAttachedUserPoliciesRequest\");\nvar se_ListEntitiesForPolicyRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_PA] != null) {\n        entries[_PA] = input[_PA];\n    }\n    if (input[_EF] != null) {\n        entries[_EF] = input[_EF];\n    }\n    if (input[_PP] != null) {\n        entries[_PP] = input[_PP];\n    }\n    if (input[_PUF] != null) {\n        entries[_PUF] = input[_PUF];\n    }\n    if (input[_M] != null) {\n        entries[_M] = input[_M];\n    }\n    if (input[_MI] != null) {\n        entries[_MI] = input[_MI];\n    }\n    return entries;\n}, \"se_ListEntitiesForPolicyRequest\");\nvar se_ListGroupPoliciesRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_GN] != null) {\n        entries[_GN] = input[_GN];\n    }\n    if (input[_M] != null) {\n        entries[_M] = input[_M];\n    }\n    if (input[_MI] != null) {\n        entries[_MI] = input[_MI];\n    }\n    return entries;\n}, \"se_ListGroupPoliciesRequest\");\nvar se_ListGroupsForUserRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    if (input[_M] != null) {\n        entries[_M] = input[_M];\n    }\n    if (input[_MI] != null) {\n        entries[_MI] = input[_MI];\n    }\n    return entries;\n}, \"se_ListGroupsForUserRequest\");\nvar se_ListGroupsRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_PP] != null) {\n        entries[_PP] = input[_PP];\n    }\n    if (input[_M] != null) {\n        entries[_M] = input[_M];\n    }\n    if (input[_MI] != null) {\n        entries[_MI] = input[_MI];\n    }\n    return entries;\n}, \"se_ListGroupsRequest\");\nvar se_ListInstanceProfilesForRoleRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_RN] != null) {\n        entries[_RN] = input[_RN];\n    }\n    if (input[_M] != null) {\n        entries[_M] = input[_M];\n    }\n    if (input[_MI] != null) {\n        entries[_MI] = input[_MI];\n    }\n    return entries;\n}, \"se_ListInstanceProfilesForRoleRequest\");\nvar se_ListInstanceProfilesRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_PP] != null) {\n        entries[_PP] = input[_PP];\n    }\n    if (input[_M] != null) {\n        entries[_M] = input[_M];\n    }\n    if (input[_MI] != null) {\n        entries[_MI] = input[_MI];\n    }\n    return entries;\n}, \"se_ListInstanceProfilesRequest\");\nvar se_ListInstanceProfileTagsRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_IPN] != null) {\n        entries[_IPN] = input[_IPN];\n    }\n    if (input[_M] != null) {\n        entries[_M] = input[_M];\n    }\n    if (input[_MI] != null) {\n        entries[_MI] = input[_MI];\n    }\n    return entries;\n}, \"se_ListInstanceProfileTagsRequest\");\nvar se_ListMFADevicesRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    if (input[_M] != null) {\n        entries[_M] = input[_M];\n    }\n    if (input[_MI] != null) {\n        entries[_MI] = input[_MI];\n    }\n    return entries;\n}, \"se_ListMFADevicesRequest\");\nvar se_ListMFADeviceTagsRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_SNe] != null) {\n        entries[_SNe] = input[_SNe];\n    }\n    if (input[_M] != null) {\n        entries[_M] = input[_M];\n    }\n    if (input[_MI] != null) {\n        entries[_MI] = input[_MI];\n    }\n    return entries;\n}, \"se_ListMFADeviceTagsRequest\");\nvar se_ListOpenIDConnectProvidersRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    return entries;\n}, \"se_ListOpenIDConnectProvidersRequest\");\nvar se_ListOpenIDConnectProviderTagsRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_OIDCPA] != null) {\n        entries[_OIDCPA] = input[_OIDCPA];\n    }\n    if (input[_M] != null) {\n        entries[_M] = input[_M];\n    }\n    if (input[_MI] != null) {\n        entries[_MI] = input[_MI];\n    }\n    return entries;\n}, \"se_ListOpenIDConnectProviderTagsRequest\");\nvar se_ListOrganizationsFeaturesRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    return entries;\n}, \"se_ListOrganizationsFeaturesRequest\");\nvar se_ListPoliciesGrantingServiceAccessRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_M] != null) {\n        entries[_M] = input[_M];\n    }\n    if (input[_Ar] != null) {\n        entries[_Ar] = input[_Ar];\n    }\n    if (input[_SNerv] != null) {\n        const memberEntries = se_serviceNamespaceListType(input[_SNerv], context);\n        if (input[_SNerv]?.length === 0) {\n            entries.ServiceNamespaces = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `ServiceNamespaces.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n}, \"se_ListPoliciesGrantingServiceAccessRequest\");\nvar se_ListPoliciesRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_S] != null) {\n        entries[_S] = input[_S];\n    }\n    if (input[_OA] != null) {\n        entries[_OA] = input[_OA];\n    }\n    if (input[_PP] != null) {\n        entries[_PP] = input[_PP];\n    }\n    if (input[_PUF] != null) {\n        entries[_PUF] = input[_PUF];\n    }\n    if (input[_M] != null) {\n        entries[_M] = input[_M];\n    }\n    if (input[_MI] != null) {\n        entries[_MI] = input[_MI];\n    }\n    return entries;\n}, \"se_ListPoliciesRequest\");\nvar se_ListPolicyTagsRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_PA] != null) {\n        entries[_PA] = input[_PA];\n    }\n    if (input[_M] != null) {\n        entries[_M] = input[_M];\n    }\n    if (input[_MI] != null) {\n        entries[_MI] = input[_MI];\n    }\n    return entries;\n}, \"se_ListPolicyTagsRequest\");\nvar se_ListPolicyVersionsRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_PA] != null) {\n        entries[_PA] = input[_PA];\n    }\n    if (input[_M] != null) {\n        entries[_M] = input[_M];\n    }\n    if (input[_MI] != null) {\n        entries[_MI] = input[_MI];\n    }\n    return entries;\n}, \"se_ListPolicyVersionsRequest\");\nvar se_ListRolePoliciesRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_RN] != null) {\n        entries[_RN] = input[_RN];\n    }\n    if (input[_M] != null) {\n        entries[_M] = input[_M];\n    }\n    if (input[_MI] != null) {\n        entries[_MI] = input[_MI];\n    }\n    return entries;\n}, \"se_ListRolePoliciesRequest\");\nvar se_ListRolesRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_PP] != null) {\n        entries[_PP] = input[_PP];\n    }\n    if (input[_M] != null) {\n        entries[_M] = input[_M];\n    }\n    if (input[_MI] != null) {\n        entries[_MI] = input[_MI];\n    }\n    return entries;\n}, \"se_ListRolesRequest\");\nvar se_ListRoleTagsRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_RN] != null) {\n        entries[_RN] = input[_RN];\n    }\n    if (input[_M] != null) {\n        entries[_M] = input[_M];\n    }\n    if (input[_MI] != null) {\n        entries[_MI] = input[_MI];\n    }\n    return entries;\n}, \"se_ListRoleTagsRequest\");\nvar se_ListSAMLProvidersRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    return entries;\n}, \"se_ListSAMLProvidersRequest\");\nvar se_ListSAMLProviderTagsRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_SAMLPA] != null) {\n        entries[_SAMLPA] = input[_SAMLPA];\n    }\n    if (input[_M] != null) {\n        entries[_M] = input[_M];\n    }\n    if (input[_MI] != null) {\n        entries[_MI] = input[_MI];\n    }\n    return entries;\n}, \"se_ListSAMLProviderTagsRequest\");\nvar se_ListServerCertificatesRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_PP] != null) {\n        entries[_PP] = input[_PP];\n    }\n    if (input[_M] != null) {\n        entries[_M] = input[_M];\n    }\n    if (input[_MI] != null) {\n        entries[_MI] = input[_MI];\n    }\n    return entries;\n}, \"se_ListServerCertificatesRequest\");\nvar se_ListServerCertificateTagsRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_SCN] != null) {\n        entries[_SCN] = input[_SCN];\n    }\n    if (input[_M] != null) {\n        entries[_M] = input[_M];\n    }\n    if (input[_MI] != null) {\n        entries[_MI] = input[_MI];\n    }\n    return entries;\n}, \"se_ListServerCertificateTagsRequest\");\nvar se_ListServiceSpecificCredentialsRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    if (input[_SN] != null) {\n        entries[_SN] = input[_SN];\n    }\n    return entries;\n}, \"se_ListServiceSpecificCredentialsRequest\");\nvar se_ListSigningCertificatesRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    if (input[_M] != null) {\n        entries[_M] = input[_M];\n    }\n    if (input[_MI] != null) {\n        entries[_MI] = input[_MI];\n    }\n    return entries;\n}, \"se_ListSigningCertificatesRequest\");\nvar se_ListSSHPublicKeysRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    if (input[_M] != null) {\n        entries[_M] = input[_M];\n    }\n    if (input[_MI] != null) {\n        entries[_MI] = input[_MI];\n    }\n    return entries;\n}, \"se_ListSSHPublicKeysRequest\");\nvar se_ListUserPoliciesRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    if (input[_M] != null) {\n        entries[_M] = input[_M];\n    }\n    if (input[_MI] != null) {\n        entries[_MI] = input[_MI];\n    }\n    return entries;\n}, \"se_ListUserPoliciesRequest\");\nvar se_ListUsersRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_PP] != null) {\n        entries[_PP] = input[_PP];\n    }\n    if (input[_M] != null) {\n        entries[_M] = input[_M];\n    }\n    if (input[_MI] != null) {\n        entries[_MI] = input[_MI];\n    }\n    return entries;\n}, \"se_ListUsersRequest\");\nvar se_ListUserTagsRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    if (input[_M] != null) {\n        entries[_M] = input[_M];\n    }\n    if (input[_MI] != null) {\n        entries[_MI] = input[_MI];\n    }\n    return entries;\n}, \"se_ListUserTagsRequest\");\nvar se_ListVirtualMFADevicesRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_AS] != null) {\n        entries[_AS] = input[_AS];\n    }\n    if (input[_M] != null) {\n        entries[_M] = input[_M];\n    }\n    if (input[_MI] != null) {\n        entries[_MI] = input[_MI];\n    }\n    return entries;\n}, \"se_ListVirtualMFADevicesRequest\");\nvar se_PutGroupPolicyRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_GN] != null) {\n        entries[_GN] = input[_GN];\n    }\n    if (input[_PN] != null) {\n        entries[_PN] = input[_PN];\n    }\n    if (input[_PD] != null) {\n        entries[_PD] = input[_PD];\n    }\n    return entries;\n}, \"se_PutGroupPolicyRequest\");\nvar se_PutRolePermissionsBoundaryRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_RN] != null) {\n        entries[_RN] = input[_RN];\n    }\n    if (input[_PB] != null) {\n        entries[_PB] = input[_PB];\n    }\n    return entries;\n}, \"se_PutRolePermissionsBoundaryRequest\");\nvar se_PutRolePolicyRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_RN] != null) {\n        entries[_RN] = input[_RN];\n    }\n    if (input[_PN] != null) {\n        entries[_PN] = input[_PN];\n    }\n    if (input[_PD] != null) {\n        entries[_PD] = input[_PD];\n    }\n    return entries;\n}, \"se_PutRolePolicyRequest\");\nvar se_PutUserPermissionsBoundaryRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    if (input[_PB] != null) {\n        entries[_PB] = input[_PB];\n    }\n    return entries;\n}, \"se_PutUserPermissionsBoundaryRequest\");\nvar se_PutUserPolicyRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    if (input[_PN] != null) {\n        entries[_PN] = input[_PN];\n    }\n    if (input[_PD] != null) {\n        entries[_PD] = input[_PD];\n    }\n    return entries;\n}, \"se_PutUserPolicyRequest\");\nvar se_RemoveClientIDFromOpenIDConnectProviderRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_OIDCPA] != null) {\n        entries[_OIDCPA] = input[_OIDCPA];\n    }\n    if (input[_CID] != null) {\n        entries[_CID] = input[_CID];\n    }\n    return entries;\n}, \"se_RemoveClientIDFromOpenIDConnectProviderRequest\");\nvar se_RemoveRoleFromInstanceProfileRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_IPN] != null) {\n        entries[_IPN] = input[_IPN];\n    }\n    if (input[_RN] != null) {\n        entries[_RN] = input[_RN];\n    }\n    return entries;\n}, \"se_RemoveRoleFromInstanceProfileRequest\");\nvar se_RemoveUserFromGroupRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_GN] != null) {\n        entries[_GN] = input[_GN];\n    }\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    return entries;\n}, \"se_RemoveUserFromGroupRequest\");\nvar se_ResetServiceSpecificCredentialRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    if (input[_SSCI] != null) {\n        entries[_SSCI] = input[_SSCI];\n    }\n    return entries;\n}, \"se_ResetServiceSpecificCredentialRequest\");\nvar se_ResourceNameListType = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    let counter = 1;\n    for (const entry of input){\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n}, \"se_ResourceNameListType\");\nvar se_ResyncMFADeviceRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    if (input[_SNe] != null) {\n        entries[_SNe] = input[_SNe];\n    }\n    if (input[_AC] != null) {\n        entries[_AC] = input[_AC];\n    }\n    if (input[_ACu] != null) {\n        entries[_ACu] = input[_ACu];\n    }\n    return entries;\n}, \"se_ResyncMFADeviceRequest\");\nvar se_serviceNamespaceListType = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    let counter = 1;\n    for (const entry of input){\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n}, \"se_serviceNamespaceListType\");\nvar se_SetDefaultPolicyVersionRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_PA] != null) {\n        entries[_PA] = input[_PA];\n    }\n    if (input[_VI] != null) {\n        entries[_VI] = input[_VI];\n    }\n    return entries;\n}, \"se_SetDefaultPolicyVersionRequest\");\nvar se_SetSecurityTokenServicePreferencesRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_GETV] != null) {\n        entries[_GETV] = input[_GETV];\n    }\n    return entries;\n}, \"se_SetSecurityTokenServicePreferencesRequest\");\nvar se_SimulateCustomPolicyRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_PIL] != null) {\n        const memberEntries = se_SimulationPolicyListType(input[_PIL], context);\n        if (input[_PIL]?.length === 0) {\n            entries.PolicyInputList = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `PolicyInputList.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_PBPIL] != null) {\n        const memberEntries = se_SimulationPolicyListType(input[_PBPIL], context);\n        if (input[_PBPIL]?.length === 0) {\n            entries.PermissionsBoundaryPolicyInputList = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `PermissionsBoundaryPolicyInputList.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_AN] != null) {\n        const memberEntries = se_ActionNameListType(input[_AN], context);\n        if (input[_AN]?.length === 0) {\n            entries.ActionNames = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `ActionNames.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_RA] != null) {\n        const memberEntries = se_ResourceNameListType(input[_RA], context);\n        if (input[_RA]?.length === 0) {\n            entries.ResourceArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `ResourceArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_RP] != null) {\n        entries[_RP] = input[_RP];\n    }\n    if (input[_RO] != null) {\n        entries[_RO] = input[_RO];\n    }\n    if (input[_CA] != null) {\n        entries[_CA] = input[_CA];\n    }\n    if (input[_CE] != null) {\n        const memberEntries = se_ContextEntryListType(input[_CE], context);\n        if (input[_CE]?.length === 0) {\n            entries.ContextEntries = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `ContextEntries.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_RHO] != null) {\n        entries[_RHO] = input[_RHO];\n    }\n    if (input[_MI] != null) {\n        entries[_MI] = input[_MI];\n    }\n    if (input[_M] != null) {\n        entries[_M] = input[_M];\n    }\n    return entries;\n}, \"se_SimulateCustomPolicyRequest\");\nvar se_SimulatePrincipalPolicyRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_PSA] != null) {\n        entries[_PSA] = input[_PSA];\n    }\n    if (input[_PIL] != null) {\n        const memberEntries = se_SimulationPolicyListType(input[_PIL], context);\n        if (input[_PIL]?.length === 0) {\n            entries.PolicyInputList = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `PolicyInputList.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_PBPIL] != null) {\n        const memberEntries = se_SimulationPolicyListType(input[_PBPIL], context);\n        if (input[_PBPIL]?.length === 0) {\n            entries.PermissionsBoundaryPolicyInputList = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `PermissionsBoundaryPolicyInputList.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_AN] != null) {\n        const memberEntries = se_ActionNameListType(input[_AN], context);\n        if (input[_AN]?.length === 0) {\n            entries.ActionNames = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `ActionNames.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_RA] != null) {\n        const memberEntries = se_ResourceNameListType(input[_RA], context);\n        if (input[_RA]?.length === 0) {\n            entries.ResourceArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `ResourceArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_RP] != null) {\n        entries[_RP] = input[_RP];\n    }\n    if (input[_RO] != null) {\n        entries[_RO] = input[_RO];\n    }\n    if (input[_CA] != null) {\n        entries[_CA] = input[_CA];\n    }\n    if (input[_CE] != null) {\n        const memberEntries = se_ContextEntryListType(input[_CE], context);\n        if (input[_CE]?.length === 0) {\n            entries.ContextEntries = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `ContextEntries.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_RHO] != null) {\n        entries[_RHO] = input[_RHO];\n    }\n    if (input[_MI] != null) {\n        entries[_MI] = input[_MI];\n    }\n    if (input[_M] != null) {\n        entries[_M] = input[_M];\n    }\n    return entries;\n}, \"se_SimulatePrincipalPolicyRequest\");\nvar se_SimulationPolicyListType = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    let counter = 1;\n    for (const entry of input){\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n}, \"se_SimulationPolicyListType\");\nvar se_Tag = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_K] != null) {\n        entries[_K] = input[_K];\n    }\n    if (input[_Va] != null) {\n        entries[_Va] = input[_Va];\n    }\n    return entries;\n}, \"se_Tag\");\nvar se_TagInstanceProfileRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_IPN] != null) {\n        entries[_IPN] = input[_IPN];\n    }\n    if (input[_T] != null) {\n        const memberEntries = se_tagListType(input[_T], context);\n        if (input[_T]?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n}, \"se_TagInstanceProfileRequest\");\nvar se_tagKeyListType = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    let counter = 1;\n    for (const entry of input){\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n}, \"se_tagKeyListType\");\nvar se_tagListType = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    let counter = 1;\n    for (const entry of input){\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_Tag(entry, context);\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n}, \"se_tagListType\");\nvar se_TagMFADeviceRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_SNe] != null) {\n        entries[_SNe] = input[_SNe];\n    }\n    if (input[_T] != null) {\n        const memberEntries = se_tagListType(input[_T], context);\n        if (input[_T]?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n}, \"se_TagMFADeviceRequest\");\nvar se_TagOpenIDConnectProviderRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_OIDCPA] != null) {\n        entries[_OIDCPA] = input[_OIDCPA];\n    }\n    if (input[_T] != null) {\n        const memberEntries = se_tagListType(input[_T], context);\n        if (input[_T]?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n}, \"se_TagOpenIDConnectProviderRequest\");\nvar se_TagPolicyRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_PA] != null) {\n        entries[_PA] = input[_PA];\n    }\n    if (input[_T] != null) {\n        const memberEntries = se_tagListType(input[_T], context);\n        if (input[_T]?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n}, \"se_TagPolicyRequest\");\nvar se_TagRoleRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_RN] != null) {\n        entries[_RN] = input[_RN];\n    }\n    if (input[_T] != null) {\n        const memberEntries = se_tagListType(input[_T], context);\n        if (input[_T]?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n}, \"se_TagRoleRequest\");\nvar se_TagSAMLProviderRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_SAMLPA] != null) {\n        entries[_SAMLPA] = input[_SAMLPA];\n    }\n    if (input[_T] != null) {\n        const memberEntries = se_tagListType(input[_T], context);\n        if (input[_T]?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n}, \"se_TagSAMLProviderRequest\");\nvar se_TagServerCertificateRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_SCN] != null) {\n        entries[_SCN] = input[_SCN];\n    }\n    if (input[_T] != null) {\n        const memberEntries = se_tagListType(input[_T], context);\n        if (input[_T]?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n}, \"se_TagServerCertificateRequest\");\nvar se_TagUserRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    if (input[_T] != null) {\n        const memberEntries = se_tagListType(input[_T], context);\n        if (input[_T]?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n}, \"se_TagUserRequest\");\nvar se_thumbprintListType = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    let counter = 1;\n    for (const entry of input){\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n}, \"se_thumbprintListType\");\nvar se_UntagInstanceProfileRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_IPN] != null) {\n        entries[_IPN] = input[_IPN];\n    }\n    if (input[_TK] != null) {\n        const memberEntries = se_tagKeyListType(input[_TK], context);\n        if (input[_TK]?.length === 0) {\n            entries.TagKeys = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `TagKeys.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n}, \"se_UntagInstanceProfileRequest\");\nvar se_UntagMFADeviceRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_SNe] != null) {\n        entries[_SNe] = input[_SNe];\n    }\n    if (input[_TK] != null) {\n        const memberEntries = se_tagKeyListType(input[_TK], context);\n        if (input[_TK]?.length === 0) {\n            entries.TagKeys = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `TagKeys.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n}, \"se_UntagMFADeviceRequest\");\nvar se_UntagOpenIDConnectProviderRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_OIDCPA] != null) {\n        entries[_OIDCPA] = input[_OIDCPA];\n    }\n    if (input[_TK] != null) {\n        const memberEntries = se_tagKeyListType(input[_TK], context);\n        if (input[_TK]?.length === 0) {\n            entries.TagKeys = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `TagKeys.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n}, \"se_UntagOpenIDConnectProviderRequest\");\nvar se_UntagPolicyRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_PA] != null) {\n        entries[_PA] = input[_PA];\n    }\n    if (input[_TK] != null) {\n        const memberEntries = se_tagKeyListType(input[_TK], context);\n        if (input[_TK]?.length === 0) {\n            entries.TagKeys = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `TagKeys.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n}, \"se_UntagPolicyRequest\");\nvar se_UntagRoleRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_RN] != null) {\n        entries[_RN] = input[_RN];\n    }\n    if (input[_TK] != null) {\n        const memberEntries = se_tagKeyListType(input[_TK], context);\n        if (input[_TK]?.length === 0) {\n            entries.TagKeys = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `TagKeys.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n}, \"se_UntagRoleRequest\");\nvar se_UntagSAMLProviderRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_SAMLPA] != null) {\n        entries[_SAMLPA] = input[_SAMLPA];\n    }\n    if (input[_TK] != null) {\n        const memberEntries = se_tagKeyListType(input[_TK], context);\n        if (input[_TK]?.length === 0) {\n            entries.TagKeys = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `TagKeys.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n}, \"se_UntagSAMLProviderRequest\");\nvar se_UntagServerCertificateRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_SCN] != null) {\n        entries[_SCN] = input[_SCN];\n    }\n    if (input[_TK] != null) {\n        const memberEntries = se_tagKeyListType(input[_TK], context);\n        if (input[_TK]?.length === 0) {\n            entries.TagKeys = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `TagKeys.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n}, \"se_UntagServerCertificateRequest\");\nvar se_UntagUserRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    if (input[_TK] != null) {\n        const memberEntries = se_tagKeyListType(input[_TK], context);\n        if (input[_TK]?.length === 0) {\n            entries.TagKeys = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `TagKeys.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n}, \"se_UntagUserRequest\");\nvar se_UpdateAccessKeyRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    if (input[_AKI] != null) {\n        entries[_AKI] = input[_AKI];\n    }\n    if (input[_St] != null) {\n        entries[_St] = input[_St];\n    }\n    return entries;\n}, \"se_UpdateAccessKeyRequest\");\nvar se_UpdateAccountPasswordPolicyRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_MPL] != null) {\n        entries[_MPL] = input[_MPL];\n    }\n    if (input[_RS] != null) {\n        entries[_RS] = input[_RS];\n    }\n    if (input[_RNe] != null) {\n        entries[_RNe] = input[_RNe];\n    }\n    if (input[_RUC] != null) {\n        entries[_RUC] = input[_RUC];\n    }\n    if (input[_RLC] != null) {\n        entries[_RLC] = input[_RLC];\n    }\n    if (input[_AUTCP] != null) {\n        entries[_AUTCP] = input[_AUTCP];\n    }\n    if (input[_MPA] != null) {\n        entries[_MPA] = input[_MPA];\n    }\n    if (input[_PRPa] != null) {\n        entries[_PRPa] = input[_PRPa];\n    }\n    if (input[_HE] != null) {\n        entries[_HE] = input[_HE];\n    }\n    return entries;\n}, \"se_UpdateAccountPasswordPolicyRequest\");\nvar se_UpdateAssumeRolePolicyRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_RN] != null) {\n        entries[_RN] = input[_RN];\n    }\n    if (input[_PD] != null) {\n        entries[_PD] = input[_PD];\n    }\n    return entries;\n}, \"se_UpdateAssumeRolePolicyRequest\");\nvar se_UpdateGroupRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_GN] != null) {\n        entries[_GN] = input[_GN];\n    }\n    if (input[_NPe] != null) {\n        entries[_NPe] = input[_NPe];\n    }\n    if (input[_NGN] != null) {\n        entries[_NGN] = input[_NGN];\n    }\n    return entries;\n}, \"se_UpdateGroupRequest\");\nvar se_UpdateLoginProfileRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    if (input[_Pa] != null) {\n        entries[_Pa] = input[_Pa];\n    }\n    if (input[_PRR] != null) {\n        entries[_PRR] = input[_PRR];\n    }\n    return entries;\n}, \"se_UpdateLoginProfileRequest\");\nvar se_UpdateOpenIDConnectProviderThumbprintRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_OIDCPA] != null) {\n        entries[_OIDCPA] = input[_OIDCPA];\n    }\n    if (input[_TL] != null) {\n        const memberEntries = se_thumbprintListType(input[_TL], context);\n        if (input[_TL]?.length === 0) {\n            entries.ThumbprintList = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `ThumbprintList.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n}, \"se_UpdateOpenIDConnectProviderThumbprintRequest\");\nvar se_UpdateRoleDescriptionRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_RN] != null) {\n        entries[_RN] = input[_RN];\n    }\n    if (input[_D] != null) {\n        entries[_D] = input[_D];\n    }\n    return entries;\n}, \"se_UpdateRoleDescriptionRequest\");\nvar se_UpdateRoleRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_RN] != null) {\n        entries[_RN] = input[_RN];\n    }\n    if (input[_D] != null) {\n        entries[_D] = input[_D];\n    }\n    if (input[_MSD] != null) {\n        entries[_MSD] = input[_MSD];\n    }\n    return entries;\n}, \"se_UpdateRoleRequest\");\nvar se_UpdateSAMLProviderRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_SAMLMD] != null) {\n        entries[_SAMLMD] = input[_SAMLMD];\n    }\n    if (input[_SAMLPA] != null) {\n        entries[_SAMLPA] = input[_SAMLPA];\n    }\n    if (input[_AEM] != null) {\n        entries[_AEM] = input[_AEM];\n    }\n    if (input[_APK] != null) {\n        entries[_APK] = input[_APK];\n    }\n    if (input[_RPK] != null) {\n        entries[_RPK] = input[_RPK];\n    }\n    return entries;\n}, \"se_UpdateSAMLProviderRequest\");\nvar se_UpdateServerCertificateRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_SCN] != null) {\n        entries[_SCN] = input[_SCN];\n    }\n    if (input[_NPe] != null) {\n        entries[_NPe] = input[_NPe];\n    }\n    if (input[_NSCN] != null) {\n        entries[_NSCN] = input[_NSCN];\n    }\n    return entries;\n}, \"se_UpdateServerCertificateRequest\");\nvar se_UpdateServiceSpecificCredentialRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    if (input[_SSCI] != null) {\n        entries[_SSCI] = input[_SSCI];\n    }\n    if (input[_St] != null) {\n        entries[_St] = input[_St];\n    }\n    return entries;\n}, \"se_UpdateServiceSpecificCredentialRequest\");\nvar se_UpdateSigningCertificateRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    if (input[_CI] != null) {\n        entries[_CI] = input[_CI];\n    }\n    if (input[_St] != null) {\n        entries[_St] = input[_St];\n    }\n    return entries;\n}, \"se_UpdateSigningCertificateRequest\");\nvar se_UpdateSSHPublicKeyRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    if (input[_SSHPKI] != null) {\n        entries[_SSHPKI] = input[_SSHPKI];\n    }\n    if (input[_St] != null) {\n        entries[_St] = input[_St];\n    }\n    return entries;\n}, \"se_UpdateSSHPublicKeyRequest\");\nvar se_UpdateUserRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    if (input[_NPe] != null) {\n        entries[_NPe] = input[_NPe];\n    }\n    if (input[_NUN] != null) {\n        entries[_NUN] = input[_NUN];\n    }\n    return entries;\n}, \"se_UpdateUserRequest\");\nvar se_UploadServerCertificateRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_SCN] != null) {\n        entries[_SCN] = input[_SCN];\n    }\n    if (input[_CB] != null) {\n        entries[_CB] = input[_CB];\n    }\n    if (input[_PK] != null) {\n        entries[_PK] = input[_PK];\n    }\n    if (input[_CC] != null) {\n        entries[_CC] = input[_CC];\n    }\n    if (input[_T] != null) {\n        const memberEntries = se_tagListType(input[_T], context);\n        if (input[_T]?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n}, \"se_UploadServerCertificateRequest\");\nvar se_UploadSigningCertificateRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    if (input[_CB] != null) {\n        entries[_CB] = input[_CB];\n    }\n    return entries;\n}, \"se_UploadSigningCertificateRequest\");\nvar se_UploadSSHPublicKeyRequest = /* @__PURE__ */ __name((input, context)=>{\n    const entries = {};\n    if (input[_UN] != null) {\n        entries[_UN] = input[_UN];\n    }\n    if (input[_SSHPKB] != null) {\n        entries[_SSHPKB] = input[_SSHPKB];\n    }\n    return entries;\n}, \"se_UploadSSHPublicKeyRequest\");\nvar de_AccessDetail = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_SN] != null) {\n        contents[_SN] = (0, import_smithy_client.expectString)(output[_SN]);\n    }\n    if (output[_SNer] != null) {\n        contents[_SNer] = (0, import_smithy_client.expectString)(output[_SNer]);\n    }\n    if (output[_R] != null) {\n        contents[_R] = (0, import_smithy_client.expectString)(output[_R]);\n    }\n    if (output[_EP] != null) {\n        contents[_EP] = (0, import_smithy_client.expectString)(output[_EP]);\n    }\n    if (output[_LAT] != null) {\n        contents[_LAT] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_LAT]));\n    }\n    if (output[_TAE] != null) {\n        contents[_TAE] = (0, import_smithy_client.strictParseInt32)(output[_TAE]);\n    }\n    return contents;\n}, \"de_AccessDetail\");\nvar de_AccessDetails = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_AccessDetail(entry, context);\n    });\n}, \"de_AccessDetails\");\nvar de_AccessKey = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_UN] != null) {\n        contents[_UN] = (0, import_smithy_client.expectString)(output[_UN]);\n    }\n    if (output[_AKI] != null) {\n        contents[_AKI] = (0, import_smithy_client.expectString)(output[_AKI]);\n    }\n    if (output[_St] != null) {\n        contents[_St] = (0, import_smithy_client.expectString)(output[_St]);\n    }\n    if (output[_SAK] != null) {\n        contents[_SAK] = (0, import_smithy_client.expectString)(output[_SAK]);\n    }\n    if (output[_CD] != null) {\n        contents[_CD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CD]));\n    }\n    return contents;\n}, \"de_AccessKey\");\nvar de_AccessKeyLastUsed = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_LUD] != null) {\n        contents[_LUD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_LUD]));\n    }\n    if (output[_SN] != null) {\n        contents[_SN] = (0, import_smithy_client.expectString)(output[_SN]);\n    }\n    if (output[_R] != null) {\n        contents[_R] = (0, import_smithy_client.expectString)(output[_R]);\n    }\n    return contents;\n}, \"de_AccessKeyLastUsed\");\nvar de_AccessKeyMetadata = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_UN] != null) {\n        contents[_UN] = (0, import_smithy_client.expectString)(output[_UN]);\n    }\n    if (output[_AKI] != null) {\n        contents[_AKI] = (0, import_smithy_client.expectString)(output[_AKI]);\n    }\n    if (output[_St] != null) {\n        contents[_St] = (0, import_smithy_client.expectString)(output[_St]);\n    }\n    if (output[_CD] != null) {\n        contents[_CD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CD]));\n    }\n    return contents;\n}, \"de_AccessKeyMetadata\");\nvar de_accessKeyMetadataListType = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_AccessKeyMetadata(entry, context);\n    });\n}, \"de_accessKeyMetadataListType\");\nvar de_accountAliasListType = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return (0, import_smithy_client.expectString)(entry);\n    });\n}, \"de_accountAliasListType\");\nvar de_AccountNotManagementOrDelegatedAdministratorException = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_Me] != null) {\n        contents[_Me] = (0, import_smithy_client.expectString)(output[_Me]);\n    }\n    return contents;\n}, \"de_AccountNotManagementOrDelegatedAdministratorException\");\nvar de_ArnListType = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return (0, import_smithy_client.expectString)(entry);\n    });\n}, \"de_ArnListType\");\nvar de_AttachedPermissionsBoundary = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_PBT] != null) {\n        contents[_PBT] = (0, import_smithy_client.expectString)(output[_PBT]);\n    }\n    if (output[_PBA] != null) {\n        contents[_PBA] = (0, import_smithy_client.expectString)(output[_PBA]);\n    }\n    return contents;\n}, \"de_AttachedPermissionsBoundary\");\nvar de_attachedPoliciesListType = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_AttachedPolicy(entry, context);\n    });\n}, \"de_attachedPoliciesListType\");\nvar de_AttachedPolicy = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_PN] != null) {\n        contents[_PN] = (0, import_smithy_client.expectString)(output[_PN]);\n    }\n    if (output[_PA] != null) {\n        contents[_PA] = (0, import_smithy_client.expectString)(output[_PA]);\n    }\n    return contents;\n}, \"de_AttachedPolicy\");\nvar de_CallerIsNotManagementAccountException = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_Me] != null) {\n        contents[_Me] = (0, import_smithy_client.expectString)(output[_Me]);\n    }\n    return contents;\n}, \"de_CallerIsNotManagementAccountException\");\nvar de_certificateListType = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_SigningCertificate(entry, context);\n    });\n}, \"de_certificateListType\");\nvar de_CertificationMapType = /* @__PURE__ */ __name((output, context)=>{\n    return output.reduce((acc, pair)=>{\n        if (pair[\"value\"] === null) {\n            return acc;\n        }\n        acc[pair[\"key\"]] = (0, import_smithy_client.expectString)(pair[\"value\"]);\n        return acc;\n    }, {});\n}, \"de_CertificationMapType\");\nvar de_clientIDListType = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return (0, import_smithy_client.expectString)(entry);\n    });\n}, \"de_clientIDListType\");\nvar de_ConcurrentModificationException = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n    }\n    return contents;\n}, \"de_ConcurrentModificationException\");\nvar de_ContextKeyNamesResultListType = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return (0, import_smithy_client.expectString)(entry);\n    });\n}, \"de_ContextKeyNamesResultListType\");\nvar de_CreateAccessKeyResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_AK] != null) {\n        contents[_AK] = de_AccessKey(output[_AK], context);\n    }\n    return contents;\n}, \"de_CreateAccessKeyResponse\");\nvar de_CreateGroupResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_Gr] != null) {\n        contents[_Gr] = de_Group(output[_Gr], context);\n    }\n    return contents;\n}, \"de_CreateGroupResponse\");\nvar de_CreateInstanceProfileResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_IP] != null) {\n        contents[_IP] = de_InstanceProfile(output[_IP], context);\n    }\n    return contents;\n}, \"de_CreateInstanceProfileResponse\");\nvar de_CreateLoginProfileResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_LPo] != null) {\n        contents[_LPo] = de_LoginProfile(output[_LPo], context);\n    }\n    return contents;\n}, \"de_CreateLoginProfileResponse\");\nvar de_CreateOpenIDConnectProviderResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_OIDCPA] != null) {\n        contents[_OIDCPA] = (0, import_smithy_client.expectString)(output[_OIDCPA]);\n    }\n    if (output.Tags === \"\") {\n        contents[_T] = [];\n    } else if (output[_T] != null && output[_T][_me] != null) {\n        contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);\n    }\n    return contents;\n}, \"de_CreateOpenIDConnectProviderResponse\");\nvar de_CreatePolicyResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_Po] != null) {\n        contents[_Po] = de_Policy(output[_Po], context);\n    }\n    return contents;\n}, \"de_CreatePolicyResponse\");\nvar de_CreatePolicyVersionResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_PV] != null) {\n        contents[_PV] = de_PolicyVersion(output[_PV], context);\n    }\n    return contents;\n}, \"de_CreatePolicyVersionResponse\");\nvar de_CreateRoleResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_Ro] != null) {\n        contents[_Ro] = de_Role(output[_Ro], context);\n    }\n    return contents;\n}, \"de_CreateRoleResponse\");\nvar de_CreateSAMLProviderResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_SAMLPA] != null) {\n        contents[_SAMLPA] = (0, import_smithy_client.expectString)(output[_SAMLPA]);\n    }\n    if (output.Tags === \"\") {\n        contents[_T] = [];\n    } else if (output[_T] != null && output[_T][_me] != null) {\n        contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);\n    }\n    return contents;\n}, \"de_CreateSAMLProviderResponse\");\nvar de_CreateServiceLinkedRoleResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_Ro] != null) {\n        contents[_Ro] = de_Role(output[_Ro], context);\n    }\n    return contents;\n}, \"de_CreateServiceLinkedRoleResponse\");\nvar de_CreateServiceSpecificCredentialResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_SSC] != null) {\n        contents[_SSC] = de_ServiceSpecificCredential(output[_SSC], context);\n    }\n    return contents;\n}, \"de_CreateServiceSpecificCredentialResponse\");\nvar de_CreateUserResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_Us] != null) {\n        contents[_Us] = de_User(output[_Us], context);\n    }\n    return contents;\n}, \"de_CreateUserResponse\");\nvar de_CreateVirtualMFADeviceResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_VMFAD] != null) {\n        contents[_VMFAD] = de_VirtualMFADevice(output[_VMFAD], context);\n    }\n    return contents;\n}, \"de_CreateVirtualMFADeviceResponse\");\nvar de_CredentialReportExpiredException = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n    }\n    return contents;\n}, \"de_CredentialReportExpiredException\");\nvar de_CredentialReportNotPresentException = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n    }\n    return contents;\n}, \"de_CredentialReportNotPresentException\");\nvar de_CredentialReportNotReadyException = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n    }\n    return contents;\n}, \"de_CredentialReportNotReadyException\");\nvar de_DeleteConflictException = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n    }\n    return contents;\n}, \"de_DeleteConflictException\");\nvar de_DeleteServiceLinkedRoleResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_DTI] != null) {\n        contents[_DTI] = (0, import_smithy_client.expectString)(output[_DTI]);\n    }\n    return contents;\n}, \"de_DeleteServiceLinkedRoleResponse\");\nvar de_DeletionTaskFailureReasonType = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_Re] != null) {\n        contents[_Re] = (0, import_smithy_client.expectString)(output[_Re]);\n    }\n    if (output.RoleUsageList === \"\") {\n        contents[_RUL] = [];\n    } else if (output[_RUL] != null && output[_RUL][_me] != null) {\n        contents[_RUL] = de_RoleUsageListType((0, import_smithy_client.getArrayIfSingleItem)(output[_RUL][_me]), context);\n    }\n    return contents;\n}, \"de_DeletionTaskFailureReasonType\");\nvar de_DisableOrganizationsRootCredentialsManagementResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_OI] != null) {\n        contents[_OI] = (0, import_smithy_client.expectString)(output[_OI]);\n    }\n    if (output.EnabledFeatures === \"\") {\n        contents[_EFn] = [];\n    } else if (output[_EFn] != null && output[_EFn][_me] != null) {\n        contents[_EFn] = de_FeaturesListType((0, import_smithy_client.getArrayIfSingleItem)(output[_EFn][_me]), context);\n    }\n    return contents;\n}, \"de_DisableOrganizationsRootCredentialsManagementResponse\");\nvar de_DisableOrganizationsRootSessionsResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_OI] != null) {\n        contents[_OI] = (0, import_smithy_client.expectString)(output[_OI]);\n    }\n    if (output.EnabledFeatures === \"\") {\n        contents[_EFn] = [];\n    } else if (output[_EFn] != null && output[_EFn][_me] != null) {\n        contents[_EFn] = de_FeaturesListType((0, import_smithy_client.getArrayIfSingleItem)(output[_EFn][_me]), context);\n    }\n    return contents;\n}, \"de_DisableOrganizationsRootSessionsResponse\");\nvar de_DuplicateCertificateException = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n    }\n    return contents;\n}, \"de_DuplicateCertificateException\");\nvar de_DuplicateSSHPublicKeyException = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n    }\n    return contents;\n}, \"de_DuplicateSSHPublicKeyException\");\nvar de_EnableOrganizationsRootCredentialsManagementResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_OI] != null) {\n        contents[_OI] = (0, import_smithy_client.expectString)(output[_OI]);\n    }\n    if (output.EnabledFeatures === \"\") {\n        contents[_EFn] = [];\n    } else if (output[_EFn] != null && output[_EFn][_me] != null) {\n        contents[_EFn] = de_FeaturesListType((0, import_smithy_client.getArrayIfSingleItem)(output[_EFn][_me]), context);\n    }\n    return contents;\n}, \"de_EnableOrganizationsRootCredentialsManagementResponse\");\nvar de_EnableOrganizationsRootSessionsResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_OI] != null) {\n        contents[_OI] = (0, import_smithy_client.expectString)(output[_OI]);\n    }\n    if (output.EnabledFeatures === \"\") {\n        contents[_EFn] = [];\n    } else if (output[_EFn] != null && output[_EFn][_me] != null) {\n        contents[_EFn] = de_FeaturesListType((0, import_smithy_client.getArrayIfSingleItem)(output[_EFn][_me]), context);\n    }\n    return contents;\n}, \"de_EnableOrganizationsRootSessionsResponse\");\nvar de_EntityAlreadyExistsException = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n    }\n    return contents;\n}, \"de_EntityAlreadyExistsException\");\nvar de_EntityDetails = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_EI] != null) {\n        contents[_EI] = de_EntityInfo(output[_EI], context);\n    }\n    if (output[_LA] != null) {\n        contents[_LA] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_LA]));\n    }\n    return contents;\n}, \"de_EntityDetails\");\nvar de_entityDetailsListType = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_EntityDetails(entry, context);\n    });\n}, \"de_entityDetailsListType\");\nvar de_EntityInfo = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_Ar] != null) {\n        contents[_Ar] = (0, import_smithy_client.expectString)(output[_Ar]);\n    }\n    if (output[_N] != null) {\n        contents[_N] = (0, import_smithy_client.expectString)(output[_N]);\n    }\n    if (output[_Ty] != null) {\n        contents[_Ty] = (0, import_smithy_client.expectString)(output[_Ty]);\n    }\n    if (output[_I] != null) {\n        contents[_I] = (0, import_smithy_client.expectString)(output[_I]);\n    }\n    if (output[_P] != null) {\n        contents[_P] = (0, import_smithy_client.expectString)(output[_P]);\n    }\n    return contents;\n}, \"de_EntityInfo\");\nvar de_EntityTemporarilyUnmodifiableException = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n    }\n    return contents;\n}, \"de_EntityTemporarilyUnmodifiableException\");\nvar de_ErrorDetails = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_Me] != null) {\n        contents[_Me] = (0, import_smithy_client.expectString)(output[_Me]);\n    }\n    if (output[_C] != null) {\n        contents[_C] = (0, import_smithy_client.expectString)(output[_C]);\n    }\n    return contents;\n}, \"de_ErrorDetails\");\nvar de_EvalDecisionDetailsType = /* @__PURE__ */ __name((output, context)=>{\n    return output.reduce((acc, pair)=>{\n        if (pair[\"value\"] === null) {\n            return acc;\n        }\n        acc[pair[\"key\"]] = (0, import_smithy_client.expectString)(pair[\"value\"]);\n        return acc;\n    }, {});\n}, \"de_EvalDecisionDetailsType\");\nvar de_EvaluationResult = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_EAN] != null) {\n        contents[_EAN] = (0, import_smithy_client.expectString)(output[_EAN]);\n    }\n    if (output[_ERN] != null) {\n        contents[_ERN] = (0, import_smithy_client.expectString)(output[_ERN]);\n    }\n    if (output[_ED] != null) {\n        contents[_ED] = (0, import_smithy_client.expectString)(output[_ED]);\n    }\n    if (output.MatchedStatements === \"\") {\n        contents[_MS] = [];\n    } else if (output[_MS] != null && output[_MS][_me] != null) {\n        contents[_MS] = de_StatementListType((0, import_smithy_client.getArrayIfSingleItem)(output[_MS][_me]), context);\n    }\n    if (output.MissingContextValues === \"\") {\n        contents[_MCV] = [];\n    } else if (output[_MCV] != null && output[_MCV][_me] != null) {\n        contents[_MCV] = de_ContextKeyNamesResultListType((0, import_smithy_client.getArrayIfSingleItem)(output[_MCV][_me]), context);\n    }\n    if (output[_ODD] != null) {\n        contents[_ODD] = de_OrganizationsDecisionDetail(output[_ODD], context);\n    }\n    if (output[_PBDD] != null) {\n        contents[_PBDD] = de_PermissionsBoundaryDecisionDetail(output[_PBDD], context);\n    }\n    if (output.EvalDecisionDetails === \"\") {\n        contents[_EDD] = {};\n    } else if (output[_EDD] != null && output[_EDD][_e] != null) {\n        contents[_EDD] = de_EvalDecisionDetailsType((0, import_smithy_client.getArrayIfSingleItem)(output[_EDD][_e]), context);\n    }\n    if (output.ResourceSpecificResults === \"\") {\n        contents[_RSR] = [];\n    } else if (output[_RSR] != null && output[_RSR][_me] != null) {\n        contents[_RSR] = de_ResourceSpecificResultListType((0, import_smithy_client.getArrayIfSingleItem)(output[_RSR][_me]), context);\n    }\n    return contents;\n}, \"de_EvaluationResult\");\nvar de_EvaluationResultsListType = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_EvaluationResult(entry, context);\n    });\n}, \"de_EvaluationResultsListType\");\nvar de_FeaturesListType = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return (0, import_smithy_client.expectString)(entry);\n    });\n}, \"de_FeaturesListType\");\nvar de_GenerateCredentialReportResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_Sta] != null) {\n        contents[_Sta] = (0, import_smithy_client.expectString)(output[_Sta]);\n    }\n    if (output[_D] != null) {\n        contents[_D] = (0, import_smithy_client.expectString)(output[_D]);\n    }\n    return contents;\n}, \"de_GenerateCredentialReportResponse\");\nvar de_GenerateOrganizationsAccessReportResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_JI] != null) {\n        contents[_JI] = (0, import_smithy_client.expectString)(output[_JI]);\n    }\n    return contents;\n}, \"de_GenerateOrganizationsAccessReportResponse\");\nvar de_GenerateServiceLastAccessedDetailsResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_JI] != null) {\n        contents[_JI] = (0, import_smithy_client.expectString)(output[_JI]);\n    }\n    return contents;\n}, \"de_GenerateServiceLastAccessedDetailsResponse\");\nvar de_GetAccessKeyLastUsedResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_UN] != null) {\n        contents[_UN] = (0, import_smithy_client.expectString)(output[_UN]);\n    }\n    if (output[_AKLU] != null) {\n        contents[_AKLU] = de_AccessKeyLastUsed(output[_AKLU], context);\n    }\n    return contents;\n}, \"de_GetAccessKeyLastUsedResponse\");\nvar de_GetAccountAuthorizationDetailsResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output.UserDetailList === \"\") {\n        contents[_UDL] = [];\n    } else if (output[_UDL] != null && output[_UDL][_me] != null) {\n        contents[_UDL] = de_userDetailListType((0, import_smithy_client.getArrayIfSingleItem)(output[_UDL][_me]), context);\n    }\n    if (output.GroupDetailList === \"\") {\n        contents[_GDL] = [];\n    } else if (output[_GDL] != null && output[_GDL][_me] != null) {\n        contents[_GDL] = de_groupDetailListType((0, import_smithy_client.getArrayIfSingleItem)(output[_GDL][_me]), context);\n    }\n    if (output.RoleDetailList === \"\") {\n        contents[_RDL] = [];\n    } else if (output[_RDL] != null && output[_RDL][_me] != null) {\n        contents[_RDL] = de_roleDetailListType((0, import_smithy_client.getArrayIfSingleItem)(output[_RDL][_me]), context);\n    }\n    if (output.Policies === \"\") {\n        contents[_Pol] = [];\n    } else if (output[_Pol] != null && output[_Pol][_me] != null) {\n        contents[_Pol] = de_ManagedPolicyDetailListType((0, import_smithy_client.getArrayIfSingleItem)(output[_Pol][_me]), context);\n    }\n    if (output[_IT] != null) {\n        contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);\n    }\n    if (output[_M] != null) {\n        contents[_M] = (0, import_smithy_client.expectString)(output[_M]);\n    }\n    return contents;\n}, \"de_GetAccountAuthorizationDetailsResponse\");\nvar de_GetAccountPasswordPolicyResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_PPa] != null) {\n        contents[_PPa] = de_PasswordPolicy(output[_PPa], context);\n    }\n    return contents;\n}, \"de_GetAccountPasswordPolicyResponse\");\nvar de_GetAccountSummaryResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output.SummaryMap === \"\") {\n        contents[_SM] = {};\n    } else if (output[_SM] != null && output[_SM][_e] != null) {\n        contents[_SM] = de_summaryMapType((0, import_smithy_client.getArrayIfSingleItem)(output[_SM][_e]), context);\n    }\n    return contents;\n}, \"de_GetAccountSummaryResponse\");\nvar de_GetContextKeysForPolicyResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output.ContextKeyNames === \"\") {\n        contents[_CKNo] = [];\n    } else if (output[_CKNo] != null && output[_CKNo][_me] != null) {\n        contents[_CKNo] = de_ContextKeyNamesResultListType((0, import_smithy_client.getArrayIfSingleItem)(output[_CKNo][_me]), context);\n    }\n    return contents;\n}, \"de_GetContextKeysForPolicyResponse\");\nvar de_GetCredentialReportResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_Co] != null) {\n        contents[_Co] = context.base64Decoder(output[_Co]);\n    }\n    if (output[_RF] != null) {\n        contents[_RF] = (0, import_smithy_client.expectString)(output[_RF]);\n    }\n    if (output[_GT] != null) {\n        contents[_GT] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_GT]));\n    }\n    return contents;\n}, \"de_GetCredentialReportResponse\");\nvar de_GetGroupPolicyResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_GN] != null) {\n        contents[_GN] = (0, import_smithy_client.expectString)(output[_GN]);\n    }\n    if (output[_PN] != null) {\n        contents[_PN] = (0, import_smithy_client.expectString)(output[_PN]);\n    }\n    if (output[_PD] != null) {\n        contents[_PD] = (0, import_smithy_client.expectString)(output[_PD]);\n    }\n    return contents;\n}, \"de_GetGroupPolicyResponse\");\nvar de_GetGroupResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_Gr] != null) {\n        contents[_Gr] = de_Group(output[_Gr], context);\n    }\n    if (output.Users === \"\") {\n        contents[_Use] = [];\n    } else if (output[_Use] != null && output[_Use][_me] != null) {\n        contents[_Use] = de_userListType((0, import_smithy_client.getArrayIfSingleItem)(output[_Use][_me]), context);\n    }\n    if (output[_IT] != null) {\n        contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);\n    }\n    if (output[_M] != null) {\n        contents[_M] = (0, import_smithy_client.expectString)(output[_M]);\n    }\n    return contents;\n}, \"de_GetGroupResponse\");\nvar de_GetInstanceProfileResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_IP] != null) {\n        contents[_IP] = de_InstanceProfile(output[_IP], context);\n    }\n    return contents;\n}, \"de_GetInstanceProfileResponse\");\nvar de_GetLoginProfileResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_LPo] != null) {\n        contents[_LPo] = de_LoginProfile(output[_LPo], context);\n    }\n    return contents;\n}, \"de_GetLoginProfileResponse\");\nvar de_GetMFADeviceResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_UN] != null) {\n        contents[_UN] = (0, import_smithy_client.expectString)(output[_UN]);\n    }\n    if (output[_SNe] != null) {\n        contents[_SNe] = (0, import_smithy_client.expectString)(output[_SNe]);\n    }\n    if (output[_EDn] != null) {\n        contents[_EDn] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_EDn]));\n    }\n    if (output.Certifications === \"\") {\n        contents[_Ce] = {};\n    } else if (output[_Ce] != null && output[_Ce][_e] != null) {\n        contents[_Ce] = de_CertificationMapType((0, import_smithy_client.getArrayIfSingleItem)(output[_Ce][_e]), context);\n    }\n    return contents;\n}, \"de_GetMFADeviceResponse\");\nvar de_GetOpenIDConnectProviderResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_U] != null) {\n        contents[_U] = (0, import_smithy_client.expectString)(output[_U]);\n    }\n    if (output.ClientIDList === \"\") {\n        contents[_CIDL] = [];\n    } else if (output[_CIDL] != null && output[_CIDL][_me] != null) {\n        contents[_CIDL] = de_clientIDListType((0, import_smithy_client.getArrayIfSingleItem)(output[_CIDL][_me]), context);\n    }\n    if (output.ThumbprintList === \"\") {\n        contents[_TL] = [];\n    } else if (output[_TL] != null && output[_TL][_me] != null) {\n        contents[_TL] = de_thumbprintListType((0, import_smithy_client.getArrayIfSingleItem)(output[_TL][_me]), context);\n    }\n    if (output[_CD] != null) {\n        contents[_CD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CD]));\n    }\n    if (output.Tags === \"\") {\n        contents[_T] = [];\n    } else if (output[_T] != null && output[_T][_me] != null) {\n        contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);\n    }\n    return contents;\n}, \"de_GetOpenIDConnectProviderResponse\");\nvar de_GetOrganizationsAccessReportResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_JS] != null) {\n        contents[_JS] = (0, import_smithy_client.expectString)(output[_JS]);\n    }\n    if (output[_JCD] != null) {\n        contents[_JCD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_JCD]));\n    }\n    if (output[_JCDo] != null) {\n        contents[_JCDo] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_JCDo]));\n    }\n    if (output[_NOSA] != null) {\n        contents[_NOSA] = (0, import_smithy_client.strictParseInt32)(output[_NOSA]);\n    }\n    if (output[_NOSNA] != null) {\n        contents[_NOSNA] = (0, import_smithy_client.strictParseInt32)(output[_NOSNA]);\n    }\n    if (output.AccessDetails === \"\") {\n        contents[_AD] = [];\n    } else if (output[_AD] != null && output[_AD][_me] != null) {\n        contents[_AD] = de_AccessDetails((0, import_smithy_client.getArrayIfSingleItem)(output[_AD][_me]), context);\n    }\n    if (output[_IT] != null) {\n        contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);\n    }\n    if (output[_M] != null) {\n        contents[_M] = (0, import_smithy_client.expectString)(output[_M]);\n    }\n    if (output[_EDr] != null) {\n        contents[_EDr] = de_ErrorDetails(output[_EDr], context);\n    }\n    return contents;\n}, \"de_GetOrganizationsAccessReportResponse\");\nvar de_GetPolicyResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_Po] != null) {\n        contents[_Po] = de_Policy(output[_Po], context);\n    }\n    return contents;\n}, \"de_GetPolicyResponse\");\nvar de_GetPolicyVersionResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_PV] != null) {\n        contents[_PV] = de_PolicyVersion(output[_PV], context);\n    }\n    return contents;\n}, \"de_GetPolicyVersionResponse\");\nvar de_GetRolePolicyResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_RN] != null) {\n        contents[_RN] = (0, import_smithy_client.expectString)(output[_RN]);\n    }\n    if (output[_PN] != null) {\n        contents[_PN] = (0, import_smithy_client.expectString)(output[_PN]);\n    }\n    if (output[_PD] != null) {\n        contents[_PD] = (0, import_smithy_client.expectString)(output[_PD]);\n    }\n    return contents;\n}, \"de_GetRolePolicyResponse\");\nvar de_GetRoleResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_Ro] != null) {\n        contents[_Ro] = de_Role(output[_Ro], context);\n    }\n    return contents;\n}, \"de_GetRoleResponse\");\nvar de_GetSAMLProviderResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_SAMLPUUID] != null) {\n        contents[_SAMLPUUID] = (0, import_smithy_client.expectString)(output[_SAMLPUUID]);\n    }\n    if (output[_SAMLMD] != null) {\n        contents[_SAMLMD] = (0, import_smithy_client.expectString)(output[_SAMLMD]);\n    }\n    if (output[_CD] != null) {\n        contents[_CD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CD]));\n    }\n    if (output[_VU] != null) {\n        contents[_VU] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_VU]));\n    }\n    if (output.Tags === \"\") {\n        contents[_T] = [];\n    } else if (output[_T] != null && output[_T][_me] != null) {\n        contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);\n    }\n    if (output[_AEM] != null) {\n        contents[_AEM] = (0, import_smithy_client.expectString)(output[_AEM]);\n    }\n    if (output.PrivateKeyList === \"\") {\n        contents[_PKL] = [];\n    } else if (output[_PKL] != null && output[_PKL][_me] != null) {\n        contents[_PKL] = de_privateKeyList((0, import_smithy_client.getArrayIfSingleItem)(output[_PKL][_me]), context);\n    }\n    return contents;\n}, \"de_GetSAMLProviderResponse\");\nvar de_GetServerCertificateResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_SC] != null) {\n        contents[_SC] = de_ServerCertificate(output[_SC], context);\n    }\n    return contents;\n}, \"de_GetServerCertificateResponse\");\nvar de_GetServiceLastAccessedDetailsResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_JS] != null) {\n        contents[_JS] = (0, import_smithy_client.expectString)(output[_JS]);\n    }\n    if (output[_JT] != null) {\n        contents[_JT] = (0, import_smithy_client.expectString)(output[_JT]);\n    }\n    if (output[_JCD] != null) {\n        contents[_JCD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_JCD]));\n    }\n    if (output.ServicesLastAccessed === \"\") {\n        contents[_SLA] = [];\n    } else if (output[_SLA] != null && output[_SLA][_me] != null) {\n        contents[_SLA] = de_ServicesLastAccessed((0, import_smithy_client.getArrayIfSingleItem)(output[_SLA][_me]), context);\n    }\n    if (output[_JCDo] != null) {\n        contents[_JCDo] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_JCDo]));\n    }\n    if (output[_IT] != null) {\n        contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);\n    }\n    if (output[_M] != null) {\n        contents[_M] = (0, import_smithy_client.expectString)(output[_M]);\n    }\n    if (output[_Er] != null) {\n        contents[_Er] = de_ErrorDetails(output[_Er], context);\n    }\n    return contents;\n}, \"de_GetServiceLastAccessedDetailsResponse\");\nvar de_GetServiceLastAccessedDetailsWithEntitiesResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_JS] != null) {\n        contents[_JS] = (0, import_smithy_client.expectString)(output[_JS]);\n    }\n    if (output[_JCD] != null) {\n        contents[_JCD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_JCD]));\n    }\n    if (output[_JCDo] != null) {\n        contents[_JCDo] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_JCDo]));\n    }\n    if (output.EntityDetailsList === \"\") {\n        contents[_EDL] = [];\n    } else if (output[_EDL] != null && output[_EDL][_me] != null) {\n        contents[_EDL] = de_entityDetailsListType((0, import_smithy_client.getArrayIfSingleItem)(output[_EDL][_me]), context);\n    }\n    if (output[_IT] != null) {\n        contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);\n    }\n    if (output[_M] != null) {\n        contents[_M] = (0, import_smithy_client.expectString)(output[_M]);\n    }\n    if (output[_Er] != null) {\n        contents[_Er] = de_ErrorDetails(output[_Er], context);\n    }\n    return contents;\n}, \"de_GetServiceLastAccessedDetailsWithEntitiesResponse\");\nvar de_GetServiceLinkedRoleDeletionStatusResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_St] != null) {\n        contents[_St] = (0, import_smithy_client.expectString)(output[_St]);\n    }\n    if (output[_Re] != null) {\n        contents[_Re] = de_DeletionTaskFailureReasonType(output[_Re], context);\n    }\n    return contents;\n}, \"de_GetServiceLinkedRoleDeletionStatusResponse\");\nvar de_GetSSHPublicKeyResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_SSHPK] != null) {\n        contents[_SSHPK] = de_SSHPublicKey(output[_SSHPK], context);\n    }\n    return contents;\n}, \"de_GetSSHPublicKeyResponse\");\nvar de_GetUserPolicyResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_UN] != null) {\n        contents[_UN] = (0, import_smithy_client.expectString)(output[_UN]);\n    }\n    if (output[_PN] != null) {\n        contents[_PN] = (0, import_smithy_client.expectString)(output[_PN]);\n    }\n    if (output[_PD] != null) {\n        contents[_PD] = (0, import_smithy_client.expectString)(output[_PD]);\n    }\n    return contents;\n}, \"de_GetUserPolicyResponse\");\nvar de_GetUserResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_Us] != null) {\n        contents[_Us] = de_User(output[_Us], context);\n    }\n    return contents;\n}, \"de_GetUserResponse\");\nvar de_Group = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_P] != null) {\n        contents[_P] = (0, import_smithy_client.expectString)(output[_P]);\n    }\n    if (output[_GN] != null) {\n        contents[_GN] = (0, import_smithy_client.expectString)(output[_GN]);\n    }\n    if (output[_GI] != null) {\n        contents[_GI] = (0, import_smithy_client.expectString)(output[_GI]);\n    }\n    if (output[_Ar] != null) {\n        contents[_Ar] = (0, import_smithy_client.expectString)(output[_Ar]);\n    }\n    if (output[_CD] != null) {\n        contents[_CD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CD]));\n    }\n    return contents;\n}, \"de_Group\");\nvar de_GroupDetail = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_P] != null) {\n        contents[_P] = (0, import_smithy_client.expectString)(output[_P]);\n    }\n    if (output[_GN] != null) {\n        contents[_GN] = (0, import_smithy_client.expectString)(output[_GN]);\n    }\n    if (output[_GI] != null) {\n        contents[_GI] = (0, import_smithy_client.expectString)(output[_GI]);\n    }\n    if (output[_Ar] != null) {\n        contents[_Ar] = (0, import_smithy_client.expectString)(output[_Ar]);\n    }\n    if (output[_CD] != null) {\n        contents[_CD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CD]));\n    }\n    if (output.GroupPolicyList === \"\") {\n        contents[_GPL] = [];\n    } else if (output[_GPL] != null && output[_GPL][_me] != null) {\n        contents[_GPL] = de_policyDetailListType((0, import_smithy_client.getArrayIfSingleItem)(output[_GPL][_me]), context);\n    }\n    if (output.AttachedManagedPolicies === \"\") {\n        contents[_AMP] = [];\n    } else if (output[_AMP] != null && output[_AMP][_me] != null) {\n        contents[_AMP] = de_attachedPoliciesListType((0, import_smithy_client.getArrayIfSingleItem)(output[_AMP][_me]), context);\n    }\n    return contents;\n}, \"de_GroupDetail\");\nvar de_groupDetailListType = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_GroupDetail(entry, context);\n    });\n}, \"de_groupDetailListType\");\nvar de_groupListType = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_Group(entry, context);\n    });\n}, \"de_groupListType\");\nvar de_groupNameListType = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return (0, import_smithy_client.expectString)(entry);\n    });\n}, \"de_groupNameListType\");\nvar de_InstanceProfile = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_P] != null) {\n        contents[_P] = (0, import_smithy_client.expectString)(output[_P]);\n    }\n    if (output[_IPN] != null) {\n        contents[_IPN] = (0, import_smithy_client.expectString)(output[_IPN]);\n    }\n    if (output[_IPI] != null) {\n        contents[_IPI] = (0, import_smithy_client.expectString)(output[_IPI]);\n    }\n    if (output[_Ar] != null) {\n        contents[_Ar] = (0, import_smithy_client.expectString)(output[_Ar]);\n    }\n    if (output[_CD] != null) {\n        contents[_CD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CD]));\n    }\n    if (output.Roles === \"\") {\n        contents[_Rol] = [];\n    } else if (output[_Rol] != null && output[_Rol][_me] != null) {\n        contents[_Rol] = de_roleListType((0, import_smithy_client.getArrayIfSingleItem)(output[_Rol][_me]), context);\n    }\n    if (output.Tags === \"\") {\n        contents[_T] = [];\n    } else if (output[_T] != null && output[_T][_me] != null) {\n        contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);\n    }\n    return contents;\n}, \"de_InstanceProfile\");\nvar de_instanceProfileListType = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_InstanceProfile(entry, context);\n    });\n}, \"de_instanceProfileListType\");\nvar de_InvalidAuthenticationCodeException = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n    }\n    return contents;\n}, \"de_InvalidAuthenticationCodeException\");\nvar de_InvalidCertificateException = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n    }\n    return contents;\n}, \"de_InvalidCertificateException\");\nvar de_InvalidInputException = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n    }\n    return contents;\n}, \"de_InvalidInputException\");\nvar de_InvalidPublicKeyException = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n    }\n    return contents;\n}, \"de_InvalidPublicKeyException\");\nvar de_InvalidUserTypeException = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n    }\n    return contents;\n}, \"de_InvalidUserTypeException\");\nvar de_KeyPairMismatchException = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n    }\n    return contents;\n}, \"de_KeyPairMismatchException\");\nvar de_LimitExceededException = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n    }\n    return contents;\n}, \"de_LimitExceededException\");\nvar de_ListAccessKeysResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output.AccessKeyMetadata === \"\") {\n        contents[_AKM] = [];\n    } else if (output[_AKM] != null && output[_AKM][_me] != null) {\n        contents[_AKM] = de_accessKeyMetadataListType((0, import_smithy_client.getArrayIfSingleItem)(output[_AKM][_me]), context);\n    }\n    if (output[_IT] != null) {\n        contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);\n    }\n    if (output[_M] != null) {\n        contents[_M] = (0, import_smithy_client.expectString)(output[_M]);\n    }\n    return contents;\n}, \"de_ListAccessKeysResponse\");\nvar de_ListAccountAliasesResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output.AccountAliases === \"\") {\n        contents[_AAc] = [];\n    } else if (output[_AAc] != null && output[_AAc][_me] != null) {\n        contents[_AAc] = de_accountAliasListType((0, import_smithy_client.getArrayIfSingleItem)(output[_AAc][_me]), context);\n    }\n    if (output[_IT] != null) {\n        contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);\n    }\n    if (output[_M] != null) {\n        contents[_M] = (0, import_smithy_client.expectString)(output[_M]);\n    }\n    return contents;\n}, \"de_ListAccountAliasesResponse\");\nvar de_ListAttachedGroupPoliciesResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output.AttachedPolicies === \"\") {\n        contents[_AP] = [];\n    } else if (output[_AP] != null && output[_AP][_me] != null) {\n        contents[_AP] = de_attachedPoliciesListType((0, import_smithy_client.getArrayIfSingleItem)(output[_AP][_me]), context);\n    }\n    if (output[_IT] != null) {\n        contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);\n    }\n    if (output[_M] != null) {\n        contents[_M] = (0, import_smithy_client.expectString)(output[_M]);\n    }\n    return contents;\n}, \"de_ListAttachedGroupPoliciesResponse\");\nvar de_ListAttachedRolePoliciesResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output.AttachedPolicies === \"\") {\n        contents[_AP] = [];\n    } else if (output[_AP] != null && output[_AP][_me] != null) {\n        contents[_AP] = de_attachedPoliciesListType((0, import_smithy_client.getArrayIfSingleItem)(output[_AP][_me]), context);\n    }\n    if (output[_IT] != null) {\n        contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);\n    }\n    if (output[_M] != null) {\n        contents[_M] = (0, import_smithy_client.expectString)(output[_M]);\n    }\n    return contents;\n}, \"de_ListAttachedRolePoliciesResponse\");\nvar de_ListAttachedUserPoliciesResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output.AttachedPolicies === \"\") {\n        contents[_AP] = [];\n    } else if (output[_AP] != null && output[_AP][_me] != null) {\n        contents[_AP] = de_attachedPoliciesListType((0, import_smithy_client.getArrayIfSingleItem)(output[_AP][_me]), context);\n    }\n    if (output[_IT] != null) {\n        contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);\n    }\n    if (output[_M] != null) {\n        contents[_M] = (0, import_smithy_client.expectString)(output[_M]);\n    }\n    return contents;\n}, \"de_ListAttachedUserPoliciesResponse\");\nvar de_ListEntitiesForPolicyResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output.PolicyGroups === \"\") {\n        contents[_PG] = [];\n    } else if (output[_PG] != null && output[_PG][_me] != null) {\n        contents[_PG] = de_PolicyGroupListType((0, import_smithy_client.getArrayIfSingleItem)(output[_PG][_me]), context);\n    }\n    if (output.PolicyUsers === \"\") {\n        contents[_PU] = [];\n    } else if (output[_PU] != null && output[_PU][_me] != null) {\n        contents[_PU] = de_PolicyUserListType((0, import_smithy_client.getArrayIfSingleItem)(output[_PU][_me]), context);\n    }\n    if (output.PolicyRoles === \"\") {\n        contents[_PR] = [];\n    } else if (output[_PR] != null && output[_PR][_me] != null) {\n        contents[_PR] = de_PolicyRoleListType((0, import_smithy_client.getArrayIfSingleItem)(output[_PR][_me]), context);\n    }\n    if (output[_IT] != null) {\n        contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);\n    }\n    if (output[_M] != null) {\n        contents[_M] = (0, import_smithy_client.expectString)(output[_M]);\n    }\n    return contents;\n}, \"de_ListEntitiesForPolicyResponse\");\nvar de_ListGroupPoliciesResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output.PolicyNames === \"\") {\n        contents[_PNo] = [];\n    } else if (output[_PNo] != null && output[_PNo][_me] != null) {\n        contents[_PNo] = de_policyNameListType((0, import_smithy_client.getArrayIfSingleItem)(output[_PNo][_me]), context);\n    }\n    if (output[_IT] != null) {\n        contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);\n    }\n    if (output[_M] != null) {\n        contents[_M] = (0, import_smithy_client.expectString)(output[_M]);\n    }\n    return contents;\n}, \"de_ListGroupPoliciesResponse\");\nvar de_ListGroupsForUserResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output.Groups === \"\") {\n        contents[_Gro] = [];\n    } else if (output[_Gro] != null && output[_Gro][_me] != null) {\n        contents[_Gro] = de_groupListType((0, import_smithy_client.getArrayIfSingleItem)(output[_Gro][_me]), context);\n    }\n    if (output[_IT] != null) {\n        contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);\n    }\n    if (output[_M] != null) {\n        contents[_M] = (0, import_smithy_client.expectString)(output[_M]);\n    }\n    return contents;\n}, \"de_ListGroupsForUserResponse\");\nvar de_ListGroupsResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output.Groups === \"\") {\n        contents[_Gro] = [];\n    } else if (output[_Gro] != null && output[_Gro][_me] != null) {\n        contents[_Gro] = de_groupListType((0, import_smithy_client.getArrayIfSingleItem)(output[_Gro][_me]), context);\n    }\n    if (output[_IT] != null) {\n        contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);\n    }\n    if (output[_M] != null) {\n        contents[_M] = (0, import_smithy_client.expectString)(output[_M]);\n    }\n    return contents;\n}, \"de_ListGroupsResponse\");\nvar de_ListInstanceProfilesForRoleResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output.InstanceProfiles === \"\") {\n        contents[_IPn] = [];\n    } else if (output[_IPn] != null && output[_IPn][_me] != null) {\n        contents[_IPn] = de_instanceProfileListType((0, import_smithy_client.getArrayIfSingleItem)(output[_IPn][_me]), context);\n    }\n    if (output[_IT] != null) {\n        contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);\n    }\n    if (output[_M] != null) {\n        contents[_M] = (0, import_smithy_client.expectString)(output[_M]);\n    }\n    return contents;\n}, \"de_ListInstanceProfilesForRoleResponse\");\nvar de_ListInstanceProfilesResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output.InstanceProfiles === \"\") {\n        contents[_IPn] = [];\n    } else if (output[_IPn] != null && output[_IPn][_me] != null) {\n        contents[_IPn] = de_instanceProfileListType((0, import_smithy_client.getArrayIfSingleItem)(output[_IPn][_me]), context);\n    }\n    if (output[_IT] != null) {\n        contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);\n    }\n    if (output[_M] != null) {\n        contents[_M] = (0, import_smithy_client.expectString)(output[_M]);\n    }\n    return contents;\n}, \"de_ListInstanceProfilesResponse\");\nvar de_ListInstanceProfileTagsResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output.Tags === \"\") {\n        contents[_T] = [];\n    } else if (output[_T] != null && output[_T][_me] != null) {\n        contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);\n    }\n    if (output[_IT] != null) {\n        contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);\n    }\n    if (output[_M] != null) {\n        contents[_M] = (0, import_smithy_client.expectString)(output[_M]);\n    }\n    return contents;\n}, \"de_ListInstanceProfileTagsResponse\");\nvar de_ListMFADevicesResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output.MFADevices === \"\") {\n        contents[_MFAD] = [];\n    } else if (output[_MFAD] != null && output[_MFAD][_me] != null) {\n        contents[_MFAD] = de_mfaDeviceListType((0, import_smithy_client.getArrayIfSingleItem)(output[_MFAD][_me]), context);\n    }\n    if (output[_IT] != null) {\n        contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);\n    }\n    if (output[_M] != null) {\n        contents[_M] = (0, import_smithy_client.expectString)(output[_M]);\n    }\n    return contents;\n}, \"de_ListMFADevicesResponse\");\nvar de_ListMFADeviceTagsResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output.Tags === \"\") {\n        contents[_T] = [];\n    } else if (output[_T] != null && output[_T][_me] != null) {\n        contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);\n    }\n    if (output[_IT] != null) {\n        contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);\n    }\n    if (output[_M] != null) {\n        contents[_M] = (0, import_smithy_client.expectString)(output[_M]);\n    }\n    return contents;\n}, \"de_ListMFADeviceTagsResponse\");\nvar de_ListOpenIDConnectProvidersResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output.OpenIDConnectProviderList === \"\") {\n        contents[_OIDCPL] = [];\n    } else if (output[_OIDCPL] != null && output[_OIDCPL][_me] != null) {\n        contents[_OIDCPL] = de_OpenIDConnectProviderListType((0, import_smithy_client.getArrayIfSingleItem)(output[_OIDCPL][_me]), context);\n    }\n    return contents;\n}, \"de_ListOpenIDConnectProvidersResponse\");\nvar de_ListOpenIDConnectProviderTagsResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output.Tags === \"\") {\n        contents[_T] = [];\n    } else if (output[_T] != null && output[_T][_me] != null) {\n        contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);\n    }\n    if (output[_IT] != null) {\n        contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);\n    }\n    if (output[_M] != null) {\n        contents[_M] = (0, import_smithy_client.expectString)(output[_M]);\n    }\n    return contents;\n}, \"de_ListOpenIDConnectProviderTagsResponse\");\nvar de_ListOrganizationsFeaturesResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_OI] != null) {\n        contents[_OI] = (0, import_smithy_client.expectString)(output[_OI]);\n    }\n    if (output.EnabledFeatures === \"\") {\n        contents[_EFn] = [];\n    } else if (output[_EFn] != null && output[_EFn][_me] != null) {\n        contents[_EFn] = de_FeaturesListType((0, import_smithy_client.getArrayIfSingleItem)(output[_EFn][_me]), context);\n    }\n    return contents;\n}, \"de_ListOrganizationsFeaturesResponse\");\nvar de_ListPoliciesGrantingServiceAccessEntry = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_SNer] != null) {\n        contents[_SNer] = (0, import_smithy_client.expectString)(output[_SNer]);\n    }\n    if (output.Policies === \"\") {\n        contents[_Pol] = [];\n    } else if (output[_Pol] != null && output[_Pol][_me] != null) {\n        contents[_Pol] = de_policyGrantingServiceAccessListType((0, import_smithy_client.getArrayIfSingleItem)(output[_Pol][_me]), context);\n    }\n    return contents;\n}, \"de_ListPoliciesGrantingServiceAccessEntry\");\nvar de_ListPoliciesGrantingServiceAccessResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output.PoliciesGrantingServiceAccess === \"\") {\n        contents[_PGSA] = [];\n    } else if (output[_PGSA] != null && output[_PGSA][_me] != null) {\n        contents[_PGSA] = de_listPolicyGrantingServiceAccessResponseListType((0, import_smithy_client.getArrayIfSingleItem)(output[_PGSA][_me]), context);\n    }\n    if (output[_IT] != null) {\n        contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);\n    }\n    if (output[_M] != null) {\n        contents[_M] = (0, import_smithy_client.expectString)(output[_M]);\n    }\n    return contents;\n}, \"de_ListPoliciesGrantingServiceAccessResponse\");\nvar de_ListPoliciesResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output.Policies === \"\") {\n        contents[_Pol] = [];\n    } else if (output[_Pol] != null && output[_Pol][_me] != null) {\n        contents[_Pol] = de_policyListType((0, import_smithy_client.getArrayIfSingleItem)(output[_Pol][_me]), context);\n    }\n    if (output[_IT] != null) {\n        contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);\n    }\n    if (output[_M] != null) {\n        contents[_M] = (0, import_smithy_client.expectString)(output[_M]);\n    }\n    return contents;\n}, \"de_ListPoliciesResponse\");\nvar de_listPolicyGrantingServiceAccessResponseListType = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_ListPoliciesGrantingServiceAccessEntry(entry, context);\n    });\n}, \"de_listPolicyGrantingServiceAccessResponseListType\");\nvar de_ListPolicyTagsResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output.Tags === \"\") {\n        contents[_T] = [];\n    } else if (output[_T] != null && output[_T][_me] != null) {\n        contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);\n    }\n    if (output[_IT] != null) {\n        contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);\n    }\n    if (output[_M] != null) {\n        contents[_M] = (0, import_smithy_client.expectString)(output[_M]);\n    }\n    return contents;\n}, \"de_ListPolicyTagsResponse\");\nvar de_ListPolicyVersionsResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output.Versions === \"\") {\n        contents[_Ve] = [];\n    } else if (output[_Ve] != null && output[_Ve][_me] != null) {\n        contents[_Ve] = de_policyDocumentVersionListType((0, import_smithy_client.getArrayIfSingleItem)(output[_Ve][_me]), context);\n    }\n    if (output[_IT] != null) {\n        contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);\n    }\n    if (output[_M] != null) {\n        contents[_M] = (0, import_smithy_client.expectString)(output[_M]);\n    }\n    return contents;\n}, \"de_ListPolicyVersionsResponse\");\nvar de_ListRolePoliciesResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output.PolicyNames === \"\") {\n        contents[_PNo] = [];\n    } else if (output[_PNo] != null && output[_PNo][_me] != null) {\n        contents[_PNo] = de_policyNameListType((0, import_smithy_client.getArrayIfSingleItem)(output[_PNo][_me]), context);\n    }\n    if (output[_IT] != null) {\n        contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);\n    }\n    if (output[_M] != null) {\n        contents[_M] = (0, import_smithy_client.expectString)(output[_M]);\n    }\n    return contents;\n}, \"de_ListRolePoliciesResponse\");\nvar de_ListRolesResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output.Roles === \"\") {\n        contents[_Rol] = [];\n    } else if (output[_Rol] != null && output[_Rol][_me] != null) {\n        contents[_Rol] = de_roleListType((0, import_smithy_client.getArrayIfSingleItem)(output[_Rol][_me]), context);\n    }\n    if (output[_IT] != null) {\n        contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);\n    }\n    if (output[_M] != null) {\n        contents[_M] = (0, import_smithy_client.expectString)(output[_M]);\n    }\n    return contents;\n}, \"de_ListRolesResponse\");\nvar de_ListRoleTagsResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output.Tags === \"\") {\n        contents[_T] = [];\n    } else if (output[_T] != null && output[_T][_me] != null) {\n        contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);\n    }\n    if (output[_IT] != null) {\n        contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);\n    }\n    if (output[_M] != null) {\n        contents[_M] = (0, import_smithy_client.expectString)(output[_M]);\n    }\n    return contents;\n}, \"de_ListRoleTagsResponse\");\nvar de_ListSAMLProvidersResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output.SAMLProviderList === \"\") {\n        contents[_SAMLPL] = [];\n    } else if (output[_SAMLPL] != null && output[_SAMLPL][_me] != null) {\n        contents[_SAMLPL] = de_SAMLProviderListType((0, import_smithy_client.getArrayIfSingleItem)(output[_SAMLPL][_me]), context);\n    }\n    return contents;\n}, \"de_ListSAMLProvidersResponse\");\nvar de_ListSAMLProviderTagsResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output.Tags === \"\") {\n        contents[_T] = [];\n    } else if (output[_T] != null && output[_T][_me] != null) {\n        contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);\n    }\n    if (output[_IT] != null) {\n        contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);\n    }\n    if (output[_M] != null) {\n        contents[_M] = (0, import_smithy_client.expectString)(output[_M]);\n    }\n    return contents;\n}, \"de_ListSAMLProviderTagsResponse\");\nvar de_ListServerCertificatesResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output.ServerCertificateMetadataList === \"\") {\n        contents[_SCML] = [];\n    } else if (output[_SCML] != null && output[_SCML][_me] != null) {\n        contents[_SCML] = de_serverCertificateMetadataListType((0, import_smithy_client.getArrayIfSingleItem)(output[_SCML][_me]), context);\n    }\n    if (output[_IT] != null) {\n        contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);\n    }\n    if (output[_M] != null) {\n        contents[_M] = (0, import_smithy_client.expectString)(output[_M]);\n    }\n    return contents;\n}, \"de_ListServerCertificatesResponse\");\nvar de_ListServerCertificateTagsResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output.Tags === \"\") {\n        contents[_T] = [];\n    } else if (output[_T] != null && output[_T][_me] != null) {\n        contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);\n    }\n    if (output[_IT] != null) {\n        contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);\n    }\n    if (output[_M] != null) {\n        contents[_M] = (0, import_smithy_client.expectString)(output[_M]);\n    }\n    return contents;\n}, \"de_ListServerCertificateTagsResponse\");\nvar de_ListServiceSpecificCredentialsResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output.ServiceSpecificCredentials === \"\") {\n        contents[_SSCe] = [];\n    } else if (output[_SSCe] != null && output[_SSCe][_me] != null) {\n        contents[_SSCe] = de_ServiceSpecificCredentialsListType((0, import_smithy_client.getArrayIfSingleItem)(output[_SSCe][_me]), context);\n    }\n    return contents;\n}, \"de_ListServiceSpecificCredentialsResponse\");\nvar de_ListSigningCertificatesResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output.Certificates === \"\") {\n        contents[_Cer] = [];\n    } else if (output[_Cer] != null && output[_Cer][_me] != null) {\n        contents[_Cer] = de_certificateListType((0, import_smithy_client.getArrayIfSingleItem)(output[_Cer][_me]), context);\n    }\n    if (output[_IT] != null) {\n        contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);\n    }\n    if (output[_M] != null) {\n        contents[_M] = (0, import_smithy_client.expectString)(output[_M]);\n    }\n    return contents;\n}, \"de_ListSigningCertificatesResponse\");\nvar de_ListSSHPublicKeysResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output.SSHPublicKeys === \"\") {\n        contents[_SSHPKu] = [];\n    } else if (output[_SSHPKu] != null && output[_SSHPKu][_me] != null) {\n        contents[_SSHPKu] = de_SSHPublicKeyListType((0, import_smithy_client.getArrayIfSingleItem)(output[_SSHPKu][_me]), context);\n    }\n    if (output[_IT] != null) {\n        contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);\n    }\n    if (output[_M] != null) {\n        contents[_M] = (0, import_smithy_client.expectString)(output[_M]);\n    }\n    return contents;\n}, \"de_ListSSHPublicKeysResponse\");\nvar de_ListUserPoliciesResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output.PolicyNames === \"\") {\n        contents[_PNo] = [];\n    } else if (output[_PNo] != null && output[_PNo][_me] != null) {\n        contents[_PNo] = de_policyNameListType((0, import_smithy_client.getArrayIfSingleItem)(output[_PNo][_me]), context);\n    }\n    if (output[_IT] != null) {\n        contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);\n    }\n    if (output[_M] != null) {\n        contents[_M] = (0, import_smithy_client.expectString)(output[_M]);\n    }\n    return contents;\n}, \"de_ListUserPoliciesResponse\");\nvar de_ListUsersResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output.Users === \"\") {\n        contents[_Use] = [];\n    } else if (output[_Use] != null && output[_Use][_me] != null) {\n        contents[_Use] = de_userListType((0, import_smithy_client.getArrayIfSingleItem)(output[_Use][_me]), context);\n    }\n    if (output[_IT] != null) {\n        contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);\n    }\n    if (output[_M] != null) {\n        contents[_M] = (0, import_smithy_client.expectString)(output[_M]);\n    }\n    return contents;\n}, \"de_ListUsersResponse\");\nvar de_ListUserTagsResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output.Tags === \"\") {\n        contents[_T] = [];\n    } else if (output[_T] != null && output[_T][_me] != null) {\n        contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);\n    }\n    if (output[_IT] != null) {\n        contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);\n    }\n    if (output[_M] != null) {\n        contents[_M] = (0, import_smithy_client.expectString)(output[_M]);\n    }\n    return contents;\n}, \"de_ListUserTagsResponse\");\nvar de_ListVirtualMFADevicesResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output.VirtualMFADevices === \"\") {\n        contents[_VMFADi] = [];\n    } else if (output[_VMFADi] != null && output[_VMFADi][_me] != null) {\n        contents[_VMFADi] = de_virtualMFADeviceListType((0, import_smithy_client.getArrayIfSingleItem)(output[_VMFADi][_me]), context);\n    }\n    if (output[_IT] != null) {\n        contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);\n    }\n    if (output[_M] != null) {\n        contents[_M] = (0, import_smithy_client.expectString)(output[_M]);\n    }\n    return contents;\n}, \"de_ListVirtualMFADevicesResponse\");\nvar de_LoginProfile = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_UN] != null) {\n        contents[_UN] = (0, import_smithy_client.expectString)(output[_UN]);\n    }\n    if (output[_CD] != null) {\n        contents[_CD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CD]));\n    }\n    if (output[_PRR] != null) {\n        contents[_PRR] = (0, import_smithy_client.parseBoolean)(output[_PRR]);\n    }\n    return contents;\n}, \"de_LoginProfile\");\nvar de_MalformedCertificateException = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n    }\n    return contents;\n}, \"de_MalformedCertificateException\");\nvar de_MalformedPolicyDocumentException = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n    }\n    return contents;\n}, \"de_MalformedPolicyDocumentException\");\nvar de_ManagedPolicyDetail = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_PN] != null) {\n        contents[_PN] = (0, import_smithy_client.expectString)(output[_PN]);\n    }\n    if (output[_PI] != null) {\n        contents[_PI] = (0, import_smithy_client.expectString)(output[_PI]);\n    }\n    if (output[_Ar] != null) {\n        contents[_Ar] = (0, import_smithy_client.expectString)(output[_Ar]);\n    }\n    if (output[_P] != null) {\n        contents[_P] = (0, import_smithy_client.expectString)(output[_P]);\n    }\n    if (output[_DVI] != null) {\n        contents[_DVI] = (0, import_smithy_client.expectString)(output[_DVI]);\n    }\n    if (output[_ACt] != null) {\n        contents[_ACt] = (0, import_smithy_client.strictParseInt32)(output[_ACt]);\n    }\n    if (output[_PBUC] != null) {\n        contents[_PBUC] = (0, import_smithy_client.strictParseInt32)(output[_PBUC]);\n    }\n    if (output[_IA] != null) {\n        contents[_IA] = (0, import_smithy_client.parseBoolean)(output[_IA]);\n    }\n    if (output[_D] != null) {\n        contents[_D] = (0, import_smithy_client.expectString)(output[_D]);\n    }\n    if (output[_CD] != null) {\n        contents[_CD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CD]));\n    }\n    if (output[_UD] != null) {\n        contents[_UD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_UD]));\n    }\n    if (output.PolicyVersionList === \"\") {\n        contents[_PVL] = [];\n    } else if (output[_PVL] != null && output[_PVL][_me] != null) {\n        contents[_PVL] = de_policyDocumentVersionListType((0, import_smithy_client.getArrayIfSingleItem)(output[_PVL][_me]), context);\n    }\n    return contents;\n}, \"de_ManagedPolicyDetail\");\nvar de_ManagedPolicyDetailListType = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_ManagedPolicyDetail(entry, context);\n    });\n}, \"de_ManagedPolicyDetailListType\");\nvar de_MFADevice = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_UN] != null) {\n        contents[_UN] = (0, import_smithy_client.expectString)(output[_UN]);\n    }\n    if (output[_SNe] != null) {\n        contents[_SNe] = (0, import_smithy_client.expectString)(output[_SNe]);\n    }\n    if (output[_EDn] != null) {\n        contents[_EDn] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_EDn]));\n    }\n    return contents;\n}, \"de_MFADevice\");\nvar de_mfaDeviceListType = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_MFADevice(entry, context);\n    });\n}, \"de_mfaDeviceListType\");\nvar de_NoSuchEntityException = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n    }\n    return contents;\n}, \"de_NoSuchEntityException\");\nvar de_OpenIDConnectProviderListEntry = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_Ar] != null) {\n        contents[_Ar] = (0, import_smithy_client.expectString)(output[_Ar]);\n    }\n    return contents;\n}, \"de_OpenIDConnectProviderListEntry\");\nvar de_OpenIDConnectProviderListType = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_OpenIDConnectProviderListEntry(entry, context);\n    });\n}, \"de_OpenIDConnectProviderListType\");\nvar de_OpenIdIdpCommunicationErrorException = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n    }\n    return contents;\n}, \"de_OpenIdIdpCommunicationErrorException\");\nvar de_OrganizationNotFoundException = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_Me] != null) {\n        contents[_Me] = (0, import_smithy_client.expectString)(output[_Me]);\n    }\n    return contents;\n}, \"de_OrganizationNotFoundException\");\nvar de_OrganizationNotInAllFeaturesModeException = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_Me] != null) {\n        contents[_Me] = (0, import_smithy_client.expectString)(output[_Me]);\n    }\n    return contents;\n}, \"de_OrganizationNotInAllFeaturesModeException\");\nvar de_OrganizationsDecisionDetail = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_ABO] != null) {\n        contents[_ABO] = (0, import_smithy_client.parseBoolean)(output[_ABO]);\n    }\n    return contents;\n}, \"de_OrganizationsDecisionDetail\");\nvar de_PasswordPolicy = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_MPL] != null) {\n        contents[_MPL] = (0, import_smithy_client.strictParseInt32)(output[_MPL]);\n    }\n    if (output[_RS] != null) {\n        contents[_RS] = (0, import_smithy_client.parseBoolean)(output[_RS]);\n    }\n    if (output[_RNe] != null) {\n        contents[_RNe] = (0, import_smithy_client.parseBoolean)(output[_RNe]);\n    }\n    if (output[_RUC] != null) {\n        contents[_RUC] = (0, import_smithy_client.parseBoolean)(output[_RUC]);\n    }\n    if (output[_RLC] != null) {\n        contents[_RLC] = (0, import_smithy_client.parseBoolean)(output[_RLC]);\n    }\n    if (output[_AUTCP] != null) {\n        contents[_AUTCP] = (0, import_smithy_client.parseBoolean)(output[_AUTCP]);\n    }\n    if (output[_EPx] != null) {\n        contents[_EPx] = (0, import_smithy_client.parseBoolean)(output[_EPx]);\n    }\n    if (output[_MPA] != null) {\n        contents[_MPA] = (0, import_smithy_client.strictParseInt32)(output[_MPA]);\n    }\n    if (output[_PRPa] != null) {\n        contents[_PRPa] = (0, import_smithy_client.strictParseInt32)(output[_PRPa]);\n    }\n    if (output[_HE] != null) {\n        contents[_HE] = (0, import_smithy_client.parseBoolean)(output[_HE]);\n    }\n    return contents;\n}, \"de_PasswordPolicy\");\nvar de_PasswordPolicyViolationException = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n    }\n    return contents;\n}, \"de_PasswordPolicyViolationException\");\nvar de_PermissionsBoundaryDecisionDetail = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_ABPB] != null) {\n        contents[_ABPB] = (0, import_smithy_client.parseBoolean)(output[_ABPB]);\n    }\n    return contents;\n}, \"de_PermissionsBoundaryDecisionDetail\");\nvar de_Policy = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_PN] != null) {\n        contents[_PN] = (0, import_smithy_client.expectString)(output[_PN]);\n    }\n    if (output[_PI] != null) {\n        contents[_PI] = (0, import_smithy_client.expectString)(output[_PI]);\n    }\n    if (output[_Ar] != null) {\n        contents[_Ar] = (0, import_smithy_client.expectString)(output[_Ar]);\n    }\n    if (output[_P] != null) {\n        contents[_P] = (0, import_smithy_client.expectString)(output[_P]);\n    }\n    if (output[_DVI] != null) {\n        contents[_DVI] = (0, import_smithy_client.expectString)(output[_DVI]);\n    }\n    if (output[_ACt] != null) {\n        contents[_ACt] = (0, import_smithy_client.strictParseInt32)(output[_ACt]);\n    }\n    if (output[_PBUC] != null) {\n        contents[_PBUC] = (0, import_smithy_client.strictParseInt32)(output[_PBUC]);\n    }\n    if (output[_IA] != null) {\n        contents[_IA] = (0, import_smithy_client.parseBoolean)(output[_IA]);\n    }\n    if (output[_D] != null) {\n        contents[_D] = (0, import_smithy_client.expectString)(output[_D]);\n    }\n    if (output[_CD] != null) {\n        contents[_CD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CD]));\n    }\n    if (output[_UD] != null) {\n        contents[_UD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_UD]));\n    }\n    if (output.Tags === \"\") {\n        contents[_T] = [];\n    } else if (output[_T] != null && output[_T][_me] != null) {\n        contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);\n    }\n    return contents;\n}, \"de_Policy\");\nvar de_PolicyDetail = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_PN] != null) {\n        contents[_PN] = (0, import_smithy_client.expectString)(output[_PN]);\n    }\n    if (output[_PD] != null) {\n        contents[_PD] = (0, import_smithy_client.expectString)(output[_PD]);\n    }\n    return contents;\n}, \"de_PolicyDetail\");\nvar de_policyDetailListType = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_PolicyDetail(entry, context);\n    });\n}, \"de_policyDetailListType\");\nvar de_policyDocumentVersionListType = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_PolicyVersion(entry, context);\n    });\n}, \"de_policyDocumentVersionListType\");\nvar de_PolicyEvaluationException = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n    }\n    return contents;\n}, \"de_PolicyEvaluationException\");\nvar de_PolicyGrantingServiceAccess = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_PN] != null) {\n        contents[_PN] = (0, import_smithy_client.expectString)(output[_PN]);\n    }\n    if (output[_PT] != null) {\n        contents[_PT] = (0, import_smithy_client.expectString)(output[_PT]);\n    }\n    if (output[_PA] != null) {\n        contents[_PA] = (0, import_smithy_client.expectString)(output[_PA]);\n    }\n    if (output[_ET] != null) {\n        contents[_ET] = (0, import_smithy_client.expectString)(output[_ET]);\n    }\n    if (output[_EN] != null) {\n        contents[_EN] = (0, import_smithy_client.expectString)(output[_EN]);\n    }\n    return contents;\n}, \"de_PolicyGrantingServiceAccess\");\nvar de_policyGrantingServiceAccessListType = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_PolicyGrantingServiceAccess(entry, context);\n    });\n}, \"de_policyGrantingServiceAccessListType\");\nvar de_PolicyGroup = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_GN] != null) {\n        contents[_GN] = (0, import_smithy_client.expectString)(output[_GN]);\n    }\n    if (output[_GI] != null) {\n        contents[_GI] = (0, import_smithy_client.expectString)(output[_GI]);\n    }\n    return contents;\n}, \"de_PolicyGroup\");\nvar de_PolicyGroupListType = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_PolicyGroup(entry, context);\n    });\n}, \"de_PolicyGroupListType\");\nvar de_policyListType = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_Policy(entry, context);\n    });\n}, \"de_policyListType\");\nvar de_policyNameListType = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return (0, import_smithy_client.expectString)(entry);\n    });\n}, \"de_policyNameListType\");\nvar de_PolicyNotAttachableException = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n    }\n    return contents;\n}, \"de_PolicyNotAttachableException\");\nvar de_PolicyRole = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_RN] != null) {\n        contents[_RN] = (0, import_smithy_client.expectString)(output[_RN]);\n    }\n    if (output[_RI] != null) {\n        contents[_RI] = (0, import_smithy_client.expectString)(output[_RI]);\n    }\n    return contents;\n}, \"de_PolicyRole\");\nvar de_PolicyRoleListType = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_PolicyRole(entry, context);\n    });\n}, \"de_PolicyRoleListType\");\nvar de_PolicyUser = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_UN] != null) {\n        contents[_UN] = (0, import_smithy_client.expectString)(output[_UN]);\n    }\n    if (output[_UI] != null) {\n        contents[_UI] = (0, import_smithy_client.expectString)(output[_UI]);\n    }\n    return contents;\n}, \"de_PolicyUser\");\nvar de_PolicyUserListType = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_PolicyUser(entry, context);\n    });\n}, \"de_PolicyUserListType\");\nvar de_PolicyVersion = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_Do] != null) {\n        contents[_Do] = (0, import_smithy_client.expectString)(output[_Do]);\n    }\n    if (output[_VI] != null) {\n        contents[_VI] = (0, import_smithy_client.expectString)(output[_VI]);\n    }\n    if (output[_IDV] != null) {\n        contents[_IDV] = (0, import_smithy_client.parseBoolean)(output[_IDV]);\n    }\n    if (output[_CD] != null) {\n        contents[_CD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CD]));\n    }\n    return contents;\n}, \"de_PolicyVersion\");\nvar de_Position = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_L] != null) {\n        contents[_L] = (0, import_smithy_client.strictParseInt32)(output[_L]);\n    }\n    if (output[_Col] != null) {\n        contents[_Col] = (0, import_smithy_client.strictParseInt32)(output[_Col]);\n    }\n    return contents;\n}, \"de_Position\");\nvar de_privateKeyList = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_SAMLPrivateKey(entry, context);\n    });\n}, \"de_privateKeyList\");\nvar de_ReportGenerationLimitExceededException = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n    }\n    return contents;\n}, \"de_ReportGenerationLimitExceededException\");\nvar de_ResetServiceSpecificCredentialResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_SSC] != null) {\n        contents[_SSC] = de_ServiceSpecificCredential(output[_SSC], context);\n    }\n    return contents;\n}, \"de_ResetServiceSpecificCredentialResponse\");\nvar de_ResourceSpecificResult = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_ERN] != null) {\n        contents[_ERN] = (0, import_smithy_client.expectString)(output[_ERN]);\n    }\n    if (output[_ERD] != null) {\n        contents[_ERD] = (0, import_smithy_client.expectString)(output[_ERD]);\n    }\n    if (output.MatchedStatements === \"\") {\n        contents[_MS] = [];\n    } else if (output[_MS] != null && output[_MS][_me] != null) {\n        contents[_MS] = de_StatementListType((0, import_smithy_client.getArrayIfSingleItem)(output[_MS][_me]), context);\n    }\n    if (output.MissingContextValues === \"\") {\n        contents[_MCV] = [];\n    } else if (output[_MCV] != null && output[_MCV][_me] != null) {\n        contents[_MCV] = de_ContextKeyNamesResultListType((0, import_smithy_client.getArrayIfSingleItem)(output[_MCV][_me]), context);\n    }\n    if (output.EvalDecisionDetails === \"\") {\n        contents[_EDD] = {};\n    } else if (output[_EDD] != null && output[_EDD][_e] != null) {\n        contents[_EDD] = de_EvalDecisionDetailsType((0, import_smithy_client.getArrayIfSingleItem)(output[_EDD][_e]), context);\n    }\n    if (output[_PBDD] != null) {\n        contents[_PBDD] = de_PermissionsBoundaryDecisionDetail(output[_PBDD], context);\n    }\n    return contents;\n}, \"de_ResourceSpecificResult\");\nvar de_ResourceSpecificResultListType = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_ResourceSpecificResult(entry, context);\n    });\n}, \"de_ResourceSpecificResultListType\");\nvar de_Role = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_P] != null) {\n        contents[_P] = (0, import_smithy_client.expectString)(output[_P]);\n    }\n    if (output[_RN] != null) {\n        contents[_RN] = (0, import_smithy_client.expectString)(output[_RN]);\n    }\n    if (output[_RI] != null) {\n        contents[_RI] = (0, import_smithy_client.expectString)(output[_RI]);\n    }\n    if (output[_Ar] != null) {\n        contents[_Ar] = (0, import_smithy_client.expectString)(output[_Ar]);\n    }\n    if (output[_CD] != null) {\n        contents[_CD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CD]));\n    }\n    if (output[_ARPD] != null) {\n        contents[_ARPD] = (0, import_smithy_client.expectString)(output[_ARPD]);\n    }\n    if (output[_D] != null) {\n        contents[_D] = (0, import_smithy_client.expectString)(output[_D]);\n    }\n    if (output[_MSD] != null) {\n        contents[_MSD] = (0, import_smithy_client.strictParseInt32)(output[_MSD]);\n    }\n    if (output[_PB] != null) {\n        contents[_PB] = de_AttachedPermissionsBoundary(output[_PB], context);\n    }\n    if (output.Tags === \"\") {\n        contents[_T] = [];\n    } else if (output[_T] != null && output[_T][_me] != null) {\n        contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);\n    }\n    if (output[_RLU] != null) {\n        contents[_RLU] = de_RoleLastUsed(output[_RLU], context);\n    }\n    return contents;\n}, \"de_Role\");\nvar de_RoleDetail = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_P] != null) {\n        contents[_P] = (0, import_smithy_client.expectString)(output[_P]);\n    }\n    if (output[_RN] != null) {\n        contents[_RN] = (0, import_smithy_client.expectString)(output[_RN]);\n    }\n    if (output[_RI] != null) {\n        contents[_RI] = (0, import_smithy_client.expectString)(output[_RI]);\n    }\n    if (output[_Ar] != null) {\n        contents[_Ar] = (0, import_smithy_client.expectString)(output[_Ar]);\n    }\n    if (output[_CD] != null) {\n        contents[_CD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CD]));\n    }\n    if (output[_ARPD] != null) {\n        contents[_ARPD] = (0, import_smithy_client.expectString)(output[_ARPD]);\n    }\n    if (output.InstanceProfileList === \"\") {\n        contents[_IPL] = [];\n    } else if (output[_IPL] != null && output[_IPL][_me] != null) {\n        contents[_IPL] = de_instanceProfileListType((0, import_smithy_client.getArrayIfSingleItem)(output[_IPL][_me]), context);\n    }\n    if (output.RolePolicyList === \"\") {\n        contents[_RPL] = [];\n    } else if (output[_RPL] != null && output[_RPL][_me] != null) {\n        contents[_RPL] = de_policyDetailListType((0, import_smithy_client.getArrayIfSingleItem)(output[_RPL][_me]), context);\n    }\n    if (output.AttachedManagedPolicies === \"\") {\n        contents[_AMP] = [];\n    } else if (output[_AMP] != null && output[_AMP][_me] != null) {\n        contents[_AMP] = de_attachedPoliciesListType((0, import_smithy_client.getArrayIfSingleItem)(output[_AMP][_me]), context);\n    }\n    if (output[_PB] != null) {\n        contents[_PB] = de_AttachedPermissionsBoundary(output[_PB], context);\n    }\n    if (output.Tags === \"\") {\n        contents[_T] = [];\n    } else if (output[_T] != null && output[_T][_me] != null) {\n        contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);\n    }\n    if (output[_RLU] != null) {\n        contents[_RLU] = de_RoleLastUsed(output[_RLU], context);\n    }\n    return contents;\n}, \"de_RoleDetail\");\nvar de_roleDetailListType = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_RoleDetail(entry, context);\n    });\n}, \"de_roleDetailListType\");\nvar de_RoleLastUsed = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_LUD] != null) {\n        contents[_LUD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_LUD]));\n    }\n    if (output[_R] != null) {\n        contents[_R] = (0, import_smithy_client.expectString)(output[_R]);\n    }\n    return contents;\n}, \"de_RoleLastUsed\");\nvar de_roleListType = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_Role(entry, context);\n    });\n}, \"de_roleListType\");\nvar de_RoleUsageListType = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_RoleUsageType(entry, context);\n    });\n}, \"de_RoleUsageListType\");\nvar de_RoleUsageType = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_R] != null) {\n        contents[_R] = (0, import_smithy_client.expectString)(output[_R]);\n    }\n    if (output.Resources === \"\") {\n        contents[_Res] = [];\n    } else if (output[_Res] != null && output[_Res][_me] != null) {\n        contents[_Res] = de_ArnListType((0, import_smithy_client.getArrayIfSingleItem)(output[_Res][_me]), context);\n    }\n    return contents;\n}, \"de_RoleUsageType\");\nvar de_SAMLPrivateKey = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_KI] != null) {\n        contents[_KI] = (0, import_smithy_client.expectString)(output[_KI]);\n    }\n    if (output[_Ti] != null) {\n        contents[_Ti] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_Ti]));\n    }\n    return contents;\n}, \"de_SAMLPrivateKey\");\nvar de_SAMLProviderListEntry = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_Ar] != null) {\n        contents[_Ar] = (0, import_smithy_client.expectString)(output[_Ar]);\n    }\n    if (output[_VU] != null) {\n        contents[_VU] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_VU]));\n    }\n    if (output[_CD] != null) {\n        contents[_CD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CD]));\n    }\n    return contents;\n}, \"de_SAMLProviderListEntry\");\nvar de_SAMLProviderListType = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_SAMLProviderListEntry(entry, context);\n    });\n}, \"de_SAMLProviderListType\");\nvar de_ServerCertificate = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_SCM] != null) {\n        contents[_SCM] = de_ServerCertificateMetadata(output[_SCM], context);\n    }\n    if (output[_CB] != null) {\n        contents[_CB] = (0, import_smithy_client.expectString)(output[_CB]);\n    }\n    if (output[_CC] != null) {\n        contents[_CC] = (0, import_smithy_client.expectString)(output[_CC]);\n    }\n    if (output.Tags === \"\") {\n        contents[_T] = [];\n    } else if (output[_T] != null && output[_T][_me] != null) {\n        contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);\n    }\n    return contents;\n}, \"de_ServerCertificate\");\nvar de_ServerCertificateMetadata = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_P] != null) {\n        contents[_P] = (0, import_smithy_client.expectString)(output[_P]);\n    }\n    if (output[_SCN] != null) {\n        contents[_SCN] = (0, import_smithy_client.expectString)(output[_SCN]);\n    }\n    if (output[_SCI] != null) {\n        contents[_SCI] = (0, import_smithy_client.expectString)(output[_SCI]);\n    }\n    if (output[_Ar] != null) {\n        contents[_Ar] = (0, import_smithy_client.expectString)(output[_Ar]);\n    }\n    if (output[_UDp] != null) {\n        contents[_UDp] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_UDp]));\n    }\n    if (output[_Ex] != null) {\n        contents[_Ex] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_Ex]));\n    }\n    return contents;\n}, \"de_ServerCertificateMetadata\");\nvar de_serverCertificateMetadataListType = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_ServerCertificateMetadata(entry, context);\n    });\n}, \"de_serverCertificateMetadataListType\");\nvar de_ServiceAccessNotEnabledException = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_Me] != null) {\n        contents[_Me] = (0, import_smithy_client.expectString)(output[_Me]);\n    }\n    return contents;\n}, \"de_ServiceAccessNotEnabledException\");\nvar de_ServiceFailureException = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n    }\n    return contents;\n}, \"de_ServiceFailureException\");\nvar de_ServiceLastAccessed = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_SN] != null) {\n        contents[_SN] = (0, import_smithy_client.expectString)(output[_SN]);\n    }\n    if (output[_LA] != null) {\n        contents[_LA] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_LA]));\n    }\n    if (output[_SNer] != null) {\n        contents[_SNer] = (0, import_smithy_client.expectString)(output[_SNer]);\n    }\n    if (output[_LAE] != null) {\n        contents[_LAE] = (0, import_smithy_client.expectString)(output[_LAE]);\n    }\n    if (output[_LAR] != null) {\n        contents[_LAR] = (0, import_smithy_client.expectString)(output[_LAR]);\n    }\n    if (output[_TAE] != null) {\n        contents[_TAE] = (0, import_smithy_client.strictParseInt32)(output[_TAE]);\n    }\n    if (output.TrackedActionsLastAccessed === \"\") {\n        contents[_TALA] = [];\n    } else if (output[_TALA] != null && output[_TALA][_me] != null) {\n        contents[_TALA] = de_TrackedActionsLastAccessed((0, import_smithy_client.getArrayIfSingleItem)(output[_TALA][_me]), context);\n    }\n    return contents;\n}, \"de_ServiceLastAccessed\");\nvar de_ServiceNotSupportedException = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n    }\n    return contents;\n}, \"de_ServiceNotSupportedException\");\nvar de_ServicesLastAccessed = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_ServiceLastAccessed(entry, context);\n    });\n}, \"de_ServicesLastAccessed\");\nvar de_ServiceSpecificCredential = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_CD] != null) {\n        contents[_CD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CD]));\n    }\n    if (output[_SN] != null) {\n        contents[_SN] = (0, import_smithy_client.expectString)(output[_SN]);\n    }\n    if (output[_SUN] != null) {\n        contents[_SUN] = (0, import_smithy_client.expectString)(output[_SUN]);\n    }\n    if (output[_SP] != null) {\n        contents[_SP] = (0, import_smithy_client.expectString)(output[_SP]);\n    }\n    if (output[_SSCI] != null) {\n        contents[_SSCI] = (0, import_smithy_client.expectString)(output[_SSCI]);\n    }\n    if (output[_UN] != null) {\n        contents[_UN] = (0, import_smithy_client.expectString)(output[_UN]);\n    }\n    if (output[_St] != null) {\n        contents[_St] = (0, import_smithy_client.expectString)(output[_St]);\n    }\n    return contents;\n}, \"de_ServiceSpecificCredential\");\nvar de_ServiceSpecificCredentialMetadata = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_UN] != null) {\n        contents[_UN] = (0, import_smithy_client.expectString)(output[_UN]);\n    }\n    if (output[_St] != null) {\n        contents[_St] = (0, import_smithy_client.expectString)(output[_St]);\n    }\n    if (output[_SUN] != null) {\n        contents[_SUN] = (0, import_smithy_client.expectString)(output[_SUN]);\n    }\n    if (output[_CD] != null) {\n        contents[_CD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CD]));\n    }\n    if (output[_SSCI] != null) {\n        contents[_SSCI] = (0, import_smithy_client.expectString)(output[_SSCI]);\n    }\n    if (output[_SN] != null) {\n        contents[_SN] = (0, import_smithy_client.expectString)(output[_SN]);\n    }\n    return contents;\n}, \"de_ServiceSpecificCredentialMetadata\");\nvar de_ServiceSpecificCredentialsListType = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_ServiceSpecificCredentialMetadata(entry, context);\n    });\n}, \"de_ServiceSpecificCredentialsListType\");\nvar de_SigningCertificate = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_UN] != null) {\n        contents[_UN] = (0, import_smithy_client.expectString)(output[_UN]);\n    }\n    if (output[_CI] != null) {\n        contents[_CI] = (0, import_smithy_client.expectString)(output[_CI]);\n    }\n    if (output[_CB] != null) {\n        contents[_CB] = (0, import_smithy_client.expectString)(output[_CB]);\n    }\n    if (output[_St] != null) {\n        contents[_St] = (0, import_smithy_client.expectString)(output[_St]);\n    }\n    if (output[_UDp] != null) {\n        contents[_UDp] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_UDp]));\n    }\n    return contents;\n}, \"de_SigningCertificate\");\nvar de_SimulatePolicyResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output.EvaluationResults === \"\") {\n        contents[_ER] = [];\n    } else if (output[_ER] != null && output[_ER][_me] != null) {\n        contents[_ER] = de_EvaluationResultsListType((0, import_smithy_client.getArrayIfSingleItem)(output[_ER][_me]), context);\n    }\n    if (output[_IT] != null) {\n        contents[_IT] = (0, import_smithy_client.parseBoolean)(output[_IT]);\n    }\n    if (output[_M] != null) {\n        contents[_M] = (0, import_smithy_client.expectString)(output[_M]);\n    }\n    return contents;\n}, \"de_SimulatePolicyResponse\");\nvar de_SSHPublicKey = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_UN] != null) {\n        contents[_UN] = (0, import_smithy_client.expectString)(output[_UN]);\n    }\n    if (output[_SSHPKI] != null) {\n        contents[_SSHPKI] = (0, import_smithy_client.expectString)(output[_SSHPKI]);\n    }\n    if (output[_Fi] != null) {\n        contents[_Fi] = (0, import_smithy_client.expectString)(output[_Fi]);\n    }\n    if (output[_SSHPKB] != null) {\n        contents[_SSHPKB] = (0, import_smithy_client.expectString)(output[_SSHPKB]);\n    }\n    if (output[_St] != null) {\n        contents[_St] = (0, import_smithy_client.expectString)(output[_St]);\n    }\n    if (output[_UDp] != null) {\n        contents[_UDp] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_UDp]));\n    }\n    return contents;\n}, \"de_SSHPublicKey\");\nvar de_SSHPublicKeyListType = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_SSHPublicKeyMetadata(entry, context);\n    });\n}, \"de_SSHPublicKeyListType\");\nvar de_SSHPublicKeyMetadata = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_UN] != null) {\n        contents[_UN] = (0, import_smithy_client.expectString)(output[_UN]);\n    }\n    if (output[_SSHPKI] != null) {\n        contents[_SSHPKI] = (0, import_smithy_client.expectString)(output[_SSHPKI]);\n    }\n    if (output[_St] != null) {\n        contents[_St] = (0, import_smithy_client.expectString)(output[_St]);\n    }\n    if (output[_UDp] != null) {\n        contents[_UDp] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_UDp]));\n    }\n    return contents;\n}, \"de_SSHPublicKeyMetadata\");\nvar de_Statement = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_SPI] != null) {\n        contents[_SPI] = (0, import_smithy_client.expectString)(output[_SPI]);\n    }\n    if (output[_SPT] != null) {\n        contents[_SPT] = (0, import_smithy_client.expectString)(output[_SPT]);\n    }\n    if (output[_SPt] != null) {\n        contents[_SPt] = de_Position(output[_SPt], context);\n    }\n    if (output[_EPn] != null) {\n        contents[_EPn] = de_Position(output[_EPn], context);\n    }\n    return contents;\n}, \"de_Statement\");\nvar de_StatementListType = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_Statement(entry, context);\n    });\n}, \"de_StatementListType\");\nvar de_summaryMapType = /* @__PURE__ */ __name((output, context)=>{\n    return output.reduce((acc, pair)=>{\n        if (pair[\"value\"] === null) {\n            return acc;\n        }\n        acc[pair[\"key\"]] = (0, import_smithy_client.strictParseInt32)(pair[\"value\"]);\n        return acc;\n    }, {});\n}, \"de_summaryMapType\");\nvar de_Tag = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_K] != null) {\n        contents[_K] = (0, import_smithy_client.expectString)(output[_K]);\n    }\n    if (output[_Va] != null) {\n        contents[_Va] = (0, import_smithy_client.expectString)(output[_Va]);\n    }\n    return contents;\n}, \"de_Tag\");\nvar de_tagListType = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_Tag(entry, context);\n    });\n}, \"de_tagListType\");\nvar de_thumbprintListType = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return (0, import_smithy_client.expectString)(entry);\n    });\n}, \"de_thumbprintListType\");\nvar de_TrackedActionLastAccessed = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_ANc] != null) {\n        contents[_ANc] = (0, import_smithy_client.expectString)(output[_ANc]);\n    }\n    if (output[_LAEa] != null) {\n        contents[_LAEa] = (0, import_smithy_client.expectString)(output[_LAEa]);\n    }\n    if (output[_LATa] != null) {\n        contents[_LATa] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_LATa]));\n    }\n    if (output[_LARa] != null) {\n        contents[_LARa] = (0, import_smithy_client.expectString)(output[_LARa]);\n    }\n    return contents;\n}, \"de_TrackedActionLastAccessed\");\nvar de_TrackedActionsLastAccessed = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_TrackedActionLastAccessed(entry, context);\n    });\n}, \"de_TrackedActionsLastAccessed\");\nvar de_UnmodifiableEntityException = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n    }\n    return contents;\n}, \"de_UnmodifiableEntityException\");\nvar de_UnrecognizedPublicKeyEncodingException = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n    }\n    return contents;\n}, \"de_UnrecognizedPublicKeyEncodingException\");\nvar de_UpdateRoleDescriptionResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_Ro] != null) {\n        contents[_Ro] = de_Role(output[_Ro], context);\n    }\n    return contents;\n}, \"de_UpdateRoleDescriptionResponse\");\nvar de_UpdateRoleResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    return contents;\n}, \"de_UpdateRoleResponse\");\nvar de_UpdateSAMLProviderResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_SAMLPA] != null) {\n        contents[_SAMLPA] = (0, import_smithy_client.expectString)(output[_SAMLPA]);\n    }\n    return contents;\n}, \"de_UpdateSAMLProviderResponse\");\nvar de_UploadServerCertificateResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_SCM] != null) {\n        contents[_SCM] = de_ServerCertificateMetadata(output[_SCM], context);\n    }\n    if (output.Tags === \"\") {\n        contents[_T] = [];\n    } else if (output[_T] != null && output[_T][_me] != null) {\n        contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);\n    }\n    return contents;\n}, \"de_UploadServerCertificateResponse\");\nvar de_UploadSigningCertificateResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_Cert] != null) {\n        contents[_Cert] = de_SigningCertificate(output[_Cert], context);\n    }\n    return contents;\n}, \"de_UploadSigningCertificateResponse\");\nvar de_UploadSSHPublicKeyResponse = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_SSHPK] != null) {\n        contents[_SSHPK] = de_SSHPublicKey(output[_SSHPK], context);\n    }\n    return contents;\n}, \"de_UploadSSHPublicKeyResponse\");\nvar de_User = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_P] != null) {\n        contents[_P] = (0, import_smithy_client.expectString)(output[_P]);\n    }\n    if (output[_UN] != null) {\n        contents[_UN] = (0, import_smithy_client.expectString)(output[_UN]);\n    }\n    if (output[_UI] != null) {\n        contents[_UI] = (0, import_smithy_client.expectString)(output[_UI]);\n    }\n    if (output[_Ar] != null) {\n        contents[_Ar] = (0, import_smithy_client.expectString)(output[_Ar]);\n    }\n    if (output[_CD] != null) {\n        contents[_CD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CD]));\n    }\n    if (output[_PLU] != null) {\n        contents[_PLU] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_PLU]));\n    }\n    if (output[_PB] != null) {\n        contents[_PB] = de_AttachedPermissionsBoundary(output[_PB], context);\n    }\n    if (output.Tags === \"\") {\n        contents[_T] = [];\n    } else if (output[_T] != null && output[_T][_me] != null) {\n        contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);\n    }\n    return contents;\n}, \"de_User\");\nvar de_UserDetail = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_P] != null) {\n        contents[_P] = (0, import_smithy_client.expectString)(output[_P]);\n    }\n    if (output[_UN] != null) {\n        contents[_UN] = (0, import_smithy_client.expectString)(output[_UN]);\n    }\n    if (output[_UI] != null) {\n        contents[_UI] = (0, import_smithy_client.expectString)(output[_UI]);\n    }\n    if (output[_Ar] != null) {\n        contents[_Ar] = (0, import_smithy_client.expectString)(output[_Ar]);\n    }\n    if (output[_CD] != null) {\n        contents[_CD] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CD]));\n    }\n    if (output.UserPolicyList === \"\") {\n        contents[_UPL] = [];\n    } else if (output[_UPL] != null && output[_UPL][_me] != null) {\n        contents[_UPL] = de_policyDetailListType((0, import_smithy_client.getArrayIfSingleItem)(output[_UPL][_me]), context);\n    }\n    if (output.GroupList === \"\") {\n        contents[_GL] = [];\n    } else if (output[_GL] != null && output[_GL][_me] != null) {\n        contents[_GL] = de_groupNameListType((0, import_smithy_client.getArrayIfSingleItem)(output[_GL][_me]), context);\n    }\n    if (output.AttachedManagedPolicies === \"\") {\n        contents[_AMP] = [];\n    } else if (output[_AMP] != null && output[_AMP][_me] != null) {\n        contents[_AMP] = de_attachedPoliciesListType((0, import_smithy_client.getArrayIfSingleItem)(output[_AMP][_me]), context);\n    }\n    if (output[_PB] != null) {\n        contents[_PB] = de_AttachedPermissionsBoundary(output[_PB], context);\n    }\n    if (output.Tags === \"\") {\n        contents[_T] = [];\n    } else if (output[_T] != null && output[_T][_me] != null) {\n        contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);\n    }\n    return contents;\n}, \"de_UserDetail\");\nvar de_userDetailListType = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_UserDetail(entry, context);\n    });\n}, \"de_userDetailListType\");\nvar de_userListType = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_User(entry, context);\n    });\n}, \"de_userListType\");\nvar de_VirtualMFADevice = /* @__PURE__ */ __name((output, context)=>{\n    const contents = {};\n    if (output[_SNe] != null) {\n        contents[_SNe] = (0, import_smithy_client.expectString)(output[_SNe]);\n    }\n    if (output[_BSS] != null) {\n        contents[_BSS] = context.base64Decoder(output[_BSS]);\n    }\n    if (output[_QRCPNG] != null) {\n        contents[_QRCPNG] = context.base64Decoder(output[_QRCPNG]);\n    }\n    if (output[_Us] != null) {\n        contents[_Us] = de_User(output[_Us], context);\n    }\n    if (output[_EDn] != null) {\n        contents[_EDn] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_EDn]));\n    }\n    if (output.Tags === \"\") {\n        contents[_T] = [];\n    } else if (output[_T] != null && output[_T][_me] != null) {\n        contents[_T] = de_tagListType((0, import_smithy_client.getArrayIfSingleItem)(output[_T][_me]), context);\n    }\n    return contents;\n}, \"de_VirtualMFADevice\");\nvar de_virtualMFADeviceListType = /* @__PURE__ */ __name((output, context)=>{\n    return (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_VirtualMFADevice(entry, context);\n    });\n}, \"de_virtualMFADeviceListType\");\nvar deserializeMetadata = /* @__PURE__ */ __name((output)=>({\n        httpStatusCode: output.statusCode,\n        requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n        extendedRequestId: output.headers[\"x-amz-id-2\"],\n        cfId: output.headers[\"x-amz-cf-id\"]\n    }), \"deserializeMetadata\");\nvar throwDefaultError = (0, import_smithy_client.withBaseException)(IAMServiceException);\nvar buildHttpRpcRequest = /* @__PURE__ */ __name(async (context, headers, path, resolvedHostname, body)=>{\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n        headers\n    };\n    if (resolvedHostname !== void 0) {\n        contents.hostname = resolvedHostname;\n    }\n    if (body !== void 0) {\n        contents.body = body;\n    }\n    return new import_protocol_http.HttpRequest(contents);\n}, \"buildHttpRpcRequest\");\nvar SHARED_HEADERS = {\n    \"content-type\": \"application/x-www-form-urlencoded\"\n};\nvar _ = \"2010-05-08\";\nvar _A = \"Action\";\nvar _AA = \"AccountAlias\";\nvar _AAc = \"AccountAliases\";\nvar _ABO = \"AllowedByOrganizations\";\nvar _ABPB = \"AllowedByPermissionsBoundary\";\nvar _AC = \"AuthenticationCode1\";\nvar _ACIDTOIDCP = \"AddClientIDToOpenIDConnectProvider\";\nvar _ACt = \"AttachmentCount\";\nvar _ACu = \"AuthenticationCode2\";\nvar _AD = \"AccessDetails\";\nvar _AEM = \"AssertionEncryptionMode\";\nvar _AGP = \"AttachGroupPolicy\";\nvar _AK = \"AccessKey\";\nvar _AKI = \"AccessKeyId\";\nvar _AKLU = \"AccessKeyLastUsed\";\nvar _AKM = \"AccessKeyMetadata\";\nvar _AMP = \"AttachedManagedPolicies\";\nvar _AN = \"ActionNames\";\nvar _ANc = \"ActionName\";\nvar _AP = \"AttachedPolicies\";\nvar _APK = \"AddPrivateKey\";\nvar _ARP = \"AttachRolePolicy\";\nvar _ARPD = \"AssumeRolePolicyDocument\";\nvar _ARTIP = \"AddRoleToInstanceProfile\";\nvar _AS = \"AssignmentStatus\";\nvar _AUP = \"AttachUserPolicy\";\nvar _AUTCP = \"AllowUsersToChangePassword\";\nvar _AUTG = \"AddUserToGroup\";\nvar _AWSSN = \"AWSServiceName\";\nvar _Ar = \"Arn\";\nvar _BSS = \"Base32StringSeed\";\nvar _C = \"Code\";\nvar _CA = \"CallerArn\";\nvar _CAA = \"CreateAccountAlias\";\nvar _CAK = \"CreateAccessKey\";\nvar _CB = \"CertificateBody\";\nvar _CC = \"CertificateChain\";\nvar _CD = \"CreateDate\";\nvar _CE = \"ContextEntries\";\nvar _CG = \"CreateGroup\";\nvar _CI = \"CertificateId\";\nvar _CID = \"ClientID\";\nvar _CIDL = \"ClientIDList\";\nvar _CIP = \"CreateInstanceProfile\";\nvar _CKN = \"ContextKeyName\";\nvar _CKNo = \"ContextKeyNames\";\nvar _CKT = \"ContextKeyType\";\nvar _CKV = \"ContextKeyValues\";\nvar _CLP = \"CreateLoginProfile\";\nvar _COIDCP = \"CreateOpenIDConnectProvider\";\nvar _CP = \"ChangePassword\";\nvar _CPV = \"CreatePolicyVersion\";\nvar _CPr = \"CreatePolicy\";\nvar _CR = \"CreateRole\";\nvar _CS = \"CustomSuffix\";\nvar _CSAMLP = \"CreateSAMLProvider\";\nvar _CSLR = \"CreateServiceLinkedRole\";\nvar _CSSC = \"CreateServiceSpecificCredential\";\nvar _CU = \"CreateUser\";\nvar _CVMFAD = \"CreateVirtualMFADevice\";\nvar _Ce = \"Certifications\";\nvar _Cer = \"Certificates\";\nvar _Cert = \"Certificate\";\nvar _Co = \"Content\";\nvar _Col = \"Column\";\nvar _D = \"Description\";\nvar _DAA = \"DeleteAccountAlias\";\nvar _DAK = \"DeleteAccessKey\";\nvar _DAPP = \"DeleteAccountPasswordPolicy\";\nvar _DG = \"DeleteGroup\";\nvar _DGP = \"DeleteGroupPolicy\";\nvar _DGPe = \"DetachGroupPolicy\";\nvar _DIP = \"DeleteInstanceProfile\";\nvar _DLP = \"DeleteLoginProfile\";\nvar _DMFAD = \"DeactivateMFADevice\";\nvar _DOIDCP = \"DeleteOpenIDConnectProvider\";\nvar _DORCM = \"DisableOrganizationsRootCredentialsManagement\";\nvar _DORS = \"DisableOrganizationsRootSessions\";\nvar _DP = \"DeletePolicy\";\nvar _DPV = \"DeletePolicyVersion\";\nvar _DR = \"DeleteRole\";\nvar _DRP = \"DeleteRolePolicy\";\nvar _DRPB = \"DeleteRolePermissionsBoundary\";\nvar _DRPe = \"DetachRolePolicy\";\nvar _DSAMLP = \"DeleteSAMLProvider\";\nvar _DSC = \"DeleteServerCertificate\";\nvar _DSCe = \"DeleteSigningCertificate\";\nvar _DSLR = \"DeleteServiceLinkedRole\";\nvar _DSSC = \"DeleteServiceSpecificCredential\";\nvar _DSSHPK = \"DeleteSSHPublicKey\";\nvar _DTI = \"DeletionTaskId\";\nvar _DU = \"DeleteUser\";\nvar _DUP = \"DeleteUserPolicy\";\nvar _DUPB = \"DeleteUserPermissionsBoundary\";\nvar _DUPe = \"DetachUserPolicy\";\nvar _DVI = \"DefaultVersionId\";\nvar _DVMFAD = \"DeleteVirtualMFADevice\";\nvar _Do = \"Document\";\nvar _E = \"Encoding\";\nvar _EAN = \"EvalActionName\";\nvar _ED = \"EvalDecision\";\nvar _EDD = \"EvalDecisionDetails\";\nvar _EDL = \"EntityDetailsList\";\nvar _EDn = \"EnableDate\";\nvar _EDr = \"ErrorDetails\";\nvar _EF = \"EntityFilter\";\nvar _EFn = \"EnabledFeatures\";\nvar _EI = \"EntityInfo\";\nvar _EMFAD = \"EnableMFADevice\";\nvar _EN = \"EntityName\";\nvar _EORCM = \"EnableOrganizationsRootCredentialsManagement\";\nvar _EORS = \"EnableOrganizationsRootSessions\";\nvar _EP = \"EntityPath\";\nvar _EPn = \"EndPosition\";\nvar _EPx = \"ExpirePasswords\";\nvar _ER = \"EvaluationResults\";\nvar _ERD = \"EvalResourceDecision\";\nvar _ERN = \"EvalResourceName\";\nvar _ET = \"EntityType\";\nvar _Er = \"Error\";\nvar _Ex = \"Expiration\";\nvar _F = \"Filter\";\nvar _Fi = \"Fingerprint\";\nvar _G = \"Granularity\";\nvar _GAAD = \"GetAccountAuthorizationDetails\";\nvar _GAKLU = \"GetAccessKeyLastUsed\";\nvar _GAPP = \"GetAccountPasswordPolicy\";\nvar _GAS = \"GetAccountSummary\";\nvar _GCKFCP = \"GetContextKeysForCustomPolicy\";\nvar _GCKFPP = \"GetContextKeysForPrincipalPolicy\";\nvar _GCR = \"GenerateCredentialReport\";\nvar _GCRe = \"GetCredentialReport\";\nvar _GDL = \"GroupDetailList\";\nvar _GETV = \"GlobalEndpointTokenVersion\";\nvar _GG = \"GetGroup\";\nvar _GGP = \"GetGroupPolicy\";\nvar _GI = \"GroupId\";\nvar _GIP = \"GetInstanceProfile\";\nvar _GL = \"GroupList\";\nvar _GLP = \"GetLoginProfile\";\nvar _GMFAD = \"GetMFADevice\";\nvar _GN = \"GroupName\";\nvar _GOAR = \"GenerateOrganizationsAccessReport\";\nvar _GOARe = \"GetOrganizationsAccessReport\";\nvar _GOIDCP = \"GetOpenIDConnectProvider\";\nvar _GP = \"GetPolicy\";\nvar _GPL = \"GroupPolicyList\";\nvar _GPV = \"GetPolicyVersion\";\nvar _GR = \"GetRole\";\nvar _GRP = \"GetRolePolicy\";\nvar _GSAMLP = \"GetSAMLProvider\";\nvar _GSC = \"GetServerCertificate\";\nvar _GSLAD = \"GenerateServiceLastAccessedDetails\";\nvar _GSLADWE = \"GetServiceLastAccessedDetailsWithEntities\";\nvar _GSLADe = \"GetServiceLastAccessedDetails\";\nvar _GSLRDS = \"GetServiceLinkedRoleDeletionStatus\";\nvar _GSSHPK = \"GetSSHPublicKey\";\nvar _GT = \"GeneratedTime\";\nvar _GU = \"GetUser\";\nvar _GUP = \"GetUserPolicy\";\nvar _Gr = \"Group\";\nvar _Gro = \"Groups\";\nvar _HE = \"HardExpiry\";\nvar _I = \"Id\";\nvar _IA = \"IsAttachable\";\nvar _IDV = \"IsDefaultVersion\";\nvar _IP = \"InstanceProfile\";\nvar _IPI = \"InstanceProfileId\";\nvar _IPL = \"InstanceProfileList\";\nvar _IPN = \"InstanceProfileName\";\nvar _IPn = \"InstanceProfiles\";\nvar _IT = \"IsTruncated\";\nvar _JCD = \"JobCreationDate\";\nvar _JCDo = \"JobCompletionDate\";\nvar _JI = \"JobId\";\nvar _JS = \"JobStatus\";\nvar _JT = \"JobType\";\nvar _K = \"Key\";\nvar _KI = \"KeyId\";\nvar _L = \"Line\";\nvar _LA = \"LastAuthenticated\";\nvar _LAA = \"ListAccountAliases\";\nvar _LAE = \"LastAuthenticatedEntity\";\nvar _LAEa = \"LastAccessedEntity\";\nvar _LAGP = \"ListAttachedGroupPolicies\";\nvar _LAK = \"ListAccessKeys\";\nvar _LAR = \"LastAuthenticatedRegion\";\nvar _LARP = \"ListAttachedRolePolicies\";\nvar _LARa = \"LastAccessedRegion\";\nvar _LAT = \"LastAuthenticatedTime\";\nvar _LATa = \"LastAccessedTime\";\nvar _LAUP = \"ListAttachedUserPolicies\";\nvar _LEFP = \"ListEntitiesForPolicy\";\nvar _LG = \"ListGroups\";\nvar _LGFU = \"ListGroupsForUser\";\nvar _LGP = \"ListGroupPolicies\";\nvar _LIP = \"ListInstanceProfiles\";\nvar _LIPFR = \"ListInstanceProfilesForRole\";\nvar _LIPT = \"ListInstanceProfileTags\";\nvar _LMFAD = \"ListMFADevices\";\nvar _LMFADT = \"ListMFADeviceTags\";\nvar _LOF = \"ListOrganizationsFeatures\";\nvar _LOIDCP = \"ListOpenIDConnectProviders\";\nvar _LOIDCPT = \"ListOpenIDConnectProviderTags\";\nvar _LP = \"ListPolicies\";\nvar _LPGSA = \"ListPoliciesGrantingServiceAccess\";\nvar _LPT = \"ListPolicyTags\";\nvar _LPV = \"ListPolicyVersions\";\nvar _LPo = \"LoginProfile\";\nvar _LR = \"ListRoles\";\nvar _LRP = \"ListRolePolicies\";\nvar _LRT = \"ListRoleTags\";\nvar _LSAMLP = \"ListSAMLProviders\";\nvar _LSAMLPT = \"ListSAMLProviderTags\";\nvar _LSC = \"ListServerCertificates\";\nvar _LSCT = \"ListServerCertificateTags\";\nvar _LSCi = \"ListSigningCertificates\";\nvar _LSSC = \"ListServiceSpecificCredentials\";\nvar _LSSHPK = \"ListSSHPublicKeys\";\nvar _LU = \"ListUsers\";\nvar _LUD = \"LastUsedDate\";\nvar _LUP = \"ListUserPolicies\";\nvar _LUT = \"ListUserTags\";\nvar _LVMFAD = \"ListVirtualMFADevices\";\nvar _M = \"Marker\";\nvar _MCV = \"MissingContextValues\";\nvar _MFAD = \"MFADevices\";\nvar _MI = \"MaxItems\";\nvar _MPA = \"MaxPasswordAge\";\nvar _MPL = \"MinimumPasswordLength\";\nvar _MS = \"MatchedStatements\";\nvar _MSD = \"MaxSessionDuration\";\nvar _Me = \"Message\";\nvar _N = \"Name\";\nvar _NGN = \"NewGroupName\";\nvar _NOSA = \"NumberOfServicesAccessible\";\nvar _NOSNA = \"NumberOfServicesNotAccessed\";\nvar _NP = \"NewPassword\";\nvar _NPe = \"NewPath\";\nvar _NSCN = \"NewServerCertificateName\";\nvar _NUN = \"NewUserName\";\nvar _OA = \"OnlyAttached\";\nvar _ODD = \"OrganizationsDecisionDetail\";\nvar _OI = \"OrganizationId\";\nvar _OIDCPA = \"OpenIDConnectProviderArn\";\nvar _OIDCPL = \"OpenIDConnectProviderList\";\nvar _OP = \"OldPassword\";\nvar _OPI = \"OrganizationsPolicyId\";\nvar _P = \"Path\";\nvar _PA = \"PolicyArn\";\nvar _PB = \"PermissionsBoundary\";\nvar _PBA = \"PermissionsBoundaryArn\";\nvar _PBDD = \"PermissionsBoundaryDecisionDetail\";\nvar _PBPIL = \"PermissionsBoundaryPolicyInputList\";\nvar _PBT = \"PermissionsBoundaryType\";\nvar _PBUC = \"PermissionsBoundaryUsageCount\";\nvar _PD = \"PolicyDocument\";\nvar _PG = \"PolicyGroups\";\nvar _PGP = \"PutGroupPolicy\";\nvar _PGSA = \"PoliciesGrantingServiceAccess\";\nvar _PI = \"PolicyId\";\nvar _PIL = \"PolicyInputList\";\nvar _PK = \"PrivateKey\";\nvar _PKL = \"PrivateKeyList\";\nvar _PLU = \"PasswordLastUsed\";\nvar _PN = \"PolicyName\";\nvar _PNo = \"PolicyNames\";\nvar _PP = \"PathPrefix\";\nvar _PPa = \"PasswordPolicy\";\nvar _PR = \"PolicyRoles\";\nvar _PRP = \"PutRolePolicy\";\nvar _PRPB = \"PutRolePermissionsBoundary\";\nvar _PRPa = \"PasswordReusePrevention\";\nvar _PRR = \"PasswordResetRequired\";\nvar _PSA = \"PolicySourceArn\";\nvar _PT = \"PolicyType\";\nvar _PU = \"PolicyUsers\";\nvar _PUF = \"PolicyUsageFilter\";\nvar _PUP = \"PutUserPolicy\";\nvar _PUPB = \"PutUserPermissionsBoundary\";\nvar _PV = \"PolicyVersion\";\nvar _PVL = \"PolicyVersionList\";\nvar _Pa = \"Password\";\nvar _Po = \"Policy\";\nvar _Pol = \"Policies\";\nvar _QRCPNG = \"QRCodePNG\";\nvar _R = \"Region\";\nvar _RA = \"ResourceArns\";\nvar _RCIDFOIDCP = \"RemoveClientIDFromOpenIDConnectProvider\";\nvar _RDL = \"RoleDetailList\";\nvar _RF = \"ReportFormat\";\nvar _RHO = \"ResourceHandlingOption\";\nvar _RI = \"RoleId\";\nvar _RLC = \"RequireLowercaseCharacters\";\nvar _RLU = \"RoleLastUsed\";\nvar _RMFAD = \"ResyncMFADevice\";\nvar _RN = \"RoleName\";\nvar _RNe = \"RequireNumbers\";\nvar _RO = \"ResourceOwner\";\nvar _RP = \"ResourcePolicy\";\nvar _RPK = \"RemovePrivateKey\";\nvar _RPL = \"RolePolicyList\";\nvar _RRFIP = \"RemoveRoleFromInstanceProfile\";\nvar _RS = \"RequireSymbols\";\nvar _RSR = \"ResourceSpecificResults\";\nvar _RSSC = \"ResetServiceSpecificCredential\";\nvar _RUC = \"RequireUppercaseCharacters\";\nvar _RUFG = \"RemoveUserFromGroup\";\nvar _RUL = \"RoleUsageList\";\nvar _Re = \"Reason\";\nvar _Res = \"Resources\";\nvar _Ro = \"Role\";\nvar _Rol = \"Roles\";\nvar _S = \"Scope\";\nvar _SAD = \"SetAsDefault\";\nvar _SAK = \"SecretAccessKey\";\nvar _SAMLMD = \"SAMLMetadataDocument\";\nvar _SAMLPA = \"SAMLProviderArn\";\nvar _SAMLPL = \"SAMLProviderList\";\nvar _SAMLPUUID = \"SAMLProviderUUID\";\nvar _SC = \"ServerCertificate\";\nvar _SCI = \"ServerCertificateId\";\nvar _SCM = \"ServerCertificateMetadata\";\nvar _SCML = \"ServerCertificateMetadataList\";\nvar _SCN = \"ServerCertificateName\";\nvar _SCP = \"SimulateCustomPolicy\";\nvar _SDPV = \"SetDefaultPolicyVersion\";\nvar _SK = \"SortKey\";\nvar _SLA = \"ServicesLastAccessed\";\nvar _SM = \"SummaryMap\";\nvar _SN = \"ServiceName\";\nvar _SNe = \"SerialNumber\";\nvar _SNer = \"ServiceNamespace\";\nvar _SNerv = \"ServiceNamespaces\";\nvar _SP = \"ServicePassword\";\nvar _SPI = \"SourcePolicyId\";\nvar _SPP = \"SimulatePrincipalPolicy\";\nvar _SPT = \"SourcePolicyType\";\nvar _SPt = \"StartPosition\";\nvar _SSC = \"ServiceSpecificCredential\";\nvar _SSCI = \"ServiceSpecificCredentialId\";\nvar _SSCe = \"ServiceSpecificCredentials\";\nvar _SSHPK = \"SSHPublicKey\";\nvar _SSHPKB = \"SSHPublicKeyBody\";\nvar _SSHPKI = \"SSHPublicKeyId\";\nvar _SSHPKu = \"SSHPublicKeys\";\nvar _SSTSP = \"SetSecurityTokenServicePreferences\";\nvar _SUN = \"ServiceUserName\";\nvar _St = \"Status\";\nvar _Sta = \"State\";\nvar _T = \"Tags\";\nvar _TAE = \"TotalAuthenticatedEntities\";\nvar _TALA = \"TrackedActionsLastAccessed\";\nvar _TIP = \"TagInstanceProfile\";\nvar _TK = \"TagKeys\";\nvar _TL = \"ThumbprintList\";\nvar _TMFAD = \"TagMFADevice\";\nvar _TOIDCP = \"TagOpenIDConnectProvider\";\nvar _TP = \"TagPolicy\";\nvar _TR = \"TagRole\";\nvar _TSAMLP = \"TagSAMLProvider\";\nvar _TSC = \"TagServerCertificate\";\nvar _TU = \"TagUser\";\nvar _Ti = \"Timestamp\";\nvar _Ty = \"Type\";\nvar _U = \"Url\";\nvar _UAK = \"UpdateAccessKey\";\nvar _UAPP = \"UpdateAccountPasswordPolicy\";\nvar _UARP = \"UpdateAssumeRolePolicy\";\nvar _UD = \"UpdateDate\";\nvar _UDL = \"UserDetailList\";\nvar _UDp = \"UploadDate\";\nvar _UG = \"UpdateGroup\";\nvar _UI = \"UserId\";\nvar _UIP = \"UntagInstanceProfile\";\nvar _ULP = \"UpdateLoginProfile\";\nvar _UMFAD = \"UntagMFADevice\";\nvar _UN = \"UserName\";\nvar _UOIDCP = \"UntagOpenIDConnectProvider\";\nvar _UOIDCPT = \"UpdateOpenIDConnectProviderThumbprint\";\nvar _UP = \"UntagPolicy\";\nvar _UPL = \"UserPolicyList\";\nvar _UR = \"UntagRole\";\nvar _URD = \"UpdateRoleDescription\";\nvar _URp = \"UpdateRole\";\nvar _USAMLP = \"UntagSAMLProvider\";\nvar _USAMLPp = \"UpdateSAMLProvider\";\nvar _USC = \"UntagServerCertificate\";\nvar _USCp = \"UpdateServerCertificate\";\nvar _USCpd = \"UpdateSigningCertificate\";\nvar _USCpl = \"UploadServerCertificate\";\nvar _USCplo = \"UploadSigningCertificate\";\nvar _USSC = \"UpdateServiceSpecificCredential\";\nvar _USSHPK = \"UpdateSSHPublicKey\";\nvar _USSHPKp = \"UploadSSHPublicKey\";\nvar _UU = \"UntagUser\";\nvar _UUp = \"UpdateUser\";\nvar _Us = \"User\";\nvar _Use = \"Users\";\nvar _V = \"Version\";\nvar _VI = \"VersionId\";\nvar _VMFAD = \"VirtualMFADevice\";\nvar _VMFADN = \"VirtualMFADeviceName\";\nvar _VMFADi = \"VirtualMFADevices\";\nvar _VU = \"ValidUntil\";\nvar _Va = \"Value\";\nvar _Ve = \"Versions\";\nvar _e = \"entry\";\nvar _m = \"message\";\nvar _me = \"member\";\nvar buildFormUrlencodedString = /* @__PURE__ */ __name((formEntries)=>Object.entries(formEntries).map(([key, value])=>(0, import_smithy_client.extendedEncodeURIComponent)(key) + \"=\" + (0, import_smithy_client.extendedEncodeURIComponent)(value)).join(\"&\"), \"buildFormUrlencodedString\");\nvar loadQueryErrorCode = /* @__PURE__ */ __name((output, data)=>{\n    if (data.Error?.Code !== void 0) {\n        return data.Error.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n}, \"loadQueryErrorCode\");\n// src/commands/AddClientIDToOpenIDConnectProviderCommand.ts\nvar AddClientIDToOpenIDConnectProviderCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"AddClientIDToOpenIDConnectProvider\", {}).n(\"IAMClient\", \"AddClientIDToOpenIDConnectProviderCommand\").f(void 0, void 0).ser(se_AddClientIDToOpenIDConnectProviderCommand).de(de_AddClientIDToOpenIDConnectProviderCommand).build() {\n    static{\n        __name(this, \"AddClientIDToOpenIDConnectProviderCommand\");\n    }\n};\n// src/commands/AddRoleToInstanceProfileCommand.ts\nvar AddRoleToInstanceProfileCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"AddRoleToInstanceProfile\", {}).n(\"IAMClient\", \"AddRoleToInstanceProfileCommand\").f(void 0, void 0).ser(se_AddRoleToInstanceProfileCommand).de(de_AddRoleToInstanceProfileCommand).build() {\n    static{\n        __name(this, \"AddRoleToInstanceProfileCommand\");\n    }\n};\n// src/commands/AddUserToGroupCommand.ts\nvar AddUserToGroupCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"AddUserToGroup\", {}).n(\"IAMClient\", \"AddUserToGroupCommand\").f(void 0, void 0).ser(se_AddUserToGroupCommand).de(de_AddUserToGroupCommand).build() {\n    static{\n        __name(this, \"AddUserToGroupCommand\");\n    }\n};\n// src/commands/AttachGroupPolicyCommand.ts\nvar AttachGroupPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"AttachGroupPolicy\", {}).n(\"IAMClient\", \"AttachGroupPolicyCommand\").f(void 0, void 0).ser(se_AttachGroupPolicyCommand).de(de_AttachGroupPolicyCommand).build() {\n    static{\n        __name(this, \"AttachGroupPolicyCommand\");\n    }\n};\n// src/commands/AttachRolePolicyCommand.ts\nvar AttachRolePolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"AttachRolePolicy\", {}).n(\"IAMClient\", \"AttachRolePolicyCommand\").f(void 0, void 0).ser(se_AttachRolePolicyCommand).de(de_AttachRolePolicyCommand).build() {\n    static{\n        __name(this, \"AttachRolePolicyCommand\");\n    }\n};\n// src/commands/AttachUserPolicyCommand.ts\nvar AttachUserPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"AttachUserPolicy\", {}).n(\"IAMClient\", \"AttachUserPolicyCommand\").f(void 0, void 0).ser(se_AttachUserPolicyCommand).de(de_AttachUserPolicyCommand).build() {\n    static{\n        __name(this, \"AttachUserPolicyCommand\");\n    }\n};\n// src/commands/ChangePasswordCommand.ts\nvar ChangePasswordCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"ChangePassword\", {}).n(\"IAMClient\", \"ChangePasswordCommand\").f(ChangePasswordRequestFilterSensitiveLog, void 0).ser(se_ChangePasswordCommand).de(de_ChangePasswordCommand).build() {\n    static{\n        __name(this, \"ChangePasswordCommand\");\n    }\n};\n// src/commands/CreateAccessKeyCommand.ts\nvar CreateAccessKeyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"CreateAccessKey\", {}).n(\"IAMClient\", \"CreateAccessKeyCommand\").f(void 0, CreateAccessKeyResponseFilterSensitiveLog).ser(se_CreateAccessKeyCommand).de(de_CreateAccessKeyCommand).build() {\n    static{\n        __name(this, \"CreateAccessKeyCommand\");\n    }\n};\n// src/commands/CreateAccountAliasCommand.ts\nvar CreateAccountAliasCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"CreateAccountAlias\", {}).n(\"IAMClient\", \"CreateAccountAliasCommand\").f(void 0, void 0).ser(se_CreateAccountAliasCommand).de(de_CreateAccountAliasCommand).build() {\n    static{\n        __name(this, \"CreateAccountAliasCommand\");\n    }\n};\n// src/commands/CreateGroupCommand.ts\nvar CreateGroupCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"CreateGroup\", {}).n(\"IAMClient\", \"CreateGroupCommand\").f(void 0, void 0).ser(se_CreateGroupCommand).de(de_CreateGroupCommand).build() {\n    static{\n        __name(this, \"CreateGroupCommand\");\n    }\n};\n// src/commands/CreateInstanceProfileCommand.ts\nvar CreateInstanceProfileCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"CreateInstanceProfile\", {}).n(\"IAMClient\", \"CreateInstanceProfileCommand\").f(void 0, void 0).ser(se_CreateInstanceProfileCommand).de(de_CreateInstanceProfileCommand).build() {\n    static{\n        __name(this, \"CreateInstanceProfileCommand\");\n    }\n};\n// src/commands/CreateLoginProfileCommand.ts\nvar CreateLoginProfileCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"CreateLoginProfile\", {}).n(\"IAMClient\", \"CreateLoginProfileCommand\").f(CreateLoginProfileRequestFilterSensitiveLog, void 0).ser(se_CreateLoginProfileCommand).de(de_CreateLoginProfileCommand).build() {\n    static{\n        __name(this, \"CreateLoginProfileCommand\");\n    }\n};\n// src/commands/CreateOpenIDConnectProviderCommand.ts\nvar CreateOpenIDConnectProviderCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"CreateOpenIDConnectProvider\", {}).n(\"IAMClient\", \"CreateOpenIDConnectProviderCommand\").f(void 0, void 0).ser(se_CreateOpenIDConnectProviderCommand).de(de_CreateOpenIDConnectProviderCommand).build() {\n    static{\n        __name(this, \"CreateOpenIDConnectProviderCommand\");\n    }\n};\n// src/commands/CreatePolicyCommand.ts\nvar CreatePolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"CreatePolicy\", {}).n(\"IAMClient\", \"CreatePolicyCommand\").f(void 0, void 0).ser(se_CreatePolicyCommand).de(de_CreatePolicyCommand).build() {\n    static{\n        __name(this, \"CreatePolicyCommand\");\n    }\n};\n// src/commands/CreatePolicyVersionCommand.ts\nvar CreatePolicyVersionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"CreatePolicyVersion\", {}).n(\"IAMClient\", \"CreatePolicyVersionCommand\").f(void 0, void 0).ser(se_CreatePolicyVersionCommand).de(de_CreatePolicyVersionCommand).build() {\n    static{\n        __name(this, \"CreatePolicyVersionCommand\");\n    }\n};\n// src/commands/CreateRoleCommand.ts\nvar CreateRoleCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"CreateRole\", {}).n(\"IAMClient\", \"CreateRoleCommand\").f(void 0, void 0).ser(se_CreateRoleCommand).de(de_CreateRoleCommand).build() {\n    static{\n        __name(this, \"CreateRoleCommand\");\n    }\n};\n// src/commands/CreateSAMLProviderCommand.ts\nvar CreateSAMLProviderCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"CreateSAMLProvider\", {}).n(\"IAMClient\", \"CreateSAMLProviderCommand\").f(CreateSAMLProviderRequestFilterSensitiveLog, void 0).ser(se_CreateSAMLProviderCommand).de(de_CreateSAMLProviderCommand).build() {\n    static{\n        __name(this, \"CreateSAMLProviderCommand\");\n    }\n};\n// src/commands/CreateServiceLinkedRoleCommand.ts\nvar CreateServiceLinkedRoleCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"CreateServiceLinkedRole\", {}).n(\"IAMClient\", \"CreateServiceLinkedRoleCommand\").f(void 0, void 0).ser(se_CreateServiceLinkedRoleCommand).de(de_CreateServiceLinkedRoleCommand).build() {\n    static{\n        __name(this, \"CreateServiceLinkedRoleCommand\");\n    }\n};\n// src/commands/CreateServiceSpecificCredentialCommand.ts\nvar CreateServiceSpecificCredentialCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"CreateServiceSpecificCredential\", {}).n(\"IAMClient\", \"CreateServiceSpecificCredentialCommand\").f(void 0, CreateServiceSpecificCredentialResponseFilterSensitiveLog).ser(se_CreateServiceSpecificCredentialCommand).de(de_CreateServiceSpecificCredentialCommand).build() {\n    static{\n        __name(this, \"CreateServiceSpecificCredentialCommand\");\n    }\n};\n// src/commands/CreateUserCommand.ts\nvar CreateUserCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"CreateUser\", {}).n(\"IAMClient\", \"CreateUserCommand\").f(void 0, void 0).ser(se_CreateUserCommand).de(de_CreateUserCommand).build() {\n    static{\n        __name(this, \"CreateUserCommand\");\n    }\n};\n// src/commands/CreateVirtualMFADeviceCommand.ts\nvar CreateVirtualMFADeviceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"CreateVirtualMFADevice\", {}).n(\"IAMClient\", \"CreateVirtualMFADeviceCommand\").f(void 0, CreateVirtualMFADeviceResponseFilterSensitiveLog).ser(se_CreateVirtualMFADeviceCommand).de(de_CreateVirtualMFADeviceCommand).build() {\n    static{\n        __name(this, \"CreateVirtualMFADeviceCommand\");\n    }\n};\n// src/commands/DeactivateMFADeviceCommand.ts\nvar DeactivateMFADeviceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"DeactivateMFADevice\", {}).n(\"IAMClient\", \"DeactivateMFADeviceCommand\").f(void 0, void 0).ser(se_DeactivateMFADeviceCommand).de(de_DeactivateMFADeviceCommand).build() {\n    static{\n        __name(this, \"DeactivateMFADeviceCommand\");\n    }\n};\n// src/commands/DeleteAccessKeyCommand.ts\nvar DeleteAccessKeyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"DeleteAccessKey\", {}).n(\"IAMClient\", \"DeleteAccessKeyCommand\").f(void 0, void 0).ser(se_DeleteAccessKeyCommand).de(de_DeleteAccessKeyCommand).build() {\n    static{\n        __name(this, \"DeleteAccessKeyCommand\");\n    }\n};\n// src/commands/DeleteAccountAliasCommand.ts\nvar DeleteAccountAliasCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"DeleteAccountAlias\", {}).n(\"IAMClient\", \"DeleteAccountAliasCommand\").f(void 0, void 0).ser(se_DeleteAccountAliasCommand).de(de_DeleteAccountAliasCommand).build() {\n    static{\n        __name(this, \"DeleteAccountAliasCommand\");\n    }\n};\n// src/commands/DeleteAccountPasswordPolicyCommand.ts\nvar DeleteAccountPasswordPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"DeleteAccountPasswordPolicy\", {}).n(\"IAMClient\", \"DeleteAccountPasswordPolicyCommand\").f(void 0, void 0).ser(se_DeleteAccountPasswordPolicyCommand).de(de_DeleteAccountPasswordPolicyCommand).build() {\n    static{\n        __name(this, \"DeleteAccountPasswordPolicyCommand\");\n    }\n};\n// src/commands/DeleteGroupCommand.ts\nvar DeleteGroupCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"DeleteGroup\", {}).n(\"IAMClient\", \"DeleteGroupCommand\").f(void 0, void 0).ser(se_DeleteGroupCommand).de(de_DeleteGroupCommand).build() {\n    static{\n        __name(this, \"DeleteGroupCommand\");\n    }\n};\n// src/commands/DeleteGroupPolicyCommand.ts\nvar DeleteGroupPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"DeleteGroupPolicy\", {}).n(\"IAMClient\", \"DeleteGroupPolicyCommand\").f(void 0, void 0).ser(se_DeleteGroupPolicyCommand).de(de_DeleteGroupPolicyCommand).build() {\n    static{\n        __name(this, \"DeleteGroupPolicyCommand\");\n    }\n};\n// src/commands/DeleteInstanceProfileCommand.ts\nvar DeleteInstanceProfileCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"DeleteInstanceProfile\", {}).n(\"IAMClient\", \"DeleteInstanceProfileCommand\").f(void 0, void 0).ser(se_DeleteInstanceProfileCommand).de(de_DeleteInstanceProfileCommand).build() {\n    static{\n        __name(this, \"DeleteInstanceProfileCommand\");\n    }\n};\n// src/commands/DeleteLoginProfileCommand.ts\nvar DeleteLoginProfileCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"DeleteLoginProfile\", {}).n(\"IAMClient\", \"DeleteLoginProfileCommand\").f(void 0, void 0).ser(se_DeleteLoginProfileCommand).de(de_DeleteLoginProfileCommand).build() {\n    static{\n        __name(this, \"DeleteLoginProfileCommand\");\n    }\n};\n// src/commands/DeleteOpenIDConnectProviderCommand.ts\nvar DeleteOpenIDConnectProviderCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"DeleteOpenIDConnectProvider\", {}).n(\"IAMClient\", \"DeleteOpenIDConnectProviderCommand\").f(void 0, void 0).ser(se_DeleteOpenIDConnectProviderCommand).de(de_DeleteOpenIDConnectProviderCommand).build() {\n    static{\n        __name(this, \"DeleteOpenIDConnectProviderCommand\");\n    }\n};\n// src/commands/DeletePolicyCommand.ts\nvar DeletePolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"DeletePolicy\", {}).n(\"IAMClient\", \"DeletePolicyCommand\").f(void 0, void 0).ser(se_DeletePolicyCommand).de(de_DeletePolicyCommand).build() {\n    static{\n        __name(this, \"DeletePolicyCommand\");\n    }\n};\n// src/commands/DeletePolicyVersionCommand.ts\nvar DeletePolicyVersionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"DeletePolicyVersion\", {}).n(\"IAMClient\", \"DeletePolicyVersionCommand\").f(void 0, void 0).ser(se_DeletePolicyVersionCommand).de(de_DeletePolicyVersionCommand).build() {\n    static{\n        __name(this, \"DeletePolicyVersionCommand\");\n    }\n};\n// src/commands/DeleteRoleCommand.ts\nvar DeleteRoleCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"DeleteRole\", {}).n(\"IAMClient\", \"DeleteRoleCommand\").f(void 0, void 0).ser(se_DeleteRoleCommand).de(de_DeleteRoleCommand).build() {\n    static{\n        __name(this, \"DeleteRoleCommand\");\n    }\n};\n// src/commands/DeleteRolePermissionsBoundaryCommand.ts\nvar DeleteRolePermissionsBoundaryCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"DeleteRolePermissionsBoundary\", {}).n(\"IAMClient\", \"DeleteRolePermissionsBoundaryCommand\").f(void 0, void 0).ser(se_DeleteRolePermissionsBoundaryCommand).de(de_DeleteRolePermissionsBoundaryCommand).build() {\n    static{\n        __name(this, \"DeleteRolePermissionsBoundaryCommand\");\n    }\n};\n// src/commands/DeleteRolePolicyCommand.ts\nvar DeleteRolePolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"DeleteRolePolicy\", {}).n(\"IAMClient\", \"DeleteRolePolicyCommand\").f(void 0, void 0).ser(se_DeleteRolePolicyCommand).de(de_DeleteRolePolicyCommand).build() {\n    static{\n        __name(this, \"DeleteRolePolicyCommand\");\n    }\n};\n// src/commands/DeleteSAMLProviderCommand.ts\nvar DeleteSAMLProviderCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"DeleteSAMLProvider\", {}).n(\"IAMClient\", \"DeleteSAMLProviderCommand\").f(void 0, void 0).ser(se_DeleteSAMLProviderCommand).de(de_DeleteSAMLProviderCommand).build() {\n    static{\n        __name(this, \"DeleteSAMLProviderCommand\");\n    }\n};\n// src/commands/DeleteServerCertificateCommand.ts\nvar DeleteServerCertificateCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"DeleteServerCertificate\", {}).n(\"IAMClient\", \"DeleteServerCertificateCommand\").f(void 0, void 0).ser(se_DeleteServerCertificateCommand).de(de_DeleteServerCertificateCommand).build() {\n    static{\n        __name(this, \"DeleteServerCertificateCommand\");\n    }\n};\n// src/commands/DeleteServiceLinkedRoleCommand.ts\nvar DeleteServiceLinkedRoleCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"DeleteServiceLinkedRole\", {}).n(\"IAMClient\", \"DeleteServiceLinkedRoleCommand\").f(void 0, void 0).ser(se_DeleteServiceLinkedRoleCommand).de(de_DeleteServiceLinkedRoleCommand).build() {\n    static{\n        __name(this, \"DeleteServiceLinkedRoleCommand\");\n    }\n};\n// src/commands/DeleteServiceSpecificCredentialCommand.ts\nvar DeleteServiceSpecificCredentialCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"DeleteServiceSpecificCredential\", {}).n(\"IAMClient\", \"DeleteServiceSpecificCredentialCommand\").f(void 0, void 0).ser(se_DeleteServiceSpecificCredentialCommand).de(de_DeleteServiceSpecificCredentialCommand).build() {\n    static{\n        __name(this, \"DeleteServiceSpecificCredentialCommand\");\n    }\n};\n// src/commands/DeleteSigningCertificateCommand.ts\nvar DeleteSigningCertificateCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"DeleteSigningCertificate\", {}).n(\"IAMClient\", \"DeleteSigningCertificateCommand\").f(void 0, void 0).ser(se_DeleteSigningCertificateCommand).de(de_DeleteSigningCertificateCommand).build() {\n    static{\n        __name(this, \"DeleteSigningCertificateCommand\");\n    }\n};\n// src/commands/DeleteSSHPublicKeyCommand.ts\nvar DeleteSSHPublicKeyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"DeleteSSHPublicKey\", {}).n(\"IAMClient\", \"DeleteSSHPublicKeyCommand\").f(void 0, void 0).ser(se_DeleteSSHPublicKeyCommand).de(de_DeleteSSHPublicKeyCommand).build() {\n    static{\n        __name(this, \"DeleteSSHPublicKeyCommand\");\n    }\n};\n// src/commands/DeleteUserCommand.ts\nvar DeleteUserCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"DeleteUser\", {}).n(\"IAMClient\", \"DeleteUserCommand\").f(void 0, void 0).ser(se_DeleteUserCommand).de(de_DeleteUserCommand).build() {\n    static{\n        __name(this, \"DeleteUserCommand\");\n    }\n};\n// src/commands/DeleteUserPermissionsBoundaryCommand.ts\nvar DeleteUserPermissionsBoundaryCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"DeleteUserPermissionsBoundary\", {}).n(\"IAMClient\", \"DeleteUserPermissionsBoundaryCommand\").f(void 0, void 0).ser(se_DeleteUserPermissionsBoundaryCommand).de(de_DeleteUserPermissionsBoundaryCommand).build() {\n    static{\n        __name(this, \"DeleteUserPermissionsBoundaryCommand\");\n    }\n};\n// src/commands/DeleteUserPolicyCommand.ts\nvar DeleteUserPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"DeleteUserPolicy\", {}).n(\"IAMClient\", \"DeleteUserPolicyCommand\").f(void 0, void 0).ser(se_DeleteUserPolicyCommand).de(de_DeleteUserPolicyCommand).build() {\n    static{\n        __name(this, \"DeleteUserPolicyCommand\");\n    }\n};\n// src/commands/DeleteVirtualMFADeviceCommand.ts\nvar DeleteVirtualMFADeviceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"DeleteVirtualMFADevice\", {}).n(\"IAMClient\", \"DeleteVirtualMFADeviceCommand\").f(void 0, void 0).ser(se_DeleteVirtualMFADeviceCommand).de(de_DeleteVirtualMFADeviceCommand).build() {\n    static{\n        __name(this, \"DeleteVirtualMFADeviceCommand\");\n    }\n};\n// src/commands/DetachGroupPolicyCommand.ts\nvar DetachGroupPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"DetachGroupPolicy\", {}).n(\"IAMClient\", \"DetachGroupPolicyCommand\").f(void 0, void 0).ser(se_DetachGroupPolicyCommand).de(de_DetachGroupPolicyCommand).build() {\n    static{\n        __name(this, \"DetachGroupPolicyCommand\");\n    }\n};\n// src/commands/DetachRolePolicyCommand.ts\nvar DetachRolePolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"DetachRolePolicy\", {}).n(\"IAMClient\", \"DetachRolePolicyCommand\").f(void 0, void 0).ser(se_DetachRolePolicyCommand).de(de_DetachRolePolicyCommand).build() {\n    static{\n        __name(this, \"DetachRolePolicyCommand\");\n    }\n};\n// src/commands/DetachUserPolicyCommand.ts\nvar DetachUserPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"DetachUserPolicy\", {}).n(\"IAMClient\", \"DetachUserPolicyCommand\").f(void 0, void 0).ser(se_DetachUserPolicyCommand).de(de_DetachUserPolicyCommand).build() {\n    static{\n        __name(this, \"DetachUserPolicyCommand\");\n    }\n};\n// src/commands/DisableOrganizationsRootCredentialsManagementCommand.ts\nvar DisableOrganizationsRootCredentialsManagementCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"DisableOrganizationsRootCredentialsManagement\", {}).n(\"IAMClient\", \"DisableOrganizationsRootCredentialsManagementCommand\").f(void 0, void 0).ser(se_DisableOrganizationsRootCredentialsManagementCommand).de(de_DisableOrganizationsRootCredentialsManagementCommand).build() {\n    static{\n        __name(this, \"DisableOrganizationsRootCredentialsManagementCommand\");\n    }\n};\n// src/commands/DisableOrganizationsRootSessionsCommand.ts\nvar DisableOrganizationsRootSessionsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"DisableOrganizationsRootSessions\", {}).n(\"IAMClient\", \"DisableOrganizationsRootSessionsCommand\").f(void 0, void 0).ser(se_DisableOrganizationsRootSessionsCommand).de(de_DisableOrganizationsRootSessionsCommand).build() {\n    static{\n        __name(this, \"DisableOrganizationsRootSessionsCommand\");\n    }\n};\n// src/commands/EnableMFADeviceCommand.ts\nvar EnableMFADeviceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"EnableMFADevice\", {}).n(\"IAMClient\", \"EnableMFADeviceCommand\").f(void 0, void 0).ser(se_EnableMFADeviceCommand).de(de_EnableMFADeviceCommand).build() {\n    static{\n        __name(this, \"EnableMFADeviceCommand\");\n    }\n};\n// src/commands/EnableOrganizationsRootCredentialsManagementCommand.ts\nvar EnableOrganizationsRootCredentialsManagementCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"EnableOrganizationsRootCredentialsManagement\", {}).n(\"IAMClient\", \"EnableOrganizationsRootCredentialsManagementCommand\").f(void 0, void 0).ser(se_EnableOrganizationsRootCredentialsManagementCommand).de(de_EnableOrganizationsRootCredentialsManagementCommand).build() {\n    static{\n        __name(this, \"EnableOrganizationsRootCredentialsManagementCommand\");\n    }\n};\n// src/commands/EnableOrganizationsRootSessionsCommand.ts\nvar EnableOrganizationsRootSessionsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"EnableOrganizationsRootSessions\", {}).n(\"IAMClient\", \"EnableOrganizationsRootSessionsCommand\").f(void 0, void 0).ser(se_EnableOrganizationsRootSessionsCommand).de(de_EnableOrganizationsRootSessionsCommand).build() {\n    static{\n        __name(this, \"EnableOrganizationsRootSessionsCommand\");\n    }\n};\n// src/commands/GenerateCredentialReportCommand.ts\nvar GenerateCredentialReportCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"GenerateCredentialReport\", {}).n(\"IAMClient\", \"GenerateCredentialReportCommand\").f(void 0, void 0).ser(se_GenerateCredentialReportCommand).de(de_GenerateCredentialReportCommand).build() {\n    static{\n        __name(this, \"GenerateCredentialReportCommand\");\n    }\n};\n// src/commands/GenerateOrganizationsAccessReportCommand.ts\nvar GenerateOrganizationsAccessReportCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"GenerateOrganizationsAccessReport\", {}).n(\"IAMClient\", \"GenerateOrganizationsAccessReportCommand\").f(void 0, void 0).ser(se_GenerateOrganizationsAccessReportCommand).de(de_GenerateOrganizationsAccessReportCommand).build() {\n    static{\n        __name(this, \"GenerateOrganizationsAccessReportCommand\");\n    }\n};\n// src/commands/GenerateServiceLastAccessedDetailsCommand.ts\nvar GenerateServiceLastAccessedDetailsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"GenerateServiceLastAccessedDetails\", {}).n(\"IAMClient\", \"GenerateServiceLastAccessedDetailsCommand\").f(void 0, void 0).ser(se_GenerateServiceLastAccessedDetailsCommand).de(de_GenerateServiceLastAccessedDetailsCommand).build() {\n    static{\n        __name(this, \"GenerateServiceLastAccessedDetailsCommand\");\n    }\n};\n// src/commands/GetAccessKeyLastUsedCommand.ts\nvar GetAccessKeyLastUsedCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"GetAccessKeyLastUsed\", {}).n(\"IAMClient\", \"GetAccessKeyLastUsedCommand\").f(void 0, void 0).ser(se_GetAccessKeyLastUsedCommand).de(de_GetAccessKeyLastUsedCommand).build() {\n    static{\n        __name(this, \"GetAccessKeyLastUsedCommand\");\n    }\n};\n// src/commands/GetAccountAuthorizationDetailsCommand.ts\nvar GetAccountAuthorizationDetailsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"GetAccountAuthorizationDetails\", {}).n(\"IAMClient\", \"GetAccountAuthorizationDetailsCommand\").f(void 0, void 0).ser(se_GetAccountAuthorizationDetailsCommand).de(de_GetAccountAuthorizationDetailsCommand).build() {\n    static{\n        __name(this, \"GetAccountAuthorizationDetailsCommand\");\n    }\n};\n// src/commands/GetAccountPasswordPolicyCommand.ts\nvar GetAccountPasswordPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"GetAccountPasswordPolicy\", {}).n(\"IAMClient\", \"GetAccountPasswordPolicyCommand\").f(void 0, void 0).ser(se_GetAccountPasswordPolicyCommand).de(de_GetAccountPasswordPolicyCommand).build() {\n    static{\n        __name(this, \"GetAccountPasswordPolicyCommand\");\n    }\n};\n// src/commands/GetAccountSummaryCommand.ts\nvar GetAccountSummaryCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"GetAccountSummary\", {}).n(\"IAMClient\", \"GetAccountSummaryCommand\").f(void 0, void 0).ser(se_GetAccountSummaryCommand).de(de_GetAccountSummaryCommand).build() {\n    static{\n        __name(this, \"GetAccountSummaryCommand\");\n    }\n};\n// src/commands/GetContextKeysForCustomPolicyCommand.ts\nvar GetContextKeysForCustomPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"GetContextKeysForCustomPolicy\", {}).n(\"IAMClient\", \"GetContextKeysForCustomPolicyCommand\").f(void 0, void 0).ser(se_GetContextKeysForCustomPolicyCommand).de(de_GetContextKeysForCustomPolicyCommand).build() {\n    static{\n        __name(this, \"GetContextKeysForCustomPolicyCommand\");\n    }\n};\n// src/commands/GetContextKeysForPrincipalPolicyCommand.ts\nvar GetContextKeysForPrincipalPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"GetContextKeysForPrincipalPolicy\", {}).n(\"IAMClient\", \"GetContextKeysForPrincipalPolicyCommand\").f(void 0, void 0).ser(se_GetContextKeysForPrincipalPolicyCommand).de(de_GetContextKeysForPrincipalPolicyCommand).build() {\n    static{\n        __name(this, \"GetContextKeysForPrincipalPolicyCommand\");\n    }\n};\n// src/commands/GetCredentialReportCommand.ts\nvar GetCredentialReportCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"GetCredentialReport\", {}).n(\"IAMClient\", \"GetCredentialReportCommand\").f(void 0, void 0).ser(se_GetCredentialReportCommand).de(de_GetCredentialReportCommand).build() {\n    static{\n        __name(this, \"GetCredentialReportCommand\");\n    }\n};\n// src/commands/GetGroupCommand.ts\nvar GetGroupCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"GetGroup\", {}).n(\"IAMClient\", \"GetGroupCommand\").f(void 0, void 0).ser(se_GetGroupCommand).de(de_GetGroupCommand).build() {\n    static{\n        __name(this, \"GetGroupCommand\");\n    }\n};\n// src/commands/GetGroupPolicyCommand.ts\nvar GetGroupPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"GetGroupPolicy\", {}).n(\"IAMClient\", \"GetGroupPolicyCommand\").f(void 0, void 0).ser(se_GetGroupPolicyCommand).de(de_GetGroupPolicyCommand).build() {\n    static{\n        __name(this, \"GetGroupPolicyCommand\");\n    }\n};\n// src/commands/GetInstanceProfileCommand.ts\nvar GetInstanceProfileCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"GetInstanceProfile\", {}).n(\"IAMClient\", \"GetInstanceProfileCommand\").f(void 0, void 0).ser(se_GetInstanceProfileCommand).de(de_GetInstanceProfileCommand).build() {\n    static{\n        __name(this, \"GetInstanceProfileCommand\");\n    }\n};\n// src/commands/GetLoginProfileCommand.ts\nvar GetLoginProfileCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"GetLoginProfile\", {}).n(\"IAMClient\", \"GetLoginProfileCommand\").f(void 0, void 0).ser(se_GetLoginProfileCommand).de(de_GetLoginProfileCommand).build() {\n    static{\n        __name(this, \"GetLoginProfileCommand\");\n    }\n};\n// src/commands/GetMFADeviceCommand.ts\nvar GetMFADeviceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"GetMFADevice\", {}).n(\"IAMClient\", \"GetMFADeviceCommand\").f(void 0, void 0).ser(se_GetMFADeviceCommand).de(de_GetMFADeviceCommand).build() {\n    static{\n        __name(this, \"GetMFADeviceCommand\");\n    }\n};\n// src/commands/GetOpenIDConnectProviderCommand.ts\nvar GetOpenIDConnectProviderCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"GetOpenIDConnectProvider\", {}).n(\"IAMClient\", \"GetOpenIDConnectProviderCommand\").f(void 0, void 0).ser(se_GetOpenIDConnectProviderCommand).de(de_GetOpenIDConnectProviderCommand).build() {\n    static{\n        __name(this, \"GetOpenIDConnectProviderCommand\");\n    }\n};\n// src/commands/GetOrganizationsAccessReportCommand.ts\nvar GetOrganizationsAccessReportCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"GetOrganizationsAccessReport\", {}).n(\"IAMClient\", \"GetOrganizationsAccessReportCommand\").f(void 0, void 0).ser(se_GetOrganizationsAccessReportCommand).de(de_GetOrganizationsAccessReportCommand).build() {\n    static{\n        __name(this, \"GetOrganizationsAccessReportCommand\");\n    }\n};\n// src/commands/GetPolicyCommand.ts\nvar GetPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"GetPolicy\", {}).n(\"IAMClient\", \"GetPolicyCommand\").f(void 0, void 0).ser(se_GetPolicyCommand).de(de_GetPolicyCommand).build() {\n    static{\n        __name(this, \"GetPolicyCommand\");\n    }\n};\n// src/commands/GetPolicyVersionCommand.ts\nvar GetPolicyVersionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"GetPolicyVersion\", {}).n(\"IAMClient\", \"GetPolicyVersionCommand\").f(void 0, void 0).ser(se_GetPolicyVersionCommand).de(de_GetPolicyVersionCommand).build() {\n    static{\n        __name(this, \"GetPolicyVersionCommand\");\n    }\n};\n// src/commands/GetRoleCommand.ts\nvar GetRoleCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"GetRole\", {}).n(\"IAMClient\", \"GetRoleCommand\").f(void 0, void 0).ser(se_GetRoleCommand).de(de_GetRoleCommand).build() {\n    static{\n        __name(this, \"GetRoleCommand\");\n    }\n};\n// src/commands/GetRolePolicyCommand.ts\nvar GetRolePolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"GetRolePolicy\", {}).n(\"IAMClient\", \"GetRolePolicyCommand\").f(void 0, void 0).ser(se_GetRolePolicyCommand).de(de_GetRolePolicyCommand).build() {\n    static{\n        __name(this, \"GetRolePolicyCommand\");\n    }\n};\n// src/commands/GetSAMLProviderCommand.ts\nvar GetSAMLProviderCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"GetSAMLProvider\", {}).n(\"IAMClient\", \"GetSAMLProviderCommand\").f(void 0, void 0).ser(se_GetSAMLProviderCommand).de(de_GetSAMLProviderCommand).build() {\n    static{\n        __name(this, \"GetSAMLProviderCommand\");\n    }\n};\n// src/commands/GetServerCertificateCommand.ts\nvar GetServerCertificateCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"GetServerCertificate\", {}).n(\"IAMClient\", \"GetServerCertificateCommand\").f(void 0, void 0).ser(se_GetServerCertificateCommand).de(de_GetServerCertificateCommand).build() {\n    static{\n        __name(this, \"GetServerCertificateCommand\");\n    }\n};\n// src/commands/GetServiceLastAccessedDetailsCommand.ts\nvar GetServiceLastAccessedDetailsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"GetServiceLastAccessedDetails\", {}).n(\"IAMClient\", \"GetServiceLastAccessedDetailsCommand\").f(void 0, void 0).ser(se_GetServiceLastAccessedDetailsCommand).de(de_GetServiceLastAccessedDetailsCommand).build() {\n    static{\n        __name(this, \"GetServiceLastAccessedDetailsCommand\");\n    }\n};\n// src/commands/GetServiceLastAccessedDetailsWithEntitiesCommand.ts\nvar GetServiceLastAccessedDetailsWithEntitiesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"GetServiceLastAccessedDetailsWithEntities\", {}).n(\"IAMClient\", \"GetServiceLastAccessedDetailsWithEntitiesCommand\").f(void 0, void 0).ser(se_GetServiceLastAccessedDetailsWithEntitiesCommand).de(de_GetServiceLastAccessedDetailsWithEntitiesCommand).build() {\n    static{\n        __name(this, \"GetServiceLastAccessedDetailsWithEntitiesCommand\");\n    }\n};\n// src/commands/GetServiceLinkedRoleDeletionStatusCommand.ts\nvar GetServiceLinkedRoleDeletionStatusCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"GetServiceLinkedRoleDeletionStatus\", {}).n(\"IAMClient\", \"GetServiceLinkedRoleDeletionStatusCommand\").f(void 0, void 0).ser(se_GetServiceLinkedRoleDeletionStatusCommand).de(de_GetServiceLinkedRoleDeletionStatusCommand).build() {\n    static{\n        __name(this, \"GetServiceLinkedRoleDeletionStatusCommand\");\n    }\n};\n// src/commands/GetSSHPublicKeyCommand.ts\nvar GetSSHPublicKeyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"GetSSHPublicKey\", {}).n(\"IAMClient\", \"GetSSHPublicKeyCommand\").f(void 0, void 0).ser(se_GetSSHPublicKeyCommand).de(de_GetSSHPublicKeyCommand).build() {\n    static{\n        __name(this, \"GetSSHPublicKeyCommand\");\n    }\n};\n// src/commands/GetUserCommand.ts\nvar GetUserCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"GetUser\", {}).n(\"IAMClient\", \"GetUserCommand\").f(void 0, void 0).ser(se_GetUserCommand).de(de_GetUserCommand).build() {\n    static{\n        __name(this, \"GetUserCommand\");\n    }\n};\n// src/commands/GetUserPolicyCommand.ts\nvar GetUserPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"GetUserPolicy\", {}).n(\"IAMClient\", \"GetUserPolicyCommand\").f(void 0, void 0).ser(se_GetUserPolicyCommand).de(de_GetUserPolicyCommand).build() {\n    static{\n        __name(this, \"GetUserPolicyCommand\");\n    }\n};\n// src/commands/ListAccessKeysCommand.ts\nvar ListAccessKeysCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"ListAccessKeys\", {}).n(\"IAMClient\", \"ListAccessKeysCommand\").f(void 0, void 0).ser(se_ListAccessKeysCommand).de(de_ListAccessKeysCommand).build() {\n    static{\n        __name(this, \"ListAccessKeysCommand\");\n    }\n};\n// src/commands/ListAccountAliasesCommand.ts\nvar ListAccountAliasesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"ListAccountAliases\", {}).n(\"IAMClient\", \"ListAccountAliasesCommand\").f(void 0, void 0).ser(se_ListAccountAliasesCommand).de(de_ListAccountAliasesCommand).build() {\n    static{\n        __name(this, \"ListAccountAliasesCommand\");\n    }\n};\n// src/commands/ListAttachedGroupPoliciesCommand.ts\nvar ListAttachedGroupPoliciesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"ListAttachedGroupPolicies\", {}).n(\"IAMClient\", \"ListAttachedGroupPoliciesCommand\").f(void 0, void 0).ser(se_ListAttachedGroupPoliciesCommand).de(de_ListAttachedGroupPoliciesCommand).build() {\n    static{\n        __name(this, \"ListAttachedGroupPoliciesCommand\");\n    }\n};\n// src/commands/ListAttachedRolePoliciesCommand.ts\nvar ListAttachedRolePoliciesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"ListAttachedRolePolicies\", {}).n(\"IAMClient\", \"ListAttachedRolePoliciesCommand\").f(void 0, void 0).ser(se_ListAttachedRolePoliciesCommand).de(de_ListAttachedRolePoliciesCommand).build() {\n    static{\n        __name(this, \"ListAttachedRolePoliciesCommand\");\n    }\n};\n// src/commands/ListAttachedUserPoliciesCommand.ts\nvar ListAttachedUserPoliciesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"ListAttachedUserPolicies\", {}).n(\"IAMClient\", \"ListAttachedUserPoliciesCommand\").f(void 0, void 0).ser(se_ListAttachedUserPoliciesCommand).de(de_ListAttachedUserPoliciesCommand).build() {\n    static{\n        __name(this, \"ListAttachedUserPoliciesCommand\");\n    }\n};\n// src/commands/ListEntitiesForPolicyCommand.ts\nvar ListEntitiesForPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"ListEntitiesForPolicy\", {}).n(\"IAMClient\", \"ListEntitiesForPolicyCommand\").f(void 0, void 0).ser(se_ListEntitiesForPolicyCommand).de(de_ListEntitiesForPolicyCommand).build() {\n    static{\n        __name(this, \"ListEntitiesForPolicyCommand\");\n    }\n};\n// src/commands/ListGroupPoliciesCommand.ts\nvar ListGroupPoliciesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"ListGroupPolicies\", {}).n(\"IAMClient\", \"ListGroupPoliciesCommand\").f(void 0, void 0).ser(se_ListGroupPoliciesCommand).de(de_ListGroupPoliciesCommand).build() {\n    static{\n        __name(this, \"ListGroupPoliciesCommand\");\n    }\n};\n// src/commands/ListGroupsCommand.ts\nvar ListGroupsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"ListGroups\", {}).n(\"IAMClient\", \"ListGroupsCommand\").f(void 0, void 0).ser(se_ListGroupsCommand).de(de_ListGroupsCommand).build() {\n    static{\n        __name(this, \"ListGroupsCommand\");\n    }\n};\n// src/commands/ListGroupsForUserCommand.ts\nvar ListGroupsForUserCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"ListGroupsForUser\", {}).n(\"IAMClient\", \"ListGroupsForUserCommand\").f(void 0, void 0).ser(se_ListGroupsForUserCommand).de(de_ListGroupsForUserCommand).build() {\n    static{\n        __name(this, \"ListGroupsForUserCommand\");\n    }\n};\n// src/commands/ListInstanceProfilesCommand.ts\nvar ListInstanceProfilesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"ListInstanceProfiles\", {}).n(\"IAMClient\", \"ListInstanceProfilesCommand\").f(void 0, void 0).ser(se_ListInstanceProfilesCommand).de(de_ListInstanceProfilesCommand).build() {\n    static{\n        __name(this, \"ListInstanceProfilesCommand\");\n    }\n};\n// src/commands/ListInstanceProfilesForRoleCommand.ts\nvar ListInstanceProfilesForRoleCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"ListInstanceProfilesForRole\", {}).n(\"IAMClient\", \"ListInstanceProfilesForRoleCommand\").f(void 0, void 0).ser(se_ListInstanceProfilesForRoleCommand).de(de_ListInstanceProfilesForRoleCommand).build() {\n    static{\n        __name(this, \"ListInstanceProfilesForRoleCommand\");\n    }\n};\n// src/commands/ListInstanceProfileTagsCommand.ts\nvar ListInstanceProfileTagsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"ListInstanceProfileTags\", {}).n(\"IAMClient\", \"ListInstanceProfileTagsCommand\").f(void 0, void 0).ser(se_ListInstanceProfileTagsCommand).de(de_ListInstanceProfileTagsCommand).build() {\n    static{\n        __name(this, \"ListInstanceProfileTagsCommand\");\n    }\n};\n// src/commands/ListMFADevicesCommand.ts\nvar ListMFADevicesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"ListMFADevices\", {}).n(\"IAMClient\", \"ListMFADevicesCommand\").f(void 0, void 0).ser(se_ListMFADevicesCommand).de(de_ListMFADevicesCommand).build() {\n    static{\n        __name(this, \"ListMFADevicesCommand\");\n    }\n};\n// src/commands/ListMFADeviceTagsCommand.ts\nvar ListMFADeviceTagsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"ListMFADeviceTags\", {}).n(\"IAMClient\", \"ListMFADeviceTagsCommand\").f(void 0, void 0).ser(se_ListMFADeviceTagsCommand).de(de_ListMFADeviceTagsCommand).build() {\n    static{\n        __name(this, \"ListMFADeviceTagsCommand\");\n    }\n};\n// src/commands/ListOpenIDConnectProvidersCommand.ts\nvar ListOpenIDConnectProvidersCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"ListOpenIDConnectProviders\", {}).n(\"IAMClient\", \"ListOpenIDConnectProvidersCommand\").f(void 0, void 0).ser(se_ListOpenIDConnectProvidersCommand).de(de_ListOpenIDConnectProvidersCommand).build() {\n    static{\n        __name(this, \"ListOpenIDConnectProvidersCommand\");\n    }\n};\n// src/commands/ListOpenIDConnectProviderTagsCommand.ts\nvar ListOpenIDConnectProviderTagsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"ListOpenIDConnectProviderTags\", {}).n(\"IAMClient\", \"ListOpenIDConnectProviderTagsCommand\").f(void 0, void 0).ser(se_ListOpenIDConnectProviderTagsCommand).de(de_ListOpenIDConnectProviderTagsCommand).build() {\n    static{\n        __name(this, \"ListOpenIDConnectProviderTagsCommand\");\n    }\n};\n// src/commands/ListOrganizationsFeaturesCommand.ts\nvar ListOrganizationsFeaturesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"ListOrganizationsFeatures\", {}).n(\"IAMClient\", \"ListOrganizationsFeaturesCommand\").f(void 0, void 0).ser(se_ListOrganizationsFeaturesCommand).de(de_ListOrganizationsFeaturesCommand).build() {\n    static{\n        __name(this, \"ListOrganizationsFeaturesCommand\");\n    }\n};\n// src/commands/ListPoliciesCommand.ts\nvar ListPoliciesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"ListPolicies\", {}).n(\"IAMClient\", \"ListPoliciesCommand\").f(void 0, void 0).ser(se_ListPoliciesCommand).de(de_ListPoliciesCommand).build() {\n    static{\n        __name(this, \"ListPoliciesCommand\");\n    }\n};\n// src/commands/ListPoliciesGrantingServiceAccessCommand.ts\nvar ListPoliciesGrantingServiceAccessCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"ListPoliciesGrantingServiceAccess\", {}).n(\"IAMClient\", \"ListPoliciesGrantingServiceAccessCommand\").f(void 0, void 0).ser(se_ListPoliciesGrantingServiceAccessCommand).de(de_ListPoliciesGrantingServiceAccessCommand).build() {\n    static{\n        __name(this, \"ListPoliciesGrantingServiceAccessCommand\");\n    }\n};\n// src/commands/ListPolicyTagsCommand.ts\nvar ListPolicyTagsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"ListPolicyTags\", {}).n(\"IAMClient\", \"ListPolicyTagsCommand\").f(void 0, void 0).ser(se_ListPolicyTagsCommand).de(de_ListPolicyTagsCommand).build() {\n    static{\n        __name(this, \"ListPolicyTagsCommand\");\n    }\n};\n// src/commands/ListPolicyVersionsCommand.ts\nvar ListPolicyVersionsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"ListPolicyVersions\", {}).n(\"IAMClient\", \"ListPolicyVersionsCommand\").f(void 0, void 0).ser(se_ListPolicyVersionsCommand).de(de_ListPolicyVersionsCommand).build() {\n    static{\n        __name(this, \"ListPolicyVersionsCommand\");\n    }\n};\n// src/commands/ListRolePoliciesCommand.ts\nvar ListRolePoliciesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"ListRolePolicies\", {}).n(\"IAMClient\", \"ListRolePoliciesCommand\").f(void 0, void 0).ser(se_ListRolePoliciesCommand).de(de_ListRolePoliciesCommand).build() {\n    static{\n        __name(this, \"ListRolePoliciesCommand\");\n    }\n};\n// src/commands/ListRolesCommand.ts\nvar ListRolesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"ListRoles\", {}).n(\"IAMClient\", \"ListRolesCommand\").f(void 0, void 0).ser(se_ListRolesCommand).de(de_ListRolesCommand).build() {\n    static{\n        __name(this, \"ListRolesCommand\");\n    }\n};\n// src/commands/ListRoleTagsCommand.ts\nvar ListRoleTagsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"ListRoleTags\", {}).n(\"IAMClient\", \"ListRoleTagsCommand\").f(void 0, void 0).ser(se_ListRoleTagsCommand).de(de_ListRoleTagsCommand).build() {\n    static{\n        __name(this, \"ListRoleTagsCommand\");\n    }\n};\n// src/commands/ListSAMLProvidersCommand.ts\nvar ListSAMLProvidersCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"ListSAMLProviders\", {}).n(\"IAMClient\", \"ListSAMLProvidersCommand\").f(void 0, void 0).ser(se_ListSAMLProvidersCommand).de(de_ListSAMLProvidersCommand).build() {\n    static{\n        __name(this, \"ListSAMLProvidersCommand\");\n    }\n};\n// src/commands/ListSAMLProviderTagsCommand.ts\nvar ListSAMLProviderTagsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"ListSAMLProviderTags\", {}).n(\"IAMClient\", \"ListSAMLProviderTagsCommand\").f(void 0, void 0).ser(se_ListSAMLProviderTagsCommand).de(de_ListSAMLProviderTagsCommand).build() {\n    static{\n        __name(this, \"ListSAMLProviderTagsCommand\");\n    }\n};\n// src/commands/ListServerCertificatesCommand.ts\nvar ListServerCertificatesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"ListServerCertificates\", {}).n(\"IAMClient\", \"ListServerCertificatesCommand\").f(void 0, void 0).ser(se_ListServerCertificatesCommand).de(de_ListServerCertificatesCommand).build() {\n    static{\n        __name(this, \"ListServerCertificatesCommand\");\n    }\n};\n// src/commands/ListServerCertificateTagsCommand.ts\nvar ListServerCertificateTagsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"ListServerCertificateTags\", {}).n(\"IAMClient\", \"ListServerCertificateTagsCommand\").f(void 0, void 0).ser(se_ListServerCertificateTagsCommand).de(de_ListServerCertificateTagsCommand).build() {\n    static{\n        __name(this, \"ListServerCertificateTagsCommand\");\n    }\n};\n// src/commands/ListServiceSpecificCredentialsCommand.ts\nvar ListServiceSpecificCredentialsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"ListServiceSpecificCredentials\", {}).n(\"IAMClient\", \"ListServiceSpecificCredentialsCommand\").f(void 0, void 0).ser(se_ListServiceSpecificCredentialsCommand).de(de_ListServiceSpecificCredentialsCommand).build() {\n    static{\n        __name(this, \"ListServiceSpecificCredentialsCommand\");\n    }\n};\n// src/commands/ListSigningCertificatesCommand.ts\nvar ListSigningCertificatesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"ListSigningCertificates\", {}).n(\"IAMClient\", \"ListSigningCertificatesCommand\").f(void 0, void 0).ser(se_ListSigningCertificatesCommand).de(de_ListSigningCertificatesCommand).build() {\n    static{\n        __name(this, \"ListSigningCertificatesCommand\");\n    }\n};\n// src/commands/ListSSHPublicKeysCommand.ts\nvar ListSSHPublicKeysCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"ListSSHPublicKeys\", {}).n(\"IAMClient\", \"ListSSHPublicKeysCommand\").f(void 0, void 0).ser(se_ListSSHPublicKeysCommand).de(de_ListSSHPublicKeysCommand).build() {\n    static{\n        __name(this, \"ListSSHPublicKeysCommand\");\n    }\n};\n// src/commands/ListUserPoliciesCommand.ts\nvar ListUserPoliciesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"ListUserPolicies\", {}).n(\"IAMClient\", \"ListUserPoliciesCommand\").f(void 0, void 0).ser(se_ListUserPoliciesCommand).de(de_ListUserPoliciesCommand).build() {\n    static{\n        __name(this, \"ListUserPoliciesCommand\");\n    }\n};\n// src/commands/ListUsersCommand.ts\nvar ListUsersCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"ListUsers\", {}).n(\"IAMClient\", \"ListUsersCommand\").f(void 0, void 0).ser(se_ListUsersCommand).de(de_ListUsersCommand).build() {\n    static{\n        __name(this, \"ListUsersCommand\");\n    }\n};\n// src/commands/ListUserTagsCommand.ts\nvar ListUserTagsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"ListUserTags\", {}).n(\"IAMClient\", \"ListUserTagsCommand\").f(void 0, void 0).ser(se_ListUserTagsCommand).de(de_ListUserTagsCommand).build() {\n    static{\n        __name(this, \"ListUserTagsCommand\");\n    }\n};\n// src/commands/ListVirtualMFADevicesCommand.ts\nvar ListVirtualMFADevicesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"ListVirtualMFADevices\", {}).n(\"IAMClient\", \"ListVirtualMFADevicesCommand\").f(void 0, ListVirtualMFADevicesResponseFilterSensitiveLog).ser(se_ListVirtualMFADevicesCommand).de(de_ListVirtualMFADevicesCommand).build() {\n    static{\n        __name(this, \"ListVirtualMFADevicesCommand\");\n    }\n};\n// src/commands/PutGroupPolicyCommand.ts\nvar PutGroupPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"PutGroupPolicy\", {}).n(\"IAMClient\", \"PutGroupPolicyCommand\").f(void 0, void 0).ser(se_PutGroupPolicyCommand).de(de_PutGroupPolicyCommand).build() {\n    static{\n        __name(this, \"PutGroupPolicyCommand\");\n    }\n};\n// src/commands/PutRolePermissionsBoundaryCommand.ts\nvar PutRolePermissionsBoundaryCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"PutRolePermissionsBoundary\", {}).n(\"IAMClient\", \"PutRolePermissionsBoundaryCommand\").f(void 0, void 0).ser(se_PutRolePermissionsBoundaryCommand).de(de_PutRolePermissionsBoundaryCommand).build() {\n    static{\n        __name(this, \"PutRolePermissionsBoundaryCommand\");\n    }\n};\n// src/commands/PutRolePolicyCommand.ts\nvar PutRolePolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"PutRolePolicy\", {}).n(\"IAMClient\", \"PutRolePolicyCommand\").f(void 0, void 0).ser(se_PutRolePolicyCommand).de(de_PutRolePolicyCommand).build() {\n    static{\n        __name(this, \"PutRolePolicyCommand\");\n    }\n};\n// src/commands/PutUserPermissionsBoundaryCommand.ts\nvar PutUserPermissionsBoundaryCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"PutUserPermissionsBoundary\", {}).n(\"IAMClient\", \"PutUserPermissionsBoundaryCommand\").f(void 0, void 0).ser(se_PutUserPermissionsBoundaryCommand).de(de_PutUserPermissionsBoundaryCommand).build() {\n    static{\n        __name(this, \"PutUserPermissionsBoundaryCommand\");\n    }\n};\n// src/commands/PutUserPolicyCommand.ts\nvar PutUserPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"PutUserPolicy\", {}).n(\"IAMClient\", \"PutUserPolicyCommand\").f(void 0, void 0).ser(se_PutUserPolicyCommand).de(de_PutUserPolicyCommand).build() {\n    static{\n        __name(this, \"PutUserPolicyCommand\");\n    }\n};\n// src/commands/RemoveClientIDFromOpenIDConnectProviderCommand.ts\nvar RemoveClientIDFromOpenIDConnectProviderCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"RemoveClientIDFromOpenIDConnectProvider\", {}).n(\"IAMClient\", \"RemoveClientIDFromOpenIDConnectProviderCommand\").f(void 0, void 0).ser(se_RemoveClientIDFromOpenIDConnectProviderCommand).de(de_RemoveClientIDFromOpenIDConnectProviderCommand).build() {\n    static{\n        __name(this, \"RemoveClientIDFromOpenIDConnectProviderCommand\");\n    }\n};\n// src/commands/RemoveRoleFromInstanceProfileCommand.ts\nvar RemoveRoleFromInstanceProfileCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"RemoveRoleFromInstanceProfile\", {}).n(\"IAMClient\", \"RemoveRoleFromInstanceProfileCommand\").f(void 0, void 0).ser(se_RemoveRoleFromInstanceProfileCommand).de(de_RemoveRoleFromInstanceProfileCommand).build() {\n    static{\n        __name(this, \"RemoveRoleFromInstanceProfileCommand\");\n    }\n};\n// src/commands/RemoveUserFromGroupCommand.ts\nvar RemoveUserFromGroupCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"RemoveUserFromGroup\", {}).n(\"IAMClient\", \"RemoveUserFromGroupCommand\").f(void 0, void 0).ser(se_RemoveUserFromGroupCommand).de(de_RemoveUserFromGroupCommand).build() {\n    static{\n        __name(this, \"RemoveUserFromGroupCommand\");\n    }\n};\n// src/commands/ResetServiceSpecificCredentialCommand.ts\nvar ResetServiceSpecificCredentialCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"ResetServiceSpecificCredential\", {}).n(\"IAMClient\", \"ResetServiceSpecificCredentialCommand\").f(void 0, ResetServiceSpecificCredentialResponseFilterSensitiveLog).ser(se_ResetServiceSpecificCredentialCommand).de(de_ResetServiceSpecificCredentialCommand).build() {\n    static{\n        __name(this, \"ResetServiceSpecificCredentialCommand\");\n    }\n};\n// src/commands/ResyncMFADeviceCommand.ts\nvar ResyncMFADeviceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"ResyncMFADevice\", {}).n(\"IAMClient\", \"ResyncMFADeviceCommand\").f(void 0, void 0).ser(se_ResyncMFADeviceCommand).de(de_ResyncMFADeviceCommand).build() {\n    static{\n        __name(this, \"ResyncMFADeviceCommand\");\n    }\n};\n// src/commands/SetDefaultPolicyVersionCommand.ts\nvar SetDefaultPolicyVersionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"SetDefaultPolicyVersion\", {}).n(\"IAMClient\", \"SetDefaultPolicyVersionCommand\").f(void 0, void 0).ser(se_SetDefaultPolicyVersionCommand).de(de_SetDefaultPolicyVersionCommand).build() {\n    static{\n        __name(this, \"SetDefaultPolicyVersionCommand\");\n    }\n};\n// src/commands/SetSecurityTokenServicePreferencesCommand.ts\nvar SetSecurityTokenServicePreferencesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"SetSecurityTokenServicePreferences\", {}).n(\"IAMClient\", \"SetSecurityTokenServicePreferencesCommand\").f(void 0, void 0).ser(se_SetSecurityTokenServicePreferencesCommand).de(de_SetSecurityTokenServicePreferencesCommand).build() {\n    static{\n        __name(this, \"SetSecurityTokenServicePreferencesCommand\");\n    }\n};\n// src/commands/SimulateCustomPolicyCommand.ts\nvar SimulateCustomPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"SimulateCustomPolicy\", {}).n(\"IAMClient\", \"SimulateCustomPolicyCommand\").f(void 0, void 0).ser(se_SimulateCustomPolicyCommand).de(de_SimulateCustomPolicyCommand).build() {\n    static{\n        __name(this, \"SimulateCustomPolicyCommand\");\n    }\n};\n// src/commands/SimulatePrincipalPolicyCommand.ts\nvar SimulatePrincipalPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"SimulatePrincipalPolicy\", {}).n(\"IAMClient\", \"SimulatePrincipalPolicyCommand\").f(void 0, void 0).ser(se_SimulatePrincipalPolicyCommand).de(de_SimulatePrincipalPolicyCommand).build() {\n    static{\n        __name(this, \"SimulatePrincipalPolicyCommand\");\n    }\n};\n// src/commands/TagInstanceProfileCommand.ts\nvar TagInstanceProfileCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"TagInstanceProfile\", {}).n(\"IAMClient\", \"TagInstanceProfileCommand\").f(void 0, void 0).ser(se_TagInstanceProfileCommand).de(de_TagInstanceProfileCommand).build() {\n    static{\n        __name(this, \"TagInstanceProfileCommand\");\n    }\n};\n// src/commands/TagMFADeviceCommand.ts\nvar TagMFADeviceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"TagMFADevice\", {}).n(\"IAMClient\", \"TagMFADeviceCommand\").f(void 0, void 0).ser(se_TagMFADeviceCommand).de(de_TagMFADeviceCommand).build() {\n    static{\n        __name(this, \"TagMFADeviceCommand\");\n    }\n};\n// src/commands/TagOpenIDConnectProviderCommand.ts\nvar TagOpenIDConnectProviderCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"TagOpenIDConnectProvider\", {}).n(\"IAMClient\", \"TagOpenIDConnectProviderCommand\").f(void 0, void 0).ser(se_TagOpenIDConnectProviderCommand).de(de_TagOpenIDConnectProviderCommand).build() {\n    static{\n        __name(this, \"TagOpenIDConnectProviderCommand\");\n    }\n};\n// src/commands/TagPolicyCommand.ts\nvar TagPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"TagPolicy\", {}).n(\"IAMClient\", \"TagPolicyCommand\").f(void 0, void 0).ser(se_TagPolicyCommand).de(de_TagPolicyCommand).build() {\n    static{\n        __name(this, \"TagPolicyCommand\");\n    }\n};\n// src/commands/TagRoleCommand.ts\nvar TagRoleCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"TagRole\", {}).n(\"IAMClient\", \"TagRoleCommand\").f(void 0, void 0).ser(se_TagRoleCommand).de(de_TagRoleCommand).build() {\n    static{\n        __name(this, \"TagRoleCommand\");\n    }\n};\n// src/commands/TagSAMLProviderCommand.ts\nvar TagSAMLProviderCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"TagSAMLProvider\", {}).n(\"IAMClient\", \"TagSAMLProviderCommand\").f(void 0, void 0).ser(se_TagSAMLProviderCommand).de(de_TagSAMLProviderCommand).build() {\n    static{\n        __name(this, \"TagSAMLProviderCommand\");\n    }\n};\n// src/commands/TagServerCertificateCommand.ts\nvar TagServerCertificateCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"TagServerCertificate\", {}).n(\"IAMClient\", \"TagServerCertificateCommand\").f(void 0, void 0).ser(se_TagServerCertificateCommand).de(de_TagServerCertificateCommand).build() {\n    static{\n        __name(this, \"TagServerCertificateCommand\");\n    }\n};\n// src/commands/TagUserCommand.ts\nvar TagUserCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"TagUser\", {}).n(\"IAMClient\", \"TagUserCommand\").f(void 0, void 0).ser(se_TagUserCommand).de(de_TagUserCommand).build() {\n    static{\n        __name(this, \"TagUserCommand\");\n    }\n};\n// src/commands/UntagInstanceProfileCommand.ts\nvar UntagInstanceProfileCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"UntagInstanceProfile\", {}).n(\"IAMClient\", \"UntagInstanceProfileCommand\").f(void 0, void 0).ser(se_UntagInstanceProfileCommand).de(de_UntagInstanceProfileCommand).build() {\n    static{\n        __name(this, \"UntagInstanceProfileCommand\");\n    }\n};\n// src/commands/UntagMFADeviceCommand.ts\nvar UntagMFADeviceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"UntagMFADevice\", {}).n(\"IAMClient\", \"UntagMFADeviceCommand\").f(void 0, void 0).ser(se_UntagMFADeviceCommand).de(de_UntagMFADeviceCommand).build() {\n    static{\n        __name(this, \"UntagMFADeviceCommand\");\n    }\n};\n// src/commands/UntagOpenIDConnectProviderCommand.ts\nvar UntagOpenIDConnectProviderCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"UntagOpenIDConnectProvider\", {}).n(\"IAMClient\", \"UntagOpenIDConnectProviderCommand\").f(void 0, void 0).ser(se_UntagOpenIDConnectProviderCommand).de(de_UntagOpenIDConnectProviderCommand).build() {\n    static{\n        __name(this, \"UntagOpenIDConnectProviderCommand\");\n    }\n};\n// src/commands/UntagPolicyCommand.ts\nvar UntagPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"UntagPolicy\", {}).n(\"IAMClient\", \"UntagPolicyCommand\").f(void 0, void 0).ser(se_UntagPolicyCommand).de(de_UntagPolicyCommand).build() {\n    static{\n        __name(this, \"UntagPolicyCommand\");\n    }\n};\n// src/commands/UntagRoleCommand.ts\nvar UntagRoleCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"UntagRole\", {}).n(\"IAMClient\", \"UntagRoleCommand\").f(void 0, void 0).ser(se_UntagRoleCommand).de(de_UntagRoleCommand).build() {\n    static{\n        __name(this, \"UntagRoleCommand\");\n    }\n};\n// src/commands/UntagSAMLProviderCommand.ts\nvar UntagSAMLProviderCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"UntagSAMLProvider\", {}).n(\"IAMClient\", \"UntagSAMLProviderCommand\").f(void 0, void 0).ser(se_UntagSAMLProviderCommand).de(de_UntagSAMLProviderCommand).build() {\n    static{\n        __name(this, \"UntagSAMLProviderCommand\");\n    }\n};\n// src/commands/UntagServerCertificateCommand.ts\nvar UntagServerCertificateCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"UntagServerCertificate\", {}).n(\"IAMClient\", \"UntagServerCertificateCommand\").f(void 0, void 0).ser(se_UntagServerCertificateCommand).de(de_UntagServerCertificateCommand).build() {\n    static{\n        __name(this, \"UntagServerCertificateCommand\");\n    }\n};\n// src/commands/UntagUserCommand.ts\nvar UntagUserCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"UntagUser\", {}).n(\"IAMClient\", \"UntagUserCommand\").f(void 0, void 0).ser(se_UntagUserCommand).de(de_UntagUserCommand).build() {\n    static{\n        __name(this, \"UntagUserCommand\");\n    }\n};\n// src/commands/UpdateAccessKeyCommand.ts\nvar UpdateAccessKeyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"UpdateAccessKey\", {}).n(\"IAMClient\", \"UpdateAccessKeyCommand\").f(void 0, void 0).ser(se_UpdateAccessKeyCommand).de(de_UpdateAccessKeyCommand).build() {\n    static{\n        __name(this, \"UpdateAccessKeyCommand\");\n    }\n};\n// src/commands/UpdateAccountPasswordPolicyCommand.ts\nvar UpdateAccountPasswordPolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"UpdateAccountPasswordPolicy\", {}).n(\"IAMClient\", \"UpdateAccountPasswordPolicyCommand\").f(void 0, void 0).ser(se_UpdateAccountPasswordPolicyCommand).de(de_UpdateAccountPasswordPolicyCommand).build() {\n    static{\n        __name(this, \"UpdateAccountPasswordPolicyCommand\");\n    }\n};\n// src/commands/UpdateAssumeRolePolicyCommand.ts\nvar UpdateAssumeRolePolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"UpdateAssumeRolePolicy\", {}).n(\"IAMClient\", \"UpdateAssumeRolePolicyCommand\").f(void 0, void 0).ser(se_UpdateAssumeRolePolicyCommand).de(de_UpdateAssumeRolePolicyCommand).build() {\n    static{\n        __name(this, \"UpdateAssumeRolePolicyCommand\");\n    }\n};\n// src/commands/UpdateGroupCommand.ts\nvar UpdateGroupCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"UpdateGroup\", {}).n(\"IAMClient\", \"UpdateGroupCommand\").f(void 0, void 0).ser(se_UpdateGroupCommand).de(de_UpdateGroupCommand).build() {\n    static{\n        __name(this, \"UpdateGroupCommand\");\n    }\n};\n// src/commands/UpdateLoginProfileCommand.ts\nvar UpdateLoginProfileCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"UpdateLoginProfile\", {}).n(\"IAMClient\", \"UpdateLoginProfileCommand\").f(UpdateLoginProfileRequestFilterSensitiveLog, void 0).ser(se_UpdateLoginProfileCommand).de(de_UpdateLoginProfileCommand).build() {\n    static{\n        __name(this, \"UpdateLoginProfileCommand\");\n    }\n};\n// src/commands/UpdateOpenIDConnectProviderThumbprintCommand.ts\nvar UpdateOpenIDConnectProviderThumbprintCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"UpdateOpenIDConnectProviderThumbprint\", {}).n(\"IAMClient\", \"UpdateOpenIDConnectProviderThumbprintCommand\").f(void 0, void 0).ser(se_UpdateOpenIDConnectProviderThumbprintCommand).de(de_UpdateOpenIDConnectProviderThumbprintCommand).build() {\n    static{\n        __name(this, \"UpdateOpenIDConnectProviderThumbprintCommand\");\n    }\n};\n// src/commands/UpdateRoleCommand.ts\nvar UpdateRoleCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"UpdateRole\", {}).n(\"IAMClient\", \"UpdateRoleCommand\").f(void 0, void 0).ser(se_UpdateRoleCommand).de(de_UpdateRoleCommand).build() {\n    static{\n        __name(this, \"UpdateRoleCommand\");\n    }\n};\n// src/commands/UpdateRoleDescriptionCommand.ts\nvar UpdateRoleDescriptionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"UpdateRoleDescription\", {}).n(\"IAMClient\", \"UpdateRoleDescriptionCommand\").f(void 0, void 0).ser(se_UpdateRoleDescriptionCommand).de(de_UpdateRoleDescriptionCommand).build() {\n    static{\n        __name(this, \"UpdateRoleDescriptionCommand\");\n    }\n};\n// src/commands/UpdateSAMLProviderCommand.ts\nvar UpdateSAMLProviderCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"UpdateSAMLProvider\", {}).n(\"IAMClient\", \"UpdateSAMLProviderCommand\").f(UpdateSAMLProviderRequestFilterSensitiveLog, void 0).ser(se_UpdateSAMLProviderCommand).de(de_UpdateSAMLProviderCommand).build() {\n    static{\n        __name(this, \"UpdateSAMLProviderCommand\");\n    }\n};\n// src/commands/UpdateServerCertificateCommand.ts\nvar UpdateServerCertificateCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"UpdateServerCertificate\", {}).n(\"IAMClient\", \"UpdateServerCertificateCommand\").f(void 0, void 0).ser(se_UpdateServerCertificateCommand).de(de_UpdateServerCertificateCommand).build() {\n    static{\n        __name(this, \"UpdateServerCertificateCommand\");\n    }\n};\n// src/commands/UpdateServiceSpecificCredentialCommand.ts\nvar UpdateServiceSpecificCredentialCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"UpdateServiceSpecificCredential\", {}).n(\"IAMClient\", \"UpdateServiceSpecificCredentialCommand\").f(void 0, void 0).ser(se_UpdateServiceSpecificCredentialCommand).de(de_UpdateServiceSpecificCredentialCommand).build() {\n    static{\n        __name(this, \"UpdateServiceSpecificCredentialCommand\");\n    }\n};\n// src/commands/UpdateSigningCertificateCommand.ts\nvar UpdateSigningCertificateCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"UpdateSigningCertificate\", {}).n(\"IAMClient\", \"UpdateSigningCertificateCommand\").f(void 0, void 0).ser(se_UpdateSigningCertificateCommand).de(de_UpdateSigningCertificateCommand).build() {\n    static{\n        __name(this, \"UpdateSigningCertificateCommand\");\n    }\n};\n// src/commands/UpdateSSHPublicKeyCommand.ts\nvar UpdateSSHPublicKeyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"UpdateSSHPublicKey\", {}).n(\"IAMClient\", \"UpdateSSHPublicKeyCommand\").f(void 0, void 0).ser(se_UpdateSSHPublicKeyCommand).de(de_UpdateSSHPublicKeyCommand).build() {\n    static{\n        __name(this, \"UpdateSSHPublicKeyCommand\");\n    }\n};\n// src/commands/UpdateUserCommand.ts\nvar UpdateUserCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"UpdateUser\", {}).n(\"IAMClient\", \"UpdateUserCommand\").f(void 0, void 0).ser(se_UpdateUserCommand).de(de_UpdateUserCommand).build() {\n    static{\n        __name(this, \"UpdateUserCommand\");\n    }\n};\n// src/commands/UploadServerCertificateCommand.ts\nvar UploadServerCertificateCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"UploadServerCertificate\", {}).n(\"IAMClient\", \"UploadServerCertificateCommand\").f(UploadServerCertificateRequestFilterSensitiveLog, void 0).ser(se_UploadServerCertificateCommand).de(de_UploadServerCertificateCommand).build() {\n    static{\n        __name(this, \"UploadServerCertificateCommand\");\n    }\n};\n// src/commands/UploadSigningCertificateCommand.ts\nvar UploadSigningCertificateCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"UploadSigningCertificate\", {}).n(\"IAMClient\", \"UploadSigningCertificateCommand\").f(void 0, void 0).ser(se_UploadSigningCertificateCommand).de(de_UploadSigningCertificateCommand).build() {\n    static{\n        __name(this, \"UploadSigningCertificateCommand\");\n    }\n};\n// src/commands/UploadSSHPublicKeyCommand.ts\nvar UploadSSHPublicKeyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSIdentityManagementV20100508\", \"UploadSSHPublicKey\", {}).n(\"IAMClient\", \"UploadSSHPublicKeyCommand\").f(void 0, void 0).ser(se_UploadSSHPublicKeyCommand).de(de_UploadSSHPublicKeyCommand).build() {\n    static{\n        __name(this, \"UploadSSHPublicKeyCommand\");\n    }\n};\n// src/IAM.ts\nvar commands = {\n    AddClientIDToOpenIDConnectProviderCommand,\n    AddRoleToInstanceProfileCommand,\n    AddUserToGroupCommand,\n    AttachGroupPolicyCommand,\n    AttachRolePolicyCommand,\n    AttachUserPolicyCommand,\n    ChangePasswordCommand,\n    CreateAccessKeyCommand,\n    CreateAccountAliasCommand,\n    CreateGroupCommand,\n    CreateInstanceProfileCommand,\n    CreateLoginProfileCommand,\n    CreateOpenIDConnectProviderCommand,\n    CreatePolicyCommand,\n    CreatePolicyVersionCommand,\n    CreateRoleCommand,\n    CreateSAMLProviderCommand,\n    CreateServiceLinkedRoleCommand,\n    CreateServiceSpecificCredentialCommand,\n    CreateUserCommand,\n    CreateVirtualMFADeviceCommand,\n    DeactivateMFADeviceCommand,\n    DeleteAccessKeyCommand,\n    DeleteAccountAliasCommand,\n    DeleteAccountPasswordPolicyCommand,\n    DeleteGroupCommand,\n    DeleteGroupPolicyCommand,\n    DeleteInstanceProfileCommand,\n    DeleteLoginProfileCommand,\n    DeleteOpenIDConnectProviderCommand,\n    DeletePolicyCommand,\n    DeletePolicyVersionCommand,\n    DeleteRoleCommand,\n    DeleteRolePermissionsBoundaryCommand,\n    DeleteRolePolicyCommand,\n    DeleteSAMLProviderCommand,\n    DeleteServerCertificateCommand,\n    DeleteServiceLinkedRoleCommand,\n    DeleteServiceSpecificCredentialCommand,\n    DeleteSigningCertificateCommand,\n    DeleteSSHPublicKeyCommand,\n    DeleteUserCommand,\n    DeleteUserPermissionsBoundaryCommand,\n    DeleteUserPolicyCommand,\n    DeleteVirtualMFADeviceCommand,\n    DetachGroupPolicyCommand,\n    DetachRolePolicyCommand,\n    DetachUserPolicyCommand,\n    DisableOrganizationsRootCredentialsManagementCommand,\n    DisableOrganizationsRootSessionsCommand,\n    EnableMFADeviceCommand,\n    EnableOrganizationsRootCredentialsManagementCommand,\n    EnableOrganizationsRootSessionsCommand,\n    GenerateCredentialReportCommand,\n    GenerateOrganizationsAccessReportCommand,\n    GenerateServiceLastAccessedDetailsCommand,\n    GetAccessKeyLastUsedCommand,\n    GetAccountAuthorizationDetailsCommand,\n    GetAccountPasswordPolicyCommand,\n    GetAccountSummaryCommand,\n    GetContextKeysForCustomPolicyCommand,\n    GetContextKeysForPrincipalPolicyCommand,\n    GetCredentialReportCommand,\n    GetGroupCommand,\n    GetGroupPolicyCommand,\n    GetInstanceProfileCommand,\n    GetLoginProfileCommand,\n    GetMFADeviceCommand,\n    GetOpenIDConnectProviderCommand,\n    GetOrganizationsAccessReportCommand,\n    GetPolicyCommand,\n    GetPolicyVersionCommand,\n    GetRoleCommand,\n    GetRolePolicyCommand,\n    GetSAMLProviderCommand,\n    GetServerCertificateCommand,\n    GetServiceLastAccessedDetailsCommand,\n    GetServiceLastAccessedDetailsWithEntitiesCommand,\n    GetServiceLinkedRoleDeletionStatusCommand,\n    GetSSHPublicKeyCommand,\n    GetUserCommand,\n    GetUserPolicyCommand,\n    ListAccessKeysCommand,\n    ListAccountAliasesCommand,\n    ListAttachedGroupPoliciesCommand,\n    ListAttachedRolePoliciesCommand,\n    ListAttachedUserPoliciesCommand,\n    ListEntitiesForPolicyCommand,\n    ListGroupPoliciesCommand,\n    ListGroupsCommand,\n    ListGroupsForUserCommand,\n    ListInstanceProfilesCommand,\n    ListInstanceProfilesForRoleCommand,\n    ListInstanceProfileTagsCommand,\n    ListMFADevicesCommand,\n    ListMFADeviceTagsCommand,\n    ListOpenIDConnectProvidersCommand,\n    ListOpenIDConnectProviderTagsCommand,\n    ListOrganizationsFeaturesCommand,\n    ListPoliciesCommand,\n    ListPoliciesGrantingServiceAccessCommand,\n    ListPolicyTagsCommand,\n    ListPolicyVersionsCommand,\n    ListRolePoliciesCommand,\n    ListRolesCommand,\n    ListRoleTagsCommand,\n    ListSAMLProvidersCommand,\n    ListSAMLProviderTagsCommand,\n    ListServerCertificatesCommand,\n    ListServerCertificateTagsCommand,\n    ListServiceSpecificCredentialsCommand,\n    ListSigningCertificatesCommand,\n    ListSSHPublicKeysCommand,\n    ListUserPoliciesCommand,\n    ListUsersCommand,\n    ListUserTagsCommand,\n    ListVirtualMFADevicesCommand,\n    PutGroupPolicyCommand,\n    PutRolePermissionsBoundaryCommand,\n    PutRolePolicyCommand,\n    PutUserPermissionsBoundaryCommand,\n    PutUserPolicyCommand,\n    RemoveClientIDFromOpenIDConnectProviderCommand,\n    RemoveRoleFromInstanceProfileCommand,\n    RemoveUserFromGroupCommand,\n    ResetServiceSpecificCredentialCommand,\n    ResyncMFADeviceCommand,\n    SetDefaultPolicyVersionCommand,\n    SetSecurityTokenServicePreferencesCommand,\n    SimulateCustomPolicyCommand,\n    SimulatePrincipalPolicyCommand,\n    TagInstanceProfileCommand,\n    TagMFADeviceCommand,\n    TagOpenIDConnectProviderCommand,\n    TagPolicyCommand,\n    TagRoleCommand,\n    TagSAMLProviderCommand,\n    TagServerCertificateCommand,\n    TagUserCommand,\n    UntagInstanceProfileCommand,\n    UntagMFADeviceCommand,\n    UntagOpenIDConnectProviderCommand,\n    UntagPolicyCommand,\n    UntagRoleCommand,\n    UntagSAMLProviderCommand,\n    UntagServerCertificateCommand,\n    UntagUserCommand,\n    UpdateAccessKeyCommand,\n    UpdateAccountPasswordPolicyCommand,\n    UpdateAssumeRolePolicyCommand,\n    UpdateGroupCommand,\n    UpdateLoginProfileCommand,\n    UpdateOpenIDConnectProviderThumbprintCommand,\n    UpdateRoleCommand,\n    UpdateRoleDescriptionCommand,\n    UpdateSAMLProviderCommand,\n    UpdateServerCertificateCommand,\n    UpdateServiceSpecificCredentialCommand,\n    UpdateSigningCertificateCommand,\n    UpdateSSHPublicKeyCommand,\n    UpdateUserCommand,\n    UploadServerCertificateCommand,\n    UploadSigningCertificateCommand,\n    UploadSSHPublicKeyCommand\n};\nvar IAM = class extends IAMClient {\n    static{\n        __name(this, \"IAM\");\n    }\n};\n(0, import_smithy_client.createAggregatedClient)(commands, IAM);\n// src/pagination/GetAccountAuthorizationDetailsPaginator.ts\nvar paginateGetAccountAuthorizationDetails = (0, import_core.createPaginator)(IAMClient, GetAccountAuthorizationDetailsCommand, \"Marker\", \"Marker\", \"MaxItems\");\n// src/pagination/GetGroupPaginator.ts\nvar paginateGetGroup = (0, import_core.createPaginator)(IAMClient, GetGroupCommand, \"Marker\", \"Marker\", \"MaxItems\");\n// src/pagination/ListAccessKeysPaginator.ts\nvar paginateListAccessKeys = (0, import_core.createPaginator)(IAMClient, ListAccessKeysCommand, \"Marker\", \"Marker\", \"MaxItems\");\n// src/pagination/ListAccountAliasesPaginator.ts\nvar paginateListAccountAliases = (0, import_core.createPaginator)(IAMClient, ListAccountAliasesCommand, \"Marker\", \"Marker\", \"MaxItems\");\n// src/pagination/ListAttachedGroupPoliciesPaginator.ts\nvar paginateListAttachedGroupPolicies = (0, import_core.createPaginator)(IAMClient, ListAttachedGroupPoliciesCommand, \"Marker\", \"Marker\", \"MaxItems\");\n// src/pagination/ListAttachedRolePoliciesPaginator.ts\nvar paginateListAttachedRolePolicies = (0, import_core.createPaginator)(IAMClient, ListAttachedRolePoliciesCommand, \"Marker\", \"Marker\", \"MaxItems\");\n// src/pagination/ListAttachedUserPoliciesPaginator.ts\nvar paginateListAttachedUserPolicies = (0, import_core.createPaginator)(IAMClient, ListAttachedUserPoliciesCommand, \"Marker\", \"Marker\", \"MaxItems\");\n// src/pagination/ListEntitiesForPolicyPaginator.ts\nvar paginateListEntitiesForPolicy = (0, import_core.createPaginator)(IAMClient, ListEntitiesForPolicyCommand, \"Marker\", \"Marker\", \"MaxItems\");\n// src/pagination/ListGroupPoliciesPaginator.ts\nvar paginateListGroupPolicies = (0, import_core.createPaginator)(IAMClient, ListGroupPoliciesCommand, \"Marker\", \"Marker\", \"MaxItems\");\n// src/pagination/ListGroupsForUserPaginator.ts\nvar paginateListGroupsForUser = (0, import_core.createPaginator)(IAMClient, ListGroupsForUserCommand, \"Marker\", \"Marker\", \"MaxItems\");\n// src/pagination/ListGroupsPaginator.ts\nvar paginateListGroups = (0, import_core.createPaginator)(IAMClient, ListGroupsCommand, \"Marker\", \"Marker\", \"MaxItems\");\n// src/pagination/ListInstanceProfileTagsPaginator.ts\nvar paginateListInstanceProfileTags = (0, import_core.createPaginator)(IAMClient, ListInstanceProfileTagsCommand, \"Marker\", \"Marker\", \"MaxItems\");\n// src/pagination/ListInstanceProfilesForRolePaginator.ts\nvar paginateListInstanceProfilesForRole = (0, import_core.createPaginator)(IAMClient, ListInstanceProfilesForRoleCommand, \"Marker\", \"Marker\", \"MaxItems\");\n// src/pagination/ListInstanceProfilesPaginator.ts\nvar paginateListInstanceProfiles = (0, import_core.createPaginator)(IAMClient, ListInstanceProfilesCommand, \"Marker\", \"Marker\", \"MaxItems\");\n// src/pagination/ListMFADeviceTagsPaginator.ts\nvar paginateListMFADeviceTags = (0, import_core.createPaginator)(IAMClient, ListMFADeviceTagsCommand, \"Marker\", \"Marker\", \"MaxItems\");\n// src/pagination/ListMFADevicesPaginator.ts\nvar paginateListMFADevices = (0, import_core.createPaginator)(IAMClient, ListMFADevicesCommand, \"Marker\", \"Marker\", \"MaxItems\");\n// src/pagination/ListOpenIDConnectProviderTagsPaginator.ts\nvar paginateListOpenIDConnectProviderTags = (0, import_core.createPaginator)(IAMClient, ListOpenIDConnectProviderTagsCommand, \"Marker\", \"Marker\", \"MaxItems\");\n// src/pagination/ListPoliciesPaginator.ts\nvar paginateListPolicies = (0, import_core.createPaginator)(IAMClient, ListPoliciesCommand, \"Marker\", \"Marker\", \"MaxItems\");\n// src/pagination/ListPolicyTagsPaginator.ts\nvar paginateListPolicyTags = (0, import_core.createPaginator)(IAMClient, ListPolicyTagsCommand, \"Marker\", \"Marker\", \"MaxItems\");\n// src/pagination/ListPolicyVersionsPaginator.ts\nvar paginateListPolicyVersions = (0, import_core.createPaginator)(IAMClient, ListPolicyVersionsCommand, \"Marker\", \"Marker\", \"MaxItems\");\n// src/pagination/ListRolePoliciesPaginator.ts\nvar paginateListRolePolicies = (0, import_core.createPaginator)(IAMClient, ListRolePoliciesCommand, \"Marker\", \"Marker\", \"MaxItems\");\n// src/pagination/ListRoleTagsPaginator.ts\nvar paginateListRoleTags = (0, import_core.createPaginator)(IAMClient, ListRoleTagsCommand, \"Marker\", \"Marker\", \"MaxItems\");\n// src/pagination/ListRolesPaginator.ts\nvar paginateListRoles = (0, import_core.createPaginator)(IAMClient, ListRolesCommand, \"Marker\", \"Marker\", \"MaxItems\");\n// src/pagination/ListSAMLProviderTagsPaginator.ts\nvar paginateListSAMLProviderTags = (0, import_core.createPaginator)(IAMClient, ListSAMLProviderTagsCommand, \"Marker\", \"Marker\", \"MaxItems\");\n// src/pagination/ListSSHPublicKeysPaginator.ts\nvar paginateListSSHPublicKeys = (0, import_core.createPaginator)(IAMClient, ListSSHPublicKeysCommand, \"Marker\", \"Marker\", \"MaxItems\");\n// src/pagination/ListServerCertificateTagsPaginator.ts\nvar paginateListServerCertificateTags = (0, import_core.createPaginator)(IAMClient, ListServerCertificateTagsCommand, \"Marker\", \"Marker\", \"MaxItems\");\n// src/pagination/ListServerCertificatesPaginator.ts\nvar paginateListServerCertificates = (0, import_core.createPaginator)(IAMClient, ListServerCertificatesCommand, \"Marker\", \"Marker\", \"MaxItems\");\n// src/pagination/ListSigningCertificatesPaginator.ts\nvar paginateListSigningCertificates = (0, import_core.createPaginator)(IAMClient, ListSigningCertificatesCommand, \"Marker\", \"Marker\", \"MaxItems\");\n// src/pagination/ListUserPoliciesPaginator.ts\nvar paginateListUserPolicies = (0, import_core.createPaginator)(IAMClient, ListUserPoliciesCommand, \"Marker\", \"Marker\", \"MaxItems\");\n// src/pagination/ListUserTagsPaginator.ts\nvar paginateListUserTags = (0, import_core.createPaginator)(IAMClient, ListUserTagsCommand, \"Marker\", \"Marker\", \"MaxItems\");\n// src/pagination/ListUsersPaginator.ts\nvar paginateListUsers = (0, import_core.createPaginator)(IAMClient, ListUsersCommand, \"Marker\", \"Marker\", \"MaxItems\");\n// src/pagination/ListVirtualMFADevicesPaginator.ts\nvar paginateListVirtualMFADevices = (0, import_core.createPaginator)(IAMClient, ListVirtualMFADevicesCommand, \"Marker\", \"Marker\", \"MaxItems\");\n// src/pagination/SimulateCustomPolicyPaginator.ts\nvar paginateSimulateCustomPolicy = (0, import_core.createPaginator)(IAMClient, SimulateCustomPolicyCommand, \"Marker\", \"Marker\", \"MaxItems\");\n// src/pagination/SimulatePrincipalPolicyPaginator.ts\nvar paginateSimulatePrincipalPolicy = (0, import_core.createPaginator)(IAMClient, SimulatePrincipalPolicyCommand, \"Marker\", \"Marker\", \"MaxItems\");\n// src/waiters/waitForInstanceProfileExists.ts\nvar import_util_waiter = __webpack_require__(/*! @smithy/util-waiter */ \"(rsc)/./node_modules/@smithy/util-waiter/dist-cjs/index.js\");\nvar checkState = /* @__PURE__ */ __name(async (client, input)=>{\n    let reason;\n    try {\n        const result = await client.send(new GetInstanceProfileCommand(input));\n        reason = result;\n        return {\n            state: import_util_waiter.WaiterState.SUCCESS,\n            reason\n        };\n    } catch (exception) {\n        reason = exception;\n        if (exception.name && exception.name == \"NoSuchEntityException\") {\n            return {\n                state: import_util_waiter.WaiterState.RETRY,\n                reason\n            };\n        }\n    }\n    return {\n        state: import_util_waiter.WaiterState.RETRY,\n        reason\n    };\n}, \"checkState\");\nvar waitForInstanceProfileExists = /* @__PURE__ */ __name(async (params, input)=>{\n    const serviceDefaults = {\n        minDelay: 1,\n        maxDelay: 120\n    };\n    return (0, import_util_waiter.createWaiter)({\n        ...serviceDefaults,\n        ...params\n    }, input, checkState);\n}, \"waitForInstanceProfileExists\");\nvar waitUntilInstanceProfileExists = /* @__PURE__ */ __name(async (params, input)=>{\n    const serviceDefaults = {\n        minDelay: 1,\n        maxDelay: 120\n    };\n    const result = await (0, import_util_waiter.createWaiter)({\n        ...serviceDefaults,\n        ...params\n    }, input, checkState);\n    return (0, import_util_waiter.checkExceptions)(result);\n}, \"waitUntilInstanceProfileExists\");\n// src/waiters/waitForPolicyExists.ts\nvar checkState2 = /* @__PURE__ */ __name(async (client, input)=>{\n    let reason;\n    try {\n        const result = await client.send(new GetPolicyCommand(input));\n        reason = result;\n        return {\n            state: import_util_waiter.WaiterState.SUCCESS,\n            reason\n        };\n    } catch (exception) {\n        reason = exception;\n        if (exception.name && exception.name == \"NoSuchEntityException\") {\n            return {\n                state: import_util_waiter.WaiterState.RETRY,\n                reason\n            };\n        }\n    }\n    return {\n        state: import_util_waiter.WaiterState.RETRY,\n        reason\n    };\n}, \"checkState\");\nvar waitForPolicyExists = /* @__PURE__ */ __name(async (params, input)=>{\n    const serviceDefaults = {\n        minDelay: 1,\n        maxDelay: 120\n    };\n    return (0, import_util_waiter.createWaiter)({\n        ...serviceDefaults,\n        ...params\n    }, input, checkState2);\n}, \"waitForPolicyExists\");\nvar waitUntilPolicyExists = /* @__PURE__ */ __name(async (params, input)=>{\n    const serviceDefaults = {\n        minDelay: 1,\n        maxDelay: 120\n    };\n    const result = await (0, import_util_waiter.createWaiter)({\n        ...serviceDefaults,\n        ...params\n    }, input, checkState2);\n    return (0, import_util_waiter.checkExceptions)(result);\n}, \"waitUntilPolicyExists\");\n// src/waiters/waitForRoleExists.ts\nvar checkState3 = /* @__PURE__ */ __name(async (client, input)=>{\n    let reason;\n    try {\n        const result = await client.send(new GetRoleCommand(input));\n        reason = result;\n        return {\n            state: import_util_waiter.WaiterState.SUCCESS,\n            reason\n        };\n    } catch (exception) {\n        reason = exception;\n        if (exception.name && exception.name == \"NoSuchEntityException\") {\n            return {\n                state: import_util_waiter.WaiterState.RETRY,\n                reason\n            };\n        }\n    }\n    return {\n        state: import_util_waiter.WaiterState.RETRY,\n        reason\n    };\n}, \"checkState\");\nvar waitForRoleExists = /* @__PURE__ */ __name(async (params, input)=>{\n    const serviceDefaults = {\n        minDelay: 1,\n        maxDelay: 120\n    };\n    return (0, import_util_waiter.createWaiter)({\n        ...serviceDefaults,\n        ...params\n    }, input, checkState3);\n}, \"waitForRoleExists\");\nvar waitUntilRoleExists = /* @__PURE__ */ __name(async (params, input)=>{\n    const serviceDefaults = {\n        minDelay: 1,\n        maxDelay: 120\n    };\n    const result = await (0, import_util_waiter.createWaiter)({\n        ...serviceDefaults,\n        ...params\n    }, input, checkState3);\n    return (0, import_util_waiter.checkExceptions)(result);\n}, \"waitUntilRoleExists\");\n// src/waiters/waitForUserExists.ts\nvar checkState4 = /* @__PURE__ */ __name(async (client, input)=>{\n    let reason;\n    try {\n        const result = await client.send(new GetUserCommand(input));\n        reason = result;\n        return {\n            state: import_util_waiter.WaiterState.SUCCESS,\n            reason\n        };\n    } catch (exception) {\n        reason = exception;\n        if (exception.name && exception.name == \"NoSuchEntityException\") {\n            return {\n                state: import_util_waiter.WaiterState.RETRY,\n                reason\n            };\n        }\n    }\n    return {\n        state: import_util_waiter.WaiterState.RETRY,\n        reason\n    };\n}, \"checkState\");\nvar waitForUserExists = /* @__PURE__ */ __name(async (params, input)=>{\n    const serviceDefaults = {\n        minDelay: 1,\n        maxDelay: 120\n    };\n    return (0, import_util_waiter.createWaiter)({\n        ...serviceDefaults,\n        ...params\n    }, input, checkState4);\n}, \"waitForUserExists\");\nvar waitUntilUserExists = /* @__PURE__ */ __name(async (params, input)=>{\n    const serviceDefaults = {\n        minDelay: 1,\n        maxDelay: 120\n    };\n    const result = await (0, import_util_waiter.createWaiter)({\n        ...serviceDefaults,\n        ...params\n    }, input, checkState4);\n    return (0, import_util_waiter.checkExceptions)(result);\n}, \"waitUntilUserExists\");\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/client-iam/dist-cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/client-iam/dist-cjs/runtimeConfig.js":
/*!********************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-iam/dist-cjs/runtimeConfig.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getRuntimeConfig = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.mjs\");\nconst package_json_1 = tslib_1.__importDefault(__webpack_require__(/*! ../package.json */ \"(rsc)/./node_modules/@aws-sdk/client-iam/package.json\"));\nconst core_1 = __webpack_require__(/*! @aws-sdk/core */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/index.js\");\nconst credential_provider_node_1 = __webpack_require__(/*! @aws-sdk/credential-provider-node */ \"(rsc)/./node_modules/@aws-sdk/credential-provider-node/dist-cjs/index.js\");\nconst util_user_agent_node_1 = __webpack_require__(/*! @aws-sdk/util-user-agent-node */ \"(rsc)/./node_modules/@aws-sdk/util-user-agent-node/dist-cjs/index.js\");\nconst config_resolver_1 = __webpack_require__(/*! @smithy/config-resolver */ \"(rsc)/./node_modules/@smithy/config-resolver/dist-cjs/index.js\");\nconst hash_node_1 = __webpack_require__(/*! @smithy/hash-node */ \"(rsc)/./node_modules/@smithy/hash-node/dist-cjs/index.js\");\nconst middleware_retry_1 = __webpack_require__(/*! @smithy/middleware-retry */ \"(rsc)/./node_modules/@smithy/middleware-retry/dist-cjs/index.js\");\nconst node_config_provider_1 = __webpack_require__(/*! @smithy/node-config-provider */ \"(rsc)/./node_modules/@smithy/node-config-provider/dist-cjs/index.js\");\nconst node_http_handler_1 = __webpack_require__(/*! @smithy/node-http-handler */ \"(rsc)/./node_modules/@smithy/node-http-handler/dist-cjs/index.js\");\nconst util_body_length_node_1 = __webpack_require__(/*! @smithy/util-body-length-node */ \"(rsc)/./node_modules/@smithy/util-body-length-node/dist-cjs/index.js\");\nconst util_retry_1 = __webpack_require__(/*! @smithy/util-retry */ \"(rsc)/./node_modules/@smithy/util-retry/dist-cjs/index.js\");\nconst runtimeConfig_shared_1 = __webpack_require__(/*! ./runtimeConfig.shared */ \"(rsc)/./node_modules/@aws-sdk/client-iam/dist-cjs/runtimeConfig.shared.js\");\nconst smithy_client_1 = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/./node_modules/@smithy/smithy-client/dist-cjs/index.js\");\nconst util_defaults_mode_node_1 = __webpack_require__(/*! @smithy/util-defaults-mode-node */ \"(rsc)/./node_modules/@smithy/util-defaults-mode-node/dist-cjs/index.js\");\nconst smithy_client_2 = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/./node_modules/@smithy/smithy-client/dist-cjs/index.js\");\nconst getRuntimeConfig = (config)=>{\n    (0, smithy_client_2.emitWarningIfUnsupportedVersion)(process.version);\n    const defaultsMode = (0, util_defaults_mode_node_1.resolveDefaultsModeConfig)(config);\n    const defaultConfigProvider = ()=>defaultsMode().then(smithy_client_1.loadConfigsForDefaultMode);\n    const clientSharedValues = (0, runtimeConfig_shared_1.getRuntimeConfig)(config);\n    (0, core_1.emitWarningIfUnsupportedVersion)(process.version);\n    const profileConfig = {\n        profile: config?.profile\n    };\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? util_body_length_node_1.calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? credential_provider_node_1.defaultProvider,\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ?? (0, util_user_agent_node_1.createDefaultUserAgentProvider)({\n            serviceId: clientSharedValues.serviceId,\n            clientVersion: package_json_1.default.version\n        }),\n        maxAttempts: config?.maxAttempts ?? (0, node_config_provider_1.loadConfig)(middleware_retry_1.NODE_MAX_ATTEMPT_CONFIG_OPTIONS, config),\n        region: config?.region ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_REGION_CONFIG_OPTIONS, {\n            ...config_resolver_1.NODE_REGION_CONFIG_FILE_OPTIONS,\n            ...profileConfig\n        }),\n        requestHandler: node_http_handler_1.NodeHttpHandler.create(config?.requestHandler ?? defaultConfigProvider),\n        retryMode: config?.retryMode ?? (0, node_config_provider_1.loadConfig)({\n            ...middleware_retry_1.NODE_RETRY_MODE_CONFIG_OPTIONS,\n            default: async ()=>(await defaultConfigProvider()).retryMode || util_retry_1.DEFAULT_RETRY_MODE\n        }, config),\n        sha256: config?.sha256 ?? hash_node_1.Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? node_http_handler_1.streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, profileConfig),\n        useFipsEndpoint: config?.useFipsEndpoint ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, profileConfig),\n        userAgentAppId: config?.userAgentAppId ?? (0, node_config_provider_1.loadConfig)(util_user_agent_node_1.NODE_APP_ID_CONFIG_OPTIONS, profileConfig)\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/client-iam/dist-cjs/runtimeConfig.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/client-iam/dist-cjs/runtimeConfig.shared.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-iam/dist-cjs/runtimeConfig.shared.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getRuntimeConfig = void 0;\nconst core_1 = __webpack_require__(/*! @aws-sdk/core */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/index.js\");\nconst smithy_client_1 = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/./node_modules/@smithy/smithy-client/dist-cjs/index.js\");\nconst url_parser_1 = __webpack_require__(/*! @smithy/url-parser */ \"(rsc)/./node_modules/@smithy/url-parser/dist-cjs/index.js\");\nconst util_base64_1 = __webpack_require__(/*! @smithy/util-base64 */ \"(rsc)/./node_modules/@smithy/util-base64/dist-cjs/index.js\");\nconst util_utf8_1 = __webpack_require__(/*! @smithy/util-utf8 */ \"(rsc)/./node_modules/@smithy/util-utf8/dist-cjs/index.js\");\nconst httpAuthSchemeProvider_1 = __webpack_require__(/*! ./auth/httpAuthSchemeProvider */ \"(rsc)/./node_modules/@aws-sdk/client-iam/dist-cjs/auth/httpAuthSchemeProvider.js\");\nconst endpointResolver_1 = __webpack_require__(/*! ./endpoint/endpointResolver */ \"(rsc)/./node_modules/@aws-sdk/client-iam/dist-cjs/endpoint/endpointResolver.js\");\nconst getRuntimeConfig = (config)=>{\n    return {\n        apiVersion: \"2010-05-08\",\n        base64Decoder: config?.base64Decoder ?? util_base64_1.fromBase64,\n        base64Encoder: config?.base64Encoder ?? util_base64_1.toBase64,\n        disableHostPrefix: config?.disableHostPrefix ?? false,\n        endpointProvider: config?.endpointProvider ?? endpointResolver_1.defaultEndpointResolver,\n        extensions: config?.extensions ?? [],\n        httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? httpAuthSchemeProvider_1.defaultIAMHttpAuthSchemeProvider,\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc)=>ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n                signer: new core_1.AwsSdkSigV4Signer()\n            }\n        ],\n        logger: config?.logger ?? new smithy_client_1.NoOpLogger(),\n        serviceId: config?.serviceId ?? \"IAM\",\n        urlParser: config?.urlParser ?? url_parser_1.parseUrl,\n        utf8Decoder: config?.utf8Decoder ?? util_utf8_1.fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? util_utf8_1.toUtf8\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY2xpZW50LWlhbS9kaXN0LWNqcy9ydW50aW1lQ29uZmlnLnNoYXJlZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsd0JBQXdCLEdBQUcsS0FBSztBQUNoQyxNQUFNRyxTQUFTQyxtQkFBT0EsQ0FBQywwRUFBZTtBQUN0QyxNQUFNQyxrQkFBa0JELG1CQUFPQSxDQUFDLDJGQUF1QjtBQUN2RCxNQUFNRSxlQUFlRixtQkFBT0EsQ0FBQyxxRkFBb0I7QUFDakQsTUFBTUcsZ0JBQWdCSCxtQkFBT0EsQ0FBQyx1RkFBcUI7QUFDbkQsTUFBTUksY0FBY0osbUJBQU9BLENBQUMsbUZBQW1CO0FBQy9DLE1BQU1LLDJCQUEyQkwsbUJBQU9BLENBQUMsdUhBQStCO0FBQ3hFLE1BQU1NLHFCQUFxQk4sbUJBQU9BLENBQUMsbUhBQTZCO0FBQ2hFLE1BQU1GLG1CQUFtQixDQUFDUztJQUN0QixPQUFPO1FBQ0hDLFlBQVk7UUFDWkMsZUFBZUYsUUFBUUUsaUJBQWlCTixjQUFjTyxVQUFVO1FBQ2hFQyxlQUFlSixRQUFRSSxpQkFBaUJSLGNBQWNTLFFBQVE7UUFDOURDLG1CQUFtQk4sUUFBUU0scUJBQXFCO1FBQ2hEQyxrQkFBa0JQLFFBQVFPLG9CQUFvQlIsbUJBQW1CUyx1QkFBdUI7UUFDeEZDLFlBQVlULFFBQVFTLGNBQWMsRUFBRTtRQUNwQ0Msd0JBQXdCVixRQUFRVSwwQkFBMEJaLHlCQUF5QmEsZ0NBQWdDO1FBQ25IQyxpQkFBaUJaLFFBQVFZLG1CQUFtQjtZQUN4QztnQkFDSUMsVUFBVTtnQkFDVkMsa0JBQWtCLENBQUNDLE1BQVFBLElBQUlDLG1CQUFtQixDQUFDO2dCQUNuREMsUUFBUSxJQUFJekIsT0FBTzBCLGlCQUFpQjtZQUN4QztTQUNIO1FBQ0RDLFFBQVFuQixRQUFRbUIsVUFBVSxJQUFJekIsZ0JBQWdCMEIsVUFBVTtRQUN4REMsV0FBV3JCLFFBQVFxQixhQUFhO1FBQ2hDQyxXQUFXdEIsUUFBUXNCLGFBQWEzQixhQUFhNEIsUUFBUTtRQUNyREMsYUFBYXhCLFFBQVF3QixlQUFlM0IsWUFBWTRCLFFBQVE7UUFDeERDLGFBQWExQixRQUFRMEIsZUFBZTdCLFlBQVk4QixNQUFNO0lBQzFEO0FBQ0o7QUFDQXRDLHdCQUF3QixHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL2Nsb3Vkc2hpZnQvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY2xpZW50LWlhbS9kaXN0LWNqcy9ydW50aW1lQ29uZmlnLnNoYXJlZC5qcz9lMjIzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRSdW50aW1lQ29uZmlnID0gdm9pZCAwO1xuY29uc3QgY29yZV8xID0gcmVxdWlyZShcIkBhd3Mtc2RrL2NvcmVcIik7XG5jb25zdCBzbWl0aHlfY2xpZW50XzEgPSByZXF1aXJlKFwiQHNtaXRoeS9zbWl0aHktY2xpZW50XCIpO1xuY29uc3QgdXJsX3BhcnNlcl8xID0gcmVxdWlyZShcIkBzbWl0aHkvdXJsLXBhcnNlclwiKTtcbmNvbnN0IHV0aWxfYmFzZTY0XzEgPSByZXF1aXJlKFwiQHNtaXRoeS91dGlsLWJhc2U2NFwiKTtcbmNvbnN0IHV0aWxfdXRmOF8xID0gcmVxdWlyZShcIkBzbWl0aHkvdXRpbC11dGY4XCIpO1xuY29uc3QgaHR0cEF1dGhTY2hlbWVQcm92aWRlcl8xID0gcmVxdWlyZShcIi4vYXV0aC9odHRwQXV0aFNjaGVtZVByb3ZpZGVyXCIpO1xuY29uc3QgZW5kcG9pbnRSZXNvbHZlcl8xID0gcmVxdWlyZShcIi4vZW5kcG9pbnQvZW5kcG9pbnRSZXNvbHZlclwiKTtcbmNvbnN0IGdldFJ1bnRpbWVDb25maWcgPSAoY29uZmlnKSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgYXBpVmVyc2lvbjogXCIyMDEwLTA1LTA4XCIsXG4gICAgICAgIGJhc2U2NERlY29kZXI6IGNvbmZpZz8uYmFzZTY0RGVjb2RlciA/PyB1dGlsX2Jhc2U2NF8xLmZyb21CYXNlNjQsXG4gICAgICAgIGJhc2U2NEVuY29kZXI6IGNvbmZpZz8uYmFzZTY0RW5jb2RlciA/PyB1dGlsX2Jhc2U2NF8xLnRvQmFzZTY0LFxuICAgICAgICBkaXNhYmxlSG9zdFByZWZpeDogY29uZmlnPy5kaXNhYmxlSG9zdFByZWZpeCA/PyBmYWxzZSxcbiAgICAgICAgZW5kcG9pbnRQcm92aWRlcjogY29uZmlnPy5lbmRwb2ludFByb3ZpZGVyID8/IGVuZHBvaW50UmVzb2x2ZXJfMS5kZWZhdWx0RW5kcG9pbnRSZXNvbHZlcixcbiAgICAgICAgZXh0ZW5zaW9uczogY29uZmlnPy5leHRlbnNpb25zID8/IFtdLFxuICAgICAgICBodHRwQXV0aFNjaGVtZVByb3ZpZGVyOiBjb25maWc/Lmh0dHBBdXRoU2NoZW1lUHJvdmlkZXIgPz8gaHR0cEF1dGhTY2hlbWVQcm92aWRlcl8xLmRlZmF1bHRJQU1IdHRwQXV0aFNjaGVtZVByb3ZpZGVyLFxuICAgICAgICBodHRwQXV0aFNjaGVtZXM6IGNvbmZpZz8uaHR0cEF1dGhTY2hlbWVzID8/IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzY2hlbWVJZDogXCJhd3MuYXV0aCNzaWd2NFwiLFxuICAgICAgICAgICAgICAgIGlkZW50aXR5UHJvdmlkZXI6IChpcGMpID0+IGlwYy5nZXRJZGVudGl0eVByb3ZpZGVyKFwiYXdzLmF1dGgjc2lndjRcIiksXG4gICAgICAgICAgICAgICAgc2lnbmVyOiBuZXcgY29yZV8xLkF3c1Nka1NpZ1Y0U2lnbmVyKCksXG4gICAgICAgICAgICB9LFxuICAgICAgICBdLFxuICAgICAgICBsb2dnZXI6IGNvbmZpZz8ubG9nZ2VyID8/IG5ldyBzbWl0aHlfY2xpZW50XzEuTm9PcExvZ2dlcigpLFxuICAgICAgICBzZXJ2aWNlSWQ6IGNvbmZpZz8uc2VydmljZUlkID8/IFwiSUFNXCIsXG4gICAgICAgIHVybFBhcnNlcjogY29uZmlnPy51cmxQYXJzZXIgPz8gdXJsX3BhcnNlcl8xLnBhcnNlVXJsLFxuICAgICAgICB1dGY4RGVjb2RlcjogY29uZmlnPy51dGY4RGVjb2RlciA/PyB1dGlsX3V0ZjhfMS5mcm9tVXRmOCxcbiAgICAgICAgdXRmOEVuY29kZXI6IGNvbmZpZz8udXRmOEVuY29kZXIgPz8gdXRpbF91dGY4XzEudG9VdGY4LFxuICAgIH07XG59O1xuZXhwb3J0cy5nZXRSdW50aW1lQ29uZmlnID0gZ2V0UnVudGltZUNvbmZpZztcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImdldFJ1bnRpbWVDb25maWciLCJjb3JlXzEiLCJyZXF1aXJlIiwic21pdGh5X2NsaWVudF8xIiwidXJsX3BhcnNlcl8xIiwidXRpbF9iYXNlNjRfMSIsInV0aWxfdXRmOF8xIiwiaHR0cEF1dGhTY2hlbWVQcm92aWRlcl8xIiwiZW5kcG9pbnRSZXNvbHZlcl8xIiwiY29uZmlnIiwiYXBpVmVyc2lvbiIsImJhc2U2NERlY29kZXIiLCJmcm9tQmFzZTY0IiwiYmFzZTY0RW5jb2RlciIsInRvQmFzZTY0IiwiZGlzYWJsZUhvc3RQcmVmaXgiLCJlbmRwb2ludFByb3ZpZGVyIiwiZGVmYXVsdEVuZHBvaW50UmVzb2x2ZXIiLCJleHRlbnNpb25zIiwiaHR0cEF1dGhTY2hlbWVQcm92aWRlciIsImRlZmF1bHRJQU1IdHRwQXV0aFNjaGVtZVByb3ZpZGVyIiwiaHR0cEF1dGhTY2hlbWVzIiwic2NoZW1lSWQiLCJpZGVudGl0eVByb3ZpZGVyIiwiaXBjIiwiZ2V0SWRlbnRpdHlQcm92aWRlciIsInNpZ25lciIsIkF3c1Nka1NpZ1Y0U2lnbmVyIiwibG9nZ2VyIiwiTm9PcExvZ2dlciIsInNlcnZpY2VJZCIsInVybFBhcnNlciIsInBhcnNlVXJsIiwidXRmOERlY29kZXIiLCJmcm9tVXRmOCIsInV0ZjhFbmNvZGVyIiwidG9VdGY4Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/client-iam/dist-cjs/runtimeConfig.shared.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/client-secrets-manager/dist-cjs/auth/httpAuthSchemeProvider.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-secrets-manager/dist-cjs/auth/httpAuthSchemeProvider.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.resolveHttpAuthSchemeConfig = exports.defaultSecretsManagerHttpAuthSchemeProvider = exports.defaultSecretsManagerHttpAuthSchemeParametersProvider = void 0;\nconst core_1 = __webpack_require__(/*! @aws-sdk/core */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/index.js\");\nconst util_middleware_1 = __webpack_require__(/*! @smithy/util-middleware */ \"(rsc)/./node_modules/@smithy/util-middleware/dist-cjs/index.js\");\nconst defaultSecretsManagerHttpAuthSchemeParametersProvider = async (config, context, input)=>{\n    return {\n        operation: (0, util_middleware_1.getSmithyContext)(context).operation,\n        region: await (0, util_middleware_1.normalizeProvider)(config.region)() || (()=>{\n            throw new Error(\"expected `region` to be configured for `aws.auth#sigv4`\");\n        })()\n    };\n};\nexports.defaultSecretsManagerHttpAuthSchemeParametersProvider = defaultSecretsManagerHttpAuthSchemeParametersProvider;\nfunction createAwsAuthSigv4HttpAuthOption(authParameters) {\n    return {\n        schemeId: \"aws.auth#sigv4\",\n        signingProperties: {\n            name: \"secretsmanager\",\n            region: authParameters.region\n        },\n        propertiesExtractor: (config, context)=>({\n                signingProperties: {\n                    config,\n                    context\n                }\n            })\n    };\n}\nconst defaultSecretsManagerHttpAuthSchemeProvider = (authParameters)=>{\n    const options = [];\n    switch(authParameters.operation){\n        default:\n            {\n                options.push(createAwsAuthSigv4HttpAuthOption(authParameters));\n            }\n    }\n    return options;\n};\nexports.defaultSecretsManagerHttpAuthSchemeProvider = defaultSecretsManagerHttpAuthSchemeProvider;\nconst resolveHttpAuthSchemeConfig = (config)=>{\n    const config_0 = (0, core_1.resolveAwsSdkSigV4Config)(config);\n    return Object.assign(config_0, {\n        authSchemePreference: (0, util_middleware_1.normalizeProvider)(config.authSchemePreference ?? [])\n    });\n};\nexports.resolveHttpAuthSchemeConfig = resolveHttpAuthSchemeConfig;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY2xpZW50LXNlY3JldHMtbWFuYWdlci9kaXN0LWNqcy9hdXRoL2h0dHBBdXRoU2NoZW1lUHJvdmlkZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELG1DQUFtQyxHQUFHQSxtREFBbUQsR0FBR0EsNkRBQTZELEdBQUcsS0FBSztBQUNqSyxNQUFNSyxTQUFTQyxtQkFBT0EsQ0FBQywwRUFBZTtBQUN0QyxNQUFNQyxvQkFBb0JELG1CQUFPQSxDQUFDLCtGQUF5QjtBQUMzRCxNQUFNRix3REFBd0QsT0FBT0ksUUFBUUMsU0FBU0M7SUFDbEYsT0FBTztRQUNIQyxXQUFXLENBQUMsR0FBR0osa0JBQWtCSyxnQkFBZ0IsRUFBRUgsU0FBU0UsU0FBUztRQUNyRUUsUUFBUSxNQUFPLENBQUMsR0FBR04sa0JBQWtCTyxpQkFBaUIsRUFBRU4sT0FBT0ssTUFBTSxPQUNqRSxDQUFDO1lBQ0csTUFBTSxJQUFJRSxNQUFNO1FBQ3BCO0lBQ1I7QUFDSjtBQUNBZiw2REFBNkQsR0FBR0k7QUFDaEUsU0FBU1ksaUNBQWlDQyxjQUFjO0lBQ3BELE9BQU87UUFDSEMsVUFBVTtRQUNWQyxtQkFBbUI7WUFDZkMsTUFBTTtZQUNOUCxRQUFRSSxlQUFlSixNQUFNO1FBQ2pDO1FBQ0FRLHFCQUFxQixDQUFDYixRQUFRQyxVQUFhO2dCQUN2Q1UsbUJBQW1CO29CQUNmWDtvQkFDQUM7Z0JBQ0o7WUFDSjtJQUNKO0FBQ0o7QUFDQSxNQUFNTiw4Q0FBOEMsQ0FBQ2M7SUFDakQsTUFBTUssVUFBVSxFQUFFO0lBQ2xCLE9BQVFMLGVBQWVOLFNBQVM7UUFDNUI7WUFBUztnQkFDTFcsUUFBUUMsSUFBSSxDQUFDUCxpQ0FBaUNDO1lBQ2xEO0lBQ0o7SUFDQSxPQUFPSztBQUNYO0FBQ0F0QixtREFBbUQsR0FBR0c7QUFDdEQsTUFBTUQsOEJBQThCLENBQUNNO0lBQ2pDLE1BQU1nQixXQUFXLENBQUMsR0FBR25CLE9BQU9vQix3QkFBd0IsRUFBRWpCO0lBQ3RELE9BQU9WLE9BQU80QixNQUFNLENBQUNGLFVBQVU7UUFDM0JHLHNCQUFzQixDQUFDLEdBQUdwQixrQkFBa0JPLGlCQUFpQixFQUFFTixPQUFPbUIsb0JBQW9CLElBQUksRUFBRTtJQUNwRztBQUNKO0FBQ0EzQixtQ0FBbUMsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbG91ZHNoaWZ0Ly4vbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL2NsaWVudC1zZWNyZXRzLW1hbmFnZXIvZGlzdC1janMvYXV0aC9odHRwQXV0aFNjaGVtZVByb3ZpZGVyLmpzP2IxZGIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnJlc29sdmVIdHRwQXV0aFNjaGVtZUNvbmZpZyA9IGV4cG9ydHMuZGVmYXVsdFNlY3JldHNNYW5hZ2VySHR0cEF1dGhTY2hlbWVQcm92aWRlciA9IGV4cG9ydHMuZGVmYXVsdFNlY3JldHNNYW5hZ2VySHR0cEF1dGhTY2hlbWVQYXJhbWV0ZXJzUHJvdmlkZXIgPSB2b2lkIDA7XG5jb25zdCBjb3JlXzEgPSByZXF1aXJlKFwiQGF3cy1zZGsvY29yZVwiKTtcbmNvbnN0IHV0aWxfbWlkZGxld2FyZV8xID0gcmVxdWlyZShcIkBzbWl0aHkvdXRpbC1taWRkbGV3YXJlXCIpO1xuY29uc3QgZGVmYXVsdFNlY3JldHNNYW5hZ2VySHR0cEF1dGhTY2hlbWVQYXJhbWV0ZXJzUHJvdmlkZXIgPSBhc3luYyAoY29uZmlnLCBjb250ZXh0LCBpbnB1dCkgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICAgIG9wZXJhdGlvbjogKDAsIHV0aWxfbWlkZGxld2FyZV8xLmdldFNtaXRoeUNvbnRleHQpKGNvbnRleHQpLm9wZXJhdGlvbixcbiAgICAgICAgcmVnaW9uOiAoYXdhaXQgKDAsIHV0aWxfbWlkZGxld2FyZV8xLm5vcm1hbGl6ZVByb3ZpZGVyKShjb25maWcucmVnaW9uKSgpKSB8fFxuICAgICAgICAgICAgKCgpID0+IHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJleHBlY3RlZCBgcmVnaW9uYCB0byBiZSBjb25maWd1cmVkIGZvciBgYXdzLmF1dGgjc2lndjRgXCIpO1xuICAgICAgICAgICAgfSkoKSxcbiAgICB9O1xufTtcbmV4cG9ydHMuZGVmYXVsdFNlY3JldHNNYW5hZ2VySHR0cEF1dGhTY2hlbWVQYXJhbWV0ZXJzUHJvdmlkZXIgPSBkZWZhdWx0U2VjcmV0c01hbmFnZXJIdHRwQXV0aFNjaGVtZVBhcmFtZXRlcnNQcm92aWRlcjtcbmZ1bmN0aW9uIGNyZWF0ZUF3c0F1dGhTaWd2NEh0dHBBdXRoT3B0aW9uKGF1dGhQYXJhbWV0ZXJzKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgc2NoZW1lSWQ6IFwiYXdzLmF1dGgjc2lndjRcIixcbiAgICAgICAgc2lnbmluZ1Byb3BlcnRpZXM6IHtcbiAgICAgICAgICAgIG5hbWU6IFwic2VjcmV0c21hbmFnZXJcIixcbiAgICAgICAgICAgIHJlZ2lvbjogYXV0aFBhcmFtZXRlcnMucmVnaW9uLFxuICAgICAgICB9LFxuICAgICAgICBwcm9wZXJ0aWVzRXh0cmFjdG9yOiAoY29uZmlnLCBjb250ZXh0KSA9PiAoe1xuICAgICAgICAgICAgc2lnbmluZ1Byb3BlcnRpZXM6IHtcbiAgICAgICAgICAgICAgICBjb25maWcsXG4gICAgICAgICAgICAgICAgY29udGV4dCxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pLFxuICAgIH07XG59XG5jb25zdCBkZWZhdWx0U2VjcmV0c01hbmFnZXJIdHRwQXV0aFNjaGVtZVByb3ZpZGVyID0gKGF1dGhQYXJhbWV0ZXJzKSA9PiB7XG4gICAgY29uc3Qgb3B0aW9ucyA9IFtdO1xuICAgIHN3aXRjaCAoYXV0aFBhcmFtZXRlcnMub3BlcmF0aW9uKSB7XG4gICAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgICAgIG9wdGlvbnMucHVzaChjcmVhdGVBd3NBdXRoU2lndjRIdHRwQXV0aE9wdGlvbihhdXRoUGFyYW1ldGVycykpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBvcHRpb25zO1xufTtcbmV4cG9ydHMuZGVmYXVsdFNlY3JldHNNYW5hZ2VySHR0cEF1dGhTY2hlbWVQcm92aWRlciA9IGRlZmF1bHRTZWNyZXRzTWFuYWdlckh0dHBBdXRoU2NoZW1lUHJvdmlkZXI7XG5jb25zdCByZXNvbHZlSHR0cEF1dGhTY2hlbWVDb25maWcgPSAoY29uZmlnKSA9PiB7XG4gICAgY29uc3QgY29uZmlnXzAgPSAoMCwgY29yZV8xLnJlc29sdmVBd3NTZGtTaWdWNENvbmZpZykoY29uZmlnKTtcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihjb25maWdfMCwge1xuICAgICAgICBhdXRoU2NoZW1lUHJlZmVyZW5jZTogKDAsIHV0aWxfbWlkZGxld2FyZV8xLm5vcm1hbGl6ZVByb3ZpZGVyKShjb25maWcuYXV0aFNjaGVtZVByZWZlcmVuY2UgPz8gW10pLFxuICAgIH0pO1xufTtcbmV4cG9ydHMucmVzb2x2ZUh0dHBBdXRoU2NoZW1lQ29uZmlnID0gcmVzb2x2ZUh0dHBBdXRoU2NoZW1lQ29uZmlnO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwicmVzb2x2ZUh0dHBBdXRoU2NoZW1lQ29uZmlnIiwiZGVmYXVsdFNlY3JldHNNYW5hZ2VySHR0cEF1dGhTY2hlbWVQcm92aWRlciIsImRlZmF1bHRTZWNyZXRzTWFuYWdlckh0dHBBdXRoU2NoZW1lUGFyYW1ldGVyc1Byb3ZpZGVyIiwiY29yZV8xIiwicmVxdWlyZSIsInV0aWxfbWlkZGxld2FyZV8xIiwiY29uZmlnIiwiY29udGV4dCIsImlucHV0Iiwib3BlcmF0aW9uIiwiZ2V0U21pdGh5Q29udGV4dCIsInJlZ2lvbiIsIm5vcm1hbGl6ZVByb3ZpZGVyIiwiRXJyb3IiLCJjcmVhdGVBd3NBdXRoU2lndjRIdHRwQXV0aE9wdGlvbiIsImF1dGhQYXJhbWV0ZXJzIiwic2NoZW1lSWQiLCJzaWduaW5nUHJvcGVydGllcyIsIm5hbWUiLCJwcm9wZXJ0aWVzRXh0cmFjdG9yIiwib3B0aW9ucyIsInB1c2giLCJjb25maWdfMCIsInJlc29sdmVBd3NTZGtTaWdWNENvbmZpZyIsImFzc2lnbiIsImF1dGhTY2hlbWVQcmVmZXJlbmNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/client-secrets-manager/dist-cjs/auth/httpAuthSchemeProvider.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/client-secrets-manager/dist-cjs/endpoint/endpointResolver.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-secrets-manager/dist-cjs/endpoint/endpointResolver.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.defaultEndpointResolver = void 0;\nconst util_endpoints_1 = __webpack_require__(/*! @aws-sdk/util-endpoints */ \"(rsc)/./node_modules/@aws-sdk/util-endpoints/dist-cjs/index.js\");\nconst util_endpoints_2 = __webpack_require__(/*! @smithy/util-endpoints */ \"(rsc)/./node_modules/@smithy/util-endpoints/dist-cjs/index.js\");\nconst ruleset_1 = __webpack_require__(/*! ./ruleset */ \"(rsc)/./node_modules/@aws-sdk/client-secrets-manager/dist-cjs/endpoint/ruleset.js\");\nconst cache = new util_endpoints_2.EndpointCache({\n    size: 50,\n    params: [\n        \"Endpoint\",\n        \"Region\",\n        \"UseDualStack\",\n        \"UseFIPS\"\n    ]\n});\nconst defaultEndpointResolver = (endpointParams, context = {})=>{\n    return cache.get(endpointParams, ()=>(0, util_endpoints_2.resolveEndpoint)(ruleset_1.ruleSet, {\n            endpointParams: endpointParams,\n            logger: context.logger\n        }));\n};\nexports.defaultEndpointResolver = defaultEndpointResolver;\nutil_endpoints_2.customEndpointFunctions.aws = util_endpoints_1.awsEndpointFunctions;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY2xpZW50LXNlY3JldHMtbWFuYWdlci9kaXN0LWNqcy9lbmRwb2ludC9lbmRwb2ludFJlc29sdmVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCwrQkFBK0IsR0FBRyxLQUFLO0FBQ3ZDLE1BQU1HLG1CQUFtQkMsbUJBQU9BLENBQUMsK0ZBQXlCO0FBQzFELE1BQU1DLG1CQUFtQkQsbUJBQU9BLENBQUMsNkZBQXdCO0FBQ3pELE1BQU1FLFlBQVlGLG1CQUFPQSxDQUFDLG9HQUFXO0FBQ3JDLE1BQU1HLFFBQVEsSUFBSUYsaUJBQWlCRyxhQUFhLENBQUM7SUFDN0NDLE1BQU07SUFDTkMsUUFBUTtRQUFDO1FBQVk7UUFBVTtRQUFnQjtLQUFVO0FBQzdEO0FBQ0EsTUFBTVIsMEJBQTBCLENBQUNTLGdCQUFnQkMsVUFBVSxDQUFDLENBQUM7SUFDekQsT0FBT0wsTUFBTU0sR0FBRyxDQUFDRixnQkFBZ0IsSUFBTSxDQUFDLEdBQUdOLGlCQUFpQlMsZUFBZSxFQUFFUixVQUFVUyxPQUFPLEVBQUU7WUFDNUZKLGdCQUFnQkE7WUFDaEJLLFFBQVFKLFFBQVFJLE1BQU07UUFDMUI7QUFDSjtBQUNBaEIsK0JBQStCLEdBQUdFO0FBQ2xDRyxpQkFBaUJZLHVCQUF1QixDQUFDQyxHQUFHLEdBQUdmLGlCQUFpQmdCLG9CQUFvQiIsInNvdXJjZXMiOlsid2VicGFjazovL2Nsb3Vkc2hpZnQvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY2xpZW50LXNlY3JldHMtbWFuYWdlci9kaXN0LWNqcy9lbmRwb2ludC9lbmRwb2ludFJlc29sdmVyLmpzPzg0YmIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRlZmF1bHRFbmRwb2ludFJlc29sdmVyID0gdm9pZCAwO1xuY29uc3QgdXRpbF9lbmRwb2ludHNfMSA9IHJlcXVpcmUoXCJAYXdzLXNkay91dGlsLWVuZHBvaW50c1wiKTtcbmNvbnN0IHV0aWxfZW5kcG9pbnRzXzIgPSByZXF1aXJlKFwiQHNtaXRoeS91dGlsLWVuZHBvaW50c1wiKTtcbmNvbnN0IHJ1bGVzZXRfMSA9IHJlcXVpcmUoXCIuL3J1bGVzZXRcIik7XG5jb25zdCBjYWNoZSA9IG5ldyB1dGlsX2VuZHBvaW50c18yLkVuZHBvaW50Q2FjaGUoe1xuICAgIHNpemU6IDUwLFxuICAgIHBhcmFtczogW1wiRW5kcG9pbnRcIiwgXCJSZWdpb25cIiwgXCJVc2VEdWFsU3RhY2tcIiwgXCJVc2VGSVBTXCJdLFxufSk7XG5jb25zdCBkZWZhdWx0RW5kcG9pbnRSZXNvbHZlciA9IChlbmRwb2ludFBhcmFtcywgY29udGV4dCA9IHt9KSA9PiB7XG4gICAgcmV0dXJuIGNhY2hlLmdldChlbmRwb2ludFBhcmFtcywgKCkgPT4gKDAsIHV0aWxfZW5kcG9pbnRzXzIucmVzb2x2ZUVuZHBvaW50KShydWxlc2V0XzEucnVsZVNldCwge1xuICAgICAgICBlbmRwb2ludFBhcmFtczogZW5kcG9pbnRQYXJhbXMsXG4gICAgICAgIGxvZ2dlcjogY29udGV4dC5sb2dnZXIsXG4gICAgfSkpO1xufTtcbmV4cG9ydHMuZGVmYXVsdEVuZHBvaW50UmVzb2x2ZXIgPSBkZWZhdWx0RW5kcG9pbnRSZXNvbHZlcjtcbnV0aWxfZW5kcG9pbnRzXzIuY3VzdG9tRW5kcG9pbnRGdW5jdGlvbnMuYXdzID0gdXRpbF9lbmRwb2ludHNfMS5hd3NFbmRwb2ludEZ1bmN0aW9ucztcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHRFbmRwb2ludFJlc29sdmVyIiwidXRpbF9lbmRwb2ludHNfMSIsInJlcXVpcmUiLCJ1dGlsX2VuZHBvaW50c18yIiwicnVsZXNldF8xIiwiY2FjaGUiLCJFbmRwb2ludENhY2hlIiwic2l6ZSIsInBhcmFtcyIsImVuZHBvaW50UGFyYW1zIiwiY29udGV4dCIsImdldCIsInJlc29sdmVFbmRwb2ludCIsInJ1bGVTZXQiLCJsb2dnZXIiLCJjdXN0b21FbmRwb2ludEZ1bmN0aW9ucyIsImF3cyIsImF3c0VuZHBvaW50RnVuY3Rpb25zIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/client-secrets-manager/dist-cjs/endpoint/endpointResolver.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/client-secrets-manager/dist-cjs/endpoint/ruleset.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-secrets-manager/dist-cjs/endpoint/ruleset.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ruleSet = void 0;\nconst y = \"required\", z = \"fn\", A = \"argv\", B = \"ref\", C = \"properties\", D = \"headers\";\nconst a = true, b = \"isSet\", c = \"booleanEquals\", d = \"error\", e = \"endpoint\", f = \"tree\", g = \"PartitionResult\", h = \"stringEquals\", i = {\n    [y]: false,\n    \"type\": \"String\"\n}, j = {\n    [y]: true,\n    \"default\": false,\n    \"type\": \"Boolean\"\n}, k = {\n    [B]: \"Endpoint\"\n}, l = {\n    [z]: c,\n    [A]: [\n        {\n            [B]: \"UseFIPS\"\n        },\n        true\n    ]\n}, m = {\n    [z]: c,\n    [A]: [\n        {\n            [B]: \"UseDualStack\"\n        },\n        true\n    ]\n}, n = {}, o = {\n    [z]: \"getAttr\",\n    [A]: [\n        {\n            [B]: g\n        },\n        \"supportsFIPS\"\n    ]\n}, p = {\n    [z]: c,\n    [A]: [\n        true,\n        {\n            [z]: \"getAttr\",\n            [A]: [\n                {\n                    [B]: g\n                },\n                \"supportsDualStack\"\n            ]\n        }\n    ]\n}, q = {\n    [z]: \"getAttr\",\n    [A]: [\n        {\n            [B]: g\n        },\n        \"name\"\n    ]\n}, r = {\n    \"url\": \"https://secretsmanager-fips.{Region}.amazonaws.com\",\n    [C]: {},\n    [D]: {}\n}, s = {\n    \"url\": \"https://secretsmanager.{Region}.amazonaws.com\",\n    [C]: {},\n    [D]: {}\n}, t = [\n    l\n], u = [\n    m\n], v = [\n    {\n        [B]: \"Region\"\n    }\n], w = [\n    {\n        [z]: h,\n        [A]: [\n            \"aws\",\n            q\n        ]\n    }\n], x = [\n    {\n        [z]: h,\n        [A]: [\n            \"aws-us-gov\",\n            q\n        ]\n    }\n];\nconst _data = {\n    version: \"1.0\",\n    parameters: {\n        Region: i,\n        UseDualStack: j,\n        UseFIPS: j,\n        Endpoint: i\n    },\n    rules: [\n        {\n            conditions: [\n                {\n                    [z]: b,\n                    [A]: [\n                        k\n                    ]\n                }\n            ],\n            rules: [\n                {\n                    conditions: t,\n                    error: \"Invalid Configuration: FIPS and custom endpoint are not supported\",\n                    type: d\n                },\n                {\n                    conditions: u,\n                    error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\",\n                    type: d\n                },\n                {\n                    endpoint: {\n                        url: k,\n                        [C]: n,\n                        [D]: n\n                    },\n                    type: e\n                }\n            ],\n            type: f\n        },\n        {\n            conditions: [\n                {\n                    [z]: b,\n                    [A]: v\n                }\n            ],\n            rules: [\n                {\n                    conditions: [\n                        {\n                            [z]: \"aws.partition\",\n                            [A]: v,\n                            assign: g\n                        }\n                    ],\n                    rules: [\n                        {\n                            conditions: [\n                                l,\n                                m\n                            ],\n                            rules: [\n                                {\n                                    conditions: [\n                                        {\n                                            [z]: c,\n                                            [A]: [\n                                                a,\n                                                o\n                                            ]\n                                        },\n                                        p\n                                    ],\n                                    rules: [\n                                        {\n                                            conditions: w,\n                                            endpoint: r,\n                                            type: e\n                                        },\n                                        {\n                                            conditions: x,\n                                            endpoint: r,\n                                            type: e\n                                        },\n                                        {\n                                            endpoint: {\n                                                url: \"https://secretsmanager-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\",\n                                                [C]: n,\n                                                [D]: n\n                                            },\n                                            type: e\n                                        }\n                                    ],\n                                    type: f\n                                },\n                                {\n                                    error: \"FIPS and DualStack are enabled, but this partition does not support one or both\",\n                                    type: d\n                                }\n                            ],\n                            type: f\n                        },\n                        {\n                            conditions: t,\n                            rules: [\n                                {\n                                    conditions: [\n                                        {\n                                            [z]: c,\n                                            [A]: [\n                                                o,\n                                                a\n                                            ]\n                                        }\n                                    ],\n                                    rules: [\n                                        {\n                                            endpoint: {\n                                                url: \"https://secretsmanager-fips.{Region}.{PartitionResult#dnsSuffix}\",\n                                                [C]: n,\n                                                [D]: n\n                                            },\n                                            type: e\n                                        }\n                                    ],\n                                    type: f\n                                },\n                                {\n                                    error: \"FIPS is enabled but this partition does not support FIPS\",\n                                    type: d\n                                }\n                            ],\n                            type: f\n                        },\n                        {\n                            conditions: u,\n                            rules: [\n                                {\n                                    conditions: [\n                                        p\n                                    ],\n                                    rules: [\n                                        {\n                                            conditions: w,\n                                            endpoint: s,\n                                            type: e\n                                        },\n                                        {\n                                            conditions: [\n                                                {\n                                                    [z]: h,\n                                                    [A]: [\n                                                        \"aws-cn\",\n                                                        q\n                                                    ]\n                                                }\n                                            ],\n                                            endpoint: {\n                                                url: \"https://secretsmanager.{Region}.amazonaws.com.cn\",\n                                                [C]: n,\n                                                [D]: n\n                                            },\n                                            type: e\n                                        },\n                                        {\n                                            conditions: x,\n                                            endpoint: s,\n                                            type: e\n                                        },\n                                        {\n                                            endpoint: {\n                                                url: \"https://secretsmanager.{Region}.{PartitionResult#dualStackDnsSuffix}\",\n                                                [C]: n,\n                                                [D]: n\n                                            },\n                                            type: e\n                                        }\n                                    ],\n                                    type: f\n                                },\n                                {\n                                    error: \"DualStack is enabled but this partition does not support DualStack\",\n                                    type: d\n                                }\n                            ],\n                            type: f\n                        },\n                        {\n                            endpoint: {\n                                url: \"https://secretsmanager.{Region}.{PartitionResult#dnsSuffix}\",\n                                [C]: n,\n                                [D]: n\n                            },\n                            type: e\n                        }\n                    ],\n                    type: f\n                }\n            ],\n            type: f\n        },\n        {\n            error: \"Invalid Configuration: Missing Region\",\n            type: d\n        }\n    ]\n};\nexports.ruleSet = _data;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/client-secrets-manager/dist-cjs/endpoint/ruleset.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/client-secrets-manager/dist-cjs/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-secrets-manager/dist-cjs/index.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value)=>__defProp(target, \"name\", {\n        value,\n        configurable: true\n    });\nvar __export = (target, all)=>{\n    for(var name in all)__defProp(target, name, {\n        get: all[name],\n        enumerable: true\n    });\n};\nvar __copyProps = (to, from, except, desc)=>{\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n            get: ()=>from[key],\n            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n    }\n    return to;\n};\nvar __toCommonJS = (mod)=>__copyProps(__defProp({}, \"__esModule\", {\n        value: true\n    }), mod);\n// src/index.ts\nvar index_exports = {};\n__export(index_exports, {\n    BatchGetSecretValueCommand: ()=>BatchGetSecretValueCommand,\n    BatchGetSecretValueResponseFilterSensitiveLog: ()=>BatchGetSecretValueResponseFilterSensitiveLog,\n    CancelRotateSecretCommand: ()=>CancelRotateSecretCommand,\n    CreateSecretCommand: ()=>CreateSecretCommand,\n    CreateSecretRequestFilterSensitiveLog: ()=>CreateSecretRequestFilterSensitiveLog,\n    DecryptionFailure: ()=>DecryptionFailure,\n    DeleteResourcePolicyCommand: ()=>DeleteResourcePolicyCommand,\n    DeleteSecretCommand: ()=>DeleteSecretCommand,\n    DescribeSecretCommand: ()=>DescribeSecretCommand,\n    EncryptionFailure: ()=>EncryptionFailure,\n    FilterNameStringType: ()=>FilterNameStringType,\n    GetRandomPasswordCommand: ()=>GetRandomPasswordCommand,\n    GetRandomPasswordResponseFilterSensitiveLog: ()=>GetRandomPasswordResponseFilterSensitiveLog,\n    GetResourcePolicyCommand: ()=>GetResourcePolicyCommand,\n    GetSecretValueCommand: ()=>GetSecretValueCommand,\n    GetSecretValueResponseFilterSensitiveLog: ()=>GetSecretValueResponseFilterSensitiveLog,\n    InternalServiceError: ()=>InternalServiceError,\n    InvalidNextTokenException: ()=>InvalidNextTokenException,\n    InvalidParameterException: ()=>InvalidParameterException,\n    InvalidRequestException: ()=>InvalidRequestException,\n    LimitExceededException: ()=>LimitExceededException,\n    ListSecretVersionIdsCommand: ()=>ListSecretVersionIdsCommand,\n    ListSecretsCommand: ()=>ListSecretsCommand,\n    MalformedPolicyDocumentException: ()=>MalformedPolicyDocumentException,\n    PreconditionNotMetException: ()=>PreconditionNotMetException,\n    PublicPolicyException: ()=>PublicPolicyException,\n    PutResourcePolicyCommand: ()=>PutResourcePolicyCommand,\n    PutSecretValueCommand: ()=>PutSecretValueCommand,\n    PutSecretValueRequestFilterSensitiveLog: ()=>PutSecretValueRequestFilterSensitiveLog,\n    RemoveRegionsFromReplicationCommand: ()=>RemoveRegionsFromReplicationCommand,\n    ReplicateSecretToRegionsCommand: ()=>ReplicateSecretToRegionsCommand,\n    ResourceExistsException: ()=>ResourceExistsException,\n    ResourceNotFoundException: ()=>ResourceNotFoundException,\n    RestoreSecretCommand: ()=>RestoreSecretCommand,\n    RotateSecretCommand: ()=>RotateSecretCommand,\n    SecretValueEntryFilterSensitiveLog: ()=>SecretValueEntryFilterSensitiveLog,\n    SecretsManager: ()=>SecretsManager,\n    SecretsManagerClient: ()=>SecretsManagerClient,\n    SecretsManagerServiceException: ()=>SecretsManagerServiceException,\n    SortOrderType: ()=>SortOrderType,\n    StatusType: ()=>StatusType,\n    StopReplicationToReplicaCommand: ()=>StopReplicationToReplicaCommand,\n    TagResourceCommand: ()=>TagResourceCommand,\n    UntagResourceCommand: ()=>UntagResourceCommand,\n    UpdateSecretCommand: ()=>UpdateSecretCommand,\n    UpdateSecretRequestFilterSensitiveLog: ()=>UpdateSecretRequestFilterSensitiveLog,\n    UpdateSecretVersionStageCommand: ()=>UpdateSecretVersionStageCommand,\n    ValidateResourcePolicyCommand: ()=>ValidateResourcePolicyCommand,\n    __Client: ()=>import_smithy_client.Client,\n    paginateBatchGetSecretValue: ()=>paginateBatchGetSecretValue,\n    paginateListSecretVersionIds: ()=>paginateListSecretVersionIds,\n    paginateListSecrets: ()=>paginateListSecrets\n});\nmodule.exports = __toCommonJS(index_exports);\n// src/SecretsManagerClient.ts\nvar import_middleware_host_header = __webpack_require__(/*! @aws-sdk/middleware-host-header */ \"(rsc)/./node_modules/@aws-sdk/middleware-host-header/dist-cjs/index.js\");\nvar import_middleware_logger = __webpack_require__(/*! @aws-sdk/middleware-logger */ \"(rsc)/./node_modules/@aws-sdk/middleware-logger/dist-cjs/index.js\");\nvar import_middleware_recursion_detection = __webpack_require__(/*! @aws-sdk/middleware-recursion-detection */ \"(rsc)/./node_modules/@aws-sdk/middleware-recursion-detection/dist-cjs/index.js\");\nvar import_middleware_user_agent = __webpack_require__(/*! @aws-sdk/middleware-user-agent */ \"(rsc)/./node_modules/@aws-sdk/middleware-user-agent/dist-cjs/index.js\");\nvar import_config_resolver = __webpack_require__(/*! @smithy/config-resolver */ \"(rsc)/./node_modules/@smithy/config-resolver/dist-cjs/index.js\");\nvar import_core = __webpack_require__(/*! @smithy/core */ \"(rsc)/./node_modules/@smithy/core/dist-es/index.js\");\nvar import_middleware_content_length = __webpack_require__(/*! @smithy/middleware-content-length */ \"(rsc)/./node_modules/@smithy/middleware-content-length/dist-cjs/index.js\");\nvar import_middleware_endpoint = __webpack_require__(/*! @smithy/middleware-endpoint */ \"(rsc)/./node_modules/@smithy/middleware-endpoint/dist-cjs/index.js\");\nvar import_middleware_retry = __webpack_require__(/*! @smithy/middleware-retry */ \"(rsc)/./node_modules/@smithy/middleware-retry/dist-cjs/index.js\");\nvar import_httpAuthSchemeProvider = __webpack_require__(/*! ./auth/httpAuthSchemeProvider */ \"(rsc)/./node_modules/@aws-sdk/client-secrets-manager/dist-cjs/auth/httpAuthSchemeProvider.js\");\n// src/endpoint/EndpointParameters.ts\nvar resolveClientEndpointParameters = /* @__PURE__ */ __name((options)=>{\n    return Object.assign(options, {\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        defaultSigningName: \"secretsmanager\"\n    });\n}, \"resolveClientEndpointParameters\");\nvar commonParams = {\n    UseFIPS: {\n        type: \"builtInParams\",\n        name: \"useFipsEndpoint\"\n    },\n    Endpoint: {\n        type: \"builtInParams\",\n        name: \"endpoint\"\n    },\n    Region: {\n        type: \"builtInParams\",\n        name: \"region\"\n    },\n    UseDualStack: {\n        type: \"builtInParams\",\n        name: \"useDualstackEndpoint\"\n    }\n};\n// src/SecretsManagerClient.ts\nvar import_runtimeConfig = __webpack_require__(/*! ././runtimeConfig */ \"(rsc)/./node_modules/@aws-sdk/client-secrets-manager/dist-cjs/runtimeConfig.js\");\n// src/runtimeExtensions.ts\nvar import_region_config_resolver = __webpack_require__(/*! @aws-sdk/region-config-resolver */ \"(rsc)/./node_modules/@aws-sdk/region-config-resolver/dist-cjs/index.js\");\nvar import_protocol_http = __webpack_require__(/*! @smithy/protocol-http */ \"(rsc)/./node_modules/@smithy/protocol-http/dist-cjs/index.js\");\nvar import_smithy_client = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/./node_modules/@smithy/smithy-client/dist-cjs/index.js\");\n// src/auth/httpAuthExtensionConfiguration.ts\nvar getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig)=>{\n    const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;\n    let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;\n    let _credentials = runtimeConfig.credentials;\n    return {\n        setHttpAuthScheme (httpAuthScheme) {\n            const index = _httpAuthSchemes.findIndex((scheme)=>scheme.schemeId === httpAuthScheme.schemeId);\n            if (index === -1) {\n                _httpAuthSchemes.push(httpAuthScheme);\n            } else {\n                _httpAuthSchemes.splice(index, 1, httpAuthScheme);\n            }\n        },\n        httpAuthSchemes () {\n            return _httpAuthSchemes;\n        },\n        setHttpAuthSchemeProvider (httpAuthSchemeProvider) {\n            _httpAuthSchemeProvider = httpAuthSchemeProvider;\n        },\n        httpAuthSchemeProvider () {\n            return _httpAuthSchemeProvider;\n        },\n        setCredentials (credentials) {\n            _credentials = credentials;\n        },\n        credentials () {\n            return _credentials;\n        }\n    };\n}, \"getHttpAuthExtensionConfiguration\");\nvar resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config)=>{\n    return {\n        httpAuthSchemes: config.httpAuthSchemes(),\n        httpAuthSchemeProvider: config.httpAuthSchemeProvider(),\n        credentials: config.credentials()\n    };\n}, \"resolveHttpAuthRuntimeConfig\");\n// src/runtimeExtensions.ts\nvar resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions)=>{\n    const extensionConfiguration = Object.assign((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig), (0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig), (0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig), getHttpAuthExtensionConfiguration(runtimeConfig));\n    extensions.forEach((extension)=>extension.configure(extensionConfiguration));\n    return Object.assign(runtimeConfig, (0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration), (0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration), (0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration), resolveHttpAuthRuntimeConfig(extensionConfiguration));\n}, \"resolveRuntimeExtensions\");\n// src/SecretsManagerClient.ts\nvar SecretsManagerClient = class extends import_smithy_client.Client {\n    static{\n        __name(this, \"SecretsManagerClient\");\n    }\n    constructor(...[configuration]){\n        const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});\n        super(_config_0);\n        this.initConfig = _config_0;\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_1);\n        const _config_3 = (0, import_middleware_retry.resolveRetryConfig)(_config_2);\n        const _config_4 = (0, import_config_resolver.resolveRegionConfig)(_config_3);\n        const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);\n        const _config_6 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_5);\n        const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);\n        const _config_8 = resolveRuntimeExtensions(_config_7, configuration?.extensions || []);\n        this.config = _config_8;\n        this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));\n        this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));\n        this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));\n        this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));\n        this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));\n        this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));\n        this.middlewareStack.use((0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {\n            httpAuthSchemeParametersProvider: import_httpAuthSchemeProvider.defaultSecretsManagerHttpAuthSchemeParametersProvider,\n            identityProviderConfigProvider: /* @__PURE__ */ __name(async (config)=>new import_core.DefaultIdentityProviderConfig({\n                    \"aws.auth#sigv4\": config.credentials\n                }), \"identityProviderConfigProvider\")\n        }));\n        this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));\n    }\n    /**\n   * Destroy underlying resources, like sockets. It's usually not necessary to do this.\n   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.\n   * Otherwise, sockets might stay open for quite a long time before the server terminates them.\n   */ destroy() {\n        super.destroy();\n    }\n};\n// src/SecretsManager.ts\n// src/commands/BatchGetSecretValueCommand.ts\nvar import_middleware_serde = __webpack_require__(/*! @smithy/middleware-serde */ \"(rsc)/./node_modules/@smithy/middleware-serde/dist-cjs/index.js\");\n// src/models/models_0.ts\n// src/models/SecretsManagerServiceException.ts\nvar SecretsManagerServiceException = class _SecretsManagerServiceException extends import_smithy_client.ServiceException {\n    static{\n        __name(this, \"SecretsManagerServiceException\");\n    }\n    /**\n   * @internal\n   */ constructor(options){\n        super(options);\n        Object.setPrototypeOf(this, _SecretsManagerServiceException.prototype);\n    }\n};\n// src/models/models_0.ts\nvar FilterNameStringType = {\n    all: \"all\",\n    description: \"description\",\n    name: \"name\",\n    owning_service: \"owning-service\",\n    primary_region: \"primary-region\",\n    tag_key: \"tag-key\",\n    tag_value: \"tag-value\"\n};\nvar DecryptionFailure = class _DecryptionFailure extends SecretsManagerServiceException {\n    static{\n        __name(this, \"DecryptionFailure\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"DecryptionFailure\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"DecryptionFailure\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _DecryptionFailure.prototype);\n        this.Message = opts.Message;\n    }\n};\nvar InternalServiceError = class _InternalServiceError extends SecretsManagerServiceException {\n    static{\n        __name(this, \"InternalServiceError\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"InternalServiceError\",\n            $fault: \"server\",\n            ...opts\n        });\n        this.name = \"InternalServiceError\";\n        this.$fault = \"server\";\n        Object.setPrototypeOf(this, _InternalServiceError.prototype);\n        this.Message = opts.Message;\n    }\n};\nvar InvalidNextTokenException = class _InvalidNextTokenException extends SecretsManagerServiceException {\n    static{\n        __name(this, \"InvalidNextTokenException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"InvalidNextTokenException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidNextTokenException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _InvalidNextTokenException.prototype);\n        this.Message = opts.Message;\n    }\n};\nvar InvalidParameterException = class _InvalidParameterException extends SecretsManagerServiceException {\n    static{\n        __name(this, \"InvalidParameterException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"InvalidParameterException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidParameterException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _InvalidParameterException.prototype);\n        this.Message = opts.Message;\n    }\n};\nvar InvalidRequestException = class _InvalidRequestException extends SecretsManagerServiceException {\n    static{\n        __name(this, \"InvalidRequestException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"InvalidRequestException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidRequestException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _InvalidRequestException.prototype);\n        this.Message = opts.Message;\n    }\n};\nvar ResourceNotFoundException = class _ResourceNotFoundException extends SecretsManagerServiceException {\n    static{\n        __name(this, \"ResourceNotFoundException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"ResourceNotFoundException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"ResourceNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);\n        this.Message = opts.Message;\n    }\n};\nvar StatusType = {\n    Failed: \"Failed\",\n    InProgress: \"InProgress\",\n    InSync: \"InSync\"\n};\nvar EncryptionFailure = class _EncryptionFailure extends SecretsManagerServiceException {\n    static{\n        __name(this, \"EncryptionFailure\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"EncryptionFailure\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"EncryptionFailure\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _EncryptionFailure.prototype);\n        this.Message = opts.Message;\n    }\n};\nvar LimitExceededException = class _LimitExceededException extends SecretsManagerServiceException {\n    static{\n        __name(this, \"LimitExceededException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"LimitExceededException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"LimitExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _LimitExceededException.prototype);\n        this.Message = opts.Message;\n    }\n};\nvar MalformedPolicyDocumentException = class _MalformedPolicyDocumentException extends SecretsManagerServiceException {\n    static{\n        __name(this, \"MalformedPolicyDocumentException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"MalformedPolicyDocumentException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"MalformedPolicyDocumentException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _MalformedPolicyDocumentException.prototype);\n        this.Message = opts.Message;\n    }\n};\nvar PreconditionNotMetException = class _PreconditionNotMetException extends SecretsManagerServiceException {\n    static{\n        __name(this, \"PreconditionNotMetException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"PreconditionNotMetException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"PreconditionNotMetException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _PreconditionNotMetException.prototype);\n        this.Message = opts.Message;\n    }\n};\nvar ResourceExistsException = class _ResourceExistsException extends SecretsManagerServiceException {\n    static{\n        __name(this, \"ResourceExistsException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"ResourceExistsException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"ResourceExistsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _ResourceExistsException.prototype);\n        this.Message = opts.Message;\n    }\n};\nvar SortOrderType = {\n    asc: \"asc\",\n    desc: \"desc\"\n};\nvar PublicPolicyException = class _PublicPolicyException extends SecretsManagerServiceException {\n    static{\n        __name(this, \"PublicPolicyException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"PublicPolicyException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"PublicPolicyException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _PublicPolicyException.prototype);\n        this.Message = opts.Message;\n    }\n};\nvar SecretValueEntryFilterSensitiveLog = /* @__PURE__ */ __name((obj)=>({\n        ...obj,\n        ...obj.SecretBinary && {\n            SecretBinary: import_smithy_client.SENSITIVE_STRING\n        },\n        ...obj.SecretString && {\n            SecretString: import_smithy_client.SENSITIVE_STRING\n        }\n    }), \"SecretValueEntryFilterSensitiveLog\");\nvar BatchGetSecretValueResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj)=>({\n        ...obj,\n        ...obj.SecretValues && {\n            SecretValues: obj.SecretValues.map((item)=>SecretValueEntryFilterSensitiveLog(item))\n        }\n    }), \"BatchGetSecretValueResponseFilterSensitiveLog\");\nvar CreateSecretRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj)=>({\n        ...obj,\n        ...obj.SecretBinary && {\n            SecretBinary: import_smithy_client.SENSITIVE_STRING\n        },\n        ...obj.SecretString && {\n            SecretString: import_smithy_client.SENSITIVE_STRING\n        }\n    }), \"CreateSecretRequestFilterSensitiveLog\");\nvar GetRandomPasswordResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj)=>({\n        ...obj,\n        ...obj.RandomPassword && {\n            RandomPassword: import_smithy_client.SENSITIVE_STRING\n        }\n    }), \"GetRandomPasswordResponseFilterSensitiveLog\");\nvar GetSecretValueResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj)=>({\n        ...obj,\n        ...obj.SecretBinary && {\n            SecretBinary: import_smithy_client.SENSITIVE_STRING\n        },\n        ...obj.SecretString && {\n            SecretString: import_smithy_client.SENSITIVE_STRING\n        }\n    }), \"GetSecretValueResponseFilterSensitiveLog\");\nvar PutSecretValueRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj)=>({\n        ...obj,\n        ...obj.SecretBinary && {\n            SecretBinary: import_smithy_client.SENSITIVE_STRING\n        },\n        ...obj.SecretString && {\n            SecretString: import_smithy_client.SENSITIVE_STRING\n        },\n        ...obj.RotationToken && {\n            RotationToken: import_smithy_client.SENSITIVE_STRING\n        }\n    }), \"PutSecretValueRequestFilterSensitiveLog\");\nvar UpdateSecretRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj)=>({\n        ...obj,\n        ...obj.SecretBinary && {\n            SecretBinary: import_smithy_client.SENSITIVE_STRING\n        },\n        ...obj.SecretString && {\n            SecretString: import_smithy_client.SENSITIVE_STRING\n        }\n    }), \"UpdateSecretRequestFilterSensitiveLog\");\n// src/protocols/Aws_json1_1.ts\nvar import_core2 = __webpack_require__(/*! @aws-sdk/core */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/index.js\");\nvar import_uuid = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/uuid/dist/esm-node/index.js\");\nvar se_BatchGetSecretValueCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = sharedHeaders(\"BatchGetSecretValue\");\n    let body;\n    body = JSON.stringify((0, import_smithy_client._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_BatchGetSecretValueCommand\");\nvar se_CancelRotateSecretCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = sharedHeaders(\"CancelRotateSecret\");\n    let body;\n    body = JSON.stringify((0, import_smithy_client._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_CancelRotateSecretCommand\");\nvar se_CreateSecretCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = sharedHeaders(\"CreateSecret\");\n    let body;\n    body = JSON.stringify(se_CreateSecretRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_CreateSecretCommand\");\nvar se_DeleteResourcePolicyCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = sharedHeaders(\"DeleteResourcePolicy\");\n    let body;\n    body = JSON.stringify((0, import_smithy_client._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeleteResourcePolicyCommand\");\nvar se_DeleteSecretCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = sharedHeaders(\"DeleteSecret\");\n    let body;\n    body = JSON.stringify((0, import_smithy_client._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeleteSecretCommand\");\nvar se_DescribeSecretCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = sharedHeaders(\"DescribeSecret\");\n    let body;\n    body = JSON.stringify((0, import_smithy_client._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DescribeSecretCommand\");\nvar se_GetRandomPasswordCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = sharedHeaders(\"GetRandomPassword\");\n    let body;\n    body = JSON.stringify((0, import_smithy_client._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetRandomPasswordCommand\");\nvar se_GetResourcePolicyCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = sharedHeaders(\"GetResourcePolicy\");\n    let body;\n    body = JSON.stringify((0, import_smithy_client._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetResourcePolicyCommand\");\nvar se_GetSecretValueCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = sharedHeaders(\"GetSecretValue\");\n    let body;\n    body = JSON.stringify((0, import_smithy_client._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetSecretValueCommand\");\nvar se_ListSecretsCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = sharedHeaders(\"ListSecrets\");\n    let body;\n    body = JSON.stringify((0, import_smithy_client._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListSecretsCommand\");\nvar se_ListSecretVersionIdsCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = sharedHeaders(\"ListSecretVersionIds\");\n    let body;\n    body = JSON.stringify((0, import_smithy_client._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListSecretVersionIdsCommand\");\nvar se_PutResourcePolicyCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = sharedHeaders(\"PutResourcePolicy\");\n    let body;\n    body = JSON.stringify((0, import_smithy_client._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_PutResourcePolicyCommand\");\nvar se_PutSecretValueCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = sharedHeaders(\"PutSecretValue\");\n    let body;\n    body = JSON.stringify(se_PutSecretValueRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_PutSecretValueCommand\");\nvar se_RemoveRegionsFromReplicationCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = sharedHeaders(\"RemoveRegionsFromReplication\");\n    let body;\n    body = JSON.stringify((0, import_smithy_client._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_RemoveRegionsFromReplicationCommand\");\nvar se_ReplicateSecretToRegionsCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = sharedHeaders(\"ReplicateSecretToRegions\");\n    let body;\n    body = JSON.stringify((0, import_smithy_client._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ReplicateSecretToRegionsCommand\");\nvar se_RestoreSecretCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = sharedHeaders(\"RestoreSecret\");\n    let body;\n    body = JSON.stringify((0, import_smithy_client._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_RestoreSecretCommand\");\nvar se_RotateSecretCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = sharedHeaders(\"RotateSecret\");\n    let body;\n    body = JSON.stringify(se_RotateSecretRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_RotateSecretCommand\");\nvar se_StopReplicationToReplicaCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = sharedHeaders(\"StopReplicationToReplica\");\n    let body;\n    body = JSON.stringify((0, import_smithy_client._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_StopReplicationToReplicaCommand\");\nvar se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = sharedHeaders(\"TagResource\");\n    let body;\n    body = JSON.stringify((0, import_smithy_client._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_TagResourceCommand\");\nvar se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = sharedHeaders(\"UntagResource\");\n    let body;\n    body = JSON.stringify((0, import_smithy_client._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UntagResourceCommand\");\nvar se_UpdateSecretCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = sharedHeaders(\"UpdateSecret\");\n    let body;\n    body = JSON.stringify(se_UpdateSecretRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UpdateSecretCommand\");\nvar se_UpdateSecretVersionStageCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = sharedHeaders(\"UpdateSecretVersionStage\");\n    let body;\n    body = JSON.stringify((0, import_smithy_client._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UpdateSecretVersionStageCommand\");\nvar se_ValidateResourcePolicyCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const headers = sharedHeaders(\"ValidateResourcePolicy\");\n    let body;\n    body = JSON.stringify((0, import_smithy_client._json)(input));\n    return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ValidateResourcePolicyCommand\");\nvar de_BatchGetSecretValueCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseJsonBody)(output.body, context);\n    let contents = {};\n    contents = de_BatchGetSecretValueResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_BatchGetSecretValueCommand\");\nvar de_CancelRotateSecretCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseJsonBody)(output.body, context);\n    let contents = {};\n    contents = (0, import_smithy_client._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_CancelRotateSecretCommand\");\nvar de_CreateSecretCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseJsonBody)(output.body, context);\n    let contents = {};\n    contents = de_CreateSecretResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_CreateSecretCommand\");\nvar de_DeleteResourcePolicyCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseJsonBody)(output.body, context);\n    let contents = {};\n    contents = (0, import_smithy_client._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_DeleteResourcePolicyCommand\");\nvar de_DeleteSecretCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseJsonBody)(output.body, context);\n    let contents = {};\n    contents = de_DeleteSecretResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_DeleteSecretCommand\");\nvar de_DescribeSecretCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseJsonBody)(output.body, context);\n    let contents = {};\n    contents = de_DescribeSecretResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_DescribeSecretCommand\");\nvar de_GetRandomPasswordCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseJsonBody)(output.body, context);\n    let contents = {};\n    contents = (0, import_smithy_client._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_GetRandomPasswordCommand\");\nvar de_GetResourcePolicyCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseJsonBody)(output.body, context);\n    let contents = {};\n    contents = (0, import_smithy_client._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_GetResourcePolicyCommand\");\nvar de_GetSecretValueCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseJsonBody)(output.body, context);\n    let contents = {};\n    contents = de_GetSecretValueResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_GetSecretValueCommand\");\nvar de_ListSecretsCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseJsonBody)(output.body, context);\n    let contents = {};\n    contents = de_ListSecretsResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_ListSecretsCommand\");\nvar de_ListSecretVersionIdsCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseJsonBody)(output.body, context);\n    let contents = {};\n    contents = de_ListSecretVersionIdsResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_ListSecretVersionIdsCommand\");\nvar de_PutResourcePolicyCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseJsonBody)(output.body, context);\n    let contents = {};\n    contents = (0, import_smithy_client._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_PutResourcePolicyCommand\");\nvar de_PutSecretValueCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseJsonBody)(output.body, context);\n    let contents = {};\n    contents = (0, import_smithy_client._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_PutSecretValueCommand\");\nvar de_RemoveRegionsFromReplicationCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseJsonBody)(output.body, context);\n    let contents = {};\n    contents = de_RemoveRegionsFromReplicationResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_RemoveRegionsFromReplicationCommand\");\nvar de_ReplicateSecretToRegionsCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseJsonBody)(output.body, context);\n    let contents = {};\n    contents = de_ReplicateSecretToRegionsResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_ReplicateSecretToRegionsCommand\");\nvar de_RestoreSecretCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseJsonBody)(output.body, context);\n    let contents = {};\n    contents = (0, import_smithy_client._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_RestoreSecretCommand\");\nvar de_RotateSecretCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseJsonBody)(output.body, context);\n    let contents = {};\n    contents = (0, import_smithy_client._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_RotateSecretCommand\");\nvar de_StopReplicationToReplicaCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseJsonBody)(output.body, context);\n    let contents = {};\n    contents = (0, import_smithy_client._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_StopReplicationToReplicaCommand\");\nvar de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_TagResourceCommand\");\nvar de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output)\n    };\n    return response;\n}, \"de_UntagResourceCommand\");\nvar de_UpdateSecretCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseJsonBody)(output.body, context);\n    let contents = {};\n    contents = (0, import_smithy_client._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_UpdateSecretCommand\");\nvar de_UpdateSecretVersionStageCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseJsonBody)(output.body, context);\n    let contents = {};\n    contents = (0, import_smithy_client._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_UpdateSecretVersionStageCommand\");\nvar de_ValidateResourcePolicyCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0, import_core2.parseJsonBody)(output.body, context);\n    let contents = {};\n    contents = (0, import_smithy_client._json)(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n}, \"de_ValidateResourcePolicyCommand\");\nvar de_CommandError = /* @__PURE__ */ __name(async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await (0, import_core2.parseJsonErrorBody)(output.body, context)\n    };\n    const errorCode = (0, import_core2.loadRestJsonErrorCode)(output, parsedOutput.body);\n    switch(errorCode){\n        case \"DecryptionFailure\":\n        case \"com.amazonaws.secretsmanager#DecryptionFailure\":\n            throw await de_DecryptionFailureRes(parsedOutput, context);\n        case \"InternalServiceError\":\n        case \"com.amazonaws.secretsmanager#InternalServiceError\":\n            throw await de_InternalServiceErrorRes(parsedOutput, context);\n        case \"InvalidNextTokenException\":\n        case \"com.amazonaws.secretsmanager#InvalidNextTokenException\":\n            throw await de_InvalidNextTokenExceptionRes(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.secretsmanager#InvalidParameterException\":\n            throw await de_InvalidParameterExceptionRes(parsedOutput, context);\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.secretsmanager#InvalidRequestException\":\n            throw await de_InvalidRequestExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.secretsmanager#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        case \"EncryptionFailure\":\n        case \"com.amazonaws.secretsmanager#EncryptionFailure\":\n            throw await de_EncryptionFailureRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.secretsmanager#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        case \"MalformedPolicyDocumentException\":\n        case \"com.amazonaws.secretsmanager#MalformedPolicyDocumentException\":\n            throw await de_MalformedPolicyDocumentExceptionRes(parsedOutput, context);\n        case \"PreconditionNotMetException\":\n        case \"com.amazonaws.secretsmanager#PreconditionNotMetException\":\n            throw await de_PreconditionNotMetExceptionRes(parsedOutput, context);\n        case \"ResourceExistsException\":\n        case \"com.amazonaws.secretsmanager#ResourceExistsException\":\n            throw await de_ResourceExistsExceptionRes(parsedOutput, context);\n        case \"PublicPolicyException\":\n        case \"com.amazonaws.secretsmanager#PublicPolicyException\":\n            throw await de_PublicPolicyExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n}, \"de_CommandError\");\nvar de_DecryptionFailureRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0, import_smithy_client._json)(body);\n    const exception = new DecryptionFailure({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_DecryptionFailureRes\");\nvar de_EncryptionFailureRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0, import_smithy_client._json)(body);\n    const exception = new EncryptionFailure({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_EncryptionFailureRes\");\nvar de_InternalServiceErrorRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0, import_smithy_client._json)(body);\n    const exception = new InternalServiceError({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InternalServiceErrorRes\");\nvar de_InvalidNextTokenExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0, import_smithy_client._json)(body);\n    const exception = new InvalidNextTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidNextTokenExceptionRes\");\nvar de_InvalidParameterExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0, import_smithy_client._json)(body);\n    const exception = new InvalidParameterException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidParameterExceptionRes\");\nvar de_InvalidRequestExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0, import_smithy_client._json)(body);\n    const exception = new InvalidRequestException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidRequestExceptionRes\");\nvar de_LimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0, import_smithy_client._json)(body);\n    const exception = new LimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_LimitExceededExceptionRes\");\nvar de_MalformedPolicyDocumentExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0, import_smithy_client._json)(body);\n    const exception = new MalformedPolicyDocumentException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_MalformedPolicyDocumentExceptionRes\");\nvar de_PreconditionNotMetExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0, import_smithy_client._json)(body);\n    const exception = new PreconditionNotMetException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_PreconditionNotMetExceptionRes\");\nvar de_PublicPolicyExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0, import_smithy_client._json)(body);\n    const exception = new PublicPolicyException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_PublicPolicyExceptionRes\");\nvar de_ResourceExistsExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0, import_smithy_client._json)(body);\n    const exception = new ResourceExistsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_ResourceExistsExceptionRes\");\nvar de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = (0, import_smithy_client._json)(body);\n    const exception = new ResourceNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_ResourceNotFoundExceptionRes\");\nvar se_CreateSecretRequest = /* @__PURE__ */ __name((input, context)=>{\n    return (0, import_smithy_client.take)(input, {\n        AddReplicaRegions: import_smithy_client._json,\n        ClientRequestToken: [\n            true,\n            (_)=>_ ?? (0, import_uuid.v4)()\n        ],\n        Description: [],\n        ForceOverwriteReplicaSecret: [],\n        KmsKeyId: [],\n        Name: [],\n        SecretBinary: context.base64Encoder,\n        SecretString: [],\n        Tags: import_smithy_client._json\n    });\n}, \"se_CreateSecretRequest\");\nvar se_PutSecretValueRequest = /* @__PURE__ */ __name((input, context)=>{\n    return (0, import_smithy_client.take)(input, {\n        ClientRequestToken: [\n            true,\n            (_)=>_ ?? (0, import_uuid.v4)()\n        ],\n        RotationToken: [],\n        SecretBinary: context.base64Encoder,\n        SecretId: [],\n        SecretString: [],\n        VersionStages: import_smithy_client._json\n    });\n}, \"se_PutSecretValueRequest\");\nvar se_RotateSecretRequest = /* @__PURE__ */ __name((input, context)=>{\n    return (0, import_smithy_client.take)(input, {\n        ClientRequestToken: [\n            true,\n            (_)=>_ ?? (0, import_uuid.v4)()\n        ],\n        RotateImmediately: [],\n        RotationLambdaARN: [],\n        RotationRules: import_smithy_client._json,\n        SecretId: []\n    });\n}, \"se_RotateSecretRequest\");\nvar se_UpdateSecretRequest = /* @__PURE__ */ __name((input, context)=>{\n    return (0, import_smithy_client.take)(input, {\n        ClientRequestToken: [\n            true,\n            (_)=>_ ?? (0, import_uuid.v4)()\n        ],\n        Description: [],\n        KmsKeyId: [],\n        SecretBinary: context.base64Encoder,\n        SecretId: [],\n        SecretString: []\n    });\n}, \"se_UpdateSecretRequest\");\nvar de_BatchGetSecretValueResponse = /* @__PURE__ */ __name((output, context)=>{\n    return (0, import_smithy_client.take)(output, {\n        Errors: import_smithy_client._json,\n        NextToken: import_smithy_client.expectString,\n        SecretValues: /* @__PURE__ */ __name((_)=>de_SecretValuesType(_, context), \"SecretValues\")\n    });\n}, \"de_BatchGetSecretValueResponse\");\nvar de_CreateSecretResponse = /* @__PURE__ */ __name((output, context)=>{\n    return (0, import_smithy_client.take)(output, {\n        ARN: import_smithy_client.expectString,\n        Name: import_smithy_client.expectString,\n        ReplicationStatus: /* @__PURE__ */ __name((_)=>de_ReplicationStatusListType(_, context), \"ReplicationStatus\"),\n        VersionId: import_smithy_client.expectString\n    });\n}, \"de_CreateSecretResponse\");\nvar de_DeleteSecretResponse = /* @__PURE__ */ __name((output, context)=>{\n    return (0, import_smithy_client.take)(output, {\n        ARN: import_smithy_client.expectString,\n        DeletionDate: /* @__PURE__ */ __name((_)=>(0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), \"DeletionDate\"),\n        Name: import_smithy_client.expectString\n    });\n}, \"de_DeleteSecretResponse\");\nvar de_DescribeSecretResponse = /* @__PURE__ */ __name((output, context)=>{\n    return (0, import_smithy_client.take)(output, {\n        ARN: import_smithy_client.expectString,\n        CreatedDate: /* @__PURE__ */ __name((_)=>(0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), \"CreatedDate\"),\n        DeletedDate: /* @__PURE__ */ __name((_)=>(0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), \"DeletedDate\"),\n        Description: import_smithy_client.expectString,\n        KmsKeyId: import_smithy_client.expectString,\n        LastAccessedDate: /* @__PURE__ */ __name((_)=>(0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), \"LastAccessedDate\"),\n        LastChangedDate: /* @__PURE__ */ __name((_)=>(0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), \"LastChangedDate\"),\n        LastRotatedDate: /* @__PURE__ */ __name((_)=>(0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), \"LastRotatedDate\"),\n        Name: import_smithy_client.expectString,\n        NextRotationDate: /* @__PURE__ */ __name((_)=>(0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), \"NextRotationDate\"),\n        OwningService: import_smithy_client.expectString,\n        PrimaryRegion: import_smithy_client.expectString,\n        ReplicationStatus: /* @__PURE__ */ __name((_)=>de_ReplicationStatusListType(_, context), \"ReplicationStatus\"),\n        RotationEnabled: import_smithy_client.expectBoolean,\n        RotationLambdaARN: import_smithy_client.expectString,\n        RotationRules: import_smithy_client._json,\n        Tags: import_smithy_client._json,\n        VersionIdsToStages: import_smithy_client._json\n    });\n}, \"de_DescribeSecretResponse\");\nvar de_GetSecretValueResponse = /* @__PURE__ */ __name((output, context)=>{\n    return (0, import_smithy_client.take)(output, {\n        ARN: import_smithy_client.expectString,\n        CreatedDate: /* @__PURE__ */ __name((_)=>(0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), \"CreatedDate\"),\n        Name: import_smithy_client.expectString,\n        SecretBinary: context.base64Decoder,\n        SecretString: import_smithy_client.expectString,\n        VersionId: import_smithy_client.expectString,\n        VersionStages: import_smithy_client._json\n    });\n}, \"de_GetSecretValueResponse\");\nvar de_ListSecretsResponse = /* @__PURE__ */ __name((output, context)=>{\n    return (0, import_smithy_client.take)(output, {\n        NextToken: import_smithy_client.expectString,\n        SecretList: /* @__PURE__ */ __name((_)=>de_SecretListType(_, context), \"SecretList\")\n    });\n}, \"de_ListSecretsResponse\");\nvar de_ListSecretVersionIdsResponse = /* @__PURE__ */ __name((output, context)=>{\n    return (0, import_smithy_client.take)(output, {\n        ARN: import_smithy_client.expectString,\n        Name: import_smithy_client.expectString,\n        NextToken: import_smithy_client.expectString,\n        Versions: /* @__PURE__ */ __name((_)=>de_SecretVersionsListType(_, context), \"Versions\")\n    });\n}, \"de_ListSecretVersionIdsResponse\");\nvar de_RemoveRegionsFromReplicationResponse = /* @__PURE__ */ __name((output, context)=>{\n    return (0, import_smithy_client.take)(output, {\n        ARN: import_smithy_client.expectString,\n        ReplicationStatus: /* @__PURE__ */ __name((_)=>de_ReplicationStatusListType(_, context), \"ReplicationStatus\")\n    });\n}, \"de_RemoveRegionsFromReplicationResponse\");\nvar de_ReplicateSecretToRegionsResponse = /* @__PURE__ */ __name((output, context)=>{\n    return (0, import_smithy_client.take)(output, {\n        ARN: import_smithy_client.expectString,\n        ReplicationStatus: /* @__PURE__ */ __name((_)=>de_ReplicationStatusListType(_, context), \"ReplicationStatus\")\n    });\n}, \"de_ReplicateSecretToRegionsResponse\");\nvar de_ReplicationStatusListType = /* @__PURE__ */ __name((output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_ReplicationStatusType(entry, context);\n    });\n    return retVal;\n}, \"de_ReplicationStatusListType\");\nvar de_ReplicationStatusType = /* @__PURE__ */ __name((output, context)=>{\n    return (0, import_smithy_client.take)(output, {\n        KmsKeyId: import_smithy_client.expectString,\n        LastAccessedDate: /* @__PURE__ */ __name((_)=>(0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), \"LastAccessedDate\"),\n        Region: import_smithy_client.expectString,\n        Status: import_smithy_client.expectString,\n        StatusMessage: import_smithy_client.expectString\n    });\n}, \"de_ReplicationStatusType\");\nvar de_SecretListEntry = /* @__PURE__ */ __name((output, context)=>{\n    return (0, import_smithy_client.take)(output, {\n        ARN: import_smithy_client.expectString,\n        CreatedDate: /* @__PURE__ */ __name((_)=>(0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), \"CreatedDate\"),\n        DeletedDate: /* @__PURE__ */ __name((_)=>(0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), \"DeletedDate\"),\n        Description: import_smithy_client.expectString,\n        KmsKeyId: import_smithy_client.expectString,\n        LastAccessedDate: /* @__PURE__ */ __name((_)=>(0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), \"LastAccessedDate\"),\n        LastChangedDate: /* @__PURE__ */ __name((_)=>(0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), \"LastChangedDate\"),\n        LastRotatedDate: /* @__PURE__ */ __name((_)=>(0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), \"LastRotatedDate\"),\n        Name: import_smithy_client.expectString,\n        NextRotationDate: /* @__PURE__ */ __name((_)=>(0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), \"NextRotationDate\"),\n        OwningService: import_smithy_client.expectString,\n        PrimaryRegion: import_smithy_client.expectString,\n        RotationEnabled: import_smithy_client.expectBoolean,\n        RotationLambdaARN: import_smithy_client.expectString,\n        RotationRules: import_smithy_client._json,\n        SecretVersionsToStages: import_smithy_client._json,\n        Tags: import_smithy_client._json\n    });\n}, \"de_SecretListEntry\");\nvar de_SecretListType = /* @__PURE__ */ __name((output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_SecretListEntry(entry, context);\n    });\n    return retVal;\n}, \"de_SecretListType\");\nvar de_SecretValueEntry = /* @__PURE__ */ __name((output, context)=>{\n    return (0, import_smithy_client.take)(output, {\n        ARN: import_smithy_client.expectString,\n        CreatedDate: /* @__PURE__ */ __name((_)=>(0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), \"CreatedDate\"),\n        Name: import_smithy_client.expectString,\n        SecretBinary: context.base64Decoder,\n        SecretString: import_smithy_client.expectString,\n        VersionId: import_smithy_client.expectString,\n        VersionStages: import_smithy_client._json\n    });\n}, \"de_SecretValueEntry\");\nvar de_SecretValuesType = /* @__PURE__ */ __name((output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_SecretValueEntry(entry, context);\n    });\n    return retVal;\n}, \"de_SecretValuesType\");\nvar de_SecretVersionsListEntry = /* @__PURE__ */ __name((output, context)=>{\n    return (0, import_smithy_client.take)(output, {\n        CreatedDate: /* @__PURE__ */ __name((_)=>(0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), \"CreatedDate\"),\n        KmsKeyIds: import_smithy_client._json,\n        LastAccessedDate: /* @__PURE__ */ __name((_)=>(0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), \"LastAccessedDate\"),\n        VersionId: import_smithy_client.expectString,\n        VersionStages: import_smithy_client._json\n    });\n}, \"de_SecretVersionsListEntry\");\nvar de_SecretVersionsListType = /* @__PURE__ */ __name((output, context)=>{\n    const retVal = (output || []).filter((e)=>e != null).map((entry)=>{\n        return de_SecretVersionsListEntry(entry, context);\n    });\n    return retVal;\n}, \"de_SecretVersionsListType\");\nvar deserializeMetadata = /* @__PURE__ */ __name((output)=>({\n        httpStatusCode: output.statusCode,\n        requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n        extendedRequestId: output.headers[\"x-amz-id-2\"],\n        cfId: output.headers[\"x-amz-cf-id\"]\n    }), \"deserializeMetadata\");\nvar throwDefaultError = (0, import_smithy_client.withBaseException)(SecretsManagerServiceException);\nvar buildHttpRpcRequest = /* @__PURE__ */ __name(async (context, headers, path, resolvedHostname, body)=>{\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n        headers\n    };\n    if (resolvedHostname !== void 0) {\n        contents.hostname = resolvedHostname;\n    }\n    if (body !== void 0) {\n        contents.body = body;\n    }\n    return new import_protocol_http.HttpRequest(contents);\n}, \"buildHttpRpcRequest\");\nfunction sharedHeaders(operation) {\n    return {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": `secretsmanager.${operation}`\n    };\n}\n__name(sharedHeaders, \"sharedHeaders\");\n// src/commands/BatchGetSecretValueCommand.ts\nvar BatchGetSecretValueCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"secretsmanager\", \"BatchGetSecretValue\", {}).n(\"SecretsManagerClient\", \"BatchGetSecretValueCommand\").f(void 0, BatchGetSecretValueResponseFilterSensitiveLog).ser(se_BatchGetSecretValueCommand).de(de_BatchGetSecretValueCommand).build() {\n    static{\n        __name(this, \"BatchGetSecretValueCommand\");\n    }\n};\n// src/commands/CancelRotateSecretCommand.ts\nvar CancelRotateSecretCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"secretsmanager\", \"CancelRotateSecret\", {}).n(\"SecretsManagerClient\", \"CancelRotateSecretCommand\").f(void 0, void 0).ser(se_CancelRotateSecretCommand).de(de_CancelRotateSecretCommand).build() {\n    static{\n        __name(this, \"CancelRotateSecretCommand\");\n    }\n};\n// src/commands/CreateSecretCommand.ts\nvar CreateSecretCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"secretsmanager\", \"CreateSecret\", {}).n(\"SecretsManagerClient\", \"CreateSecretCommand\").f(CreateSecretRequestFilterSensitiveLog, void 0).ser(se_CreateSecretCommand).de(de_CreateSecretCommand).build() {\n    static{\n        __name(this, \"CreateSecretCommand\");\n    }\n};\n// src/commands/DeleteResourcePolicyCommand.ts\nvar DeleteResourcePolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"secretsmanager\", \"DeleteResourcePolicy\", {}).n(\"SecretsManagerClient\", \"DeleteResourcePolicyCommand\").f(void 0, void 0).ser(se_DeleteResourcePolicyCommand).de(de_DeleteResourcePolicyCommand).build() {\n    static{\n        __name(this, \"DeleteResourcePolicyCommand\");\n    }\n};\n// src/commands/DeleteSecretCommand.ts\nvar DeleteSecretCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"secretsmanager\", \"DeleteSecret\", {}).n(\"SecretsManagerClient\", \"DeleteSecretCommand\").f(void 0, void 0).ser(se_DeleteSecretCommand).de(de_DeleteSecretCommand).build() {\n    static{\n        __name(this, \"DeleteSecretCommand\");\n    }\n};\n// src/commands/DescribeSecretCommand.ts\nvar DescribeSecretCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"secretsmanager\", \"DescribeSecret\", {}).n(\"SecretsManagerClient\", \"DescribeSecretCommand\").f(void 0, void 0).ser(se_DescribeSecretCommand).de(de_DescribeSecretCommand).build() {\n    static{\n        __name(this, \"DescribeSecretCommand\");\n    }\n};\n// src/commands/GetRandomPasswordCommand.ts\nvar GetRandomPasswordCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"secretsmanager\", \"GetRandomPassword\", {}).n(\"SecretsManagerClient\", \"GetRandomPasswordCommand\").f(void 0, GetRandomPasswordResponseFilterSensitiveLog).ser(se_GetRandomPasswordCommand).de(de_GetRandomPasswordCommand).build() {\n    static{\n        __name(this, \"GetRandomPasswordCommand\");\n    }\n};\n// src/commands/GetResourcePolicyCommand.ts\nvar GetResourcePolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"secretsmanager\", \"GetResourcePolicy\", {}).n(\"SecretsManagerClient\", \"GetResourcePolicyCommand\").f(void 0, void 0).ser(se_GetResourcePolicyCommand).de(de_GetResourcePolicyCommand).build() {\n    static{\n        __name(this, \"GetResourcePolicyCommand\");\n    }\n};\n// src/commands/GetSecretValueCommand.ts\nvar GetSecretValueCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"secretsmanager\", \"GetSecretValue\", {}).n(\"SecretsManagerClient\", \"GetSecretValueCommand\").f(void 0, GetSecretValueResponseFilterSensitiveLog).ser(se_GetSecretValueCommand).de(de_GetSecretValueCommand).build() {\n    static{\n        __name(this, \"GetSecretValueCommand\");\n    }\n};\n// src/commands/ListSecretsCommand.ts\nvar ListSecretsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"secretsmanager\", \"ListSecrets\", {}).n(\"SecretsManagerClient\", \"ListSecretsCommand\").f(void 0, void 0).ser(se_ListSecretsCommand).de(de_ListSecretsCommand).build() {\n    static{\n        __name(this, \"ListSecretsCommand\");\n    }\n};\n// src/commands/ListSecretVersionIdsCommand.ts\nvar ListSecretVersionIdsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"secretsmanager\", \"ListSecretVersionIds\", {}).n(\"SecretsManagerClient\", \"ListSecretVersionIdsCommand\").f(void 0, void 0).ser(se_ListSecretVersionIdsCommand).de(de_ListSecretVersionIdsCommand).build() {\n    static{\n        __name(this, \"ListSecretVersionIdsCommand\");\n    }\n};\n// src/commands/PutResourcePolicyCommand.ts\nvar PutResourcePolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"secretsmanager\", \"PutResourcePolicy\", {}).n(\"SecretsManagerClient\", \"PutResourcePolicyCommand\").f(void 0, void 0).ser(se_PutResourcePolicyCommand).de(de_PutResourcePolicyCommand).build() {\n    static{\n        __name(this, \"PutResourcePolicyCommand\");\n    }\n};\n// src/commands/PutSecretValueCommand.ts\nvar PutSecretValueCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"secretsmanager\", \"PutSecretValue\", {}).n(\"SecretsManagerClient\", \"PutSecretValueCommand\").f(PutSecretValueRequestFilterSensitiveLog, void 0).ser(se_PutSecretValueCommand).de(de_PutSecretValueCommand).build() {\n    static{\n        __name(this, \"PutSecretValueCommand\");\n    }\n};\n// src/commands/RemoveRegionsFromReplicationCommand.ts\nvar RemoveRegionsFromReplicationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"secretsmanager\", \"RemoveRegionsFromReplication\", {}).n(\"SecretsManagerClient\", \"RemoveRegionsFromReplicationCommand\").f(void 0, void 0).ser(se_RemoveRegionsFromReplicationCommand).de(de_RemoveRegionsFromReplicationCommand).build() {\n    static{\n        __name(this, \"RemoveRegionsFromReplicationCommand\");\n    }\n};\n// src/commands/ReplicateSecretToRegionsCommand.ts\nvar ReplicateSecretToRegionsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"secretsmanager\", \"ReplicateSecretToRegions\", {}).n(\"SecretsManagerClient\", \"ReplicateSecretToRegionsCommand\").f(void 0, void 0).ser(se_ReplicateSecretToRegionsCommand).de(de_ReplicateSecretToRegionsCommand).build() {\n    static{\n        __name(this, \"ReplicateSecretToRegionsCommand\");\n    }\n};\n// src/commands/RestoreSecretCommand.ts\nvar RestoreSecretCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"secretsmanager\", \"RestoreSecret\", {}).n(\"SecretsManagerClient\", \"RestoreSecretCommand\").f(void 0, void 0).ser(se_RestoreSecretCommand).de(de_RestoreSecretCommand).build() {\n    static{\n        __name(this, \"RestoreSecretCommand\");\n    }\n};\n// src/commands/RotateSecretCommand.ts\nvar RotateSecretCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"secretsmanager\", \"RotateSecret\", {}).n(\"SecretsManagerClient\", \"RotateSecretCommand\").f(void 0, void 0).ser(se_RotateSecretCommand).de(de_RotateSecretCommand).build() {\n    static{\n        __name(this, \"RotateSecretCommand\");\n    }\n};\n// src/commands/StopReplicationToReplicaCommand.ts\nvar StopReplicationToReplicaCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"secretsmanager\", \"StopReplicationToReplica\", {}).n(\"SecretsManagerClient\", \"StopReplicationToReplicaCommand\").f(void 0, void 0).ser(se_StopReplicationToReplicaCommand).de(de_StopReplicationToReplicaCommand).build() {\n    static{\n        __name(this, \"StopReplicationToReplicaCommand\");\n    }\n};\n// src/commands/TagResourceCommand.ts\nvar TagResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"secretsmanager\", \"TagResource\", {}).n(\"SecretsManagerClient\", \"TagResourceCommand\").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {\n    static{\n        __name(this, \"TagResourceCommand\");\n    }\n};\n// src/commands/UntagResourceCommand.ts\nvar UntagResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"secretsmanager\", \"UntagResource\", {}).n(\"SecretsManagerClient\", \"UntagResourceCommand\").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {\n    static{\n        __name(this, \"UntagResourceCommand\");\n    }\n};\n// src/commands/UpdateSecretCommand.ts\nvar UpdateSecretCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"secretsmanager\", \"UpdateSecret\", {}).n(\"SecretsManagerClient\", \"UpdateSecretCommand\").f(UpdateSecretRequestFilterSensitiveLog, void 0).ser(se_UpdateSecretCommand).de(de_UpdateSecretCommand).build() {\n    static{\n        __name(this, \"UpdateSecretCommand\");\n    }\n};\n// src/commands/UpdateSecretVersionStageCommand.ts\nvar UpdateSecretVersionStageCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"secretsmanager\", \"UpdateSecretVersionStage\", {}).n(\"SecretsManagerClient\", \"UpdateSecretVersionStageCommand\").f(void 0, void 0).ser(se_UpdateSecretVersionStageCommand).de(de_UpdateSecretVersionStageCommand).build() {\n    static{\n        __name(this, \"UpdateSecretVersionStageCommand\");\n    }\n};\n// src/commands/ValidateResourcePolicyCommand.ts\nvar ValidateResourcePolicyCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"secretsmanager\", \"ValidateResourcePolicy\", {}).n(\"SecretsManagerClient\", \"ValidateResourcePolicyCommand\").f(void 0, void 0).ser(se_ValidateResourcePolicyCommand).de(de_ValidateResourcePolicyCommand).build() {\n    static{\n        __name(this, \"ValidateResourcePolicyCommand\");\n    }\n};\n// src/SecretsManager.ts\nvar commands = {\n    BatchGetSecretValueCommand,\n    CancelRotateSecretCommand,\n    CreateSecretCommand,\n    DeleteResourcePolicyCommand,\n    DeleteSecretCommand,\n    DescribeSecretCommand,\n    GetRandomPasswordCommand,\n    GetResourcePolicyCommand,\n    GetSecretValueCommand,\n    ListSecretsCommand,\n    ListSecretVersionIdsCommand,\n    PutResourcePolicyCommand,\n    PutSecretValueCommand,\n    RemoveRegionsFromReplicationCommand,\n    ReplicateSecretToRegionsCommand,\n    RestoreSecretCommand,\n    RotateSecretCommand,\n    StopReplicationToReplicaCommand,\n    TagResourceCommand,\n    UntagResourceCommand,\n    UpdateSecretCommand,\n    UpdateSecretVersionStageCommand,\n    ValidateResourcePolicyCommand\n};\nvar SecretsManager = class extends SecretsManagerClient {\n    static{\n        __name(this, \"SecretsManager\");\n    }\n};\n(0, import_smithy_client.createAggregatedClient)(commands, SecretsManager);\n// src/pagination/BatchGetSecretValuePaginator.ts\nvar paginateBatchGetSecretValue = (0, import_core.createPaginator)(SecretsManagerClient, BatchGetSecretValueCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n// src/pagination/ListSecretVersionIdsPaginator.ts\nvar paginateListSecretVersionIds = (0, import_core.createPaginator)(SecretsManagerClient, ListSecretVersionIdsCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n// src/pagination/ListSecretsPaginator.ts\nvar paginateListSecrets = (0, import_core.createPaginator)(SecretsManagerClient, ListSecretsCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/client-secrets-manager/dist-cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/client-secrets-manager/dist-cjs/runtimeConfig.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-secrets-manager/dist-cjs/runtimeConfig.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getRuntimeConfig = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.mjs\");\nconst package_json_1 = tslib_1.__importDefault(__webpack_require__(/*! ../package.json */ \"(rsc)/./node_modules/@aws-sdk/client-secrets-manager/package.json\"));\nconst core_1 = __webpack_require__(/*! @aws-sdk/core */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/index.js\");\nconst credential_provider_node_1 = __webpack_require__(/*! @aws-sdk/credential-provider-node */ \"(rsc)/./node_modules/@aws-sdk/credential-provider-node/dist-cjs/index.js\");\nconst util_user_agent_node_1 = __webpack_require__(/*! @aws-sdk/util-user-agent-node */ \"(rsc)/./node_modules/@aws-sdk/util-user-agent-node/dist-cjs/index.js\");\nconst config_resolver_1 = __webpack_require__(/*! @smithy/config-resolver */ \"(rsc)/./node_modules/@smithy/config-resolver/dist-cjs/index.js\");\nconst hash_node_1 = __webpack_require__(/*! @smithy/hash-node */ \"(rsc)/./node_modules/@smithy/hash-node/dist-cjs/index.js\");\nconst middleware_retry_1 = __webpack_require__(/*! @smithy/middleware-retry */ \"(rsc)/./node_modules/@smithy/middleware-retry/dist-cjs/index.js\");\nconst node_config_provider_1 = __webpack_require__(/*! @smithy/node-config-provider */ \"(rsc)/./node_modules/@smithy/node-config-provider/dist-cjs/index.js\");\nconst node_http_handler_1 = __webpack_require__(/*! @smithy/node-http-handler */ \"(rsc)/./node_modules/@smithy/node-http-handler/dist-cjs/index.js\");\nconst util_body_length_node_1 = __webpack_require__(/*! @smithy/util-body-length-node */ \"(rsc)/./node_modules/@smithy/util-body-length-node/dist-cjs/index.js\");\nconst util_retry_1 = __webpack_require__(/*! @smithy/util-retry */ \"(rsc)/./node_modules/@smithy/util-retry/dist-cjs/index.js\");\nconst runtimeConfig_shared_1 = __webpack_require__(/*! ./runtimeConfig.shared */ \"(rsc)/./node_modules/@aws-sdk/client-secrets-manager/dist-cjs/runtimeConfig.shared.js\");\nconst smithy_client_1 = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/./node_modules/@smithy/smithy-client/dist-cjs/index.js\");\nconst util_defaults_mode_node_1 = __webpack_require__(/*! @smithy/util-defaults-mode-node */ \"(rsc)/./node_modules/@smithy/util-defaults-mode-node/dist-cjs/index.js\");\nconst smithy_client_2 = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/./node_modules/@smithy/smithy-client/dist-cjs/index.js\");\nconst getRuntimeConfig = (config)=>{\n    (0, smithy_client_2.emitWarningIfUnsupportedVersion)(process.version);\n    const defaultsMode = (0, util_defaults_mode_node_1.resolveDefaultsModeConfig)(config);\n    const defaultConfigProvider = ()=>defaultsMode().then(smithy_client_1.loadConfigsForDefaultMode);\n    const clientSharedValues = (0, runtimeConfig_shared_1.getRuntimeConfig)(config);\n    (0, core_1.emitWarningIfUnsupportedVersion)(process.version);\n    const profileConfig = {\n        profile: config?.profile\n    };\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? util_body_length_node_1.calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? credential_provider_node_1.defaultProvider,\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ?? (0, util_user_agent_node_1.createDefaultUserAgentProvider)({\n            serviceId: clientSharedValues.serviceId,\n            clientVersion: package_json_1.default.version\n        }),\n        maxAttempts: config?.maxAttempts ?? (0, node_config_provider_1.loadConfig)(middleware_retry_1.NODE_MAX_ATTEMPT_CONFIG_OPTIONS, config),\n        region: config?.region ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_REGION_CONFIG_OPTIONS, {\n            ...config_resolver_1.NODE_REGION_CONFIG_FILE_OPTIONS,\n            ...profileConfig\n        }),\n        requestHandler: node_http_handler_1.NodeHttpHandler.create(config?.requestHandler ?? defaultConfigProvider),\n        retryMode: config?.retryMode ?? (0, node_config_provider_1.loadConfig)({\n            ...middleware_retry_1.NODE_RETRY_MODE_CONFIG_OPTIONS,\n            default: async ()=>(await defaultConfigProvider()).retryMode || util_retry_1.DEFAULT_RETRY_MODE\n        }, config),\n        sha256: config?.sha256 ?? hash_node_1.Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? node_http_handler_1.streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, profileConfig),\n        useFipsEndpoint: config?.useFipsEndpoint ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, profileConfig),\n        userAgentAppId: config?.userAgentAppId ?? (0, node_config_provider_1.loadConfig)(util_user_agent_node_1.NODE_APP_ID_CONFIG_OPTIONS, profileConfig)\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/client-secrets-manager/dist-cjs/runtimeConfig.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/client-secrets-manager/dist-cjs/runtimeConfig.shared.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-secrets-manager/dist-cjs/runtimeConfig.shared.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getRuntimeConfig = void 0;\nconst core_1 = __webpack_require__(/*! @aws-sdk/core */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/index.js\");\nconst smithy_client_1 = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/./node_modules/@smithy/smithy-client/dist-cjs/index.js\");\nconst url_parser_1 = __webpack_require__(/*! @smithy/url-parser */ \"(rsc)/./node_modules/@smithy/url-parser/dist-cjs/index.js\");\nconst util_base64_1 = __webpack_require__(/*! @smithy/util-base64 */ \"(rsc)/./node_modules/@smithy/util-base64/dist-cjs/index.js\");\nconst util_utf8_1 = __webpack_require__(/*! @smithy/util-utf8 */ \"(rsc)/./node_modules/@smithy/util-utf8/dist-cjs/index.js\");\nconst httpAuthSchemeProvider_1 = __webpack_require__(/*! ./auth/httpAuthSchemeProvider */ \"(rsc)/./node_modules/@aws-sdk/client-secrets-manager/dist-cjs/auth/httpAuthSchemeProvider.js\");\nconst endpointResolver_1 = __webpack_require__(/*! ./endpoint/endpointResolver */ \"(rsc)/./node_modules/@aws-sdk/client-secrets-manager/dist-cjs/endpoint/endpointResolver.js\");\nconst getRuntimeConfig = (config)=>{\n    return {\n        apiVersion: \"2017-10-17\",\n        base64Decoder: config?.base64Decoder ?? util_base64_1.fromBase64,\n        base64Encoder: config?.base64Encoder ?? util_base64_1.toBase64,\n        disableHostPrefix: config?.disableHostPrefix ?? false,\n        endpointProvider: config?.endpointProvider ?? endpointResolver_1.defaultEndpointResolver,\n        extensions: config?.extensions ?? [],\n        httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? httpAuthSchemeProvider_1.defaultSecretsManagerHttpAuthSchemeProvider,\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc)=>ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n                signer: new core_1.AwsSdkSigV4Signer()\n            }\n        ],\n        logger: config?.logger ?? new smithy_client_1.NoOpLogger(),\n        serviceId: config?.serviceId ?? \"Secrets Manager\",\n        urlParser: config?.urlParser ?? url_parser_1.parseUrl,\n        utf8Decoder: config?.utf8Decoder ?? util_utf8_1.fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? util_utf8_1.toUtf8\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY2xpZW50LXNlY3JldHMtbWFuYWdlci9kaXN0LWNqcy9ydW50aW1lQ29uZmlnLnNoYXJlZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsd0JBQXdCLEdBQUcsS0FBSztBQUNoQyxNQUFNRyxTQUFTQyxtQkFBT0EsQ0FBQywwRUFBZTtBQUN0QyxNQUFNQyxrQkFBa0JELG1CQUFPQSxDQUFDLDJGQUF1QjtBQUN2RCxNQUFNRSxlQUFlRixtQkFBT0EsQ0FBQyxxRkFBb0I7QUFDakQsTUFBTUcsZ0JBQWdCSCxtQkFBT0EsQ0FBQyx1RkFBcUI7QUFDbkQsTUFBTUksY0FBY0osbUJBQU9BLENBQUMsbUZBQW1CO0FBQy9DLE1BQU1LLDJCQUEyQkwsbUJBQU9BLENBQUMsbUlBQStCO0FBQ3hFLE1BQU1NLHFCQUFxQk4sbUJBQU9BLENBQUMsK0hBQTZCO0FBQ2hFLE1BQU1GLG1CQUFtQixDQUFDUztJQUN0QixPQUFPO1FBQ0hDLFlBQVk7UUFDWkMsZUFBZUYsUUFBUUUsaUJBQWlCTixjQUFjTyxVQUFVO1FBQ2hFQyxlQUFlSixRQUFRSSxpQkFBaUJSLGNBQWNTLFFBQVE7UUFDOURDLG1CQUFtQk4sUUFBUU0scUJBQXFCO1FBQ2hEQyxrQkFBa0JQLFFBQVFPLG9CQUFvQlIsbUJBQW1CUyx1QkFBdUI7UUFDeEZDLFlBQVlULFFBQVFTLGNBQWMsRUFBRTtRQUNwQ0Msd0JBQXdCVixRQUFRVSwwQkFBMEJaLHlCQUF5QmEsMkNBQTJDO1FBQzlIQyxpQkFBaUJaLFFBQVFZLG1CQUFtQjtZQUN4QztnQkFDSUMsVUFBVTtnQkFDVkMsa0JBQWtCLENBQUNDLE1BQVFBLElBQUlDLG1CQUFtQixDQUFDO2dCQUNuREMsUUFBUSxJQUFJekIsT0FBTzBCLGlCQUFpQjtZQUN4QztTQUNIO1FBQ0RDLFFBQVFuQixRQUFRbUIsVUFBVSxJQUFJekIsZ0JBQWdCMEIsVUFBVTtRQUN4REMsV0FBV3JCLFFBQVFxQixhQUFhO1FBQ2hDQyxXQUFXdEIsUUFBUXNCLGFBQWEzQixhQUFhNEIsUUFBUTtRQUNyREMsYUFBYXhCLFFBQVF3QixlQUFlM0IsWUFBWTRCLFFBQVE7UUFDeERDLGFBQWExQixRQUFRMEIsZUFBZTdCLFlBQVk4QixNQUFNO0lBQzFEO0FBQ0o7QUFDQXRDLHdCQUF3QixHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL2Nsb3Vkc2hpZnQvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY2xpZW50LXNlY3JldHMtbWFuYWdlci9kaXN0LWNqcy9ydW50aW1lQ29uZmlnLnNoYXJlZC5qcz84NTJjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRSdW50aW1lQ29uZmlnID0gdm9pZCAwO1xuY29uc3QgY29yZV8xID0gcmVxdWlyZShcIkBhd3Mtc2RrL2NvcmVcIik7XG5jb25zdCBzbWl0aHlfY2xpZW50XzEgPSByZXF1aXJlKFwiQHNtaXRoeS9zbWl0aHktY2xpZW50XCIpO1xuY29uc3QgdXJsX3BhcnNlcl8xID0gcmVxdWlyZShcIkBzbWl0aHkvdXJsLXBhcnNlclwiKTtcbmNvbnN0IHV0aWxfYmFzZTY0XzEgPSByZXF1aXJlKFwiQHNtaXRoeS91dGlsLWJhc2U2NFwiKTtcbmNvbnN0IHV0aWxfdXRmOF8xID0gcmVxdWlyZShcIkBzbWl0aHkvdXRpbC11dGY4XCIpO1xuY29uc3QgaHR0cEF1dGhTY2hlbWVQcm92aWRlcl8xID0gcmVxdWlyZShcIi4vYXV0aC9odHRwQXV0aFNjaGVtZVByb3ZpZGVyXCIpO1xuY29uc3QgZW5kcG9pbnRSZXNvbHZlcl8xID0gcmVxdWlyZShcIi4vZW5kcG9pbnQvZW5kcG9pbnRSZXNvbHZlclwiKTtcbmNvbnN0IGdldFJ1bnRpbWVDb25maWcgPSAoY29uZmlnKSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgYXBpVmVyc2lvbjogXCIyMDE3LTEwLTE3XCIsXG4gICAgICAgIGJhc2U2NERlY29kZXI6IGNvbmZpZz8uYmFzZTY0RGVjb2RlciA/PyB1dGlsX2Jhc2U2NF8xLmZyb21CYXNlNjQsXG4gICAgICAgIGJhc2U2NEVuY29kZXI6IGNvbmZpZz8uYmFzZTY0RW5jb2RlciA/PyB1dGlsX2Jhc2U2NF8xLnRvQmFzZTY0LFxuICAgICAgICBkaXNhYmxlSG9zdFByZWZpeDogY29uZmlnPy5kaXNhYmxlSG9zdFByZWZpeCA/PyBmYWxzZSxcbiAgICAgICAgZW5kcG9pbnRQcm92aWRlcjogY29uZmlnPy5lbmRwb2ludFByb3ZpZGVyID8/IGVuZHBvaW50UmVzb2x2ZXJfMS5kZWZhdWx0RW5kcG9pbnRSZXNvbHZlcixcbiAgICAgICAgZXh0ZW5zaW9uczogY29uZmlnPy5leHRlbnNpb25zID8/IFtdLFxuICAgICAgICBodHRwQXV0aFNjaGVtZVByb3ZpZGVyOiBjb25maWc/Lmh0dHBBdXRoU2NoZW1lUHJvdmlkZXIgPz8gaHR0cEF1dGhTY2hlbWVQcm92aWRlcl8xLmRlZmF1bHRTZWNyZXRzTWFuYWdlckh0dHBBdXRoU2NoZW1lUHJvdmlkZXIsXG4gICAgICAgIGh0dHBBdXRoU2NoZW1lczogY29uZmlnPy5odHRwQXV0aFNjaGVtZXMgPz8gW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNjaGVtZUlkOiBcImF3cy5hdXRoI3NpZ3Y0XCIsXG4gICAgICAgICAgICAgICAgaWRlbnRpdHlQcm92aWRlcjogKGlwYykgPT4gaXBjLmdldElkZW50aXR5UHJvdmlkZXIoXCJhd3MuYXV0aCNzaWd2NFwiKSxcbiAgICAgICAgICAgICAgICBzaWduZXI6IG5ldyBjb3JlXzEuQXdzU2RrU2lnVjRTaWduZXIoKSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIF0sXG4gICAgICAgIGxvZ2dlcjogY29uZmlnPy5sb2dnZXIgPz8gbmV3IHNtaXRoeV9jbGllbnRfMS5Ob09wTG9nZ2VyKCksXG4gICAgICAgIHNlcnZpY2VJZDogY29uZmlnPy5zZXJ2aWNlSWQgPz8gXCJTZWNyZXRzIE1hbmFnZXJcIixcbiAgICAgICAgdXJsUGFyc2VyOiBjb25maWc/LnVybFBhcnNlciA/PyB1cmxfcGFyc2VyXzEucGFyc2VVcmwsXG4gICAgICAgIHV0ZjhEZWNvZGVyOiBjb25maWc/LnV0ZjhEZWNvZGVyID8/IHV0aWxfdXRmOF8xLmZyb21VdGY4LFxuICAgICAgICB1dGY4RW5jb2RlcjogY29uZmlnPy51dGY4RW5jb2RlciA/PyB1dGlsX3V0ZjhfMS50b1V0ZjgsXG4gICAgfTtcbn07XG5leHBvcnRzLmdldFJ1bnRpbWVDb25maWcgPSBnZXRSdW50aW1lQ29uZmlnO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZ2V0UnVudGltZUNvbmZpZyIsImNvcmVfMSIsInJlcXVpcmUiLCJzbWl0aHlfY2xpZW50XzEiLCJ1cmxfcGFyc2VyXzEiLCJ1dGlsX2Jhc2U2NF8xIiwidXRpbF91dGY4XzEiLCJodHRwQXV0aFNjaGVtZVByb3ZpZGVyXzEiLCJlbmRwb2ludFJlc29sdmVyXzEiLCJjb25maWciLCJhcGlWZXJzaW9uIiwiYmFzZTY0RGVjb2RlciIsImZyb21CYXNlNjQiLCJiYXNlNjRFbmNvZGVyIiwidG9CYXNlNjQiLCJkaXNhYmxlSG9zdFByZWZpeCIsImVuZHBvaW50UHJvdmlkZXIiLCJkZWZhdWx0RW5kcG9pbnRSZXNvbHZlciIsImV4dGVuc2lvbnMiLCJodHRwQXV0aFNjaGVtZVByb3ZpZGVyIiwiZGVmYXVsdFNlY3JldHNNYW5hZ2VySHR0cEF1dGhTY2hlbWVQcm92aWRlciIsImh0dHBBdXRoU2NoZW1lcyIsInNjaGVtZUlkIiwiaWRlbnRpdHlQcm92aWRlciIsImlwYyIsImdldElkZW50aXR5UHJvdmlkZXIiLCJzaWduZXIiLCJBd3NTZGtTaWdWNFNpZ25lciIsImxvZ2dlciIsIk5vT3BMb2dnZXIiLCJzZXJ2aWNlSWQiLCJ1cmxQYXJzZXIiLCJwYXJzZVVybCIsInV0ZjhEZWNvZGVyIiwiZnJvbVV0ZjgiLCJ1dGY4RW5jb2RlciIsInRvVXRmOCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/client-secrets-manager/dist-cjs/runtimeConfig.shared.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/client-sso/dist-cjs/auth/httpAuthSchemeProvider.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-sso/dist-cjs/auth/httpAuthSchemeProvider.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.resolveHttpAuthSchemeConfig = exports.defaultSSOHttpAuthSchemeProvider = exports.defaultSSOHttpAuthSchemeParametersProvider = void 0;\nconst core_1 = __webpack_require__(/*! @aws-sdk/core */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/index.js\");\nconst util_middleware_1 = __webpack_require__(/*! @smithy/util-middleware */ \"(rsc)/./node_modules/@smithy/util-middleware/dist-cjs/index.js\");\nconst defaultSSOHttpAuthSchemeParametersProvider = async (config, context, input)=>{\n    return {\n        operation: (0, util_middleware_1.getSmithyContext)(context).operation,\n        region: await (0, util_middleware_1.normalizeProvider)(config.region)() || (()=>{\n            throw new Error(\"expected `region` to be configured for `aws.auth#sigv4`\");\n        })()\n    };\n};\nexports.defaultSSOHttpAuthSchemeParametersProvider = defaultSSOHttpAuthSchemeParametersProvider;\nfunction createAwsAuthSigv4HttpAuthOption(authParameters) {\n    return {\n        schemeId: \"aws.auth#sigv4\",\n        signingProperties: {\n            name: \"awsssoportal\",\n            region: authParameters.region\n        },\n        propertiesExtractor: (config, context)=>({\n                signingProperties: {\n                    config,\n                    context\n                }\n            })\n    };\n}\nfunction createSmithyApiNoAuthHttpAuthOption(authParameters) {\n    return {\n        schemeId: \"smithy.api#noAuth\"\n    };\n}\nconst defaultSSOHttpAuthSchemeProvider = (authParameters)=>{\n    const options = [];\n    switch(authParameters.operation){\n        case \"GetRoleCredentials\":\n            {\n                options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n                break;\n            }\n        case \"ListAccountRoles\":\n            {\n                options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n                break;\n            }\n        case \"ListAccounts\":\n            {\n                options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n                break;\n            }\n        case \"Logout\":\n            {\n                options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n                break;\n            }\n        default:\n            {\n                options.push(createAwsAuthSigv4HttpAuthOption(authParameters));\n            }\n    }\n    return options;\n};\nexports.defaultSSOHttpAuthSchemeProvider = defaultSSOHttpAuthSchemeProvider;\nconst resolveHttpAuthSchemeConfig = (config)=>{\n    const config_0 = (0, core_1.resolveAwsSdkSigV4Config)(config);\n    return Object.assign(config_0, {\n        authSchemePreference: (0, util_middleware_1.normalizeProvider)(config.authSchemePreference ?? [])\n    });\n};\nexports.resolveHttpAuthSchemeConfig = resolveHttpAuthSchemeConfig;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY2xpZW50LXNzby9kaXN0LWNqcy9hdXRoL2h0dHBBdXRoU2NoZW1lUHJvdmlkZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELG1DQUFtQyxHQUFHQSx3Q0FBd0MsR0FBR0Esa0RBQWtELEdBQUcsS0FBSztBQUMzSSxNQUFNSyxTQUFTQyxtQkFBT0EsQ0FBQywwRUFBZTtBQUN0QyxNQUFNQyxvQkFBb0JELG1CQUFPQSxDQUFDLCtGQUF5QjtBQUMzRCxNQUFNRiw2Q0FBNkMsT0FBT0ksUUFBUUMsU0FBU0M7SUFDdkUsT0FBTztRQUNIQyxXQUFXLENBQUMsR0FBR0osa0JBQWtCSyxnQkFBZ0IsRUFBRUgsU0FBU0UsU0FBUztRQUNyRUUsUUFBUSxNQUFPLENBQUMsR0FBR04sa0JBQWtCTyxpQkFBaUIsRUFBRU4sT0FBT0ssTUFBTSxPQUNqRSxDQUFDO1lBQ0csTUFBTSxJQUFJRSxNQUFNO1FBQ3BCO0lBQ1I7QUFDSjtBQUNBZixrREFBa0QsR0FBR0k7QUFDckQsU0FBU1ksaUNBQWlDQyxjQUFjO0lBQ3BELE9BQU87UUFDSEMsVUFBVTtRQUNWQyxtQkFBbUI7WUFDZkMsTUFBTTtZQUNOUCxRQUFRSSxlQUFlSixNQUFNO1FBQ2pDO1FBQ0FRLHFCQUFxQixDQUFDYixRQUFRQyxVQUFhO2dCQUN2Q1UsbUJBQW1CO29CQUNmWDtvQkFDQUM7Z0JBQ0o7WUFDSjtJQUNKO0FBQ0o7QUFDQSxTQUFTYSxvQ0FBb0NMLGNBQWM7SUFDdkQsT0FBTztRQUNIQyxVQUFVO0lBQ2Q7QUFDSjtBQUNBLE1BQU1mLG1DQUFtQyxDQUFDYztJQUN0QyxNQUFNTSxVQUFVLEVBQUU7SUFDbEIsT0FBUU4sZUFBZU4sU0FBUztRQUM1QixLQUFLO1lBQXNCO2dCQUN2QlksUUFBUUMsSUFBSSxDQUFDRixvQ0FBb0NMO2dCQUNqRDtZQUNKO1FBQ0EsS0FBSztZQUFvQjtnQkFDckJNLFFBQVFDLElBQUksQ0FBQ0Ysb0NBQW9DTDtnQkFDakQ7WUFDSjtRQUNBLEtBQUs7WUFBZ0I7Z0JBQ2pCTSxRQUFRQyxJQUFJLENBQUNGLG9DQUFvQ0w7Z0JBQ2pEO1lBQ0o7UUFDQSxLQUFLO1lBQVU7Z0JBQ1hNLFFBQVFDLElBQUksQ0FBQ0Ysb0NBQW9DTDtnQkFDakQ7WUFDSjtRQUNBO1lBQVM7Z0JBQ0xNLFFBQVFDLElBQUksQ0FBQ1IsaUNBQWlDQztZQUNsRDtJQUNKO0lBQ0EsT0FBT007QUFDWDtBQUNBdkIsd0NBQXdDLEdBQUdHO0FBQzNDLE1BQU1ELDhCQUE4QixDQUFDTTtJQUNqQyxNQUFNaUIsV0FBVyxDQUFDLEdBQUdwQixPQUFPcUIsd0JBQXdCLEVBQUVsQjtJQUN0RCxPQUFPVixPQUFPNkIsTUFBTSxDQUFDRixVQUFVO1FBQzNCRyxzQkFBc0IsQ0FBQyxHQUFHckIsa0JBQWtCTyxpQkFBaUIsRUFBRU4sT0FBT29CLG9CQUFvQixJQUFJLEVBQUU7SUFDcEc7QUFDSjtBQUNBNUIsbUNBQW1DLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xvdWRzaGlmdC8uL25vZGVfbW9kdWxlcy9AYXdzLXNkay9jbGllbnQtc3NvL2Rpc3QtY2pzL2F1dGgvaHR0cEF1dGhTY2hlbWVQcm92aWRlci5qcz9mOTUwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5yZXNvbHZlSHR0cEF1dGhTY2hlbWVDb25maWcgPSBleHBvcnRzLmRlZmF1bHRTU09IdHRwQXV0aFNjaGVtZVByb3ZpZGVyID0gZXhwb3J0cy5kZWZhdWx0U1NPSHR0cEF1dGhTY2hlbWVQYXJhbWV0ZXJzUHJvdmlkZXIgPSB2b2lkIDA7XG5jb25zdCBjb3JlXzEgPSByZXF1aXJlKFwiQGF3cy1zZGsvY29yZVwiKTtcbmNvbnN0IHV0aWxfbWlkZGxld2FyZV8xID0gcmVxdWlyZShcIkBzbWl0aHkvdXRpbC1taWRkbGV3YXJlXCIpO1xuY29uc3QgZGVmYXVsdFNTT0h0dHBBdXRoU2NoZW1lUGFyYW1ldGVyc1Byb3ZpZGVyID0gYXN5bmMgKGNvbmZpZywgY29udGV4dCwgaW5wdXQpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICBvcGVyYXRpb246ICgwLCB1dGlsX21pZGRsZXdhcmVfMS5nZXRTbWl0aHlDb250ZXh0KShjb250ZXh0KS5vcGVyYXRpb24sXG4gICAgICAgIHJlZ2lvbjogKGF3YWl0ICgwLCB1dGlsX21pZGRsZXdhcmVfMS5ub3JtYWxpemVQcm92aWRlcikoY29uZmlnLnJlZ2lvbikoKSkgfHxcbiAgICAgICAgICAgICgoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiZXhwZWN0ZWQgYHJlZ2lvbmAgdG8gYmUgY29uZmlndXJlZCBmb3IgYGF3cy5hdXRoI3NpZ3Y0YFwiKTtcbiAgICAgICAgICAgIH0pKCksXG4gICAgfTtcbn07XG5leHBvcnRzLmRlZmF1bHRTU09IdHRwQXV0aFNjaGVtZVBhcmFtZXRlcnNQcm92aWRlciA9IGRlZmF1bHRTU09IdHRwQXV0aFNjaGVtZVBhcmFtZXRlcnNQcm92aWRlcjtcbmZ1bmN0aW9uIGNyZWF0ZUF3c0F1dGhTaWd2NEh0dHBBdXRoT3B0aW9uKGF1dGhQYXJhbWV0ZXJzKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgc2NoZW1lSWQ6IFwiYXdzLmF1dGgjc2lndjRcIixcbiAgICAgICAgc2lnbmluZ1Byb3BlcnRpZXM6IHtcbiAgICAgICAgICAgIG5hbWU6IFwiYXdzc3NvcG9ydGFsXCIsXG4gICAgICAgICAgICByZWdpb246IGF1dGhQYXJhbWV0ZXJzLnJlZ2lvbixcbiAgICAgICAgfSxcbiAgICAgICAgcHJvcGVydGllc0V4dHJhY3RvcjogKGNvbmZpZywgY29udGV4dCkgPT4gKHtcbiAgICAgICAgICAgIHNpZ25pbmdQcm9wZXJ0aWVzOiB7XG4gICAgICAgICAgICAgICAgY29uZmlnLFxuICAgICAgICAgICAgICAgIGNvbnRleHQsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9KSxcbiAgICB9O1xufVxuZnVuY3Rpb24gY3JlYXRlU21pdGh5QXBpTm9BdXRoSHR0cEF1dGhPcHRpb24oYXV0aFBhcmFtZXRlcnMpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBzY2hlbWVJZDogXCJzbWl0aHkuYXBpI25vQXV0aFwiLFxuICAgIH07XG59XG5jb25zdCBkZWZhdWx0U1NPSHR0cEF1dGhTY2hlbWVQcm92aWRlciA9IChhdXRoUGFyYW1ldGVycykgPT4ge1xuICAgIGNvbnN0IG9wdGlvbnMgPSBbXTtcbiAgICBzd2l0Y2ggKGF1dGhQYXJhbWV0ZXJzLm9wZXJhdGlvbikge1xuICAgICAgICBjYXNlIFwiR2V0Um9sZUNyZWRlbnRpYWxzXCI6IHtcbiAgICAgICAgICAgIG9wdGlvbnMucHVzaChjcmVhdGVTbWl0aHlBcGlOb0F1dGhIdHRwQXV0aE9wdGlvbihhdXRoUGFyYW1ldGVycykpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSBcIkxpc3RBY2NvdW50Um9sZXNcIjoge1xuICAgICAgICAgICAgb3B0aW9ucy5wdXNoKGNyZWF0ZVNtaXRoeUFwaU5vQXV0aEh0dHBBdXRoT3B0aW9uKGF1dGhQYXJhbWV0ZXJzKSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBjYXNlIFwiTGlzdEFjY291bnRzXCI6IHtcbiAgICAgICAgICAgIG9wdGlvbnMucHVzaChjcmVhdGVTbWl0aHlBcGlOb0F1dGhIdHRwQXV0aE9wdGlvbihhdXRoUGFyYW1ldGVycykpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSBcIkxvZ291dFwiOiB7XG4gICAgICAgICAgICBvcHRpb25zLnB1c2goY3JlYXRlU21pdGh5QXBpTm9BdXRoSHR0cEF1dGhPcHRpb24oYXV0aFBhcmFtZXRlcnMpKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgICAgIG9wdGlvbnMucHVzaChjcmVhdGVBd3NBdXRoU2lndjRIdHRwQXV0aE9wdGlvbihhdXRoUGFyYW1ldGVycykpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBvcHRpb25zO1xufTtcbmV4cG9ydHMuZGVmYXVsdFNTT0h0dHBBdXRoU2NoZW1lUHJvdmlkZXIgPSBkZWZhdWx0U1NPSHR0cEF1dGhTY2hlbWVQcm92aWRlcjtcbmNvbnN0IHJlc29sdmVIdHRwQXV0aFNjaGVtZUNvbmZpZyA9IChjb25maWcpID0+IHtcbiAgICBjb25zdCBjb25maWdfMCA9ICgwLCBjb3JlXzEucmVzb2x2ZUF3c1Nka1NpZ1Y0Q29uZmlnKShjb25maWcpO1xuICAgIHJldHVybiBPYmplY3QuYXNzaWduKGNvbmZpZ18wLCB7XG4gICAgICAgIGF1dGhTY2hlbWVQcmVmZXJlbmNlOiAoMCwgdXRpbF9taWRkbGV3YXJlXzEubm9ybWFsaXplUHJvdmlkZXIpKGNvbmZpZy5hdXRoU2NoZW1lUHJlZmVyZW5jZSA/PyBbXSksXG4gICAgfSk7XG59O1xuZXhwb3J0cy5yZXNvbHZlSHR0cEF1dGhTY2hlbWVDb25maWcgPSByZXNvbHZlSHR0cEF1dGhTY2hlbWVDb25maWc7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJyZXNvbHZlSHR0cEF1dGhTY2hlbWVDb25maWciLCJkZWZhdWx0U1NPSHR0cEF1dGhTY2hlbWVQcm92aWRlciIsImRlZmF1bHRTU09IdHRwQXV0aFNjaGVtZVBhcmFtZXRlcnNQcm92aWRlciIsImNvcmVfMSIsInJlcXVpcmUiLCJ1dGlsX21pZGRsZXdhcmVfMSIsImNvbmZpZyIsImNvbnRleHQiLCJpbnB1dCIsIm9wZXJhdGlvbiIsImdldFNtaXRoeUNvbnRleHQiLCJyZWdpb24iLCJub3JtYWxpemVQcm92aWRlciIsIkVycm9yIiwiY3JlYXRlQXdzQXV0aFNpZ3Y0SHR0cEF1dGhPcHRpb24iLCJhdXRoUGFyYW1ldGVycyIsInNjaGVtZUlkIiwic2lnbmluZ1Byb3BlcnRpZXMiLCJuYW1lIiwicHJvcGVydGllc0V4dHJhY3RvciIsImNyZWF0ZVNtaXRoeUFwaU5vQXV0aEh0dHBBdXRoT3B0aW9uIiwib3B0aW9ucyIsInB1c2giLCJjb25maWdfMCIsInJlc29sdmVBd3NTZGtTaWdWNENvbmZpZyIsImFzc2lnbiIsImF1dGhTY2hlbWVQcmVmZXJlbmNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/client-sso/dist-cjs/auth/httpAuthSchemeProvider.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/client-sso/dist-cjs/endpoint/endpointResolver.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-sso/dist-cjs/endpoint/endpointResolver.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.defaultEndpointResolver = void 0;\nconst util_endpoints_1 = __webpack_require__(/*! @aws-sdk/util-endpoints */ \"(rsc)/./node_modules/@aws-sdk/util-endpoints/dist-cjs/index.js\");\nconst util_endpoints_2 = __webpack_require__(/*! @smithy/util-endpoints */ \"(rsc)/./node_modules/@smithy/util-endpoints/dist-cjs/index.js\");\nconst ruleset_1 = __webpack_require__(/*! ./ruleset */ \"(rsc)/./node_modules/@aws-sdk/client-sso/dist-cjs/endpoint/ruleset.js\");\nconst cache = new util_endpoints_2.EndpointCache({\n    size: 50,\n    params: [\n        \"Endpoint\",\n        \"Region\",\n        \"UseDualStack\",\n        \"UseFIPS\"\n    ]\n});\nconst defaultEndpointResolver = (endpointParams, context = {})=>{\n    return cache.get(endpointParams, ()=>(0, util_endpoints_2.resolveEndpoint)(ruleset_1.ruleSet, {\n            endpointParams: endpointParams,\n            logger: context.logger\n        }));\n};\nexports.defaultEndpointResolver = defaultEndpointResolver;\nutil_endpoints_2.customEndpointFunctions.aws = util_endpoints_1.awsEndpointFunctions;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY2xpZW50LXNzby9kaXN0LWNqcy9lbmRwb2ludC9lbmRwb2ludFJlc29sdmVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCwrQkFBK0IsR0FBRyxLQUFLO0FBQ3ZDLE1BQU1HLG1CQUFtQkMsbUJBQU9BLENBQUMsK0ZBQXlCO0FBQzFELE1BQU1DLG1CQUFtQkQsbUJBQU9BLENBQUMsNkZBQXdCO0FBQ3pELE1BQU1FLFlBQVlGLG1CQUFPQSxDQUFDLHdGQUFXO0FBQ3JDLE1BQU1HLFFBQVEsSUFBSUYsaUJBQWlCRyxhQUFhLENBQUM7SUFDN0NDLE1BQU07SUFDTkMsUUFBUTtRQUFDO1FBQVk7UUFBVTtRQUFnQjtLQUFVO0FBQzdEO0FBQ0EsTUFBTVIsMEJBQTBCLENBQUNTLGdCQUFnQkMsVUFBVSxDQUFDLENBQUM7SUFDekQsT0FBT0wsTUFBTU0sR0FBRyxDQUFDRixnQkFBZ0IsSUFBTSxDQUFDLEdBQUdOLGlCQUFpQlMsZUFBZSxFQUFFUixVQUFVUyxPQUFPLEVBQUU7WUFDNUZKLGdCQUFnQkE7WUFDaEJLLFFBQVFKLFFBQVFJLE1BQU07UUFDMUI7QUFDSjtBQUNBaEIsK0JBQStCLEdBQUdFO0FBQ2xDRyxpQkFBaUJZLHVCQUF1QixDQUFDQyxHQUFHLEdBQUdmLGlCQUFpQmdCLG9CQUFvQiIsInNvdXJjZXMiOlsid2VicGFjazovL2Nsb3Vkc2hpZnQvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY2xpZW50LXNzby9kaXN0LWNqcy9lbmRwb2ludC9lbmRwb2ludFJlc29sdmVyLmpzP2QyNTkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRlZmF1bHRFbmRwb2ludFJlc29sdmVyID0gdm9pZCAwO1xuY29uc3QgdXRpbF9lbmRwb2ludHNfMSA9IHJlcXVpcmUoXCJAYXdzLXNkay91dGlsLWVuZHBvaW50c1wiKTtcbmNvbnN0IHV0aWxfZW5kcG9pbnRzXzIgPSByZXF1aXJlKFwiQHNtaXRoeS91dGlsLWVuZHBvaW50c1wiKTtcbmNvbnN0IHJ1bGVzZXRfMSA9IHJlcXVpcmUoXCIuL3J1bGVzZXRcIik7XG5jb25zdCBjYWNoZSA9IG5ldyB1dGlsX2VuZHBvaW50c18yLkVuZHBvaW50Q2FjaGUoe1xuICAgIHNpemU6IDUwLFxuICAgIHBhcmFtczogW1wiRW5kcG9pbnRcIiwgXCJSZWdpb25cIiwgXCJVc2VEdWFsU3RhY2tcIiwgXCJVc2VGSVBTXCJdLFxufSk7XG5jb25zdCBkZWZhdWx0RW5kcG9pbnRSZXNvbHZlciA9IChlbmRwb2ludFBhcmFtcywgY29udGV4dCA9IHt9KSA9PiB7XG4gICAgcmV0dXJuIGNhY2hlLmdldChlbmRwb2ludFBhcmFtcywgKCkgPT4gKDAsIHV0aWxfZW5kcG9pbnRzXzIucmVzb2x2ZUVuZHBvaW50KShydWxlc2V0XzEucnVsZVNldCwge1xuICAgICAgICBlbmRwb2ludFBhcmFtczogZW5kcG9pbnRQYXJhbXMsXG4gICAgICAgIGxvZ2dlcjogY29udGV4dC5sb2dnZXIsXG4gICAgfSkpO1xufTtcbmV4cG9ydHMuZGVmYXVsdEVuZHBvaW50UmVzb2x2ZXIgPSBkZWZhdWx0RW5kcG9pbnRSZXNvbHZlcjtcbnV0aWxfZW5kcG9pbnRzXzIuY3VzdG9tRW5kcG9pbnRGdW5jdGlvbnMuYXdzID0gdXRpbF9lbmRwb2ludHNfMS5hd3NFbmRwb2ludEZ1bmN0aW9ucztcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHRFbmRwb2ludFJlc29sdmVyIiwidXRpbF9lbmRwb2ludHNfMSIsInJlcXVpcmUiLCJ1dGlsX2VuZHBvaW50c18yIiwicnVsZXNldF8xIiwiY2FjaGUiLCJFbmRwb2ludENhY2hlIiwic2l6ZSIsInBhcmFtcyIsImVuZHBvaW50UGFyYW1zIiwiY29udGV4dCIsImdldCIsInJlc29sdmVFbmRwb2ludCIsInJ1bGVTZXQiLCJsb2dnZXIiLCJjdXN0b21FbmRwb2ludEZ1bmN0aW9ucyIsImF3cyIsImF3c0VuZHBvaW50RnVuY3Rpb25zIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/client-sso/dist-cjs/endpoint/endpointResolver.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/client-sso/dist-cjs/endpoint/ruleset.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-sso/dist-cjs/endpoint/ruleset.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ruleSet = void 0;\nconst u = \"required\", v = \"fn\", w = \"argv\", x = \"ref\";\nconst a = true, b = \"isSet\", c = \"booleanEquals\", d = \"error\", e = \"endpoint\", f = \"tree\", g = \"PartitionResult\", h = \"getAttr\", i = {\n    [u]: false,\n    \"type\": \"String\"\n}, j = {\n    [u]: true,\n    \"default\": false,\n    \"type\": \"Boolean\"\n}, k = {\n    [x]: \"Endpoint\"\n}, l = {\n    [v]: c,\n    [w]: [\n        {\n            [x]: \"UseFIPS\"\n        },\n        true\n    ]\n}, m = {\n    [v]: c,\n    [w]: [\n        {\n            [x]: \"UseDualStack\"\n        },\n        true\n    ]\n}, n = {}, o = {\n    [v]: h,\n    [w]: [\n        {\n            [x]: g\n        },\n        \"supportsFIPS\"\n    ]\n}, p = {\n    [x]: g\n}, q = {\n    [v]: c,\n    [w]: [\n        true,\n        {\n            [v]: h,\n            [w]: [\n                p,\n                \"supportsDualStack\"\n            ]\n        }\n    ]\n}, r = [\n    l\n], s = [\n    m\n], t = [\n    {\n        [x]: \"Region\"\n    }\n];\nconst _data = {\n    version: \"1.0\",\n    parameters: {\n        Region: i,\n        UseDualStack: j,\n        UseFIPS: j,\n        Endpoint: i\n    },\n    rules: [\n        {\n            conditions: [\n                {\n                    [v]: b,\n                    [w]: [\n                        k\n                    ]\n                }\n            ],\n            rules: [\n                {\n                    conditions: r,\n                    error: \"Invalid Configuration: FIPS and custom endpoint are not supported\",\n                    type: d\n                },\n                {\n                    conditions: s,\n                    error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\",\n                    type: d\n                },\n                {\n                    endpoint: {\n                        url: k,\n                        properties: n,\n                        headers: n\n                    },\n                    type: e\n                }\n            ],\n            type: f\n        },\n        {\n            conditions: [\n                {\n                    [v]: b,\n                    [w]: t\n                }\n            ],\n            rules: [\n                {\n                    conditions: [\n                        {\n                            [v]: \"aws.partition\",\n                            [w]: t,\n                            assign: g\n                        }\n                    ],\n                    rules: [\n                        {\n                            conditions: [\n                                l,\n                                m\n                            ],\n                            rules: [\n                                {\n                                    conditions: [\n                                        {\n                                            [v]: c,\n                                            [w]: [\n                                                a,\n                                                o\n                                            ]\n                                        },\n                                        q\n                                    ],\n                                    rules: [\n                                        {\n                                            endpoint: {\n                                                url: \"https://portal.sso-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\",\n                                                properties: n,\n                                                headers: n\n                                            },\n                                            type: e\n                                        }\n                                    ],\n                                    type: f\n                                },\n                                {\n                                    error: \"FIPS and DualStack are enabled, but this partition does not support one or both\",\n                                    type: d\n                                }\n                            ],\n                            type: f\n                        },\n                        {\n                            conditions: r,\n                            rules: [\n                                {\n                                    conditions: [\n                                        {\n                                            [v]: c,\n                                            [w]: [\n                                                o,\n                                                a\n                                            ]\n                                        }\n                                    ],\n                                    rules: [\n                                        {\n                                            conditions: [\n                                                {\n                                                    [v]: \"stringEquals\",\n                                                    [w]: [\n                                                        {\n                                                            [v]: h,\n                                                            [w]: [\n                                                                p,\n                                                                \"name\"\n                                                            ]\n                                                        },\n                                                        \"aws-us-gov\"\n                                                    ]\n                                                }\n                                            ],\n                                            endpoint: {\n                                                url: \"https://portal.sso.{Region}.amazonaws.com\",\n                                                properties: n,\n                                                headers: n\n                                            },\n                                            type: e\n                                        },\n                                        {\n                                            endpoint: {\n                                                url: \"https://portal.sso-fips.{Region}.{PartitionResult#dnsSuffix}\",\n                                                properties: n,\n                                                headers: n\n                                            },\n                                            type: e\n                                        }\n                                    ],\n                                    type: f\n                                },\n                                {\n                                    error: \"FIPS is enabled but this partition does not support FIPS\",\n                                    type: d\n                                }\n                            ],\n                            type: f\n                        },\n                        {\n                            conditions: s,\n                            rules: [\n                                {\n                                    conditions: [\n                                        q\n                                    ],\n                                    rules: [\n                                        {\n                                            endpoint: {\n                                                url: \"https://portal.sso.{Region}.{PartitionResult#dualStackDnsSuffix}\",\n                                                properties: n,\n                                                headers: n\n                                            },\n                                            type: e\n                                        }\n                                    ],\n                                    type: f\n                                },\n                                {\n                                    error: \"DualStack is enabled but this partition does not support DualStack\",\n                                    type: d\n                                }\n                            ],\n                            type: f\n                        },\n                        {\n                            endpoint: {\n                                url: \"https://portal.sso.{Region}.{PartitionResult#dnsSuffix}\",\n                                properties: n,\n                                headers: n\n                            },\n                            type: e\n                        }\n                    ],\n                    type: f\n                }\n            ],\n            type: f\n        },\n        {\n            error: \"Invalid Configuration: Missing Region\",\n            type: d\n        }\n    ]\n};\nexports.ruleSet = _data;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/client-sso/dist-cjs/endpoint/ruleset.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/client-sso/dist-cjs/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-sso/dist-cjs/index.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value)=>__defProp(target, \"name\", {\n        value,\n        configurable: true\n    });\nvar __export = (target, all)=>{\n    for(var name in all)__defProp(target, name, {\n        get: all[name],\n        enumerable: true\n    });\n};\nvar __copyProps = (to, from, except, desc)=>{\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n            get: ()=>from[key],\n            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n    }\n    return to;\n};\nvar __toCommonJS = (mod)=>__copyProps(__defProp({}, \"__esModule\", {\n        value: true\n    }), mod);\n// src/index.ts\nvar index_exports = {};\n__export(index_exports, {\n    GetRoleCredentialsCommand: ()=>GetRoleCredentialsCommand,\n    GetRoleCredentialsRequestFilterSensitiveLog: ()=>GetRoleCredentialsRequestFilterSensitiveLog,\n    GetRoleCredentialsResponseFilterSensitiveLog: ()=>GetRoleCredentialsResponseFilterSensitiveLog,\n    InvalidRequestException: ()=>InvalidRequestException,\n    ListAccountRolesCommand: ()=>ListAccountRolesCommand,\n    ListAccountRolesRequestFilterSensitiveLog: ()=>ListAccountRolesRequestFilterSensitiveLog,\n    ListAccountsCommand: ()=>ListAccountsCommand,\n    ListAccountsRequestFilterSensitiveLog: ()=>ListAccountsRequestFilterSensitiveLog,\n    LogoutCommand: ()=>LogoutCommand,\n    LogoutRequestFilterSensitiveLog: ()=>LogoutRequestFilterSensitiveLog,\n    ResourceNotFoundException: ()=>ResourceNotFoundException,\n    RoleCredentialsFilterSensitiveLog: ()=>RoleCredentialsFilterSensitiveLog,\n    SSO: ()=>SSO,\n    SSOClient: ()=>SSOClient,\n    SSOServiceException: ()=>SSOServiceException,\n    TooManyRequestsException: ()=>TooManyRequestsException,\n    UnauthorizedException: ()=>UnauthorizedException,\n    __Client: ()=>import_smithy_client.Client,\n    paginateListAccountRoles: ()=>paginateListAccountRoles,\n    paginateListAccounts: ()=>paginateListAccounts\n});\nmodule.exports = __toCommonJS(index_exports);\n// src/SSOClient.ts\nvar import_middleware_host_header = __webpack_require__(/*! @aws-sdk/middleware-host-header */ \"(rsc)/./node_modules/@aws-sdk/middleware-host-header/dist-cjs/index.js\");\nvar import_middleware_logger = __webpack_require__(/*! @aws-sdk/middleware-logger */ \"(rsc)/./node_modules/@aws-sdk/middleware-logger/dist-cjs/index.js\");\nvar import_middleware_recursion_detection = __webpack_require__(/*! @aws-sdk/middleware-recursion-detection */ \"(rsc)/./node_modules/@aws-sdk/middleware-recursion-detection/dist-cjs/index.js\");\nvar import_middleware_user_agent = __webpack_require__(/*! @aws-sdk/middleware-user-agent */ \"(rsc)/./node_modules/@aws-sdk/middleware-user-agent/dist-cjs/index.js\");\nvar import_config_resolver = __webpack_require__(/*! @smithy/config-resolver */ \"(rsc)/./node_modules/@smithy/config-resolver/dist-cjs/index.js\");\nvar import_core = __webpack_require__(/*! @smithy/core */ \"(rsc)/./node_modules/@smithy/core/dist-es/index.js\");\nvar import_middleware_content_length = __webpack_require__(/*! @smithy/middleware-content-length */ \"(rsc)/./node_modules/@smithy/middleware-content-length/dist-cjs/index.js\");\nvar import_middleware_endpoint = __webpack_require__(/*! @smithy/middleware-endpoint */ \"(rsc)/./node_modules/@smithy/middleware-endpoint/dist-cjs/index.js\");\nvar import_middleware_retry = __webpack_require__(/*! @smithy/middleware-retry */ \"(rsc)/./node_modules/@smithy/middleware-retry/dist-cjs/index.js\");\nvar import_httpAuthSchemeProvider = __webpack_require__(/*! ./auth/httpAuthSchemeProvider */ \"(rsc)/./node_modules/@aws-sdk/client-sso/dist-cjs/auth/httpAuthSchemeProvider.js\");\n// src/endpoint/EndpointParameters.ts\nvar resolveClientEndpointParameters = /* @__PURE__ */ __name((options)=>{\n    return Object.assign(options, {\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        defaultSigningName: \"awsssoportal\"\n    });\n}, \"resolveClientEndpointParameters\");\nvar commonParams = {\n    UseFIPS: {\n        type: \"builtInParams\",\n        name: \"useFipsEndpoint\"\n    },\n    Endpoint: {\n        type: \"builtInParams\",\n        name: \"endpoint\"\n    },\n    Region: {\n        type: \"builtInParams\",\n        name: \"region\"\n    },\n    UseDualStack: {\n        type: \"builtInParams\",\n        name: \"useDualstackEndpoint\"\n    }\n};\n// src/SSOClient.ts\nvar import_runtimeConfig = __webpack_require__(/*! ././runtimeConfig */ \"(rsc)/./node_modules/@aws-sdk/client-sso/dist-cjs/runtimeConfig.js\");\n// src/runtimeExtensions.ts\nvar import_region_config_resolver = __webpack_require__(/*! @aws-sdk/region-config-resolver */ \"(rsc)/./node_modules/@aws-sdk/region-config-resolver/dist-cjs/index.js\");\nvar import_protocol_http = __webpack_require__(/*! @smithy/protocol-http */ \"(rsc)/./node_modules/@smithy/protocol-http/dist-cjs/index.js\");\nvar import_smithy_client = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/./node_modules/@smithy/smithy-client/dist-cjs/index.js\");\n// src/auth/httpAuthExtensionConfiguration.ts\nvar getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig)=>{\n    const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;\n    let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;\n    let _credentials = runtimeConfig.credentials;\n    return {\n        setHttpAuthScheme (httpAuthScheme) {\n            const index = _httpAuthSchemes.findIndex((scheme)=>scheme.schemeId === httpAuthScheme.schemeId);\n            if (index === -1) {\n                _httpAuthSchemes.push(httpAuthScheme);\n            } else {\n                _httpAuthSchemes.splice(index, 1, httpAuthScheme);\n            }\n        },\n        httpAuthSchemes () {\n            return _httpAuthSchemes;\n        },\n        setHttpAuthSchemeProvider (httpAuthSchemeProvider) {\n            _httpAuthSchemeProvider = httpAuthSchemeProvider;\n        },\n        httpAuthSchemeProvider () {\n            return _httpAuthSchemeProvider;\n        },\n        setCredentials (credentials) {\n            _credentials = credentials;\n        },\n        credentials () {\n            return _credentials;\n        }\n    };\n}, \"getHttpAuthExtensionConfiguration\");\nvar resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config)=>{\n    return {\n        httpAuthSchemes: config.httpAuthSchemes(),\n        httpAuthSchemeProvider: config.httpAuthSchemeProvider(),\n        credentials: config.credentials()\n    };\n}, \"resolveHttpAuthRuntimeConfig\");\n// src/runtimeExtensions.ts\nvar resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions)=>{\n    const extensionConfiguration = Object.assign((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig), (0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig), (0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig), getHttpAuthExtensionConfiguration(runtimeConfig));\n    extensions.forEach((extension)=>extension.configure(extensionConfiguration));\n    return Object.assign(runtimeConfig, (0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration), (0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration), (0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration), resolveHttpAuthRuntimeConfig(extensionConfiguration));\n}, \"resolveRuntimeExtensions\");\n// src/SSOClient.ts\nvar SSOClient = class extends import_smithy_client.Client {\n    static{\n        __name(this, \"SSOClient\");\n    }\n    constructor(...[configuration]){\n        const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});\n        super(_config_0);\n        this.initConfig = _config_0;\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_1);\n        const _config_3 = (0, import_middleware_retry.resolveRetryConfig)(_config_2);\n        const _config_4 = (0, import_config_resolver.resolveRegionConfig)(_config_3);\n        const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);\n        const _config_6 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_5);\n        const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);\n        const _config_8 = resolveRuntimeExtensions(_config_7, configuration?.extensions || []);\n        this.config = _config_8;\n        this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));\n        this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));\n        this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));\n        this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));\n        this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));\n        this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));\n        this.middlewareStack.use((0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {\n            httpAuthSchemeParametersProvider: import_httpAuthSchemeProvider.defaultSSOHttpAuthSchemeParametersProvider,\n            identityProviderConfigProvider: /* @__PURE__ */ __name(async (config)=>new import_core.DefaultIdentityProviderConfig({\n                    \"aws.auth#sigv4\": config.credentials\n                }), \"identityProviderConfigProvider\")\n        }));\n        this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));\n    }\n    /**\n   * Destroy underlying resources, like sockets. It's usually not necessary to do this.\n   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.\n   * Otherwise, sockets might stay open for quite a long time before the server terminates them.\n   */ destroy() {\n        super.destroy();\n    }\n};\n// src/SSO.ts\n// src/commands/GetRoleCredentialsCommand.ts\nvar import_middleware_serde = __webpack_require__(/*! @smithy/middleware-serde */ \"(rsc)/./node_modules/@smithy/middleware-serde/dist-cjs/index.js\");\n// src/models/models_0.ts\n// src/models/SSOServiceException.ts\nvar SSOServiceException = class _SSOServiceException extends import_smithy_client.ServiceException {\n    static{\n        __name(this, \"SSOServiceException\");\n    }\n    /**\n   * @internal\n   */ constructor(options){\n        super(options);\n        Object.setPrototypeOf(this, _SSOServiceException.prototype);\n    }\n};\n// src/models/models_0.ts\nvar InvalidRequestException = class _InvalidRequestException extends SSOServiceException {\n    static{\n        __name(this, \"InvalidRequestException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"InvalidRequestException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidRequestException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _InvalidRequestException.prototype);\n    }\n};\nvar ResourceNotFoundException = class _ResourceNotFoundException extends SSOServiceException {\n    static{\n        __name(this, \"ResourceNotFoundException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"ResourceNotFoundException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"ResourceNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);\n    }\n};\nvar TooManyRequestsException = class _TooManyRequestsException extends SSOServiceException {\n    static{\n        __name(this, \"TooManyRequestsException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"TooManyRequestsException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"TooManyRequestsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _TooManyRequestsException.prototype);\n    }\n};\nvar UnauthorizedException = class _UnauthorizedException extends SSOServiceException {\n    static{\n        __name(this, \"UnauthorizedException\");\n    }\n    /**\n   * @internal\n   */ constructor(opts){\n        super({\n            name: \"UnauthorizedException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"UnauthorizedException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _UnauthorizedException.prototype);\n    }\n};\nvar GetRoleCredentialsRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj)=>({\n        ...obj,\n        ...obj.accessToken && {\n            accessToken: import_smithy_client.SENSITIVE_STRING\n        }\n    }), \"GetRoleCredentialsRequestFilterSensitiveLog\");\nvar RoleCredentialsFilterSensitiveLog = /* @__PURE__ */ __name((obj)=>({\n        ...obj,\n        ...obj.secretAccessKey && {\n            secretAccessKey: import_smithy_client.SENSITIVE_STRING\n        },\n        ...obj.sessionToken && {\n            sessionToken: import_smithy_client.SENSITIVE_STRING\n        }\n    }), \"RoleCredentialsFilterSensitiveLog\");\nvar GetRoleCredentialsResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj)=>({\n        ...obj,\n        ...obj.roleCredentials && {\n            roleCredentials: RoleCredentialsFilterSensitiveLog(obj.roleCredentials)\n        }\n    }), \"GetRoleCredentialsResponseFilterSensitiveLog\");\nvar ListAccountRolesRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj)=>({\n        ...obj,\n        ...obj.accessToken && {\n            accessToken: import_smithy_client.SENSITIVE_STRING\n        }\n    }), \"ListAccountRolesRequestFilterSensitiveLog\");\nvar ListAccountsRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj)=>({\n        ...obj,\n        ...obj.accessToken && {\n            accessToken: import_smithy_client.SENSITIVE_STRING\n        }\n    }), \"ListAccountsRequestFilterSensitiveLog\");\nvar LogoutRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj)=>({\n        ...obj,\n        ...obj.accessToken && {\n            accessToken: import_smithy_client.SENSITIVE_STRING\n        }\n    }), \"LogoutRequestFilterSensitiveLog\");\n// src/protocols/Aws_restJson1.ts\nvar import_core2 = __webpack_require__(/*! @aws-sdk/core */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/index.js\");\nvar se_GetRoleCredentialsCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const b = (0, import_core.requestBuilder)(input, context);\n    const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {\n        [_xasbt]: input[_aT]\n    });\n    b.bp(\"/federation/credentials\");\n    const query = (0, import_smithy_client.map)({\n        [_rn]: [\n            ,\n            (0, import_smithy_client.expectNonNull)(input[_rN], `roleName`)\n        ],\n        [_ai]: [\n            ,\n            (0, import_smithy_client.expectNonNull)(input[_aI], `accountId`)\n        ]\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n}, \"se_GetRoleCredentialsCommand\");\nvar se_ListAccountRolesCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const b = (0, import_core.requestBuilder)(input, context);\n    const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {\n        [_xasbt]: input[_aT]\n    });\n    b.bp(\"/assignment/roles\");\n    const query = (0, import_smithy_client.map)({\n        [_nt]: [\n            ,\n            input[_nT]\n        ],\n        [_mr]: [\n            ()=>input.maxResults !== void 0,\n            ()=>input[_mR].toString()\n        ],\n        [_ai]: [\n            ,\n            (0, import_smithy_client.expectNonNull)(input[_aI], `accountId`)\n        ]\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n}, \"se_ListAccountRolesCommand\");\nvar se_ListAccountsCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const b = (0, import_core.requestBuilder)(input, context);\n    const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {\n        [_xasbt]: input[_aT]\n    });\n    b.bp(\"/assignment/accounts\");\n    const query = (0, import_smithy_client.map)({\n        [_nt]: [\n            ,\n            input[_nT]\n        ],\n        [_mr]: [\n            ()=>input.maxResults !== void 0,\n            ()=>input[_mR].toString()\n        ]\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n}, \"se_ListAccountsCommand\");\nvar se_LogoutCommand = /* @__PURE__ */ __name(async (input, context)=>{\n    const b = (0, import_core.requestBuilder)(input, context);\n    const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {\n        [_xasbt]: input[_aT]\n    });\n    b.bp(\"/logout\");\n    let body;\n    b.m(\"POST\").h(headers).b(body);\n    return b.build();\n}, \"se_LogoutCommand\");\nvar de_GetRoleCredentialsCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = (0, import_smithy_client.map)({\n        $metadata: deserializeMetadata(output)\n    });\n    const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), \"body\");\n    const doc = (0, import_smithy_client.take)(data, {\n        roleCredentials: import_smithy_client._json\n    });\n    Object.assign(contents, doc);\n    return contents;\n}, \"de_GetRoleCredentialsCommand\");\nvar de_ListAccountRolesCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = (0, import_smithy_client.map)({\n        $metadata: deserializeMetadata(output)\n    });\n    const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), \"body\");\n    const doc = (0, import_smithy_client.take)(data, {\n        nextToken: import_smithy_client.expectString,\n        roleList: import_smithy_client._json\n    });\n    Object.assign(contents, doc);\n    return contents;\n}, \"de_ListAccountRolesCommand\");\nvar de_ListAccountsCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = (0, import_smithy_client.map)({\n        $metadata: deserializeMetadata(output)\n    });\n    const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), \"body\");\n    const doc = (0, import_smithy_client.take)(data, {\n        accountList: import_smithy_client._json,\n        nextToken: import_smithy_client.expectString\n    });\n    Object.assign(contents, doc);\n    return contents;\n}, \"de_ListAccountsCommand\");\nvar de_LogoutCommand = /* @__PURE__ */ __name(async (output, context)=>{\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = (0, import_smithy_client.map)({\n        $metadata: deserializeMetadata(output)\n    });\n    await (0, import_smithy_client.collectBody)(output.body, context);\n    return contents;\n}, \"de_LogoutCommand\");\nvar de_CommandError = /* @__PURE__ */ __name(async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await (0, import_core2.parseJsonErrorBody)(output.body, context)\n    };\n    const errorCode = (0, import_core2.loadRestJsonErrorCode)(output, parsedOutput.body);\n    switch(errorCode){\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.sso#InvalidRequestException\":\n            throw await de_InvalidRequestExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.sso#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.sso#TooManyRequestsException\":\n            throw await de_TooManyRequestsExceptionRes(parsedOutput, context);\n        case \"UnauthorizedException\":\n        case \"com.amazonaws.sso#UnauthorizedException\":\n            throw await de_UnauthorizedExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n}, \"de_CommandError\");\nvar throwDefaultError = (0, import_smithy_client.withBaseException)(SSOServiceException);\nvar de_InvalidRequestExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const contents = (0, import_smithy_client.map)({});\n    const data = parsedOutput.body;\n    const doc = (0, import_smithy_client.take)(data, {\n        message: import_smithy_client.expectString\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidRequestException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);\n}, \"de_InvalidRequestExceptionRes\");\nvar de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const contents = (0, import_smithy_client.map)({});\n    const data = parsedOutput.body;\n    const doc = (0, import_smithy_client.take)(data, {\n        message: import_smithy_client.expectString\n    });\n    Object.assign(contents, doc);\n    const exception = new ResourceNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);\n}, \"de_ResourceNotFoundExceptionRes\");\nvar de_TooManyRequestsExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const contents = (0, import_smithy_client.map)({});\n    const data = parsedOutput.body;\n    const doc = (0, import_smithy_client.take)(data, {\n        message: import_smithy_client.expectString\n    });\n    Object.assign(contents, doc);\n    const exception = new TooManyRequestsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);\n}, \"de_TooManyRequestsExceptionRes\");\nvar de_UnauthorizedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context)=>{\n    const contents = (0, import_smithy_client.map)({});\n    const data = parsedOutput.body;\n    const doc = (0, import_smithy_client.take)(data, {\n        message: import_smithy_client.expectString\n    });\n    Object.assign(contents, doc);\n    const exception = new UnauthorizedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents\n    });\n    return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);\n}, \"de_UnauthorizedExceptionRes\");\nvar deserializeMetadata = /* @__PURE__ */ __name((output)=>({\n        httpStatusCode: output.statusCode,\n        requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n        extendedRequestId: output.headers[\"x-amz-id-2\"],\n        cfId: output.headers[\"x-amz-cf-id\"]\n    }), \"deserializeMetadata\");\nvar _aI = \"accountId\";\nvar _aT = \"accessToken\";\nvar _ai = \"account_id\";\nvar _mR = \"maxResults\";\nvar _mr = \"max_result\";\nvar _nT = \"nextToken\";\nvar _nt = \"next_token\";\nvar _rN = \"roleName\";\nvar _rn = \"role_name\";\nvar _xasbt = \"x-amz-sso_bearer_token\";\n// src/commands/GetRoleCredentialsCommand.ts\nvar GetRoleCredentialsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"SWBPortalService\", \"GetRoleCredentials\", {}).n(\"SSOClient\", \"GetRoleCredentialsCommand\").f(GetRoleCredentialsRequestFilterSensitiveLog, GetRoleCredentialsResponseFilterSensitiveLog).ser(se_GetRoleCredentialsCommand).de(de_GetRoleCredentialsCommand).build() {\n    static{\n        __name(this, \"GetRoleCredentialsCommand\");\n    }\n};\n// src/commands/ListAccountRolesCommand.ts\nvar ListAccountRolesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"SWBPortalService\", \"ListAccountRoles\", {}).n(\"SSOClient\", \"ListAccountRolesCommand\").f(ListAccountRolesRequestFilterSensitiveLog, void 0).ser(se_ListAccountRolesCommand).de(de_ListAccountRolesCommand).build() {\n    static{\n        __name(this, \"ListAccountRolesCommand\");\n    }\n};\n// src/commands/ListAccountsCommand.ts\nvar ListAccountsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"SWBPortalService\", \"ListAccounts\", {}).n(\"SSOClient\", \"ListAccountsCommand\").f(ListAccountsRequestFilterSensitiveLog, void 0).ser(se_ListAccountsCommand).de(de_ListAccountsCommand).build() {\n    static{\n        __name(this, \"ListAccountsCommand\");\n    }\n};\n// src/commands/LogoutCommand.ts\nvar LogoutCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"SWBPortalService\", \"Logout\", {}).n(\"SSOClient\", \"LogoutCommand\").f(LogoutRequestFilterSensitiveLog, void 0).ser(se_LogoutCommand).de(de_LogoutCommand).build() {\n    static{\n        __name(this, \"LogoutCommand\");\n    }\n};\n// src/SSO.ts\nvar commands = {\n    GetRoleCredentialsCommand,\n    ListAccountRolesCommand,\n    ListAccountsCommand,\n    LogoutCommand\n};\nvar SSO = class extends SSOClient {\n    static{\n        __name(this, \"SSO\");\n    }\n};\n(0, import_smithy_client.createAggregatedClient)(commands, SSO);\n// src/pagination/ListAccountRolesPaginator.ts\nvar paginateListAccountRoles = (0, import_core.createPaginator)(SSOClient, ListAccountRolesCommand, \"nextToken\", \"nextToken\", \"maxResults\");\n// src/pagination/ListAccountsPaginator.ts\nvar paginateListAccounts = (0, import_core.createPaginator)(SSOClient, ListAccountsCommand, \"nextToken\", \"nextToken\", \"maxResults\");\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/client-sso/dist-cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/client-sso/dist-cjs/runtimeConfig.js":
/*!********************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-sso/dist-cjs/runtimeConfig.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getRuntimeConfig = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.mjs\");\nconst package_json_1 = tslib_1.__importDefault(__webpack_require__(/*! ../package.json */ \"(rsc)/./node_modules/@aws-sdk/client-sso/package.json\"));\nconst core_1 = __webpack_require__(/*! @aws-sdk/core */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/index.js\");\nconst util_user_agent_node_1 = __webpack_require__(/*! @aws-sdk/util-user-agent-node */ \"(rsc)/./node_modules/@aws-sdk/util-user-agent-node/dist-cjs/index.js\");\nconst config_resolver_1 = __webpack_require__(/*! @smithy/config-resolver */ \"(rsc)/./node_modules/@smithy/config-resolver/dist-cjs/index.js\");\nconst hash_node_1 = __webpack_require__(/*! @smithy/hash-node */ \"(rsc)/./node_modules/@smithy/hash-node/dist-cjs/index.js\");\nconst middleware_retry_1 = __webpack_require__(/*! @smithy/middleware-retry */ \"(rsc)/./node_modules/@smithy/middleware-retry/dist-cjs/index.js\");\nconst node_config_provider_1 = __webpack_require__(/*! @smithy/node-config-provider */ \"(rsc)/./node_modules/@smithy/node-config-provider/dist-cjs/index.js\");\nconst node_http_handler_1 = __webpack_require__(/*! @smithy/node-http-handler */ \"(rsc)/./node_modules/@smithy/node-http-handler/dist-cjs/index.js\");\nconst util_body_length_node_1 = __webpack_require__(/*! @smithy/util-body-length-node */ \"(rsc)/./node_modules/@smithy/util-body-length-node/dist-cjs/index.js\");\nconst util_retry_1 = __webpack_require__(/*! @smithy/util-retry */ \"(rsc)/./node_modules/@smithy/util-retry/dist-cjs/index.js\");\nconst runtimeConfig_shared_1 = __webpack_require__(/*! ./runtimeConfig.shared */ \"(rsc)/./node_modules/@aws-sdk/client-sso/dist-cjs/runtimeConfig.shared.js\");\nconst smithy_client_1 = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/./node_modules/@smithy/smithy-client/dist-cjs/index.js\");\nconst util_defaults_mode_node_1 = __webpack_require__(/*! @smithy/util-defaults-mode-node */ \"(rsc)/./node_modules/@smithy/util-defaults-mode-node/dist-cjs/index.js\");\nconst smithy_client_2 = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/./node_modules/@smithy/smithy-client/dist-cjs/index.js\");\nconst getRuntimeConfig = (config)=>{\n    (0, smithy_client_2.emitWarningIfUnsupportedVersion)(process.version);\n    const defaultsMode = (0, util_defaults_mode_node_1.resolveDefaultsModeConfig)(config);\n    const defaultConfigProvider = ()=>defaultsMode().then(smithy_client_1.loadConfigsForDefaultMode);\n    const clientSharedValues = (0, runtimeConfig_shared_1.getRuntimeConfig)(config);\n    (0, core_1.emitWarningIfUnsupportedVersion)(process.version);\n    const profileConfig = {\n        profile: config?.profile\n    };\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? util_body_length_node_1.calculateBodyLength,\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ?? (0, util_user_agent_node_1.createDefaultUserAgentProvider)({\n            serviceId: clientSharedValues.serviceId,\n            clientVersion: package_json_1.default.version\n        }),\n        maxAttempts: config?.maxAttempts ?? (0, node_config_provider_1.loadConfig)(middleware_retry_1.NODE_MAX_ATTEMPT_CONFIG_OPTIONS, config),\n        region: config?.region ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_REGION_CONFIG_OPTIONS, {\n            ...config_resolver_1.NODE_REGION_CONFIG_FILE_OPTIONS,\n            ...profileConfig\n        }),\n        requestHandler: node_http_handler_1.NodeHttpHandler.create(config?.requestHandler ?? defaultConfigProvider),\n        retryMode: config?.retryMode ?? (0, node_config_provider_1.loadConfig)({\n            ...middleware_retry_1.NODE_RETRY_MODE_CONFIG_OPTIONS,\n            default: async ()=>(await defaultConfigProvider()).retryMode || util_retry_1.DEFAULT_RETRY_MODE\n        }, config),\n        sha256: config?.sha256 ?? hash_node_1.Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? node_http_handler_1.streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, profileConfig),\n        useFipsEndpoint: config?.useFipsEndpoint ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, profileConfig),\n        userAgentAppId: config?.userAgentAppId ?? (0, node_config_provider_1.loadConfig)(util_user_agent_node_1.NODE_APP_ID_CONFIG_OPTIONS, profileConfig)\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY2xpZW50LXNzby9kaXN0LWNqcy9ydW50aW1lQ29uZmlnLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCx3QkFBd0IsR0FBRyxLQUFLO0FBQ2hDLE1BQU1HLFVBQVVDLG1CQUFPQSxDQUFDLHVEQUFPO0FBQy9CLE1BQU1DLGlCQUFpQkYsUUFBUUcsZUFBZSxDQUFDRixtQkFBT0EsQ0FBQyw4RUFBaUI7QUFDeEUsTUFBTUcsU0FBU0gsbUJBQU9BLENBQUMsMEVBQWU7QUFDdEMsTUFBTUkseUJBQXlCSixtQkFBT0EsQ0FBQywyR0FBK0I7QUFDdEUsTUFBTUssb0JBQW9CTCxtQkFBT0EsQ0FBQywrRkFBeUI7QUFDM0QsTUFBTU0sY0FBY04sbUJBQU9BLENBQUMsbUZBQW1CO0FBQy9DLE1BQU1PLHFCQUFxQlAsbUJBQU9BLENBQUMsaUdBQTBCO0FBQzdELE1BQU1RLHlCQUF5QlIsbUJBQU9BLENBQUMseUdBQThCO0FBQ3JFLE1BQU1TLHNCQUFzQlQsbUJBQU9BLENBQUMsbUdBQTJCO0FBQy9ELE1BQU1VLDBCQUEwQlYsbUJBQU9BLENBQUMsMkdBQStCO0FBQ3ZFLE1BQU1XLGVBQWVYLG1CQUFPQSxDQUFDLHFGQUFvQjtBQUNqRCxNQUFNWSx5QkFBeUJaLG1CQUFPQSxDQUFDLHlHQUF3QjtBQUMvRCxNQUFNYSxrQkFBa0JiLG1CQUFPQSxDQUFDLDJGQUF1QjtBQUN2RCxNQUFNYyw0QkFBNEJkLG1CQUFPQSxDQUFDLCtHQUFpQztBQUMzRSxNQUFNZSxrQkFBa0JmLG1CQUFPQSxDQUFDLDJGQUF1QjtBQUN2RCxNQUFNRixtQkFBbUIsQ0FBQ2tCO0lBQ3JCLElBQUdELGdCQUFnQkUsK0JBQStCLEVBQUVDLFFBQVFDLE9BQU87SUFDcEUsTUFBTUMsZUFBZSxDQUFDLEdBQUdOLDBCQUEwQk8seUJBQXlCLEVBQUVMO0lBQzlFLE1BQU1NLHdCQUF3QixJQUFNRixlQUFlRyxJQUFJLENBQUNWLGdCQUFnQlcseUJBQXlCO0lBQ2pHLE1BQU1DLHFCQUFxQixDQUFDLEdBQUdiLHVCQUF1QmQsZ0JBQWdCLEVBQUVrQjtJQUN2RSxJQUFHYixPQUFPYywrQkFBK0IsRUFBRUMsUUFBUUMsT0FBTztJQUMzRCxNQUFNTyxnQkFBZ0I7UUFBRUMsU0FBU1gsUUFBUVc7SUFBUTtJQUNqRCxPQUFPO1FBQ0gsR0FBR0Ysa0JBQWtCO1FBQ3JCLEdBQUdULE1BQU07UUFDVFksU0FBUztRQUNUUjtRQUNBUyxtQkFBbUJiLFFBQVFhLHFCQUFxQm5CLHdCQUF3Qm9CLG1CQUFtQjtRQUMzRkMsMEJBQTBCZixRQUFRZSw0QkFDOUIsQ0FBQyxHQUFHM0IsdUJBQXVCNEIsOEJBQThCLEVBQUU7WUFBRUMsV0FBV1IsbUJBQW1CUSxTQUFTO1lBQUVDLGVBQWVqQyxlQUFla0MsT0FBTyxDQUFDaEIsT0FBTztRQUFDO1FBQ3hKaUIsYUFBYXBCLFFBQVFvQixlQUFlLENBQUMsR0FBRzVCLHVCQUF1QjZCLFVBQVUsRUFBRTlCLG1CQUFtQitCLCtCQUErQixFQUFFdEI7UUFDL0h1QixRQUFRdkIsUUFBUXVCLFVBQ1osQ0FBQyxHQUFHL0IsdUJBQXVCNkIsVUFBVSxFQUFFaEMsa0JBQWtCbUMsMEJBQTBCLEVBQUU7WUFBRSxHQUFHbkMsa0JBQWtCb0MsK0JBQStCO1lBQUUsR0FBR2YsYUFBYTtRQUFDO1FBQ2xLZ0IsZ0JBQWdCakMsb0JBQW9Ca0MsZUFBZSxDQUFDQyxNQUFNLENBQUM1QixRQUFRMEIsa0JBQWtCcEI7UUFDckZ1QixXQUFXN0IsUUFBUTZCLGFBQ2YsQ0FBQyxHQUFHckMsdUJBQXVCNkIsVUFBVSxFQUFFO1lBQ25DLEdBQUc5QixtQkFBbUJ1Qyw4QkFBOEI7WUFDcERYLFNBQVMsVUFBWSxDQUFDLE1BQU1iLHVCQUFzQixFQUFHdUIsU0FBUyxJQUFJbEMsYUFBYW9DLGtCQUFrQjtRQUNyRyxHQUFHL0I7UUFDUGdDLFFBQVFoQyxRQUFRZ0MsVUFBVTFDLFlBQVkyQyxJQUFJLENBQUNDLElBQUksQ0FBQyxNQUFNO1FBQ3REQyxpQkFBaUJuQyxRQUFRbUMsbUJBQW1CMUMsb0JBQW9CMEMsZUFBZTtRQUMvRUMsc0JBQXNCcEMsUUFBUW9DLHdCQUF3QixDQUFDLEdBQUc1Qyx1QkFBdUI2QixVQUFVLEVBQUVoQyxrQkFBa0JnRCwwQ0FBMEMsRUFBRTNCO1FBQzNKNEIsaUJBQWlCdEMsUUFBUXNDLG1CQUFtQixDQUFDLEdBQUc5Qyx1QkFBdUI2QixVQUFVLEVBQUVoQyxrQkFBa0JrRCxxQ0FBcUMsRUFBRTdCO1FBQzVJOEIsZ0JBQWdCeEMsUUFBUXdDLGtCQUFrQixDQUFDLEdBQUdoRCx1QkFBdUI2QixVQUFVLEVBQUVqQyx1QkFBdUJxRCwwQkFBMEIsRUFBRS9CO0lBQ3hJO0FBQ0o7QUFDQTlCLHdCQUF3QixHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL2Nsb3Vkc2hpZnQvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY2xpZW50LXNzby9kaXN0LWNqcy9ydW50aW1lQ29uZmlnLmpzP2ViZjciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdldFJ1bnRpbWVDb25maWcgPSB2b2lkIDA7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgcGFja2FnZV9qc29uXzEgPSB0c2xpYl8xLl9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi4vcGFja2FnZS5qc29uXCIpKTtcbmNvbnN0IGNvcmVfMSA9IHJlcXVpcmUoXCJAYXdzLXNkay9jb3JlXCIpO1xuY29uc3QgdXRpbF91c2VyX2FnZW50X25vZGVfMSA9IHJlcXVpcmUoXCJAYXdzLXNkay91dGlsLXVzZXItYWdlbnQtbm9kZVwiKTtcbmNvbnN0IGNvbmZpZ19yZXNvbHZlcl8xID0gcmVxdWlyZShcIkBzbWl0aHkvY29uZmlnLXJlc29sdmVyXCIpO1xuY29uc3QgaGFzaF9ub2RlXzEgPSByZXF1aXJlKFwiQHNtaXRoeS9oYXNoLW5vZGVcIik7XG5jb25zdCBtaWRkbGV3YXJlX3JldHJ5XzEgPSByZXF1aXJlKFwiQHNtaXRoeS9taWRkbGV3YXJlLXJldHJ5XCIpO1xuY29uc3Qgbm9kZV9jb25maWdfcHJvdmlkZXJfMSA9IHJlcXVpcmUoXCJAc21pdGh5L25vZGUtY29uZmlnLXByb3ZpZGVyXCIpO1xuY29uc3Qgbm9kZV9odHRwX2hhbmRsZXJfMSA9IHJlcXVpcmUoXCJAc21pdGh5L25vZGUtaHR0cC1oYW5kbGVyXCIpO1xuY29uc3QgdXRpbF9ib2R5X2xlbmd0aF9ub2RlXzEgPSByZXF1aXJlKFwiQHNtaXRoeS91dGlsLWJvZHktbGVuZ3RoLW5vZGVcIik7XG5jb25zdCB1dGlsX3JldHJ5XzEgPSByZXF1aXJlKFwiQHNtaXRoeS91dGlsLXJldHJ5XCIpO1xuY29uc3QgcnVudGltZUNvbmZpZ19zaGFyZWRfMSA9IHJlcXVpcmUoXCIuL3J1bnRpbWVDb25maWcuc2hhcmVkXCIpO1xuY29uc3Qgc21pdGh5X2NsaWVudF8xID0gcmVxdWlyZShcIkBzbWl0aHkvc21pdGh5LWNsaWVudFwiKTtcbmNvbnN0IHV0aWxfZGVmYXVsdHNfbW9kZV9ub2RlXzEgPSByZXF1aXJlKFwiQHNtaXRoeS91dGlsLWRlZmF1bHRzLW1vZGUtbm9kZVwiKTtcbmNvbnN0IHNtaXRoeV9jbGllbnRfMiA9IHJlcXVpcmUoXCJAc21pdGh5L3NtaXRoeS1jbGllbnRcIik7XG5jb25zdCBnZXRSdW50aW1lQ29uZmlnID0gKGNvbmZpZykgPT4ge1xuICAgICgwLCBzbWl0aHlfY2xpZW50XzIuZW1pdFdhcm5pbmdJZlVuc3VwcG9ydGVkVmVyc2lvbikocHJvY2Vzcy52ZXJzaW9uKTtcbiAgICBjb25zdCBkZWZhdWx0c01vZGUgPSAoMCwgdXRpbF9kZWZhdWx0c19tb2RlX25vZGVfMS5yZXNvbHZlRGVmYXVsdHNNb2RlQ29uZmlnKShjb25maWcpO1xuICAgIGNvbnN0IGRlZmF1bHRDb25maWdQcm92aWRlciA9ICgpID0+IGRlZmF1bHRzTW9kZSgpLnRoZW4oc21pdGh5X2NsaWVudF8xLmxvYWRDb25maWdzRm9yRGVmYXVsdE1vZGUpO1xuICAgIGNvbnN0IGNsaWVudFNoYXJlZFZhbHVlcyA9ICgwLCBydW50aW1lQ29uZmlnX3NoYXJlZF8xLmdldFJ1bnRpbWVDb25maWcpKGNvbmZpZyk7XG4gICAgKDAsIGNvcmVfMS5lbWl0V2FybmluZ0lmVW5zdXBwb3J0ZWRWZXJzaW9uKShwcm9jZXNzLnZlcnNpb24pO1xuICAgIGNvbnN0IHByb2ZpbGVDb25maWcgPSB7IHByb2ZpbGU6IGNvbmZpZz8ucHJvZmlsZSB9O1xuICAgIHJldHVybiB7XG4gICAgICAgIC4uLmNsaWVudFNoYXJlZFZhbHVlcyxcbiAgICAgICAgLi4uY29uZmlnLFxuICAgICAgICBydW50aW1lOiBcIm5vZGVcIixcbiAgICAgICAgZGVmYXVsdHNNb2RlLFxuICAgICAgICBib2R5TGVuZ3RoQ2hlY2tlcjogY29uZmlnPy5ib2R5TGVuZ3RoQ2hlY2tlciA/PyB1dGlsX2JvZHlfbGVuZ3RoX25vZGVfMS5jYWxjdWxhdGVCb2R5TGVuZ3RoLFxuICAgICAgICBkZWZhdWx0VXNlckFnZW50UHJvdmlkZXI6IGNvbmZpZz8uZGVmYXVsdFVzZXJBZ2VudFByb3ZpZGVyID8/XG4gICAgICAgICAgICAoMCwgdXRpbF91c2VyX2FnZW50X25vZGVfMS5jcmVhdGVEZWZhdWx0VXNlckFnZW50UHJvdmlkZXIpKHsgc2VydmljZUlkOiBjbGllbnRTaGFyZWRWYWx1ZXMuc2VydmljZUlkLCBjbGllbnRWZXJzaW9uOiBwYWNrYWdlX2pzb25fMS5kZWZhdWx0LnZlcnNpb24gfSksXG4gICAgICAgIG1heEF0dGVtcHRzOiBjb25maWc/Lm1heEF0dGVtcHRzID8/ICgwLCBub2RlX2NvbmZpZ19wcm92aWRlcl8xLmxvYWRDb25maWcpKG1pZGRsZXdhcmVfcmV0cnlfMS5OT0RFX01BWF9BVFRFTVBUX0NPTkZJR19PUFRJT05TLCBjb25maWcpLFxuICAgICAgICByZWdpb246IGNvbmZpZz8ucmVnaW9uID8/XG4gICAgICAgICAgICAoMCwgbm9kZV9jb25maWdfcHJvdmlkZXJfMS5sb2FkQ29uZmlnKShjb25maWdfcmVzb2x2ZXJfMS5OT0RFX1JFR0lPTl9DT05GSUdfT1BUSU9OUywgeyAuLi5jb25maWdfcmVzb2x2ZXJfMS5OT0RFX1JFR0lPTl9DT05GSUdfRklMRV9PUFRJT05TLCAuLi5wcm9maWxlQ29uZmlnIH0pLFxuICAgICAgICByZXF1ZXN0SGFuZGxlcjogbm9kZV9odHRwX2hhbmRsZXJfMS5Ob2RlSHR0cEhhbmRsZXIuY3JlYXRlKGNvbmZpZz8ucmVxdWVzdEhhbmRsZXIgPz8gZGVmYXVsdENvbmZpZ1Byb3ZpZGVyKSxcbiAgICAgICAgcmV0cnlNb2RlOiBjb25maWc/LnJldHJ5TW9kZSA/P1xuICAgICAgICAgICAgKDAsIG5vZGVfY29uZmlnX3Byb3ZpZGVyXzEubG9hZENvbmZpZykoe1xuICAgICAgICAgICAgICAgIC4uLm1pZGRsZXdhcmVfcmV0cnlfMS5OT0RFX1JFVFJZX01PREVfQ09ORklHX09QVElPTlMsXG4gICAgICAgICAgICAgICAgZGVmYXVsdDogYXN5bmMgKCkgPT4gKGF3YWl0IGRlZmF1bHRDb25maWdQcm92aWRlcigpKS5yZXRyeU1vZGUgfHwgdXRpbF9yZXRyeV8xLkRFRkFVTFRfUkVUUllfTU9ERSxcbiAgICAgICAgICAgIH0sIGNvbmZpZyksXG4gICAgICAgIHNoYTI1NjogY29uZmlnPy5zaGEyNTYgPz8gaGFzaF9ub2RlXzEuSGFzaC5iaW5kKG51bGwsIFwic2hhMjU2XCIpLFxuICAgICAgICBzdHJlYW1Db2xsZWN0b3I6IGNvbmZpZz8uc3RyZWFtQ29sbGVjdG9yID8/IG5vZGVfaHR0cF9oYW5kbGVyXzEuc3RyZWFtQ29sbGVjdG9yLFxuICAgICAgICB1c2VEdWFsc3RhY2tFbmRwb2ludDogY29uZmlnPy51c2VEdWFsc3RhY2tFbmRwb2ludCA/PyAoMCwgbm9kZV9jb25maWdfcHJvdmlkZXJfMS5sb2FkQ29uZmlnKShjb25maWdfcmVzb2x2ZXJfMS5OT0RFX1VTRV9EVUFMU1RBQ0tfRU5EUE9JTlRfQ09ORklHX09QVElPTlMsIHByb2ZpbGVDb25maWcpLFxuICAgICAgICB1c2VGaXBzRW5kcG9pbnQ6IGNvbmZpZz8udXNlRmlwc0VuZHBvaW50ID8/ICgwLCBub2RlX2NvbmZpZ19wcm92aWRlcl8xLmxvYWRDb25maWcpKGNvbmZpZ19yZXNvbHZlcl8xLk5PREVfVVNFX0ZJUFNfRU5EUE9JTlRfQ09ORklHX09QVElPTlMsIHByb2ZpbGVDb25maWcpLFxuICAgICAgICB1c2VyQWdlbnRBcHBJZDogY29uZmlnPy51c2VyQWdlbnRBcHBJZCA/PyAoMCwgbm9kZV9jb25maWdfcHJvdmlkZXJfMS5sb2FkQ29uZmlnKSh1dGlsX3VzZXJfYWdlbnRfbm9kZV8xLk5PREVfQVBQX0lEX0NPTkZJR19PUFRJT05TLCBwcm9maWxlQ29uZmlnKSxcbiAgICB9O1xufTtcbmV4cG9ydHMuZ2V0UnVudGltZUNvbmZpZyA9IGdldFJ1bnRpbWVDb25maWc7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJnZXRSdW50aW1lQ29uZmlnIiwidHNsaWJfMSIsInJlcXVpcmUiLCJwYWNrYWdlX2pzb25fMSIsIl9faW1wb3J0RGVmYXVsdCIsImNvcmVfMSIsInV0aWxfdXNlcl9hZ2VudF9ub2RlXzEiLCJjb25maWdfcmVzb2x2ZXJfMSIsImhhc2hfbm9kZV8xIiwibWlkZGxld2FyZV9yZXRyeV8xIiwibm9kZV9jb25maWdfcHJvdmlkZXJfMSIsIm5vZGVfaHR0cF9oYW5kbGVyXzEiLCJ1dGlsX2JvZHlfbGVuZ3RoX25vZGVfMSIsInV0aWxfcmV0cnlfMSIsInJ1bnRpbWVDb25maWdfc2hhcmVkXzEiLCJzbWl0aHlfY2xpZW50XzEiLCJ1dGlsX2RlZmF1bHRzX21vZGVfbm9kZV8xIiwic21pdGh5X2NsaWVudF8yIiwiY29uZmlnIiwiZW1pdFdhcm5pbmdJZlVuc3VwcG9ydGVkVmVyc2lvbiIsInByb2Nlc3MiLCJ2ZXJzaW9uIiwiZGVmYXVsdHNNb2RlIiwicmVzb2x2ZURlZmF1bHRzTW9kZUNvbmZpZyIsImRlZmF1bHRDb25maWdQcm92aWRlciIsInRoZW4iLCJsb2FkQ29uZmlnc0ZvckRlZmF1bHRNb2RlIiwiY2xpZW50U2hhcmVkVmFsdWVzIiwicHJvZmlsZUNvbmZpZyIsInByb2ZpbGUiLCJydW50aW1lIiwiYm9keUxlbmd0aENoZWNrZXIiLCJjYWxjdWxhdGVCb2R5TGVuZ3RoIiwiZGVmYXVsdFVzZXJBZ2VudFByb3ZpZGVyIiwiY3JlYXRlRGVmYXVsdFVzZXJBZ2VudFByb3ZpZGVyIiwic2VydmljZUlkIiwiY2xpZW50VmVyc2lvbiIsImRlZmF1bHQiLCJtYXhBdHRlbXB0cyIsImxvYWRDb25maWciLCJOT0RFX01BWF9BVFRFTVBUX0NPTkZJR19PUFRJT05TIiwicmVnaW9uIiwiTk9ERV9SRUdJT05fQ09ORklHX09QVElPTlMiLCJOT0RFX1JFR0lPTl9DT05GSUdfRklMRV9PUFRJT05TIiwicmVxdWVzdEhhbmRsZXIiLCJOb2RlSHR0cEhhbmRsZXIiLCJjcmVhdGUiLCJyZXRyeU1vZGUiLCJOT0RFX1JFVFJZX01PREVfQ09ORklHX09QVElPTlMiLCJERUZBVUxUX1JFVFJZX01PREUiLCJzaGEyNTYiLCJIYXNoIiwiYmluZCIsInN0cmVhbUNvbGxlY3RvciIsInVzZUR1YWxzdGFja0VuZHBvaW50IiwiTk9ERV9VU0VfRFVBTFNUQUNLX0VORFBPSU5UX0NPTkZJR19PUFRJT05TIiwidXNlRmlwc0VuZHBvaW50IiwiTk9ERV9VU0VfRklQU19FTkRQT0lOVF9DT05GSUdfT1BUSU9OUyIsInVzZXJBZ2VudEFwcElkIiwiTk9ERV9BUFBfSURfQ09ORklHX09QVElPTlMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/client-sso/dist-cjs/runtimeConfig.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/client-sso/dist-cjs/runtimeConfig.shared.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-sso/dist-cjs/runtimeConfig.shared.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getRuntimeConfig = void 0;\nconst core_1 = __webpack_require__(/*! @aws-sdk/core */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/index.js\");\nconst core_2 = __webpack_require__(/*! @smithy/core */ \"(rsc)/./node_modules/@smithy/core/dist-es/index.js\");\nconst smithy_client_1 = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/./node_modules/@smithy/smithy-client/dist-cjs/index.js\");\nconst url_parser_1 = __webpack_require__(/*! @smithy/url-parser */ \"(rsc)/./node_modules/@smithy/url-parser/dist-cjs/index.js\");\nconst util_base64_1 = __webpack_require__(/*! @smithy/util-base64 */ \"(rsc)/./node_modules/@smithy/util-base64/dist-cjs/index.js\");\nconst util_utf8_1 = __webpack_require__(/*! @smithy/util-utf8 */ \"(rsc)/./node_modules/@smithy/util-utf8/dist-cjs/index.js\");\nconst httpAuthSchemeProvider_1 = __webpack_require__(/*! ./auth/httpAuthSchemeProvider */ \"(rsc)/./node_modules/@aws-sdk/client-sso/dist-cjs/auth/httpAuthSchemeProvider.js\");\nconst endpointResolver_1 = __webpack_require__(/*! ./endpoint/endpointResolver */ \"(rsc)/./node_modules/@aws-sdk/client-sso/dist-cjs/endpoint/endpointResolver.js\");\nconst getRuntimeConfig = (config)=>{\n    return {\n        apiVersion: \"2019-06-10\",\n        base64Decoder: config?.base64Decoder ?? util_base64_1.fromBase64,\n        base64Encoder: config?.base64Encoder ?? util_base64_1.toBase64,\n        disableHostPrefix: config?.disableHostPrefix ?? false,\n        endpointProvider: config?.endpointProvider ?? endpointResolver_1.defaultEndpointResolver,\n        extensions: config?.extensions ?? [],\n        httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? httpAuthSchemeProvider_1.defaultSSOHttpAuthSchemeProvider,\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc)=>ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n                signer: new core_1.AwsSdkSigV4Signer()\n            },\n            {\n                schemeId: \"smithy.api#noAuth\",\n                identityProvider: (ipc)=>ipc.getIdentityProvider(\"smithy.api#noAuth\") || (async ()=>({})),\n                signer: new core_2.NoAuthSigner()\n            }\n        ],\n        logger: config?.logger ?? new smithy_client_1.NoOpLogger(),\n        serviceId: config?.serviceId ?? \"SSO\",\n        urlParser: config?.urlParser ?? url_parser_1.parseUrl,\n        utf8Decoder: config?.utf8Decoder ?? util_utf8_1.fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? util_utf8_1.toUtf8\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY2xpZW50LXNzby9kaXN0LWNqcy9ydW50aW1lQ29uZmlnLnNoYXJlZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsd0JBQXdCLEdBQUcsS0FBSztBQUNoQyxNQUFNRyxTQUFTQyxtQkFBT0EsQ0FBQywwRUFBZTtBQUN0QyxNQUFNQyxTQUFTRCxtQkFBT0EsQ0FBQyx3RUFBYztBQUNyQyxNQUFNRSxrQkFBa0JGLG1CQUFPQSxDQUFDLDJGQUF1QjtBQUN2RCxNQUFNRyxlQUFlSCxtQkFBT0EsQ0FBQyxxRkFBb0I7QUFDakQsTUFBTUksZ0JBQWdCSixtQkFBT0EsQ0FBQyx1RkFBcUI7QUFDbkQsTUFBTUssY0FBY0wsbUJBQU9BLENBQUMsbUZBQW1CO0FBQy9DLE1BQU1NLDJCQUEyQk4sbUJBQU9BLENBQUMsdUhBQStCO0FBQ3hFLE1BQU1PLHFCQUFxQlAsbUJBQU9BLENBQUMsbUhBQTZCO0FBQ2hFLE1BQU1GLG1CQUFtQixDQUFDVTtJQUN0QixPQUFPO1FBQ0hDLFlBQVk7UUFDWkMsZUFBZUYsUUFBUUUsaUJBQWlCTixjQUFjTyxVQUFVO1FBQ2hFQyxlQUFlSixRQUFRSSxpQkFBaUJSLGNBQWNTLFFBQVE7UUFDOURDLG1CQUFtQk4sUUFBUU0scUJBQXFCO1FBQ2hEQyxrQkFBa0JQLFFBQVFPLG9CQUFvQlIsbUJBQW1CUyx1QkFBdUI7UUFDeEZDLFlBQVlULFFBQVFTLGNBQWMsRUFBRTtRQUNwQ0Msd0JBQXdCVixRQUFRVSwwQkFBMEJaLHlCQUF5QmEsZ0NBQWdDO1FBQ25IQyxpQkFBaUJaLFFBQVFZLG1CQUFtQjtZQUN4QztnQkFDSUMsVUFBVTtnQkFDVkMsa0JBQWtCLENBQUNDLE1BQVFBLElBQUlDLG1CQUFtQixDQUFDO2dCQUNuREMsUUFBUSxJQUFJMUIsT0FBTzJCLGlCQUFpQjtZQUN4QztZQUNBO2dCQUNJTCxVQUFVO2dCQUNWQyxrQkFBa0IsQ0FBQ0MsTUFBUUEsSUFBSUMsbUJBQW1CLENBQUMsd0JBQXlCLFdBQWEsRUFBQyxFQUFDO2dCQUMzRkMsUUFBUSxJQUFJeEIsT0FBTzBCLFlBQVk7WUFDbkM7U0FDSDtRQUNEQyxRQUFRcEIsUUFBUW9CLFVBQVUsSUFBSTFCLGdCQUFnQjJCLFVBQVU7UUFDeERDLFdBQVd0QixRQUFRc0IsYUFBYTtRQUNoQ0MsV0FBV3ZCLFFBQVF1QixhQUFhNUIsYUFBYTZCLFFBQVE7UUFDckRDLGFBQWF6QixRQUFReUIsZUFBZTVCLFlBQVk2QixRQUFRO1FBQ3hEQyxhQUFhM0IsUUFBUTJCLGVBQWU5QixZQUFZK0IsTUFBTTtJQUMxRDtBQUNKO0FBQ0F4Qyx3QkFBd0IsR0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbG91ZHNoaWZ0Ly4vbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL2NsaWVudC1zc28vZGlzdC1janMvcnVudGltZUNvbmZpZy5zaGFyZWQuanM/MmRhZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0UnVudGltZUNvbmZpZyA9IHZvaWQgMDtcbmNvbnN0IGNvcmVfMSA9IHJlcXVpcmUoXCJAYXdzLXNkay9jb3JlXCIpO1xuY29uc3QgY29yZV8yID0gcmVxdWlyZShcIkBzbWl0aHkvY29yZVwiKTtcbmNvbnN0IHNtaXRoeV9jbGllbnRfMSA9IHJlcXVpcmUoXCJAc21pdGh5L3NtaXRoeS1jbGllbnRcIik7XG5jb25zdCB1cmxfcGFyc2VyXzEgPSByZXF1aXJlKFwiQHNtaXRoeS91cmwtcGFyc2VyXCIpO1xuY29uc3QgdXRpbF9iYXNlNjRfMSA9IHJlcXVpcmUoXCJAc21pdGh5L3V0aWwtYmFzZTY0XCIpO1xuY29uc3QgdXRpbF91dGY4XzEgPSByZXF1aXJlKFwiQHNtaXRoeS91dGlsLXV0ZjhcIik7XG5jb25zdCBodHRwQXV0aFNjaGVtZVByb3ZpZGVyXzEgPSByZXF1aXJlKFwiLi9hdXRoL2h0dHBBdXRoU2NoZW1lUHJvdmlkZXJcIik7XG5jb25zdCBlbmRwb2ludFJlc29sdmVyXzEgPSByZXF1aXJlKFwiLi9lbmRwb2ludC9lbmRwb2ludFJlc29sdmVyXCIpO1xuY29uc3QgZ2V0UnVudGltZUNvbmZpZyA9IChjb25maWcpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICBhcGlWZXJzaW9uOiBcIjIwMTktMDYtMTBcIixcbiAgICAgICAgYmFzZTY0RGVjb2RlcjogY29uZmlnPy5iYXNlNjREZWNvZGVyID8/IHV0aWxfYmFzZTY0XzEuZnJvbUJhc2U2NCxcbiAgICAgICAgYmFzZTY0RW5jb2RlcjogY29uZmlnPy5iYXNlNjRFbmNvZGVyID8/IHV0aWxfYmFzZTY0XzEudG9CYXNlNjQsXG4gICAgICAgIGRpc2FibGVIb3N0UHJlZml4OiBjb25maWc/LmRpc2FibGVIb3N0UHJlZml4ID8/IGZhbHNlLFxuICAgICAgICBlbmRwb2ludFByb3ZpZGVyOiBjb25maWc/LmVuZHBvaW50UHJvdmlkZXIgPz8gZW5kcG9pbnRSZXNvbHZlcl8xLmRlZmF1bHRFbmRwb2ludFJlc29sdmVyLFxuICAgICAgICBleHRlbnNpb25zOiBjb25maWc/LmV4dGVuc2lvbnMgPz8gW10sXG4gICAgICAgIGh0dHBBdXRoU2NoZW1lUHJvdmlkZXI6IGNvbmZpZz8uaHR0cEF1dGhTY2hlbWVQcm92aWRlciA/PyBodHRwQXV0aFNjaGVtZVByb3ZpZGVyXzEuZGVmYXVsdFNTT0h0dHBBdXRoU2NoZW1lUHJvdmlkZXIsXG4gICAgICAgIGh0dHBBdXRoU2NoZW1lczogY29uZmlnPy5odHRwQXV0aFNjaGVtZXMgPz8gW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNjaGVtZUlkOiBcImF3cy5hdXRoI3NpZ3Y0XCIsXG4gICAgICAgICAgICAgICAgaWRlbnRpdHlQcm92aWRlcjogKGlwYykgPT4gaXBjLmdldElkZW50aXR5UHJvdmlkZXIoXCJhd3MuYXV0aCNzaWd2NFwiKSxcbiAgICAgICAgICAgICAgICBzaWduZXI6IG5ldyBjb3JlXzEuQXdzU2RrU2lnVjRTaWduZXIoKSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2NoZW1lSWQ6IFwic21pdGh5LmFwaSNub0F1dGhcIixcbiAgICAgICAgICAgICAgICBpZGVudGl0eVByb3ZpZGVyOiAoaXBjKSA9PiBpcGMuZ2V0SWRlbnRpdHlQcm92aWRlcihcInNtaXRoeS5hcGkjbm9BdXRoXCIpIHx8IChhc3luYyAoKSA9PiAoe30pKSxcbiAgICAgICAgICAgICAgICBzaWduZXI6IG5ldyBjb3JlXzIuTm9BdXRoU2lnbmVyKCksXG4gICAgICAgICAgICB9LFxuICAgICAgICBdLFxuICAgICAgICBsb2dnZXI6IGNvbmZpZz8ubG9nZ2VyID8/IG5ldyBzbWl0aHlfY2xpZW50XzEuTm9PcExvZ2dlcigpLFxuICAgICAgICBzZXJ2aWNlSWQ6IGNvbmZpZz8uc2VydmljZUlkID8/IFwiU1NPXCIsXG4gICAgICAgIHVybFBhcnNlcjogY29uZmlnPy51cmxQYXJzZXIgPz8gdXJsX3BhcnNlcl8xLnBhcnNlVXJsLFxuICAgICAgICB1dGY4RGVjb2RlcjogY29uZmlnPy51dGY4RGVjb2RlciA/PyB1dGlsX3V0ZjhfMS5mcm9tVXRmOCxcbiAgICAgICAgdXRmOEVuY29kZXI6IGNvbmZpZz8udXRmOEVuY29kZXIgPz8gdXRpbF91dGY4XzEudG9VdGY4LFxuICAgIH07XG59O1xuZXhwb3J0cy5nZXRSdW50aW1lQ29uZmlnID0gZ2V0UnVudGltZUNvbmZpZztcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImdldFJ1bnRpbWVDb25maWciLCJjb3JlXzEiLCJyZXF1aXJlIiwiY29yZV8yIiwic21pdGh5X2NsaWVudF8xIiwidXJsX3BhcnNlcl8xIiwidXRpbF9iYXNlNjRfMSIsInV0aWxfdXRmOF8xIiwiaHR0cEF1dGhTY2hlbWVQcm92aWRlcl8xIiwiZW5kcG9pbnRSZXNvbHZlcl8xIiwiY29uZmlnIiwiYXBpVmVyc2lvbiIsImJhc2U2NERlY29kZXIiLCJmcm9tQmFzZTY0IiwiYmFzZTY0RW5jb2RlciIsInRvQmFzZTY0IiwiZGlzYWJsZUhvc3RQcmVmaXgiLCJlbmRwb2ludFByb3ZpZGVyIiwiZGVmYXVsdEVuZHBvaW50UmVzb2x2ZXIiLCJleHRlbnNpb25zIiwiaHR0cEF1dGhTY2hlbWVQcm92aWRlciIsImRlZmF1bHRTU09IdHRwQXV0aFNjaGVtZVByb3ZpZGVyIiwiaHR0cEF1dGhTY2hlbWVzIiwic2NoZW1lSWQiLCJpZGVudGl0eVByb3ZpZGVyIiwiaXBjIiwiZ2V0SWRlbnRpdHlQcm92aWRlciIsInNpZ25lciIsIkF3c1Nka1NpZ1Y0U2lnbmVyIiwiTm9BdXRoU2lnbmVyIiwibG9nZ2VyIiwiTm9PcExvZ2dlciIsInNlcnZpY2VJZCIsInVybFBhcnNlciIsInBhcnNlVXJsIiwidXRmOERlY29kZXIiLCJmcm9tVXRmOCIsInV0ZjhFbmNvZGVyIiwidG9VdGY4Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/client-sso/dist-cjs/runtimeConfig.shared.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/core/dist-es/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/@aws-sdk/core/dist-es/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AWSSDKSigV4Signer: () => (/* reexport safe */ _submodules_httpAuthSchemes_index__WEBPACK_IMPORTED_MODULE_1__.AWSSDKSigV4Signer),\n/* harmony export */   AwsSdkSigV4ASigner: () => (/* reexport safe */ _submodules_httpAuthSchemes_index__WEBPACK_IMPORTED_MODULE_1__.AwsSdkSigV4ASigner),\n/* harmony export */   AwsSdkSigV4Signer: () => (/* reexport safe */ _submodules_httpAuthSchemes_index__WEBPACK_IMPORTED_MODULE_1__.AwsSdkSigV4Signer),\n/* harmony export */   NODE_SIGV4A_CONFIG_OPTIONS: () => (/* reexport safe */ _submodules_httpAuthSchemes_index__WEBPACK_IMPORTED_MODULE_1__.NODE_SIGV4A_CONFIG_OPTIONS),\n/* harmony export */   _toBool: () => (/* reexport safe */ _submodules_protocols_index__WEBPACK_IMPORTED_MODULE_2__._toBool),\n/* harmony export */   _toNum: () => (/* reexport safe */ _submodules_protocols_index__WEBPACK_IMPORTED_MODULE_2__._toNum),\n/* harmony export */   _toStr: () => (/* reexport safe */ _submodules_protocols_index__WEBPACK_IMPORTED_MODULE_2__._toStr),\n/* harmony export */   awsExpectUnion: () => (/* reexport safe */ _submodules_protocols_index__WEBPACK_IMPORTED_MODULE_2__.awsExpectUnion),\n/* harmony export */   emitWarningIfUnsupportedVersion: () => (/* reexport safe */ _submodules_client_index__WEBPACK_IMPORTED_MODULE_0__.emitWarningIfUnsupportedVersion),\n/* harmony export */   loadRestJsonErrorCode: () => (/* reexport safe */ _submodules_protocols_index__WEBPACK_IMPORTED_MODULE_2__.loadRestJsonErrorCode),\n/* harmony export */   loadRestXmlErrorCode: () => (/* reexport safe */ _submodules_protocols_index__WEBPACK_IMPORTED_MODULE_2__.loadRestXmlErrorCode),\n/* harmony export */   parseJsonBody: () => (/* reexport safe */ _submodules_protocols_index__WEBPACK_IMPORTED_MODULE_2__.parseJsonBody),\n/* harmony export */   parseJsonErrorBody: () => (/* reexport safe */ _submodules_protocols_index__WEBPACK_IMPORTED_MODULE_2__.parseJsonErrorBody),\n/* harmony export */   parseXmlBody: () => (/* reexport safe */ _submodules_protocols_index__WEBPACK_IMPORTED_MODULE_2__.parseXmlBody),\n/* harmony export */   parseXmlErrorBody: () => (/* reexport safe */ _submodules_protocols_index__WEBPACK_IMPORTED_MODULE_2__.parseXmlErrorBody),\n/* harmony export */   resolveAWSSDKSigV4Config: () => (/* reexport safe */ _submodules_httpAuthSchemes_index__WEBPACK_IMPORTED_MODULE_1__.resolveAWSSDKSigV4Config),\n/* harmony export */   resolveAwsSdkSigV4AConfig: () => (/* reexport safe */ _submodules_httpAuthSchemes_index__WEBPACK_IMPORTED_MODULE_1__.resolveAwsSdkSigV4AConfig),\n/* harmony export */   resolveAwsSdkSigV4Config: () => (/* reexport safe */ _submodules_httpAuthSchemes_index__WEBPACK_IMPORTED_MODULE_1__.resolveAwsSdkSigV4Config),\n/* harmony export */   setCredentialFeature: () => (/* reexport safe */ _submodules_client_index__WEBPACK_IMPORTED_MODULE_0__.setCredentialFeature),\n/* harmony export */   setFeature: () => (/* reexport safe */ _submodules_client_index__WEBPACK_IMPORTED_MODULE_0__.setFeature),\n/* harmony export */   state: () => (/* reexport safe */ _submodules_client_index__WEBPACK_IMPORTED_MODULE_0__.state),\n/* harmony export */   validateSigningProperties: () => (/* reexport safe */ _submodules_httpAuthSchemes_index__WEBPACK_IMPORTED_MODULE_1__.validateSigningProperties)\n/* harmony export */ });\n/* harmony import */ var _submodules_client_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./submodules/client/index */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/client/index.js\");\n/* harmony import */ var _submodules_httpAuthSchemes_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./submodules/httpAuthSchemes/index */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/index.js\");\n/* harmony import */ var _submodules_protocols_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./submodules/protocols/index */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/protocols/index.js\");\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY29yZS9kaXN0LWVzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBMEM7QUFDUztBQUNOIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xvdWRzaGlmdC8uL25vZGVfbW9kdWxlcy9AYXdzLXNkay9jb3JlL2Rpc3QtZXMvaW5kZXguanM/YTVhOSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9zdWJtb2R1bGVzL2NsaWVudC9pbmRleFwiO1xuZXhwb3J0ICogZnJvbSBcIi4vc3VibW9kdWxlcy9odHRwQXV0aFNjaGVtZXMvaW5kZXhcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3N1Ym1vZHVsZXMvcHJvdG9jb2xzL2luZGV4XCI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/core/dist-es/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/client/emitWarningIfUnsupportedVersion.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/core/dist-es/submodules/client/emitWarningIfUnsupportedVersion.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   emitWarningIfUnsupportedVersion: () => (/* binding */ emitWarningIfUnsupportedVersion),\n/* harmony export */   state: () => (/* binding */ state)\n/* harmony export */ });\nconst state = {\n    warningEmitted: false\n};\nconst emitWarningIfUnsupportedVersion = (version)=>{\n    if (version && !state.warningEmitted && parseInt(version.substring(1, version.indexOf(\".\"))) < 18) {\n        state.warningEmitted = true;\n        process.emitWarning(`NodeDeprecationWarning: The AWS SDK for JavaScript (v3) will\nno longer support Node.js 16.x on January 6, 2025.\n\nTo continue receiving updates to AWS services, bug fixes, and security\nupdates please upgrade to a supported Node.js LTS version.\n\nMore information can be found at: https://a.co/74kJMmI`);\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY29yZS9kaXN0LWVzL3N1Ym1vZHVsZXMvY2xpZW50L2VtaXRXYXJuaW5nSWZVbnN1cHBvcnRlZFZlcnNpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxNQUFNQSxRQUFRO0lBQ2pCQyxnQkFBZ0I7QUFDcEIsRUFBRTtBQUNLLE1BQU1DLGtDQUFrQyxDQUFDQztJQUM1QyxJQUFJQSxXQUFXLENBQUNILE1BQU1DLGNBQWMsSUFBSUcsU0FBU0QsUUFBUUUsU0FBUyxDQUFDLEdBQUdGLFFBQVFHLE9BQU8sQ0FBQyxTQUFTLElBQUk7UUFDL0ZOLE1BQU1DLGNBQWMsR0FBRztRQUN2Qk0sUUFBUUMsV0FBVyxDQUFDLENBQUM7Ozs7OztzREFNeUIsQ0FBQztJQUNuRDtBQUNKLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbG91ZHNoaWZ0Ly4vbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL2NvcmUvZGlzdC1lcy9zdWJtb2R1bGVzL2NsaWVudC9lbWl0V2FybmluZ0lmVW5zdXBwb3J0ZWRWZXJzaW9uLmpzP2IwMGIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHN0YXRlID0ge1xuICAgIHdhcm5pbmdFbWl0dGVkOiBmYWxzZSxcbn07XG5leHBvcnQgY29uc3QgZW1pdFdhcm5pbmdJZlVuc3VwcG9ydGVkVmVyc2lvbiA9ICh2ZXJzaW9uKSA9PiB7XG4gICAgaWYgKHZlcnNpb24gJiYgIXN0YXRlLndhcm5pbmdFbWl0dGVkICYmIHBhcnNlSW50KHZlcnNpb24uc3Vic3RyaW5nKDEsIHZlcnNpb24uaW5kZXhPZihcIi5cIikpKSA8IDE4KSB7XG4gICAgICAgIHN0YXRlLndhcm5pbmdFbWl0dGVkID0gdHJ1ZTtcbiAgICAgICAgcHJvY2Vzcy5lbWl0V2FybmluZyhgTm9kZURlcHJlY2F0aW9uV2FybmluZzogVGhlIEFXUyBTREsgZm9yIEphdmFTY3JpcHQgKHYzKSB3aWxsXG5ubyBsb25nZXIgc3VwcG9ydCBOb2RlLmpzIDE2Lnggb24gSmFudWFyeSA2LCAyMDI1LlxuXG5UbyBjb250aW51ZSByZWNlaXZpbmcgdXBkYXRlcyB0byBBV1Mgc2VydmljZXMsIGJ1ZyBmaXhlcywgYW5kIHNlY3VyaXR5XG51cGRhdGVzIHBsZWFzZSB1cGdyYWRlIHRvIGEgc3VwcG9ydGVkIE5vZGUuanMgTFRTIHZlcnNpb24uXG5cbk1vcmUgaW5mb3JtYXRpb24gY2FuIGJlIGZvdW5kIGF0OiBodHRwczovL2EuY28vNzRrSk1tSWApO1xuICAgIH1cbn07XG4iXSwibmFtZXMiOlsic3RhdGUiLCJ3YXJuaW5nRW1pdHRlZCIsImVtaXRXYXJuaW5nSWZVbnN1cHBvcnRlZFZlcnNpb24iLCJ2ZXJzaW9uIiwicGFyc2VJbnQiLCJzdWJzdHJpbmciLCJpbmRleE9mIiwicHJvY2VzcyIsImVtaXRXYXJuaW5nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/client/emitWarningIfUnsupportedVersion.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/client/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@aws-sdk/core/dist-es/submodules/client/index.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   emitWarningIfUnsupportedVersion: () => (/* reexport safe */ _emitWarningIfUnsupportedVersion__WEBPACK_IMPORTED_MODULE_0__.emitWarningIfUnsupportedVersion),\n/* harmony export */   setCredentialFeature: () => (/* reexport safe */ _setCredentialFeature__WEBPACK_IMPORTED_MODULE_1__.setCredentialFeature),\n/* harmony export */   setFeature: () => (/* reexport safe */ _setFeature__WEBPACK_IMPORTED_MODULE_2__.setFeature),\n/* harmony export */   state: () => (/* reexport safe */ _emitWarningIfUnsupportedVersion__WEBPACK_IMPORTED_MODULE_0__.state)\n/* harmony export */ });\n/* harmony import */ var _emitWarningIfUnsupportedVersion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./emitWarningIfUnsupportedVersion */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/client/emitWarningIfUnsupportedVersion.js\");\n/* harmony import */ var _setCredentialFeature__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./setCredentialFeature */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/client/setCredentialFeature.js\");\n/* harmony import */ var _setFeature__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./setFeature */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/client/setFeature.js\");\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY29yZS9kaXN0LWVzL3N1Ym1vZHVsZXMvY2xpZW50L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBa0Q7QUFDWDtBQUNWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xvdWRzaGlmdC8uL25vZGVfbW9kdWxlcy9AYXdzLXNkay9jb3JlL2Rpc3QtZXMvc3VibW9kdWxlcy9jbGllbnQvaW5kZXguanM/YWJmMSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9lbWl0V2FybmluZ0lmVW5zdXBwb3J0ZWRWZXJzaW9uXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9zZXRDcmVkZW50aWFsRmVhdHVyZVwiO1xuZXhwb3J0ICogZnJvbSBcIi4vc2V0RmVhdHVyZVwiO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/client/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/client/setCredentialFeature.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/core/dist-es/submodules/client/setCredentialFeature.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setCredentialFeature: () => (/* binding */ setCredentialFeature)\n/* harmony export */ });\nfunction setCredentialFeature(credentials, feature, value) {\n    if (!credentials.$source) {\n        credentials.$source = {};\n    }\n    credentials.$source[feature] = value;\n    return credentials;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY29yZS9kaXN0LWVzL3N1Ym1vZHVsZXMvY2xpZW50L3NldENyZWRlbnRpYWxGZWF0dXJlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxTQUFTQSxxQkFBcUJDLFdBQVcsRUFBRUMsT0FBTyxFQUFFQyxLQUFLO0lBQzVELElBQUksQ0FBQ0YsWUFBWUcsT0FBTyxFQUFFO1FBQ3RCSCxZQUFZRyxPQUFPLEdBQUcsQ0FBQztJQUMzQjtJQUNBSCxZQUFZRyxPQUFPLENBQUNGLFFBQVEsR0FBR0M7SUFDL0IsT0FBT0Y7QUFDWCIsInNvdXJjZXMiOlsid2VicGFjazovL2Nsb3Vkc2hpZnQvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY29yZS9kaXN0LWVzL3N1Ym1vZHVsZXMvY2xpZW50L3NldENyZWRlbnRpYWxGZWF0dXJlLmpzP2U4NjIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIHNldENyZWRlbnRpYWxGZWF0dXJlKGNyZWRlbnRpYWxzLCBmZWF0dXJlLCB2YWx1ZSkge1xuICAgIGlmICghY3JlZGVudGlhbHMuJHNvdXJjZSkge1xuICAgICAgICBjcmVkZW50aWFscy4kc291cmNlID0ge307XG4gICAgfVxuICAgIGNyZWRlbnRpYWxzLiRzb3VyY2VbZmVhdHVyZV0gPSB2YWx1ZTtcbiAgICByZXR1cm4gY3JlZGVudGlhbHM7XG59XG4iXSwibmFtZXMiOlsic2V0Q3JlZGVudGlhbEZlYXR1cmUiLCJjcmVkZW50aWFscyIsImZlYXR1cmUiLCJ2YWx1ZSIsIiRzb3VyY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/client/setCredentialFeature.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/client/setFeature.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@aws-sdk/core/dist-es/submodules/client/setFeature.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setFeature: () => (/* binding */ setFeature)\n/* harmony export */ });\nfunction setFeature(context, feature, value) {\n    if (!context.__aws_sdk_context) {\n        context.__aws_sdk_context = {\n            features: {}\n        };\n    } else if (!context.__aws_sdk_context.features) {\n        context.__aws_sdk_context.features = {};\n    }\n    context.__aws_sdk_context.features[feature] = value;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY29yZS9kaXN0LWVzL3N1Ym1vZHVsZXMvY2xpZW50L3NldEZlYXR1cmUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLFNBQVNBLFdBQVdDLE9BQU8sRUFBRUMsT0FBTyxFQUFFQyxLQUFLO0lBQzlDLElBQUksQ0FBQ0YsUUFBUUcsaUJBQWlCLEVBQUU7UUFDNUJILFFBQVFHLGlCQUFpQixHQUFHO1lBQ3hCQyxVQUFVLENBQUM7UUFDZjtJQUNKLE9BQ0ssSUFBSSxDQUFDSixRQUFRRyxpQkFBaUIsQ0FBQ0MsUUFBUSxFQUFFO1FBQzFDSixRQUFRRyxpQkFBaUIsQ0FBQ0MsUUFBUSxHQUFHLENBQUM7SUFDMUM7SUFDQUosUUFBUUcsaUJBQWlCLENBQUNDLFFBQVEsQ0FBQ0gsUUFBUSxHQUFHQztBQUNsRCIsInNvdXJjZXMiOlsid2VicGFjazovL2Nsb3Vkc2hpZnQvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY29yZS9kaXN0LWVzL3N1Ym1vZHVsZXMvY2xpZW50L3NldEZlYXR1cmUuanM/YTBmMSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gc2V0RmVhdHVyZShjb250ZXh0LCBmZWF0dXJlLCB2YWx1ZSkge1xuICAgIGlmICghY29udGV4dC5fX2F3c19zZGtfY29udGV4dCkge1xuICAgICAgICBjb250ZXh0Ll9fYXdzX3Nka19jb250ZXh0ID0ge1xuICAgICAgICAgICAgZmVhdHVyZXM6IHt9LFxuICAgICAgICB9O1xuICAgIH1cbiAgICBlbHNlIGlmICghY29udGV4dC5fX2F3c19zZGtfY29udGV4dC5mZWF0dXJlcykge1xuICAgICAgICBjb250ZXh0Ll9fYXdzX3Nka19jb250ZXh0LmZlYXR1cmVzID0ge307XG4gICAgfVxuICAgIGNvbnRleHQuX19hd3Nfc2RrX2NvbnRleHQuZmVhdHVyZXNbZmVhdHVyZV0gPSB2YWx1ZTtcbn1cbiJdLCJuYW1lcyI6WyJzZXRGZWF0dXJlIiwiY29udGV4dCIsImZlYXR1cmUiLCJ2YWx1ZSIsIl9fYXdzX3Nka19jb250ZXh0IiwiZmVhdHVyZXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/client/setFeature.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/AwsSdkSigV4ASigner.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/AwsSdkSigV4ASigner.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AwsSdkSigV4ASigner: () => (/* binding */ AwsSdkSigV4ASigner)\n/* harmony export */ });\n/* harmony import */ var _smithy_protocol_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @smithy/protocol-http */ \"(rsc)/./node_modules/@smithy/protocol-http/dist-cjs/index.js\");\n/* harmony import */ var _smithy_protocol_http__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_smithy_protocol_http__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getSkewCorrectedDate.js\");\n/* harmony import */ var _AwsSdkSigV4Signer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AwsSdkSigV4Signer */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/AwsSdkSigV4Signer.js\");\n\n\n\nclass AwsSdkSigV4ASigner extends _AwsSdkSigV4Signer__WEBPACK_IMPORTED_MODULE_1__.AwsSdkSigV4Signer {\n    async sign(httpRequest, identity, signingProperties) {\n        if (!_smithy_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest.isInstance(httpRequest)) {\n            throw new Error(\"The request is not an instance of `HttpRequest` and cannot be signed\");\n        }\n        const { config, signer, signingRegion, signingRegionSet, signingName } = await (0,_AwsSdkSigV4Signer__WEBPACK_IMPORTED_MODULE_1__.validateSigningProperties)(signingProperties);\n        const configResolvedSigningRegionSet = await config.sigv4aSigningRegionSet?.();\n        const multiRegionOverride = (configResolvedSigningRegionSet ?? signingRegionSet ?? [\n            signingRegion\n        ]).join(\",\");\n        const signedRequest = await signer.sign(httpRequest, {\n            signingDate: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.getSkewCorrectedDate)(config.systemClockOffset),\n            signingRegion: multiRegionOverride,\n            signingService: signingName\n        });\n        return signedRequest;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY29yZS9kaXN0LWVzL3N1Ym1vZHVsZXMvaHR0cEF1dGhTY2hlbWVzL2F3c19zZGsvQXdzU2RrU2lnVjRBU2lnbmVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQW9EO0FBQ0o7QUFDbUM7QUFDNUUsTUFBTUksMkJBQTJCRixpRUFBaUJBO0lBQ3JELE1BQU1HLEtBQUtDLFdBQVcsRUFBRUMsUUFBUSxFQUFFQyxpQkFBaUIsRUFBRTtRQUNqRCxJQUFJLENBQUNSLDhEQUFXQSxDQUFDUyxVQUFVLENBQUNILGNBQWM7WUFDdEMsTUFBTSxJQUFJSSxNQUFNO1FBQ3BCO1FBQ0EsTUFBTSxFQUFFQyxNQUFNLEVBQUVDLE1BQU0sRUFBRUMsYUFBYSxFQUFFQyxnQkFBZ0IsRUFBRUMsV0FBVyxFQUFFLEdBQUcsTUFBTVosNkVBQXlCQSxDQUFDSztRQUN6RyxNQUFNUSxpQ0FBaUMsTUFBTUwsT0FBT00sc0JBQXNCO1FBQzFFLE1BQU1DLHNCQUFzQixDQUFDRixrQ0FDekJGLG9CQUFvQjtZQUFDRDtTQUFjLEVBQUVNLElBQUksQ0FBQztRQUM5QyxNQUFNQyxnQkFBZ0IsTUFBTVIsT0FBT1AsSUFBSSxDQUFDQyxhQUFhO1lBQ2pEZSxhQUFhcEIsNERBQW9CQSxDQUFDVSxPQUFPVyxpQkFBaUI7WUFDMURULGVBQWVLO1lBQ2ZLLGdCQUFnQlI7UUFDcEI7UUFDQSxPQUFPSztJQUNYO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbG91ZHNoaWZ0Ly4vbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL2NvcmUvZGlzdC1lcy9zdWJtb2R1bGVzL2h0dHBBdXRoU2NoZW1lcy9hd3Nfc2RrL0F3c1Nka1NpZ1Y0QVNpZ25lci5qcz80ZTEwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEh0dHBSZXF1ZXN0IH0gZnJvbSBcIkBzbWl0aHkvcHJvdG9jb2wtaHR0cFwiO1xuaW1wb3J0IHsgZ2V0U2tld0NvcnJlY3RlZERhdGUgfSBmcm9tIFwiLi4vdXRpbHNcIjtcbmltcG9ydCB7IEF3c1Nka1NpZ1Y0U2lnbmVyLCB2YWxpZGF0ZVNpZ25pbmdQcm9wZXJ0aWVzIH0gZnJvbSBcIi4vQXdzU2RrU2lnVjRTaWduZXJcIjtcbmV4cG9ydCBjbGFzcyBBd3NTZGtTaWdWNEFTaWduZXIgZXh0ZW5kcyBBd3NTZGtTaWdWNFNpZ25lciB7XG4gICAgYXN5bmMgc2lnbihodHRwUmVxdWVzdCwgaWRlbnRpdHksIHNpZ25pbmdQcm9wZXJ0aWVzKSB7XG4gICAgICAgIGlmICghSHR0cFJlcXVlc3QuaXNJbnN0YW5jZShodHRwUmVxdWVzdCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlRoZSByZXF1ZXN0IGlzIG5vdCBhbiBpbnN0YW5jZSBvZiBgSHR0cFJlcXVlc3RgIGFuZCBjYW5ub3QgYmUgc2lnbmVkXCIpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHsgY29uZmlnLCBzaWduZXIsIHNpZ25pbmdSZWdpb24sIHNpZ25pbmdSZWdpb25TZXQsIHNpZ25pbmdOYW1lIH0gPSBhd2FpdCB2YWxpZGF0ZVNpZ25pbmdQcm9wZXJ0aWVzKHNpZ25pbmdQcm9wZXJ0aWVzKTtcbiAgICAgICAgY29uc3QgY29uZmlnUmVzb2x2ZWRTaWduaW5nUmVnaW9uU2V0ID0gYXdhaXQgY29uZmlnLnNpZ3Y0YVNpZ25pbmdSZWdpb25TZXQ/LigpO1xuICAgICAgICBjb25zdCBtdWx0aVJlZ2lvbk92ZXJyaWRlID0gKGNvbmZpZ1Jlc29sdmVkU2lnbmluZ1JlZ2lvblNldCA/P1xuICAgICAgICAgICAgc2lnbmluZ1JlZ2lvblNldCA/PyBbc2lnbmluZ1JlZ2lvbl0pLmpvaW4oXCIsXCIpO1xuICAgICAgICBjb25zdCBzaWduZWRSZXF1ZXN0ID0gYXdhaXQgc2lnbmVyLnNpZ24oaHR0cFJlcXVlc3QsIHtcbiAgICAgICAgICAgIHNpZ25pbmdEYXRlOiBnZXRTa2V3Q29ycmVjdGVkRGF0ZShjb25maWcuc3lzdGVtQ2xvY2tPZmZzZXQpLFxuICAgICAgICAgICAgc2lnbmluZ1JlZ2lvbjogbXVsdGlSZWdpb25PdmVycmlkZSxcbiAgICAgICAgICAgIHNpZ25pbmdTZXJ2aWNlOiBzaWduaW5nTmFtZSxcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBzaWduZWRSZXF1ZXN0O1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6WyJIdHRwUmVxdWVzdCIsImdldFNrZXdDb3JyZWN0ZWREYXRlIiwiQXdzU2RrU2lnVjRTaWduZXIiLCJ2YWxpZGF0ZVNpZ25pbmdQcm9wZXJ0aWVzIiwiQXdzU2RrU2lnVjRBU2lnbmVyIiwic2lnbiIsImh0dHBSZXF1ZXN0IiwiaWRlbnRpdHkiLCJzaWduaW5nUHJvcGVydGllcyIsImlzSW5zdGFuY2UiLCJFcnJvciIsImNvbmZpZyIsInNpZ25lciIsInNpZ25pbmdSZWdpb24iLCJzaWduaW5nUmVnaW9uU2V0Iiwic2lnbmluZ05hbWUiLCJjb25maWdSZXNvbHZlZFNpZ25pbmdSZWdpb25TZXQiLCJzaWd2NGFTaWduaW5nUmVnaW9uU2V0IiwibXVsdGlSZWdpb25PdmVycmlkZSIsImpvaW4iLCJzaWduZWRSZXF1ZXN0Iiwic2lnbmluZ0RhdGUiLCJzeXN0ZW1DbG9ja09mZnNldCIsInNpZ25pbmdTZXJ2aWNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/AwsSdkSigV4ASigner.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/AwsSdkSigV4Signer.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/AwsSdkSigV4Signer.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AWSSDKSigV4Signer: () => (/* binding */ AWSSDKSigV4Signer),\n/* harmony export */   AwsSdkSigV4Signer: () => (/* binding */ AwsSdkSigV4Signer),\n/* harmony export */   validateSigningProperties: () => (/* binding */ validateSigningProperties)\n/* harmony export */ });\n/* harmony import */ var _smithy_protocol_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @smithy/protocol-http */ \"(rsc)/./node_modules/@smithy/protocol-http/dist-cjs/index.js\");\n/* harmony import */ var _smithy_protocol_http__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_smithy_protocol_http__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getSkewCorrectedDate.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getDateHeader.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getUpdatedSystemClockOffset.js\");\n\n\nconst throwSigningPropertyError = (name, property)=>{\n    if (!property) {\n        throw new Error(`Property \\`${name}\\` is not resolved for AWS SDK SigV4Auth`);\n    }\n    return property;\n};\nconst validateSigningProperties = async (signingProperties)=>{\n    const context = throwSigningPropertyError(\"context\", signingProperties.context);\n    const config = throwSigningPropertyError(\"config\", signingProperties.config);\n    const authScheme = context.endpointV2?.properties?.authSchemes?.[0];\n    const signerFunction = throwSigningPropertyError(\"signer\", config.signer);\n    const signer = await signerFunction(authScheme);\n    const signingRegion = signingProperties?.signingRegion;\n    const signingRegionSet = signingProperties?.signingRegionSet;\n    const signingName = signingProperties?.signingName;\n    return {\n        config,\n        signer,\n        signingRegion,\n        signingRegionSet,\n        signingName\n    };\n};\nclass AwsSdkSigV4Signer {\n    async sign(httpRequest, identity, signingProperties) {\n        if (!_smithy_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest.isInstance(httpRequest)) {\n            throw new Error(\"The request is not an instance of `HttpRequest` and cannot be signed\");\n        }\n        const validatedProps = await validateSigningProperties(signingProperties);\n        const { config, signer } = validatedProps;\n        let { signingRegion, signingName } = validatedProps;\n        const handlerExecutionContext = signingProperties.context;\n        if (handlerExecutionContext?.authSchemes?.length ?? 0 > 1) {\n            const [first, second] = handlerExecutionContext.authSchemes;\n            if (first?.name === \"sigv4a\" && second?.name === \"sigv4\") {\n                signingRegion = second?.signingRegion ?? signingRegion;\n                signingName = second?.signingName ?? signingName;\n            }\n        }\n        const signedRequest = await signer.sign(httpRequest, {\n            signingDate: (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getSkewCorrectedDate)(config.systemClockOffset),\n            signingRegion: signingRegion,\n            signingService: signingName\n        });\n        return signedRequest;\n    }\n    errorHandler(signingProperties) {\n        return (error)=>{\n            const serverTime = error.ServerTime ?? (0,_utils__WEBPACK_IMPORTED_MODULE_2__.getDateHeader)(error.$response);\n            if (serverTime) {\n                const config = throwSigningPropertyError(\"config\", signingProperties.config);\n                const initialSystemClockOffset = config.systemClockOffset;\n                config.systemClockOffset = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getUpdatedSystemClockOffset)(serverTime, config.systemClockOffset);\n                const clockSkewCorrected = config.systemClockOffset !== initialSystemClockOffset;\n                if (clockSkewCorrected && error.$metadata) {\n                    error.$metadata.clockSkewCorrected = true;\n                }\n            }\n            throw error;\n        };\n    }\n    successHandler(httpResponse, signingProperties) {\n        const dateHeader = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.getDateHeader)(httpResponse);\n        if (dateHeader) {\n            const config = throwSigningPropertyError(\"config\", signingProperties.config);\n            config.systemClockOffset = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getUpdatedSystemClockOffset)(dateHeader, config.systemClockOffset);\n        }\n    }\n}\nconst AWSSDKSigV4Signer = AwsSdkSigV4Signer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/AwsSdkSigV4Signer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/index.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/index.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AWSSDKSigV4Signer: () => (/* reexport safe */ _AwsSdkSigV4Signer__WEBPACK_IMPORTED_MODULE_0__.AWSSDKSigV4Signer),\n/* harmony export */   AwsSdkSigV4ASigner: () => (/* reexport safe */ _AwsSdkSigV4ASigner__WEBPACK_IMPORTED_MODULE_1__.AwsSdkSigV4ASigner),\n/* harmony export */   AwsSdkSigV4Signer: () => (/* reexport safe */ _AwsSdkSigV4Signer__WEBPACK_IMPORTED_MODULE_0__.AwsSdkSigV4Signer),\n/* harmony export */   NODE_SIGV4A_CONFIG_OPTIONS: () => (/* reexport safe */ _resolveAwsSdkSigV4AConfig__WEBPACK_IMPORTED_MODULE_2__.NODE_SIGV4A_CONFIG_OPTIONS),\n/* harmony export */   resolveAWSSDKSigV4Config: () => (/* reexport safe */ _resolveAwsSdkSigV4Config__WEBPACK_IMPORTED_MODULE_3__.resolveAWSSDKSigV4Config),\n/* harmony export */   resolveAwsSdkSigV4AConfig: () => (/* reexport safe */ _resolveAwsSdkSigV4AConfig__WEBPACK_IMPORTED_MODULE_2__.resolveAwsSdkSigV4AConfig),\n/* harmony export */   resolveAwsSdkSigV4Config: () => (/* reexport safe */ _resolveAwsSdkSigV4Config__WEBPACK_IMPORTED_MODULE_3__.resolveAwsSdkSigV4Config),\n/* harmony export */   validateSigningProperties: () => (/* reexport safe */ _AwsSdkSigV4Signer__WEBPACK_IMPORTED_MODULE_0__.validateSigningProperties)\n/* harmony export */ });\n/* harmony import */ var _AwsSdkSigV4Signer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AwsSdkSigV4Signer */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/AwsSdkSigV4Signer.js\");\n/* harmony import */ var _AwsSdkSigV4ASigner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AwsSdkSigV4ASigner */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/AwsSdkSigV4ASigner.js\");\n/* harmony import */ var _resolveAwsSdkSigV4AConfig__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./resolveAwsSdkSigV4AConfig */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/resolveAwsSdkSigV4AConfig.js\");\n/* harmony import */ var _resolveAwsSdkSigV4Config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./resolveAwsSdkSigV4Config */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/resolveAwsSdkSigV4Config.js\");\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY29yZS9kaXN0LWVzL3N1Ym1vZHVsZXMvaHR0cEF1dGhTY2hlbWVzL2F3c19zZGsvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQzVDO0FBQ2Q7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL2Nsb3Vkc2hpZnQvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY29yZS9kaXN0LWVzL3N1Ym1vZHVsZXMvaHR0cEF1dGhTY2hlbWVzL2F3c19zZGsvaW5kZXguanM/N2VlNSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBBd3NTZGtTaWdWNFNpZ25lciwgQVdTU0RLU2lnVjRTaWduZXIsIHZhbGlkYXRlU2lnbmluZ1Byb3BlcnRpZXMgfSBmcm9tIFwiLi9Bd3NTZGtTaWdWNFNpZ25lclwiO1xuZXhwb3J0IHsgQXdzU2RrU2lnVjRBU2lnbmVyIH0gZnJvbSBcIi4vQXdzU2RrU2lnVjRBU2lnbmVyXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9yZXNvbHZlQXdzU2RrU2lnVjRBQ29uZmlnXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9yZXNvbHZlQXdzU2RrU2lnVjRDb25maWdcIjtcbiJdLCJuYW1lcyI6WyJBd3NTZGtTaWdWNFNpZ25lciIsIkFXU1NES1NpZ1Y0U2lnbmVyIiwidmFsaWRhdGVTaWduaW5nUHJvcGVydGllcyIsIkF3c1Nka1NpZ1Y0QVNpZ25lciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/resolveAwsSdkSigV4AConfig.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/resolveAwsSdkSigV4AConfig.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NODE_SIGV4A_CONFIG_OPTIONS: () => (/* binding */ NODE_SIGV4A_CONFIG_OPTIONS),\n/* harmony export */   resolveAwsSdkSigV4AConfig: () => (/* binding */ resolveAwsSdkSigV4AConfig)\n/* harmony export */ });\n/* harmony import */ var _smithy_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @smithy/core */ \"(rsc)/./node_modules/@smithy/core/dist-es/index.js\");\n/* harmony import */ var _smithy_property_provider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @smithy/property-provider */ \"(rsc)/./node_modules/@smithy/property-provider/dist-cjs/index.js\");\n/* harmony import */ var _smithy_property_provider__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_smithy_property_provider__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst resolveAwsSdkSigV4AConfig = (config)=>{\n    config.sigv4aSigningRegionSet = (0,_smithy_core__WEBPACK_IMPORTED_MODULE_0__.normalizeProvider)(config.sigv4aSigningRegionSet);\n    return config;\n};\nconst NODE_SIGV4A_CONFIG_OPTIONS = {\n    environmentVariableSelector (env) {\n        if (env.AWS_SIGV4A_SIGNING_REGION_SET) {\n            return env.AWS_SIGV4A_SIGNING_REGION_SET.split(\",\").map((_)=>_.trim());\n        }\n        throw new _smithy_property_provider__WEBPACK_IMPORTED_MODULE_1__.ProviderError(\"AWS_SIGV4A_SIGNING_REGION_SET not set in env.\", {\n            tryNextLink: true\n        });\n    },\n    configFileSelector (profile) {\n        if (profile.sigv4a_signing_region_set) {\n            return (profile.sigv4a_signing_region_set ?? \"\").split(\",\").map((_)=>_.trim());\n        }\n        throw new _smithy_property_provider__WEBPACK_IMPORTED_MODULE_1__.ProviderError(\"sigv4a_signing_region_set not set in profile.\", {\n            tryNextLink: true\n        });\n    },\n    default: undefined\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY29yZS9kaXN0LWVzL3N1Ym1vZHVsZXMvaHR0cEF1dGhTY2hlbWVzL2F3c19zZGsvcmVzb2x2ZUF3c1Nka1NpZ1Y0QUNvbmZpZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFpRDtBQUNTO0FBQ25ELE1BQU1FLDRCQUE0QixDQUFDQztJQUN0Q0EsT0FBT0Msc0JBQXNCLEdBQUdKLCtEQUFpQkEsQ0FBQ0csT0FBT0Msc0JBQXNCO0lBQy9FLE9BQU9EO0FBQ1gsRUFBRTtBQUNLLE1BQU1FLDZCQUE2QjtJQUN0Q0MsNkJBQTRCQyxHQUFHO1FBQzNCLElBQUlBLElBQUlDLDZCQUE2QixFQUFFO1lBQ25DLE9BQU9ELElBQUlDLDZCQUE2QixDQUFDQyxLQUFLLENBQUMsS0FBS0MsR0FBRyxDQUFDLENBQUNDLElBQU1BLEVBQUVDLElBQUk7UUFDekU7UUFDQSxNQUFNLElBQUlYLG9FQUFhQSxDQUFDLGlEQUFpRDtZQUNyRVksYUFBYTtRQUNqQjtJQUNKO0lBQ0FDLG9CQUFtQkMsT0FBTztRQUN0QixJQUFJQSxRQUFRQyx5QkFBeUIsRUFBRTtZQUNuQyxPQUFPLENBQUNELFFBQVFDLHlCQUF5QixJQUFJLEVBQUMsRUFBR1AsS0FBSyxDQUFDLEtBQUtDLEdBQUcsQ0FBQyxDQUFDQyxJQUFNQSxFQUFFQyxJQUFJO1FBQ2pGO1FBQ0EsTUFBTSxJQUFJWCxvRUFBYUEsQ0FBQyxpREFBaUQ7WUFDckVZLGFBQWE7UUFDakI7SUFDSjtJQUNBSSxTQUFTQztBQUNiLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbG91ZHNoaWZ0Ly4vbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL2NvcmUvZGlzdC1lcy9zdWJtb2R1bGVzL2h0dHBBdXRoU2NoZW1lcy9hd3Nfc2RrL3Jlc29sdmVBd3NTZGtTaWdWNEFDb25maWcuanM/ZGUyMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBub3JtYWxpemVQcm92aWRlciB9IGZyb20gXCJAc21pdGh5L2NvcmVcIjtcbmltcG9ydCB7IFByb3ZpZGVyRXJyb3IgfSBmcm9tIFwiQHNtaXRoeS9wcm9wZXJ0eS1wcm92aWRlclwiO1xuZXhwb3J0IGNvbnN0IHJlc29sdmVBd3NTZGtTaWdWNEFDb25maWcgPSAoY29uZmlnKSA9PiB7XG4gICAgY29uZmlnLnNpZ3Y0YVNpZ25pbmdSZWdpb25TZXQgPSBub3JtYWxpemVQcm92aWRlcihjb25maWcuc2lndjRhU2lnbmluZ1JlZ2lvblNldCk7XG4gICAgcmV0dXJuIGNvbmZpZztcbn07XG5leHBvcnQgY29uc3QgTk9ERV9TSUdWNEFfQ09ORklHX09QVElPTlMgPSB7XG4gICAgZW52aXJvbm1lbnRWYXJpYWJsZVNlbGVjdG9yKGVudikge1xuICAgICAgICBpZiAoZW52LkFXU19TSUdWNEFfU0lHTklOR19SRUdJT05fU0VUKSB7XG4gICAgICAgICAgICByZXR1cm4gZW52LkFXU19TSUdWNEFfU0lHTklOR19SRUdJT05fU0VULnNwbGl0KFwiLFwiKS5tYXAoKF8pID0+IF8udHJpbSgpKTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgUHJvdmlkZXJFcnJvcihcIkFXU19TSUdWNEFfU0lHTklOR19SRUdJT05fU0VUIG5vdCBzZXQgaW4gZW52LlwiLCB7XG4gICAgICAgICAgICB0cnlOZXh0TGluazogdHJ1ZSxcbiAgICAgICAgfSk7XG4gICAgfSxcbiAgICBjb25maWdGaWxlU2VsZWN0b3IocHJvZmlsZSkge1xuICAgICAgICBpZiAocHJvZmlsZS5zaWd2NGFfc2lnbmluZ19yZWdpb25fc2V0KSB7XG4gICAgICAgICAgICByZXR1cm4gKHByb2ZpbGUuc2lndjRhX3NpZ25pbmdfcmVnaW9uX3NldCA/PyBcIlwiKS5zcGxpdChcIixcIikubWFwKChfKSA9PiBfLnRyaW0oKSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgbmV3IFByb3ZpZGVyRXJyb3IoXCJzaWd2NGFfc2lnbmluZ19yZWdpb25fc2V0IG5vdCBzZXQgaW4gcHJvZmlsZS5cIiwge1xuICAgICAgICAgICAgdHJ5TmV4dExpbms6IHRydWUsXG4gICAgICAgIH0pO1xuICAgIH0sXG4gICAgZGVmYXVsdDogdW5kZWZpbmVkLFxufTtcbiJdLCJuYW1lcyI6WyJub3JtYWxpemVQcm92aWRlciIsIlByb3ZpZGVyRXJyb3IiLCJyZXNvbHZlQXdzU2RrU2lnVjRBQ29uZmlnIiwiY29uZmlnIiwic2lndjRhU2lnbmluZ1JlZ2lvblNldCIsIk5PREVfU0lHVjRBX0NPTkZJR19PUFRJT05TIiwiZW52aXJvbm1lbnRWYXJpYWJsZVNlbGVjdG9yIiwiZW52IiwiQVdTX1NJR1Y0QV9TSUdOSU5HX1JFR0lPTl9TRVQiLCJzcGxpdCIsIm1hcCIsIl8iLCJ0cmltIiwidHJ5TmV4dExpbmsiLCJjb25maWdGaWxlU2VsZWN0b3IiLCJwcm9maWxlIiwic2lndjRhX3NpZ25pbmdfcmVnaW9uX3NldCIsImRlZmF1bHQiLCJ1bmRlZmluZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/resolveAwsSdkSigV4AConfig.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/resolveAwsSdkSigV4Config.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/resolveAwsSdkSigV4Config.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   resolveAWSSDKSigV4Config: () => (/* binding */ resolveAWSSDKSigV4Config),\n/* harmony export */   resolveAwsSdkSigV4Config: () => (/* binding */ resolveAwsSdkSigV4Config)\n/* harmony export */ });\n/* harmony import */ var _aws_sdk_core_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/core/client */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/client/setCredentialFeature.js\");\n/* harmony import */ var _smithy_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @smithy/core */ \"(rsc)/./node_modules/@smithy/core/dist-es/index.js\");\n/* harmony import */ var _smithy_signature_v4__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @smithy/signature-v4 */ \"(rsc)/./node_modules/@smithy/signature-v4/dist-cjs/index.js\");\n/* harmony import */ var _smithy_signature_v4__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_smithy_signature_v4__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\nconst resolveAwsSdkSigV4Config = (config)=>{\n    let inputCredentials = config.credentials;\n    let isUserSupplied = !!config.credentials;\n    let resolvedCredentials = undefined;\n    Object.defineProperty(config, \"credentials\", {\n        set (credentials) {\n            if (credentials && credentials !== inputCredentials && credentials !== resolvedCredentials) {\n                isUserSupplied = true;\n            }\n            inputCredentials = credentials;\n            const memoizedProvider = normalizeCredentialProvider(config, {\n                credentials: inputCredentials,\n                credentialDefaultProvider: config.credentialDefaultProvider\n            });\n            const boundProvider = bindCallerConfig(config, memoizedProvider);\n            if (isUserSupplied && !boundProvider.attributed) {\n                resolvedCredentials = async (options)=>boundProvider(options).then((creds)=>(0,_aws_sdk_core_client__WEBPACK_IMPORTED_MODULE_2__.setCredentialFeature)(creds, \"CREDENTIALS_CODE\", \"e\"));\n                resolvedCredentials.memoized = boundProvider.memoized;\n                resolvedCredentials.configBound = boundProvider.configBound;\n                resolvedCredentials.attributed = true;\n            } else {\n                resolvedCredentials = boundProvider;\n            }\n        },\n        get () {\n            return resolvedCredentials;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    config.credentials = inputCredentials;\n    const { signingEscapePath = true, systemClockOffset = config.systemClockOffset || 0, sha256 } = config;\n    let signer;\n    if (config.signer) {\n        signer = (0,_smithy_core__WEBPACK_IMPORTED_MODULE_0__.normalizeProvider)(config.signer);\n    } else if (config.regionInfoProvider) {\n        signer = ()=>(0,_smithy_core__WEBPACK_IMPORTED_MODULE_0__.normalizeProvider)(config.region)().then(async (region)=>[\n                    await config.regionInfoProvider(region, {\n                        useFipsEndpoint: await config.useFipsEndpoint(),\n                        useDualstackEndpoint: await config.useDualstackEndpoint()\n                    }) || {},\n                    region\n                ]).then(([regionInfo, region])=>{\n                const { signingRegion, signingService } = regionInfo;\n                config.signingRegion = config.signingRegion || signingRegion || region;\n                config.signingName = config.signingName || signingService || config.serviceId;\n                const params = {\n                    ...config,\n                    credentials: config.credentials,\n                    region: config.signingRegion,\n                    service: config.signingName,\n                    sha256,\n                    uriEscapePath: signingEscapePath\n                };\n                const SignerCtor = config.signerConstructor || _smithy_signature_v4__WEBPACK_IMPORTED_MODULE_1__.SignatureV4;\n                return new SignerCtor(params);\n            });\n    } else {\n        signer = async (authScheme)=>{\n            authScheme = Object.assign({}, {\n                name: \"sigv4\",\n                signingName: config.signingName || config.defaultSigningName,\n                signingRegion: await (0,_smithy_core__WEBPACK_IMPORTED_MODULE_0__.normalizeProvider)(config.region)(),\n                properties: {}\n            }, authScheme);\n            const signingRegion = authScheme.signingRegion;\n            const signingService = authScheme.signingName;\n            config.signingRegion = config.signingRegion || signingRegion;\n            config.signingName = config.signingName || signingService || config.serviceId;\n            const params = {\n                ...config,\n                credentials: config.credentials,\n                region: config.signingRegion,\n                service: config.signingName,\n                sha256,\n                uriEscapePath: signingEscapePath\n            };\n            const SignerCtor = config.signerConstructor || _smithy_signature_v4__WEBPACK_IMPORTED_MODULE_1__.SignatureV4;\n            return new SignerCtor(params);\n        };\n    }\n    const resolvedConfig = Object.assign(config, {\n        systemClockOffset,\n        signingEscapePath,\n        signer\n    });\n    return resolvedConfig;\n};\nconst resolveAWSSDKSigV4Config = resolveAwsSdkSigV4Config;\nfunction normalizeCredentialProvider(config, { credentials, credentialDefaultProvider }) {\n    let credentialsProvider;\n    if (credentials) {\n        if (!credentials?.memoized) {\n            credentialsProvider = (0,_smithy_core__WEBPACK_IMPORTED_MODULE_0__.memoizeIdentityProvider)(credentials, _smithy_core__WEBPACK_IMPORTED_MODULE_0__.isIdentityExpired, _smithy_core__WEBPACK_IMPORTED_MODULE_0__.doesIdentityRequireRefresh);\n        } else {\n            credentialsProvider = credentials;\n        }\n    } else {\n        if (credentialDefaultProvider) {\n            credentialsProvider = (0,_smithy_core__WEBPACK_IMPORTED_MODULE_0__.normalizeProvider)(credentialDefaultProvider(Object.assign({}, config, {\n                parentClientConfig: config\n            })));\n        } else {\n            credentialsProvider = async ()=>{\n                throw new Error(\"@aws-sdk/core::resolveAwsSdkSigV4Config - `credentials` not provided and no credentialDefaultProvider was configured.\");\n            };\n        }\n    }\n    credentialsProvider.memoized = true;\n    return credentialsProvider;\n}\nfunction bindCallerConfig(config, credentialsProvider) {\n    if (credentialsProvider.configBound) {\n        return credentialsProvider;\n    }\n    const fn = async (options)=>credentialsProvider({\n            ...options,\n            callerClientConfig: config\n        });\n    fn.memoized = credentialsProvider.memoized;\n    fn.configBound = true;\n    return fn;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/resolveAwsSdkSigV4Config.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/index.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/index.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AWSSDKSigV4Signer: () => (/* reexport safe */ _aws_sdk__WEBPACK_IMPORTED_MODULE_0__.AWSSDKSigV4Signer),\n/* harmony export */   AwsSdkSigV4ASigner: () => (/* reexport safe */ _aws_sdk__WEBPACK_IMPORTED_MODULE_0__.AwsSdkSigV4ASigner),\n/* harmony export */   AwsSdkSigV4Signer: () => (/* reexport safe */ _aws_sdk__WEBPACK_IMPORTED_MODULE_0__.AwsSdkSigV4Signer),\n/* harmony export */   NODE_SIGV4A_CONFIG_OPTIONS: () => (/* reexport safe */ _aws_sdk__WEBPACK_IMPORTED_MODULE_0__.NODE_SIGV4A_CONFIG_OPTIONS),\n/* harmony export */   resolveAWSSDKSigV4Config: () => (/* reexport safe */ _aws_sdk__WEBPACK_IMPORTED_MODULE_0__.resolveAWSSDKSigV4Config),\n/* harmony export */   resolveAwsSdkSigV4AConfig: () => (/* reexport safe */ _aws_sdk__WEBPACK_IMPORTED_MODULE_0__.resolveAwsSdkSigV4AConfig),\n/* harmony export */   resolveAwsSdkSigV4Config: () => (/* reexport safe */ _aws_sdk__WEBPACK_IMPORTED_MODULE_0__.resolveAwsSdkSigV4Config),\n/* harmony export */   validateSigningProperties: () => (/* reexport safe */ _aws_sdk__WEBPACK_IMPORTED_MODULE_0__.validateSigningProperties)\n/* harmony export */ });\n/* harmony import */ var _aws_sdk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./aws_sdk */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/index.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY29yZS9kaXN0LWVzL3N1Ym1vZHVsZXMvaHR0cEF1dGhTY2hlbWVzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUEwQiIsInNvdXJjZXMiOlsid2VicGFjazovL2Nsb3Vkc2hpZnQvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY29yZS9kaXN0LWVzL3N1Ym1vZHVsZXMvaHR0cEF1dGhTY2hlbWVzL2luZGV4LmpzPzQ0NTUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vYXdzX3Nka1wiO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getDateHeader.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getDateHeader.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDateHeader: () => (/* binding */ getDateHeader)\n/* harmony export */ });\n/* harmony import */ var _smithy_protocol_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @smithy/protocol-http */ \"(rsc)/./node_modules/@smithy/protocol-http/dist-cjs/index.js\");\n/* harmony import */ var _smithy_protocol_http__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_smithy_protocol_http__WEBPACK_IMPORTED_MODULE_0__);\n\nconst getDateHeader = (response)=>_smithy_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpResponse.isInstance(response) ? response.headers?.date ?? response.headers?.Date : undefined;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY29yZS9kaXN0LWVzL3N1Ym1vZHVsZXMvaHR0cEF1dGhTY2hlbWVzL3V0aWxzL2dldERhdGVIZWFkZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXFEO0FBQzlDLE1BQU1DLGdCQUFnQixDQUFDQyxXQUFhRiwrREFBWUEsQ0FBQ0csVUFBVSxDQUFDRCxZQUFZQSxTQUFTRSxPQUFPLEVBQUVDLFFBQVFILFNBQVNFLE9BQU8sRUFBRUUsT0FBT0MsVUFBVSIsInNvdXJjZXMiOlsid2VicGFjazovL2Nsb3Vkc2hpZnQvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY29yZS9kaXN0LWVzL3N1Ym1vZHVsZXMvaHR0cEF1dGhTY2hlbWVzL3V0aWxzL2dldERhdGVIZWFkZXIuanM/ZjJiNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIdHRwUmVzcG9uc2UgfSBmcm9tIFwiQHNtaXRoeS9wcm90b2NvbC1odHRwXCI7XG5leHBvcnQgY29uc3QgZ2V0RGF0ZUhlYWRlciA9IChyZXNwb25zZSkgPT4gSHR0cFJlc3BvbnNlLmlzSW5zdGFuY2UocmVzcG9uc2UpID8gcmVzcG9uc2UuaGVhZGVycz8uZGF0ZSA/PyByZXNwb25zZS5oZWFkZXJzPy5EYXRlIDogdW5kZWZpbmVkO1xuIl0sIm5hbWVzIjpbIkh0dHBSZXNwb25zZSIsImdldERhdGVIZWFkZXIiLCJyZXNwb25zZSIsImlzSW5zdGFuY2UiLCJoZWFkZXJzIiwiZGF0ZSIsIkRhdGUiLCJ1bmRlZmluZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getDateHeader.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getSkewCorrectedDate.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getSkewCorrectedDate.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getSkewCorrectedDate: () => (/* binding */ getSkewCorrectedDate)\n/* harmony export */ });\nconst getSkewCorrectedDate = (systemClockOffset)=>new Date(Date.now() + systemClockOffset);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY29yZS9kaXN0LWVzL3N1Ym1vZHVsZXMvaHR0cEF1dGhTY2hlbWVzL3V0aWxzL2dldFNrZXdDb3JyZWN0ZWREYXRlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxNQUFNQSx1QkFBdUIsQ0FBQ0Msb0JBQXNCLElBQUlDLEtBQUtBLEtBQUtDLEdBQUcsS0FBS0YsbUJBQW1CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xvdWRzaGlmdC8uL25vZGVfbW9kdWxlcy9AYXdzLXNkay9jb3JlL2Rpc3QtZXMvc3VibW9kdWxlcy9odHRwQXV0aFNjaGVtZXMvdXRpbHMvZ2V0U2tld0NvcnJlY3RlZERhdGUuanM/M2FiNSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgZ2V0U2tld0NvcnJlY3RlZERhdGUgPSAoc3lzdGVtQ2xvY2tPZmZzZXQpID0+IG5ldyBEYXRlKERhdGUubm93KCkgKyBzeXN0ZW1DbG9ja09mZnNldCk7XG4iXSwibmFtZXMiOlsiZ2V0U2tld0NvcnJlY3RlZERhdGUiLCJzeXN0ZW1DbG9ja09mZnNldCIsIkRhdGUiLCJub3ciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getSkewCorrectedDate.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getUpdatedSystemClockOffset.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getUpdatedSystemClockOffset.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getUpdatedSystemClockOffset: () => (/* binding */ getUpdatedSystemClockOffset)\n/* harmony export */ });\n/* harmony import */ var _isClockSkewed__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isClockSkewed */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/isClockSkewed.js\");\n\nconst getUpdatedSystemClockOffset = (clockTime, currentSystemClockOffset)=>{\n    const clockTimeInMs = Date.parse(clockTime);\n    if ((0,_isClockSkewed__WEBPACK_IMPORTED_MODULE_0__.isClockSkewed)(clockTimeInMs, currentSystemClockOffset)) {\n        return clockTimeInMs - Date.now();\n    }\n    return currentSystemClockOffset;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY29yZS9kaXN0LWVzL3N1Ym1vZHVsZXMvaHR0cEF1dGhTY2hlbWVzL3V0aWxzL2dldFVwZGF0ZWRTeXN0ZW1DbG9ja09mZnNldC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFnRDtBQUN6QyxNQUFNQyw4QkFBOEIsQ0FBQ0MsV0FBV0M7SUFDbkQsTUFBTUMsZ0JBQWdCQyxLQUFLQyxLQUFLLENBQUNKO0lBQ2pDLElBQUlGLDZEQUFhQSxDQUFDSSxlQUFlRCwyQkFBMkI7UUFDeEQsT0FBT0MsZ0JBQWdCQyxLQUFLRSxHQUFHO0lBQ25DO0lBQ0EsT0FBT0o7QUFDWCxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xvdWRzaGlmdC8uL25vZGVfbW9kdWxlcy9AYXdzLXNkay9jb3JlL2Rpc3QtZXMvc3VibW9kdWxlcy9odHRwQXV0aFNjaGVtZXMvdXRpbHMvZ2V0VXBkYXRlZFN5c3RlbUNsb2NrT2Zmc2V0LmpzPzlmOGYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNDbG9ja1NrZXdlZCB9IGZyb20gXCIuL2lzQ2xvY2tTa2V3ZWRcIjtcbmV4cG9ydCBjb25zdCBnZXRVcGRhdGVkU3lzdGVtQ2xvY2tPZmZzZXQgPSAoY2xvY2tUaW1lLCBjdXJyZW50U3lzdGVtQ2xvY2tPZmZzZXQpID0+IHtcbiAgICBjb25zdCBjbG9ja1RpbWVJbk1zID0gRGF0ZS5wYXJzZShjbG9ja1RpbWUpO1xuICAgIGlmIChpc0Nsb2NrU2tld2VkKGNsb2NrVGltZUluTXMsIGN1cnJlbnRTeXN0ZW1DbG9ja09mZnNldCkpIHtcbiAgICAgICAgcmV0dXJuIGNsb2NrVGltZUluTXMgLSBEYXRlLm5vdygpO1xuICAgIH1cbiAgICByZXR1cm4gY3VycmVudFN5c3RlbUNsb2NrT2Zmc2V0O1xufTtcbiJdLCJuYW1lcyI6WyJpc0Nsb2NrU2tld2VkIiwiZ2V0VXBkYXRlZFN5c3RlbUNsb2NrT2Zmc2V0IiwiY2xvY2tUaW1lIiwiY3VycmVudFN5c3RlbUNsb2NrT2Zmc2V0IiwiY2xvY2tUaW1lSW5NcyIsIkRhdGUiLCJwYXJzZSIsIm5vdyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getUpdatedSystemClockOffset.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/isClockSkewed.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/isClockSkewed.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isClockSkewed: () => (/* binding */ isClockSkewed)\n/* harmony export */ });\n/* harmony import */ var _getSkewCorrectedDate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getSkewCorrectedDate */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getSkewCorrectedDate.js\");\n\nconst isClockSkewed = (clockTime, systemClockOffset)=>Math.abs((0,_getSkewCorrectedDate__WEBPACK_IMPORTED_MODULE_0__.getSkewCorrectedDate)(systemClockOffset).getTime() - clockTime) >= 300000;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY29yZS9kaXN0LWVzL3N1Ym1vZHVsZXMvaHR0cEF1dGhTY2hlbWVzL3V0aWxzL2lzQ2xvY2tTa2V3ZWQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBOEQ7QUFDdkQsTUFBTUMsZ0JBQWdCLENBQUNDLFdBQVdDLG9CQUFzQkMsS0FBS0MsR0FBRyxDQUFDTCwyRUFBb0JBLENBQUNHLG1CQUFtQkcsT0FBTyxLQUFLSixjQUFjLE9BQU8iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbG91ZHNoaWZ0Ly4vbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL2NvcmUvZGlzdC1lcy9zdWJtb2R1bGVzL2h0dHBBdXRoU2NoZW1lcy91dGlscy9pc0Nsb2NrU2tld2VkLmpzPzIzYmMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0U2tld0NvcnJlY3RlZERhdGUgfSBmcm9tIFwiLi9nZXRTa2V3Q29ycmVjdGVkRGF0ZVwiO1xuZXhwb3J0IGNvbnN0IGlzQ2xvY2tTa2V3ZWQgPSAoY2xvY2tUaW1lLCBzeXN0ZW1DbG9ja09mZnNldCkgPT4gTWF0aC5hYnMoZ2V0U2tld0NvcnJlY3RlZERhdGUoc3lzdGVtQ2xvY2tPZmZzZXQpLmdldFRpbWUoKSAtIGNsb2NrVGltZSkgPj0gMzAwMDAwO1xuIl0sIm5hbWVzIjpbImdldFNrZXdDb3JyZWN0ZWREYXRlIiwiaXNDbG9ja1NrZXdlZCIsImNsb2NrVGltZSIsInN5c3RlbUNsb2NrT2Zmc2V0IiwiTWF0aCIsImFicyIsImdldFRpbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/isClockSkewed.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/protocols/coercing-serializers.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/core/dist-es/submodules/protocols/coercing-serializers.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _toBool: () => (/* binding */ _toBool),\n/* harmony export */   _toNum: () => (/* binding */ _toNum),\n/* harmony export */   _toStr: () => (/* binding */ _toStr)\n/* harmony export */ });\nconst _toStr = (val)=>{\n    if (val == null) {\n        return val;\n    }\n    if (typeof val === \"number\" || typeof val === \"bigint\") {\n        const warning = new Error(`Received number ${val} where a string was expected.`);\n        warning.name = \"Warning\";\n        console.warn(warning);\n        return String(val);\n    }\n    if (typeof val === \"boolean\") {\n        const warning = new Error(`Received boolean ${val} where a string was expected.`);\n        warning.name = \"Warning\";\n        console.warn(warning);\n        return String(val);\n    }\n    return val;\n};\nconst _toBool = (val)=>{\n    if (val == null) {\n        return val;\n    }\n    if (typeof val === \"number\") {}\n    if (typeof val === \"string\") {\n        const lowercase = val.toLowerCase();\n        if (val !== \"\" && lowercase !== \"false\" && lowercase !== \"true\") {\n            const warning = new Error(`Received string \"${val}\" where a boolean was expected.`);\n            warning.name = \"Warning\";\n            console.warn(warning);\n        }\n        return val !== \"\" && lowercase !== \"false\";\n    }\n    return val;\n};\nconst _toNum = (val)=>{\n    if (val == null) {\n        return val;\n    }\n    if (typeof val === \"boolean\") {}\n    if (typeof val === \"string\") {\n        const num = Number(val);\n        if (num.toString() !== val) {\n            const warning = new Error(`Received string \"${val}\" where a number was expected.`);\n            warning.name = \"Warning\";\n            console.warn(warning);\n            return val;\n        }\n        return num;\n    }\n    return val;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY29yZS9kaXN0LWVzL3N1Ym1vZHVsZXMvcHJvdG9jb2xzL2NvZXJjaW5nLXNlcmlhbGl6ZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFPLE1BQU1BLFNBQVMsQ0FBQ0M7SUFDbkIsSUFBSUEsT0FBTyxNQUFNO1FBQ2IsT0FBT0E7SUFDWDtJQUNBLElBQUksT0FBT0EsUUFBUSxZQUFZLE9BQU9BLFFBQVEsVUFBVTtRQUNwRCxNQUFNQyxVQUFVLElBQUlDLE1BQU0sQ0FBQyxnQkFBZ0IsRUFBRUYsSUFBSSw2QkFBNkIsQ0FBQztRQUMvRUMsUUFBUUUsSUFBSSxHQUFHO1FBQ2ZDLFFBQVFDLElBQUksQ0FBQ0o7UUFDYixPQUFPSyxPQUFPTjtJQUNsQjtJQUNBLElBQUksT0FBT0EsUUFBUSxXQUFXO1FBQzFCLE1BQU1DLFVBQVUsSUFBSUMsTUFBTSxDQUFDLGlCQUFpQixFQUFFRixJQUFJLDZCQUE2QixDQUFDO1FBQ2hGQyxRQUFRRSxJQUFJLEdBQUc7UUFDZkMsUUFBUUMsSUFBSSxDQUFDSjtRQUNiLE9BQU9LLE9BQU9OO0lBQ2xCO0lBQ0EsT0FBT0E7QUFDWCxFQUFFO0FBQ0ssTUFBTU8sVUFBVSxDQUFDUDtJQUNwQixJQUFJQSxPQUFPLE1BQU07UUFDYixPQUFPQTtJQUNYO0lBQ0EsSUFBSSxPQUFPQSxRQUFRLFVBQVUsQ0FDN0I7SUFDQSxJQUFJLE9BQU9BLFFBQVEsVUFBVTtRQUN6QixNQUFNUSxZQUFZUixJQUFJUyxXQUFXO1FBQ2pDLElBQUlULFFBQVEsTUFBTVEsY0FBYyxXQUFXQSxjQUFjLFFBQVE7WUFDN0QsTUFBTVAsVUFBVSxJQUFJQyxNQUFNLENBQUMsaUJBQWlCLEVBQUVGLElBQUksK0JBQStCLENBQUM7WUFDbEZDLFFBQVFFLElBQUksR0FBRztZQUNmQyxRQUFRQyxJQUFJLENBQUNKO1FBQ2pCO1FBQ0EsT0FBT0QsUUFBUSxNQUFNUSxjQUFjO0lBQ3ZDO0lBQ0EsT0FBT1I7QUFDWCxFQUFFO0FBQ0ssTUFBTVUsU0FBUyxDQUFDVjtJQUNuQixJQUFJQSxPQUFPLE1BQU07UUFDYixPQUFPQTtJQUNYO0lBQ0EsSUFBSSxPQUFPQSxRQUFRLFdBQVcsQ0FDOUI7SUFDQSxJQUFJLE9BQU9BLFFBQVEsVUFBVTtRQUN6QixNQUFNVyxNQUFNQyxPQUFPWjtRQUNuQixJQUFJVyxJQUFJRSxRQUFRLE9BQU9iLEtBQUs7WUFDeEIsTUFBTUMsVUFBVSxJQUFJQyxNQUFNLENBQUMsaUJBQWlCLEVBQUVGLElBQUksOEJBQThCLENBQUM7WUFDakZDLFFBQVFFLElBQUksR0FBRztZQUNmQyxRQUFRQyxJQUFJLENBQUNKO1lBQ2IsT0FBT0Q7UUFDWDtRQUNBLE9BQU9XO0lBQ1g7SUFDQSxPQUFPWDtBQUNYLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbG91ZHNoaWZ0Ly4vbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL2NvcmUvZGlzdC1lcy9zdWJtb2R1bGVzL3Byb3RvY29scy9jb2VyY2luZy1zZXJpYWxpemVycy5qcz83NzIxIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBfdG9TdHIgPSAodmFsKSA9PiB7XG4gICAgaWYgKHZhbCA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiB2YWw7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgdmFsID09PSBcIm51bWJlclwiIHx8IHR5cGVvZiB2YWwgPT09IFwiYmlnaW50XCIpIHtcbiAgICAgICAgY29uc3Qgd2FybmluZyA9IG5ldyBFcnJvcihgUmVjZWl2ZWQgbnVtYmVyICR7dmFsfSB3aGVyZSBhIHN0cmluZyB3YXMgZXhwZWN0ZWQuYCk7XG4gICAgICAgIHdhcm5pbmcubmFtZSA9IFwiV2FybmluZ1wiO1xuICAgICAgICBjb25zb2xlLndhcm4od2FybmluZyk7XG4gICAgICAgIHJldHVybiBTdHJpbmcodmFsKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiB2YWwgPT09IFwiYm9vbGVhblwiKSB7XG4gICAgICAgIGNvbnN0IHdhcm5pbmcgPSBuZXcgRXJyb3IoYFJlY2VpdmVkIGJvb2xlYW4gJHt2YWx9IHdoZXJlIGEgc3RyaW5nIHdhcyBleHBlY3RlZC5gKTtcbiAgICAgICAgd2FybmluZy5uYW1lID0gXCJXYXJuaW5nXCI7XG4gICAgICAgIGNvbnNvbGUud2Fybih3YXJuaW5nKTtcbiAgICAgICAgcmV0dXJuIFN0cmluZyh2YWwpO1xuICAgIH1cbiAgICByZXR1cm4gdmFsO1xufTtcbmV4cG9ydCBjb25zdCBfdG9Cb29sID0gKHZhbCkgPT4ge1xuICAgIGlmICh2YWwgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gdmFsO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHZhbCA9PT0gXCJudW1iZXJcIikge1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHZhbCA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICBjb25zdCBsb3dlcmNhc2UgPSB2YWwudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgaWYgKHZhbCAhPT0gXCJcIiAmJiBsb3dlcmNhc2UgIT09IFwiZmFsc2VcIiAmJiBsb3dlcmNhc2UgIT09IFwidHJ1ZVwiKSB7XG4gICAgICAgICAgICBjb25zdCB3YXJuaW5nID0gbmV3IEVycm9yKGBSZWNlaXZlZCBzdHJpbmcgXCIke3ZhbH1cIiB3aGVyZSBhIGJvb2xlYW4gd2FzIGV4cGVjdGVkLmApO1xuICAgICAgICAgICAgd2FybmluZy5uYW1lID0gXCJXYXJuaW5nXCI7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4od2FybmluZyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHZhbCAhPT0gXCJcIiAmJiBsb3dlcmNhc2UgIT09IFwiZmFsc2VcIjtcbiAgICB9XG4gICAgcmV0dXJuIHZhbDtcbn07XG5leHBvcnQgY29uc3QgX3RvTnVtID0gKHZhbCkgPT4ge1xuICAgIGlmICh2YWwgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gdmFsO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHZhbCA9PT0gXCJib29sZWFuXCIpIHtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiB2YWwgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgY29uc3QgbnVtID0gTnVtYmVyKHZhbCk7XG4gICAgICAgIGlmIChudW0udG9TdHJpbmcoKSAhPT0gdmFsKSB7XG4gICAgICAgICAgICBjb25zdCB3YXJuaW5nID0gbmV3IEVycm9yKGBSZWNlaXZlZCBzdHJpbmcgXCIke3ZhbH1cIiB3aGVyZSBhIG51bWJlciB3YXMgZXhwZWN0ZWQuYCk7XG4gICAgICAgICAgICB3YXJuaW5nLm5hbWUgPSBcIldhcm5pbmdcIjtcbiAgICAgICAgICAgIGNvbnNvbGUud2Fybih3YXJuaW5nKTtcbiAgICAgICAgICAgIHJldHVybiB2YWw7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG51bTtcbiAgICB9XG4gICAgcmV0dXJuIHZhbDtcbn07XG4iXSwibmFtZXMiOlsiX3RvU3RyIiwidmFsIiwid2FybmluZyIsIkVycm9yIiwibmFtZSIsImNvbnNvbGUiLCJ3YXJuIiwiU3RyaW5nIiwiX3RvQm9vbCIsImxvd2VyY2FzZSIsInRvTG93ZXJDYXNlIiwiX3RvTnVtIiwibnVtIiwiTnVtYmVyIiwidG9TdHJpbmciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/protocols/coercing-serializers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/protocols/common.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@aws-sdk/core/dist-es/submodules/protocols/common.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   collectBodyString: () => (/* binding */ collectBodyString)\n/* harmony export */ });\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/./node_modules/@smithy/smithy-client/dist-cjs/index.js\");\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst collectBodyString = (streamBody, context)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.collectBody)(streamBody, context).then((body)=>context.utf8Encoder(body));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY29yZS9kaXN0LWVzL3N1Ym1vZHVsZXMvcHJvdG9jb2xzL2NvbW1vbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBb0Q7QUFDN0MsTUFBTUMsb0JBQW9CLENBQUNDLFlBQVlDLFVBQVlILGtFQUFXQSxDQUFDRSxZQUFZQyxTQUFTQyxJQUFJLENBQUMsQ0FBQ0MsT0FBU0YsUUFBUUcsV0FBVyxDQUFDRCxPQUFPIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xvdWRzaGlmdC8uL25vZGVfbW9kdWxlcy9AYXdzLXNkay9jb3JlL2Rpc3QtZXMvc3VibW9kdWxlcy9wcm90b2NvbHMvY29tbW9uLmpzPzUxMTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29sbGVjdEJvZHkgfSBmcm9tIFwiQHNtaXRoeS9zbWl0aHktY2xpZW50XCI7XG5leHBvcnQgY29uc3QgY29sbGVjdEJvZHlTdHJpbmcgPSAoc3RyZWFtQm9keSwgY29udGV4dCkgPT4gY29sbGVjdEJvZHkoc3RyZWFtQm9keSwgY29udGV4dCkudGhlbigoYm9keSkgPT4gY29udGV4dC51dGY4RW5jb2Rlcihib2R5KSk7XG4iXSwibmFtZXMiOlsiY29sbGVjdEJvZHkiLCJjb2xsZWN0Qm9keVN0cmluZyIsInN0cmVhbUJvZHkiLCJjb250ZXh0IiwidGhlbiIsImJvZHkiLCJ1dGY4RW5jb2RlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/protocols/common.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/protocols/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@aws-sdk/core/dist-es/submodules/protocols/index.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _toBool: () => (/* reexport safe */ _coercing_serializers__WEBPACK_IMPORTED_MODULE_0__._toBool),\n/* harmony export */   _toNum: () => (/* reexport safe */ _coercing_serializers__WEBPACK_IMPORTED_MODULE_0__._toNum),\n/* harmony export */   _toStr: () => (/* reexport safe */ _coercing_serializers__WEBPACK_IMPORTED_MODULE_0__._toStr),\n/* harmony export */   awsExpectUnion: () => (/* reexport safe */ _json_awsExpectUnion__WEBPACK_IMPORTED_MODULE_1__.awsExpectUnion),\n/* harmony export */   loadRestJsonErrorCode: () => (/* reexport safe */ _json_parseJsonBody__WEBPACK_IMPORTED_MODULE_2__.loadRestJsonErrorCode),\n/* harmony export */   loadRestXmlErrorCode: () => (/* reexport safe */ _xml_parseXmlBody__WEBPACK_IMPORTED_MODULE_3__.loadRestXmlErrorCode),\n/* harmony export */   parseJsonBody: () => (/* reexport safe */ _json_parseJsonBody__WEBPACK_IMPORTED_MODULE_2__.parseJsonBody),\n/* harmony export */   parseJsonErrorBody: () => (/* reexport safe */ _json_parseJsonBody__WEBPACK_IMPORTED_MODULE_2__.parseJsonErrorBody),\n/* harmony export */   parseXmlBody: () => (/* reexport safe */ _xml_parseXmlBody__WEBPACK_IMPORTED_MODULE_3__.parseXmlBody),\n/* harmony export */   parseXmlErrorBody: () => (/* reexport safe */ _xml_parseXmlBody__WEBPACK_IMPORTED_MODULE_3__.parseXmlErrorBody)\n/* harmony export */ });\n/* harmony import */ var _coercing_serializers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./coercing-serializers */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/protocols/coercing-serializers.js\");\n/* harmony import */ var _json_awsExpectUnion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./json/awsExpectUnion */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/protocols/json/awsExpectUnion.js\");\n/* harmony import */ var _json_parseJsonBody__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./json/parseJsonBody */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/protocols/json/parseJsonBody.js\");\n/* harmony import */ var _xml_parseXmlBody__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./xml/parseXmlBody */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/protocols/xml/parseXmlBody.js\");\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY29yZS9kaXN0LWVzL3N1Ym1vZHVsZXMvcHJvdG9jb2xzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXVDO0FBQ0Q7QUFDRDtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xvdWRzaGlmdC8uL25vZGVfbW9kdWxlcy9AYXdzLXNkay9jb3JlL2Rpc3QtZXMvc3VibW9kdWxlcy9wcm90b2NvbHMvaW5kZXguanM/ODY4OCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9jb2VyY2luZy1zZXJpYWxpemVyc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vanNvbi9hd3NFeHBlY3RVbmlvblwiO1xuZXhwb3J0ICogZnJvbSBcIi4vanNvbi9wYXJzZUpzb25Cb2R5XCI7XG5leHBvcnQgKiBmcm9tIFwiLi94bWwvcGFyc2VYbWxCb2R5XCI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/protocols/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/protocols/json/awsExpectUnion.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/core/dist-es/submodules/protocols/json/awsExpectUnion.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   awsExpectUnion: () => (/* binding */ awsExpectUnion)\n/* harmony export */ });\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/./node_modules/@smithy/smithy-client/dist-cjs/index.js\");\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst awsExpectUnion = (value)=>{\n    if (value == null) {\n        return undefined;\n    }\n    if (typeof value === \"object\" && \"__type\" in value) {\n        delete value.__type;\n    }\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.expectUnion)(value);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY29yZS9kaXN0LWVzL3N1Ym1vZHVsZXMvcHJvdG9jb2xzL2pzb24vYXdzRXhwZWN0VW5pb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQW9EO0FBQzdDLE1BQU1DLGlCQUFpQixDQUFDQztJQUMzQixJQUFJQSxTQUFTLE1BQU07UUFDZixPQUFPQztJQUNYO0lBQ0EsSUFBSSxPQUFPRCxVQUFVLFlBQVksWUFBWUEsT0FBTztRQUNoRCxPQUFPQSxNQUFNRSxNQUFNO0lBQ3ZCO0lBQ0EsT0FBT0osa0VBQVdBLENBQUNFO0FBQ3ZCLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbG91ZHNoaWZ0Ly4vbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL2NvcmUvZGlzdC1lcy9zdWJtb2R1bGVzL3Byb3RvY29scy9qc29uL2F3c0V4cGVjdFVuaW9uLmpzP2MzNDciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZXhwZWN0VW5pb24gfSBmcm9tIFwiQHNtaXRoeS9zbWl0aHktY2xpZW50XCI7XG5leHBvcnQgY29uc3QgYXdzRXhwZWN0VW5pb24gPSAodmFsdWUpID0+IHtcbiAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSBcIm9iamVjdFwiICYmIFwiX190eXBlXCIgaW4gdmFsdWUpIHtcbiAgICAgICAgZGVsZXRlIHZhbHVlLl9fdHlwZTtcbiAgICB9XG4gICAgcmV0dXJuIGV4cGVjdFVuaW9uKHZhbHVlKTtcbn07XG4iXSwibmFtZXMiOlsiZXhwZWN0VW5pb24iLCJhd3NFeHBlY3RVbmlvbiIsInZhbHVlIiwidW5kZWZpbmVkIiwiX190eXBlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/protocols/json/awsExpectUnion.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/protocols/json/parseJsonBody.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/core/dist-es/submodules/protocols/json/parseJsonBody.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadRestJsonErrorCode: () => (/* binding */ loadRestJsonErrorCode),\n/* harmony export */   parseJsonBody: () => (/* binding */ parseJsonBody),\n/* harmony export */   parseJsonErrorBody: () => (/* binding */ parseJsonErrorBody)\n/* harmony export */ });\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/protocols/common.js\");\n\nconst parseJsonBody = (streamBody, context)=>(0,_common__WEBPACK_IMPORTED_MODULE_0__.collectBodyString)(streamBody, context).then((encoded)=>{\n        if (encoded.length) {\n            try {\n                return JSON.parse(encoded);\n            } catch (e) {\n                if (e?.name === \"SyntaxError\") {\n                    Object.defineProperty(e, \"$responseBodyText\", {\n                        value: encoded\n                    });\n                }\n                throw e;\n            }\n        }\n        return {};\n    });\nconst parseJsonErrorBody = async (errorBody, context)=>{\n    const value = await parseJsonBody(errorBody, context);\n    value.message = value.message ?? value.Message;\n    return value;\n};\nconst loadRestJsonErrorCode = (output, data)=>{\n    const findKey = (object, key)=>Object.keys(object).find((k)=>k.toLowerCase() === key.toLowerCase());\n    const sanitizeErrorCode = (rawValue)=>{\n        let cleanValue = rawValue;\n        if (typeof cleanValue === \"number\") {\n            cleanValue = cleanValue.toString();\n        }\n        if (cleanValue.indexOf(\",\") >= 0) {\n            cleanValue = cleanValue.split(\",\")[0];\n        }\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data.code !== undefined) {\n        return sanitizeErrorCode(data.code);\n    }\n    if (data[\"__type\"] !== undefined) {\n        return sanitizeErrorCode(data[\"__type\"]);\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY29yZS9kaXN0LWVzL3N1Ym1vZHVsZXMvcHJvdG9jb2xzL2pzb24vcGFyc2VKc29uQm9keS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQThDO0FBQ3ZDLE1BQU1DLGdCQUFnQixDQUFDQyxZQUFZQyxVQUFZSCwwREFBaUJBLENBQUNFLFlBQVlDLFNBQVNDLElBQUksQ0FBQyxDQUFDQztRQUMvRixJQUFJQSxRQUFRQyxNQUFNLEVBQUU7WUFDaEIsSUFBSTtnQkFDQSxPQUFPQyxLQUFLQyxLQUFLLENBQUNIO1lBQ3RCLEVBQ0EsT0FBT0ksR0FBRztnQkFDTixJQUFJQSxHQUFHQyxTQUFTLGVBQWU7b0JBQzNCQyxPQUFPQyxjQUFjLENBQUNILEdBQUcscUJBQXFCO3dCQUMxQ0ksT0FBT1I7b0JBQ1g7Z0JBQ0o7Z0JBQ0EsTUFBTUk7WUFDVjtRQUNKO1FBQ0EsT0FBTyxDQUFDO0lBQ1osR0FBRztBQUNJLE1BQU1LLHFCQUFxQixPQUFPQyxXQUFXWjtJQUNoRCxNQUFNVSxRQUFRLE1BQU1aLGNBQWNjLFdBQVdaO0lBQzdDVSxNQUFNRyxPQUFPLEdBQUdILE1BQU1HLE9BQU8sSUFBSUgsTUFBTUksT0FBTztJQUM5QyxPQUFPSjtBQUNYLEVBQUU7QUFDSyxNQUFNSyx3QkFBd0IsQ0FBQ0MsUUFBUUM7SUFDMUMsTUFBTUMsVUFBVSxDQUFDQyxRQUFRQyxNQUFRWixPQUFPYSxJQUFJLENBQUNGLFFBQVFHLElBQUksQ0FBQyxDQUFDQyxJQUFNQSxFQUFFQyxXQUFXLE9BQU9KLElBQUlJLFdBQVc7SUFDcEcsTUFBTUMsb0JBQW9CLENBQUNDO1FBQ3ZCLElBQUlDLGFBQWFEO1FBQ2pCLElBQUksT0FBT0MsZUFBZSxVQUFVO1lBQ2hDQSxhQUFhQSxXQUFXQyxRQUFRO1FBQ3BDO1FBQ0EsSUFBSUQsV0FBV0UsT0FBTyxDQUFDLFFBQVEsR0FBRztZQUM5QkYsYUFBYUEsV0FBV0csS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFO1FBQ3pDO1FBQ0EsSUFBSUgsV0FBV0UsT0FBTyxDQUFDLFFBQVEsR0FBRztZQUM5QkYsYUFBYUEsV0FBV0csS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFO1FBQ3pDO1FBQ0EsSUFBSUgsV0FBV0UsT0FBTyxDQUFDLFFBQVEsR0FBRztZQUM5QkYsYUFBYUEsV0FBV0csS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFO1FBQ3pDO1FBQ0EsT0FBT0g7SUFDWDtJQUNBLE1BQU1JLFlBQVliLFFBQVFGLE9BQU9nQixPQUFPLEVBQUU7SUFDMUMsSUFBSUQsY0FBY0UsV0FBVztRQUN6QixPQUFPUixrQkFBa0JULE9BQU9nQixPQUFPLENBQUNELFVBQVU7SUFDdEQ7SUFDQSxJQUFJZCxLQUFLaUIsSUFBSSxLQUFLRCxXQUFXO1FBQ3pCLE9BQU9SLGtCQUFrQlIsS0FBS2lCLElBQUk7SUFDdEM7SUFDQSxJQUFJakIsSUFBSSxDQUFDLFNBQVMsS0FBS2dCLFdBQVc7UUFDOUIsT0FBT1Isa0JBQWtCUixJQUFJLENBQUMsU0FBUztJQUMzQztBQUNKLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbG91ZHNoaWZ0Ly4vbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL2NvcmUvZGlzdC1lcy9zdWJtb2R1bGVzL3Byb3RvY29scy9qc29uL3BhcnNlSnNvbkJvZHkuanM/YzU2MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb2xsZWN0Qm9keVN0cmluZyB9IGZyb20gXCIuLi9jb21tb25cIjtcbmV4cG9ydCBjb25zdCBwYXJzZUpzb25Cb2R5ID0gKHN0cmVhbUJvZHksIGNvbnRleHQpID0+IGNvbGxlY3RCb2R5U3RyaW5nKHN0cmVhbUJvZHksIGNvbnRleHQpLnRoZW4oKGVuY29kZWQpID0+IHtcbiAgICBpZiAoZW5jb2RlZC5sZW5ndGgpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiBKU09OLnBhcnNlKGVuY29kZWQpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICBpZiAoZT8ubmFtZSA9PT0gXCJTeW50YXhFcnJvclwiKSB7XG4gICAgICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIFwiJHJlc3BvbnNlQm9keVRleHRcIiwge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogZW5jb2RlZCxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRocm93IGU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHt9O1xufSk7XG5leHBvcnQgY29uc3QgcGFyc2VKc29uRXJyb3JCb2R5ID0gYXN5bmMgKGVycm9yQm9keSwgY29udGV4dCkgPT4ge1xuICAgIGNvbnN0IHZhbHVlID0gYXdhaXQgcGFyc2VKc29uQm9keShlcnJvckJvZHksIGNvbnRleHQpO1xuICAgIHZhbHVlLm1lc3NhZ2UgPSB2YWx1ZS5tZXNzYWdlID8/IHZhbHVlLk1lc3NhZ2U7XG4gICAgcmV0dXJuIHZhbHVlO1xufTtcbmV4cG9ydCBjb25zdCBsb2FkUmVzdEpzb25FcnJvckNvZGUgPSAob3V0cHV0LCBkYXRhKSA9PiB7XG4gICAgY29uc3QgZmluZEtleSA9IChvYmplY3QsIGtleSkgPT4gT2JqZWN0LmtleXMob2JqZWN0KS5maW5kKChrKSA9PiBrLnRvTG93ZXJDYXNlKCkgPT09IGtleS50b0xvd2VyQ2FzZSgpKTtcbiAgICBjb25zdCBzYW5pdGl6ZUVycm9yQ29kZSA9IChyYXdWYWx1ZSkgPT4ge1xuICAgICAgICBsZXQgY2xlYW5WYWx1ZSA9IHJhd1ZhbHVlO1xuICAgICAgICBpZiAodHlwZW9mIGNsZWFuVmFsdWUgPT09IFwibnVtYmVyXCIpIHtcbiAgICAgICAgICAgIGNsZWFuVmFsdWUgPSBjbGVhblZhbHVlLnRvU3RyaW5nKCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNsZWFuVmFsdWUuaW5kZXhPZihcIixcIikgPj0gMCkge1xuICAgICAgICAgICAgY2xlYW5WYWx1ZSA9IGNsZWFuVmFsdWUuc3BsaXQoXCIsXCIpWzBdO1xuICAgICAgICB9XG4gICAgICAgIGlmIChjbGVhblZhbHVlLmluZGV4T2YoXCI6XCIpID49IDApIHtcbiAgICAgICAgICAgIGNsZWFuVmFsdWUgPSBjbGVhblZhbHVlLnNwbGl0KFwiOlwiKVswXTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoY2xlYW5WYWx1ZS5pbmRleE9mKFwiI1wiKSA+PSAwKSB7XG4gICAgICAgICAgICBjbGVhblZhbHVlID0gY2xlYW5WYWx1ZS5zcGxpdChcIiNcIilbMV07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNsZWFuVmFsdWU7XG4gICAgfTtcbiAgICBjb25zdCBoZWFkZXJLZXkgPSBmaW5kS2V5KG91dHB1dC5oZWFkZXJzLCBcIngtYW16bi1lcnJvcnR5cGVcIik7XG4gICAgaWYgKGhlYWRlcktleSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiBzYW5pdGl6ZUVycm9yQ29kZShvdXRwdXQuaGVhZGVyc1toZWFkZXJLZXldKTtcbiAgICB9XG4gICAgaWYgKGRhdGEuY29kZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiBzYW5pdGl6ZUVycm9yQ29kZShkYXRhLmNvZGUpO1xuICAgIH1cbiAgICBpZiAoZGF0YVtcIl9fdHlwZVwiXSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiBzYW5pdGl6ZUVycm9yQ29kZShkYXRhW1wiX190eXBlXCJdKTtcbiAgICB9XG59O1xuIl0sIm5hbWVzIjpbImNvbGxlY3RCb2R5U3RyaW5nIiwicGFyc2VKc29uQm9keSIsInN0cmVhbUJvZHkiLCJjb250ZXh0IiwidGhlbiIsImVuY29kZWQiLCJsZW5ndGgiLCJKU09OIiwicGFyc2UiLCJlIiwibmFtZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwidmFsdWUiLCJwYXJzZUpzb25FcnJvckJvZHkiLCJlcnJvckJvZHkiLCJtZXNzYWdlIiwiTWVzc2FnZSIsImxvYWRSZXN0SnNvbkVycm9yQ29kZSIsIm91dHB1dCIsImRhdGEiLCJmaW5kS2V5Iiwib2JqZWN0Iiwia2V5Iiwia2V5cyIsImZpbmQiLCJrIiwidG9Mb3dlckNhc2UiLCJzYW5pdGl6ZUVycm9yQ29kZSIsInJhd1ZhbHVlIiwiY2xlYW5WYWx1ZSIsInRvU3RyaW5nIiwiaW5kZXhPZiIsInNwbGl0IiwiaGVhZGVyS2V5IiwiaGVhZGVycyIsInVuZGVmaW5lZCIsImNvZGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/protocols/json/parseJsonBody.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/protocols/xml/parseXmlBody.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/core/dist-es/submodules/protocols/xml/parseXmlBody.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadRestXmlErrorCode: () => (/* binding */ loadRestXmlErrorCode),\n/* harmony export */   parseXmlBody: () => (/* binding */ parseXmlBody),\n/* harmony export */   parseXmlErrorBody: () => (/* binding */ parseXmlErrorBody)\n/* harmony export */ });\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/./node_modules/@smithy/smithy-client/dist-cjs/index.js\");\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var fast_xml_parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fast-xml-parser */ \"(rsc)/./node_modules/fast-xml-parser/src/fxp.js\");\n/* harmony import */ var fast_xml_parser__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fast_xml_parser__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/protocols/common.js\");\n\n\n\nconst parseXmlBody = (streamBody, context)=>(0,_common__WEBPACK_IMPORTED_MODULE_2__.collectBodyString)(streamBody, context).then((encoded)=>{\n        if (encoded.length) {\n            const parser = new fast_xml_parser__WEBPACK_IMPORTED_MODULE_1__.XMLParser({\n                attributeNamePrefix: \"\",\n                htmlEntities: true,\n                ignoreAttributes: false,\n                ignoreDeclaration: true,\n                parseTagValue: false,\n                trimValues: false,\n                tagValueProcessor: (_, val)=>val.trim() === \"\" && val.includes(\"\\n\") ? \"\" : undefined\n            });\n            parser.addEntity(\"#xD\", \"\\r\");\n            parser.addEntity(\"#10\", \"\\n\");\n            let parsedObj;\n            try {\n                parsedObj = parser.parse(encoded, true);\n            } catch (e) {\n                if (e && typeof e === \"object\") {\n                    Object.defineProperty(e, \"$responseBodyText\", {\n                        value: encoded\n                    });\n                }\n                throw e;\n            }\n            const textNodeName = \"#text\";\n            const key = Object.keys(parsedObj)[0];\n            const parsedObjToReturn = parsedObj[key];\n            if (parsedObjToReturn[textNodeName]) {\n                parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\n                delete parsedObjToReturn[textNodeName];\n            }\n            return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.getValueFromTextNode)(parsedObjToReturn);\n        }\n        return {};\n    });\nconst parseXmlErrorBody = async (errorBody, context)=>{\n    const value = await parseXmlBody(errorBody, context);\n    if (value.Error) {\n        value.Error.message = value.Error.message ?? value.Error.Message;\n    }\n    return value;\n};\nconst loadRestXmlErrorCode = (output, data)=>{\n    if (data?.Error?.Code !== undefined) {\n        return data.Error.Code;\n    }\n    if (data?.Code !== undefined) {\n        return data.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY29yZS9kaXN0LWVzL3N1Ym1vZHVsZXMvcHJvdG9jb2xzL3htbC9wYXJzZVhtbEJvZHkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBNkQ7QUFDakI7QUFDRTtBQUN2QyxNQUFNRyxlQUFlLENBQUNDLFlBQVlDLFVBQVlILDBEQUFpQkEsQ0FBQ0UsWUFBWUMsU0FBU0MsSUFBSSxDQUFDLENBQUNDO1FBQzlGLElBQUlBLFFBQVFDLE1BQU0sRUFBRTtZQUNoQixNQUFNQyxTQUFTLElBQUlSLHNEQUFTQSxDQUFDO2dCQUN6QlMscUJBQXFCO2dCQUNyQkMsY0FBYztnQkFDZEMsa0JBQWtCO2dCQUNsQkMsbUJBQW1CO2dCQUNuQkMsZUFBZTtnQkFDZkMsWUFBWTtnQkFDWkMsbUJBQW1CLENBQUNDLEdBQUdDLE1BQVNBLElBQUlDLElBQUksT0FBTyxNQUFNRCxJQUFJRSxRQUFRLENBQUMsUUFBUSxLQUFLQztZQUNuRjtZQUNBWixPQUFPYSxTQUFTLENBQUMsT0FBTztZQUN4QmIsT0FBT2EsU0FBUyxDQUFDLE9BQU87WUFDeEIsSUFBSUM7WUFDSixJQUFJO2dCQUNBQSxZQUFZZCxPQUFPZSxLQUFLLENBQUNqQixTQUFTO1lBQ3RDLEVBQ0EsT0FBT2tCLEdBQUc7Z0JBQ04sSUFBSUEsS0FBSyxPQUFPQSxNQUFNLFVBQVU7b0JBQzVCQyxPQUFPQyxjQUFjLENBQUNGLEdBQUcscUJBQXFCO3dCQUMxQ0csT0FBT3JCO29CQUNYO2dCQUNKO2dCQUNBLE1BQU1rQjtZQUNWO1lBQ0EsTUFBTUksZUFBZTtZQUNyQixNQUFNQyxNQUFNSixPQUFPSyxJQUFJLENBQUNSLFVBQVUsQ0FBQyxFQUFFO1lBQ3JDLE1BQU1TLG9CQUFvQlQsU0FBUyxDQUFDTyxJQUFJO1lBQ3hDLElBQUlFLGlCQUFpQixDQUFDSCxhQUFhLEVBQUU7Z0JBQ2pDRyxpQkFBaUIsQ0FBQ0YsSUFBSSxHQUFHRSxpQkFBaUIsQ0FBQ0gsYUFBYTtnQkFDeEQsT0FBT0csaUJBQWlCLENBQUNILGFBQWE7WUFDMUM7WUFDQSxPQUFPN0IsMkVBQW9CQSxDQUFDZ0M7UUFDaEM7UUFDQSxPQUFPLENBQUM7SUFDWixHQUFHO0FBQ0ksTUFBTUMsb0JBQW9CLE9BQU9DLFdBQVc3QjtJQUMvQyxNQUFNdUIsUUFBUSxNQUFNekIsYUFBYStCLFdBQVc3QjtJQUM1QyxJQUFJdUIsTUFBTU8sS0FBSyxFQUFFO1FBQ2JQLE1BQU1PLEtBQUssQ0FBQ0MsT0FBTyxHQUFHUixNQUFNTyxLQUFLLENBQUNDLE9BQU8sSUFBSVIsTUFBTU8sS0FBSyxDQUFDRSxPQUFPO0lBQ3BFO0lBQ0EsT0FBT1Q7QUFDWCxFQUFFO0FBQ0ssTUFBTVUsdUJBQXVCLENBQUNDLFFBQVFDO0lBQ3pDLElBQUlBLE1BQU1MLE9BQU9NLFNBQVNwQixXQUFXO1FBQ2pDLE9BQU9tQixLQUFLTCxLQUFLLENBQUNNLElBQUk7SUFDMUI7SUFDQSxJQUFJRCxNQUFNQyxTQUFTcEIsV0FBVztRQUMxQixPQUFPbUIsS0FBS0MsSUFBSTtJQUNwQjtJQUNBLElBQUlGLE9BQU9HLFVBQVUsSUFBSSxLQUFLO1FBQzFCLE9BQU87SUFDWDtBQUNKLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbG91ZHNoaWZ0Ly4vbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL2NvcmUvZGlzdC1lcy9zdWJtb2R1bGVzL3Byb3RvY29scy94bWwvcGFyc2VYbWxCb2R5LmpzP2I0NDUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0VmFsdWVGcm9tVGV4dE5vZGUgfSBmcm9tIFwiQHNtaXRoeS9zbWl0aHktY2xpZW50XCI7XG5pbXBvcnQgeyBYTUxQYXJzZXIgfSBmcm9tIFwiZmFzdC14bWwtcGFyc2VyXCI7XG5pbXBvcnQgeyBjb2xsZWN0Qm9keVN0cmluZyB9IGZyb20gXCIuLi9jb21tb25cIjtcbmV4cG9ydCBjb25zdCBwYXJzZVhtbEJvZHkgPSAoc3RyZWFtQm9keSwgY29udGV4dCkgPT4gY29sbGVjdEJvZHlTdHJpbmcoc3RyZWFtQm9keSwgY29udGV4dCkudGhlbigoZW5jb2RlZCkgPT4ge1xuICAgIGlmIChlbmNvZGVkLmxlbmd0aCkge1xuICAgICAgICBjb25zdCBwYXJzZXIgPSBuZXcgWE1MUGFyc2VyKHtcbiAgICAgICAgICAgIGF0dHJpYnV0ZU5hbWVQcmVmaXg6IFwiXCIsXG4gICAgICAgICAgICBodG1sRW50aXRpZXM6IHRydWUsXG4gICAgICAgICAgICBpZ25vcmVBdHRyaWJ1dGVzOiBmYWxzZSxcbiAgICAgICAgICAgIGlnbm9yZURlY2xhcmF0aW9uOiB0cnVlLFxuICAgICAgICAgICAgcGFyc2VUYWdWYWx1ZTogZmFsc2UsXG4gICAgICAgICAgICB0cmltVmFsdWVzOiBmYWxzZSxcbiAgICAgICAgICAgIHRhZ1ZhbHVlUHJvY2Vzc29yOiAoXywgdmFsKSA9PiAodmFsLnRyaW0oKSA9PT0gXCJcIiAmJiB2YWwuaW5jbHVkZXMoXCJcXG5cIikgPyBcIlwiIDogdW5kZWZpbmVkKSxcbiAgICAgICAgfSk7XG4gICAgICAgIHBhcnNlci5hZGRFbnRpdHkoXCIjeERcIiwgXCJcXHJcIik7XG4gICAgICAgIHBhcnNlci5hZGRFbnRpdHkoXCIjMTBcIiwgXCJcXG5cIik7XG4gICAgICAgIGxldCBwYXJzZWRPYmo7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBwYXJzZWRPYmogPSBwYXJzZXIucGFyc2UoZW5jb2RlZCwgdHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGlmIChlICYmIHR5cGVvZiBlID09PSBcIm9iamVjdFwiKSB7XG4gICAgICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIFwiJHJlc3BvbnNlQm9keVRleHRcIiwge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogZW5jb2RlZCxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRocm93IGU7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgdGV4dE5vZGVOYW1lID0gXCIjdGV4dFwiO1xuICAgICAgICBjb25zdCBrZXkgPSBPYmplY3Qua2V5cyhwYXJzZWRPYmopWzBdO1xuICAgICAgICBjb25zdCBwYXJzZWRPYmpUb1JldHVybiA9IHBhcnNlZE9ialtrZXldO1xuICAgICAgICBpZiAocGFyc2VkT2JqVG9SZXR1cm5bdGV4dE5vZGVOYW1lXSkge1xuICAgICAgICAgICAgcGFyc2VkT2JqVG9SZXR1cm5ba2V5XSA9IHBhcnNlZE9ialRvUmV0dXJuW3RleHROb2RlTmFtZV07XG4gICAgICAgICAgICBkZWxldGUgcGFyc2VkT2JqVG9SZXR1cm5bdGV4dE5vZGVOYW1lXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZ2V0VmFsdWVGcm9tVGV4dE5vZGUocGFyc2VkT2JqVG9SZXR1cm4pO1xuICAgIH1cbiAgICByZXR1cm4ge307XG59KTtcbmV4cG9ydCBjb25zdCBwYXJzZVhtbEVycm9yQm9keSA9IGFzeW5jIChlcnJvckJvZHksIGNvbnRleHQpID0+IHtcbiAgICBjb25zdCB2YWx1ZSA9IGF3YWl0IHBhcnNlWG1sQm9keShlcnJvckJvZHksIGNvbnRleHQpO1xuICAgIGlmICh2YWx1ZS5FcnJvcikge1xuICAgICAgICB2YWx1ZS5FcnJvci5tZXNzYWdlID0gdmFsdWUuRXJyb3IubWVzc2FnZSA/PyB2YWx1ZS5FcnJvci5NZXNzYWdlO1xuICAgIH1cbiAgICByZXR1cm4gdmFsdWU7XG59O1xuZXhwb3J0IGNvbnN0IGxvYWRSZXN0WG1sRXJyb3JDb2RlID0gKG91dHB1dCwgZGF0YSkgPT4ge1xuICAgIGlmIChkYXRhPy5FcnJvcj8uQ29kZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiBkYXRhLkVycm9yLkNvZGU7XG4gICAgfVxuICAgIGlmIChkYXRhPy5Db2RlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIGRhdGEuQ29kZTtcbiAgICB9XG4gICAgaWYgKG91dHB1dC5zdGF0dXNDb2RlID09IDQwNCkge1xuICAgICAgICByZXR1cm4gXCJOb3RGb3VuZFwiO1xuICAgIH1cbn07XG4iXSwibmFtZXMiOlsiZ2V0VmFsdWVGcm9tVGV4dE5vZGUiLCJYTUxQYXJzZXIiLCJjb2xsZWN0Qm9keVN0cmluZyIsInBhcnNlWG1sQm9keSIsInN0cmVhbUJvZHkiLCJjb250ZXh0IiwidGhlbiIsImVuY29kZWQiLCJsZW5ndGgiLCJwYXJzZXIiLCJhdHRyaWJ1dGVOYW1lUHJlZml4IiwiaHRtbEVudGl0aWVzIiwiaWdub3JlQXR0cmlidXRlcyIsImlnbm9yZURlY2xhcmF0aW9uIiwicGFyc2VUYWdWYWx1ZSIsInRyaW1WYWx1ZXMiLCJ0YWdWYWx1ZVByb2Nlc3NvciIsIl8iLCJ2YWwiLCJ0cmltIiwiaW5jbHVkZXMiLCJ1bmRlZmluZWQiLCJhZGRFbnRpdHkiLCJwYXJzZWRPYmoiLCJwYXJzZSIsImUiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsInZhbHVlIiwidGV4dE5vZGVOYW1lIiwia2V5Iiwia2V5cyIsInBhcnNlZE9ialRvUmV0dXJuIiwicGFyc2VYbWxFcnJvckJvZHkiLCJlcnJvckJvZHkiLCJFcnJvciIsIm1lc3NhZ2UiLCJNZXNzYWdlIiwibG9hZFJlc3RYbWxFcnJvckNvZGUiLCJvdXRwdXQiLCJkYXRhIiwiQ29kZSIsInN0YXR1c0NvZGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/protocols/xml/parseXmlBody.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/credential-provider-env/dist-cjs/index.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@aws-sdk/credential-provider-env/dist-cjs/index.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value)=>__defProp(target, \"name\", {\n        value,\n        configurable: true\n    });\nvar __export = (target, all)=>{\n    for(var name in all)__defProp(target, name, {\n        get: all[name],\n        enumerable: true\n    });\n};\nvar __copyProps = (to, from, except, desc)=>{\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n            get: ()=>from[key],\n            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n    }\n    return to;\n};\nvar __toCommonJS = (mod)=>__copyProps(__defProp({}, \"__esModule\", {\n        value: true\n    }), mod);\n// src/index.ts\nvar index_exports = {};\n__export(index_exports, {\n    ENV_ACCOUNT_ID: ()=>ENV_ACCOUNT_ID,\n    ENV_CREDENTIAL_SCOPE: ()=>ENV_CREDENTIAL_SCOPE,\n    ENV_EXPIRATION: ()=>ENV_EXPIRATION,\n    ENV_KEY: ()=>ENV_KEY,\n    ENV_SECRET: ()=>ENV_SECRET,\n    ENV_SESSION: ()=>ENV_SESSION,\n    fromEnv: ()=>fromEnv\n});\nmodule.exports = __toCommonJS(index_exports);\n// src/fromEnv.ts\nvar import_client = __webpack_require__(/*! @aws-sdk/core/client */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/client/index.js\");\nvar import_property_provider = __webpack_require__(/*! @smithy/property-provider */ \"(rsc)/./node_modules/@smithy/property-provider/dist-cjs/index.js\");\nvar ENV_KEY = \"AWS_ACCESS_KEY_ID\";\nvar ENV_SECRET = \"AWS_SECRET_ACCESS_KEY\";\nvar ENV_SESSION = \"AWS_SESSION_TOKEN\";\nvar ENV_EXPIRATION = \"AWS_CREDENTIAL_EXPIRATION\";\nvar ENV_CREDENTIAL_SCOPE = \"AWS_CREDENTIAL_SCOPE\";\nvar ENV_ACCOUNT_ID = \"AWS_ACCOUNT_ID\";\nvar fromEnv = /* @__PURE__ */ __name((init)=>async ()=>{\n        init?.logger?.debug(\"@aws-sdk/credential-provider-env - fromEnv\");\n        const accessKeyId = process.env[ENV_KEY];\n        const secretAccessKey = process.env[ENV_SECRET];\n        const sessionToken = process.env[ENV_SESSION];\n        const expiry = process.env[ENV_EXPIRATION];\n        const credentialScope = process.env[ENV_CREDENTIAL_SCOPE];\n        const accountId = process.env[ENV_ACCOUNT_ID];\n        if (accessKeyId && secretAccessKey) {\n            const credentials = {\n                accessKeyId,\n                secretAccessKey,\n                ...sessionToken && {\n                    sessionToken\n                },\n                ...expiry && {\n                    expiration: new Date(expiry)\n                },\n                ...credentialScope && {\n                    credentialScope\n                },\n                ...accountId && {\n                    accountId\n                }\n            };\n            (0, import_client.setCredentialFeature)(credentials, \"CREDENTIALS_ENV_VARS\", \"g\");\n            return credentials;\n        }\n        throw new import_property_provider.CredentialsProviderError(\"Unable to find environment variable credentials.\", {\n            logger: init?.logger\n        });\n    }, \"fromEnv\");\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY3JlZGVudGlhbC1wcm92aWRlci1lbnYvZGlzdC1janMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixJQUFJQSxZQUFZQyxPQUFPQyxjQUFjO0FBQ3JDLElBQUlDLG1CQUFtQkYsT0FBT0csd0JBQXdCO0FBQ3RELElBQUlDLG9CQUFvQkosT0FBT0ssbUJBQW1CO0FBQ2xELElBQUlDLGVBQWVOLE9BQU9PLFNBQVMsQ0FBQ0MsY0FBYztBQUNsRCxJQUFJQyxTQUFTLENBQUNDLFFBQVFDLFFBQVVaLFVBQVVXLFFBQVEsUUFBUTtRQUFFQztRQUFPQyxjQUFjO0lBQUs7QUFDdEYsSUFBSUMsV0FBVyxDQUFDSCxRQUFRSTtJQUN0QixJQUFLLElBQUlDLFFBQVFELElBQ2ZmLFVBQVVXLFFBQVFLLE1BQU07UUFBRUMsS0FBS0YsR0FBRyxDQUFDQyxLQUFLO1FBQUVFLFlBQVk7SUFBSztBQUMvRDtBQUNBLElBQUlDLGNBQWMsQ0FBQ0MsSUFBSUMsTUFBTUMsUUFBUUM7SUFDbkMsSUFBSUYsUUFBUSxPQUFPQSxTQUFTLFlBQVksT0FBT0EsU0FBUyxZQUFZO1FBQ2xFLEtBQUssSUFBSUcsT0FBT25CLGtCQUFrQmdCLE1BQ2hDLElBQUksQ0FBQ2QsYUFBYWtCLElBQUksQ0FBQ0wsSUFBSUksUUFBUUEsUUFBUUYsUUFDekN0QixVQUFVb0IsSUFBSUksS0FBSztZQUFFUCxLQUFLLElBQU1JLElBQUksQ0FBQ0csSUFBSTtZQUFFTixZQUFZLENBQUVLLENBQUFBLE9BQU9wQixpQkFBaUJrQixNQUFNRyxJQUFHLEtBQU1ELEtBQUtMLFVBQVU7UUFBQztJQUN0SDtJQUNBLE9BQU9FO0FBQ1Q7QUFDQSxJQUFJTSxlQUFlLENBQUNDLE1BQVFSLFlBQVluQixVQUFVLENBQUMsR0FBRyxjQUFjO1FBQUVZLE9BQU87SUFBSyxJQUFJZTtBQUV0RixlQUFlO0FBQ2YsSUFBSUMsZ0JBQWdCLENBQUM7QUFDckJkLFNBQVNjLGVBQWU7SUFDdEJDLGdCQUFnQixJQUFNQTtJQUN0QkMsc0JBQXNCLElBQU1BO0lBQzVCQyxnQkFBZ0IsSUFBTUE7SUFDdEJDLFNBQVMsSUFBTUE7SUFDZkMsWUFBWSxJQUFNQTtJQUNsQkMsYUFBYSxJQUFNQTtJQUNuQkMsU0FBUyxJQUFNQTtBQUNqQjtBQUNBQyxPQUFPQyxPQUFPLEdBQUdYLGFBQWFFO0FBRTlCLGlCQUFpQjtBQUNqQixJQUFJVSxnQkFBZ0JDLG1CQUFPQSxDQUFDLG1HQUFzQjtBQUNsRCxJQUFJQywyQkFBMkJELG1CQUFPQSxDQUFDLG1HQUEyQjtBQUNsRSxJQUFJUCxVQUFVO0FBQ2QsSUFBSUMsYUFBYTtBQUNqQixJQUFJQyxjQUFjO0FBQ2xCLElBQUlILGlCQUFpQjtBQUNyQixJQUFJRCx1QkFBdUI7QUFDM0IsSUFBSUQsaUJBQWlCO0FBQ3JCLElBQUlNLFVBQVUsYUFBYSxHQUFHekIsT0FBTyxDQUFDK0IsT0FBUztRQUM3Q0EsTUFBTUMsUUFBUUMsTUFBTTtRQUNwQixNQUFNQyxjQUFjQyxRQUFRQyxHQUFHLENBQUNkLFFBQVE7UUFDeEMsTUFBTWUsa0JBQWtCRixRQUFRQyxHQUFHLENBQUNiLFdBQVc7UUFDL0MsTUFBTWUsZUFBZUgsUUFBUUMsR0FBRyxDQUFDWixZQUFZO1FBQzdDLE1BQU1lLFNBQVNKLFFBQVFDLEdBQUcsQ0FBQ2YsZUFBZTtRQUMxQyxNQUFNbUIsa0JBQWtCTCxRQUFRQyxHQUFHLENBQUNoQixxQkFBcUI7UUFDekQsTUFBTXFCLFlBQVlOLFFBQVFDLEdBQUcsQ0FBQ2pCLGVBQWU7UUFDN0MsSUFBSWUsZUFBZUcsaUJBQWlCO1lBQ2xDLE1BQU1LLGNBQWM7Z0JBQ2xCUjtnQkFDQUc7Z0JBQ0EsR0FBR0MsZ0JBQWdCO29CQUFFQTtnQkFBYSxDQUFDO2dCQUNuQyxHQUFHQyxVQUFVO29CQUFFSSxZQUFZLElBQUlDLEtBQUtMO2dCQUFRLENBQUM7Z0JBQzdDLEdBQUdDLG1CQUFtQjtvQkFBRUE7Z0JBQWdCLENBQUM7Z0JBQ3pDLEdBQUdDLGFBQWE7b0JBQUVBO2dCQUFVLENBQUM7WUFDL0I7WUFDQyxJQUFHYixjQUFjaUIsb0JBQW9CLEVBQUVILGFBQWEsd0JBQXdCO1lBQzdFLE9BQU9BO1FBQ1Q7UUFDQSxNQUFNLElBQUlaLHlCQUF5QmdCLHdCQUF3QixDQUFDLG9EQUFvRDtZQUFFZCxRQUFRRCxNQUFNQztRQUFPO0lBQ3pJLEdBQUc7QUFDSCw2REFBNkQ7QUFFN0QsS0FBTU4sQ0FBQUEsQ0FRTiIsInNvdXJjZXMiOlsid2VicGFjazovL2Nsb3Vkc2hpZnQvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY3JlZGVudGlhbC1wcm92aWRlci1lbnYvZGlzdC1janMvaW5kZXguanM/NmQzZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2RlZlByb3AgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgX19nZXRPd25Qcm9wRGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG52YXIgX19nZXRPd25Qcm9wTmFtZXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcztcbnZhciBfX2hhc093blByb3AgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIF9fbmFtZSA9ICh0YXJnZXQsIHZhbHVlKSA9PiBfX2RlZlByb3AodGFyZ2V0LCBcIm5hbWVcIiwgeyB2YWx1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0pO1xudmFyIF9fZXhwb3J0ID0gKHRhcmdldCwgYWxsKSA9PiB7XG4gIGZvciAodmFyIG5hbWUgaW4gYWxsKVxuICAgIF9fZGVmUHJvcCh0YXJnZXQsIG5hbWUsIHsgZ2V0OiBhbGxbbmFtZV0sIGVudW1lcmFibGU6IHRydWUgfSk7XG59O1xudmFyIF9fY29weVByb3BzID0gKHRvLCBmcm9tLCBleGNlcHQsIGRlc2MpID0+IHtcbiAgaWYgKGZyb20gJiYgdHlwZW9mIGZyb20gPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGZyb20gPT09IFwiZnVuY3Rpb25cIikge1xuICAgIGZvciAobGV0IGtleSBvZiBfX2dldE93blByb3BOYW1lcyhmcm9tKSlcbiAgICAgIGlmICghX19oYXNPd25Qcm9wLmNhbGwodG8sIGtleSkgJiYga2V5ICE9PSBleGNlcHQpXG4gICAgICAgIF9fZGVmUHJvcCh0bywga2V5LCB7IGdldDogKCkgPT4gZnJvbVtrZXldLCBlbnVtZXJhYmxlOiAhKGRlc2MgPSBfX2dldE93blByb3BEZXNjKGZyb20sIGtleSkpIHx8IGRlc2MuZW51bWVyYWJsZSB9KTtcbiAgfVxuICByZXR1cm4gdG87XG59O1xudmFyIF9fdG9Db21tb25KUyA9IChtb2QpID0+IF9fY29weVByb3BzKF9fZGVmUHJvcCh7fSwgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSksIG1vZCk7XG5cbi8vIHNyYy9pbmRleC50c1xudmFyIGluZGV4X2V4cG9ydHMgPSB7fTtcbl9fZXhwb3J0KGluZGV4X2V4cG9ydHMsIHtcbiAgRU5WX0FDQ09VTlRfSUQ6ICgpID0+IEVOVl9BQ0NPVU5UX0lELFxuICBFTlZfQ1JFREVOVElBTF9TQ09QRTogKCkgPT4gRU5WX0NSRURFTlRJQUxfU0NPUEUsXG4gIEVOVl9FWFBJUkFUSU9OOiAoKSA9PiBFTlZfRVhQSVJBVElPTixcbiAgRU5WX0tFWTogKCkgPT4gRU5WX0tFWSxcbiAgRU5WX1NFQ1JFVDogKCkgPT4gRU5WX1NFQ1JFVCxcbiAgRU5WX1NFU1NJT046ICgpID0+IEVOVl9TRVNTSU9OLFxuICBmcm9tRW52OiAoKSA9PiBmcm9tRW52XG59KTtcbm1vZHVsZS5leHBvcnRzID0gX190b0NvbW1vbkpTKGluZGV4X2V4cG9ydHMpO1xuXG4vLyBzcmMvZnJvbUVudi50c1xudmFyIGltcG9ydF9jbGllbnQgPSByZXF1aXJlKFwiQGF3cy1zZGsvY29yZS9jbGllbnRcIik7XG52YXIgaW1wb3J0X3Byb3BlcnR5X3Byb3ZpZGVyID0gcmVxdWlyZShcIkBzbWl0aHkvcHJvcGVydHktcHJvdmlkZXJcIik7XG52YXIgRU5WX0tFWSA9IFwiQVdTX0FDQ0VTU19LRVlfSURcIjtcbnZhciBFTlZfU0VDUkVUID0gXCJBV1NfU0VDUkVUX0FDQ0VTU19LRVlcIjtcbnZhciBFTlZfU0VTU0lPTiA9IFwiQVdTX1NFU1NJT05fVE9LRU5cIjtcbnZhciBFTlZfRVhQSVJBVElPTiA9IFwiQVdTX0NSRURFTlRJQUxfRVhQSVJBVElPTlwiO1xudmFyIEVOVl9DUkVERU5USUFMX1NDT1BFID0gXCJBV1NfQ1JFREVOVElBTF9TQ09QRVwiO1xudmFyIEVOVl9BQ0NPVU5UX0lEID0gXCJBV1NfQUNDT1VOVF9JRFwiO1xudmFyIGZyb21FbnYgPSAvKiBAX19QVVJFX18gKi8gX19uYW1lKChpbml0KSA9PiBhc3luYyAoKSA9PiB7XG4gIGluaXQ/LmxvZ2dlcj8uZGVidWcoXCJAYXdzLXNkay9jcmVkZW50aWFsLXByb3ZpZGVyLWVudiAtIGZyb21FbnZcIik7XG4gIGNvbnN0IGFjY2Vzc0tleUlkID0gcHJvY2Vzcy5lbnZbRU5WX0tFWV07XG4gIGNvbnN0IHNlY3JldEFjY2Vzc0tleSA9IHByb2Nlc3MuZW52W0VOVl9TRUNSRVRdO1xuICBjb25zdCBzZXNzaW9uVG9rZW4gPSBwcm9jZXNzLmVudltFTlZfU0VTU0lPTl07XG4gIGNvbnN0IGV4cGlyeSA9IHByb2Nlc3MuZW52W0VOVl9FWFBJUkFUSU9OXTtcbiAgY29uc3QgY3JlZGVudGlhbFNjb3BlID0gcHJvY2Vzcy5lbnZbRU5WX0NSRURFTlRJQUxfU0NPUEVdO1xuICBjb25zdCBhY2NvdW50SWQgPSBwcm9jZXNzLmVudltFTlZfQUNDT1VOVF9JRF07XG4gIGlmIChhY2Nlc3NLZXlJZCAmJiBzZWNyZXRBY2Nlc3NLZXkpIHtcbiAgICBjb25zdCBjcmVkZW50aWFscyA9IHtcbiAgICAgIGFjY2Vzc0tleUlkLFxuICAgICAgc2VjcmV0QWNjZXNzS2V5LFxuICAgICAgLi4uc2Vzc2lvblRva2VuICYmIHsgc2Vzc2lvblRva2VuIH0sXG4gICAgICAuLi5leHBpcnkgJiYgeyBleHBpcmF0aW9uOiBuZXcgRGF0ZShleHBpcnkpIH0sXG4gICAgICAuLi5jcmVkZW50aWFsU2NvcGUgJiYgeyBjcmVkZW50aWFsU2NvcGUgfSxcbiAgICAgIC4uLmFjY291bnRJZCAmJiB7IGFjY291bnRJZCB9XG4gICAgfTtcbiAgICAoMCwgaW1wb3J0X2NsaWVudC5zZXRDcmVkZW50aWFsRmVhdHVyZSkoY3JlZGVudGlhbHMsIFwiQ1JFREVOVElBTFNfRU5WX1ZBUlNcIiwgXCJnXCIpO1xuICAgIHJldHVybiBjcmVkZW50aWFscztcbiAgfVxuICB0aHJvdyBuZXcgaW1wb3J0X3Byb3BlcnR5X3Byb3ZpZGVyLkNyZWRlbnRpYWxzUHJvdmlkZXJFcnJvcihcIlVuYWJsZSB0byBmaW5kIGVudmlyb25tZW50IHZhcmlhYmxlIGNyZWRlbnRpYWxzLlwiLCB7IGxvZ2dlcjogaW5pdD8ubG9nZ2VyIH0pO1xufSwgXCJmcm9tRW52XCIpO1xuLy8gQW5ub3RhdGUgdGhlIENvbW1vbkpTIGV4cG9ydCBuYW1lcyBmb3IgRVNNIGltcG9ydCBpbiBub2RlOlxuXG4wICYmIChtb2R1bGUuZXhwb3J0cyA9IHtcbiAgRU5WX0tFWSxcbiAgRU5WX1NFQ1JFVCxcbiAgRU5WX1NFU1NJT04sXG4gIEVOVl9FWFBJUkFUSU9OLFxuICBFTlZfQ1JFREVOVElBTF9TQ09QRSxcbiAgRU5WX0FDQ09VTlRfSUQsXG4gIGZyb21FbnZcbn0pO1xuXG4iXSwibmFtZXMiOlsiX19kZWZQcm9wIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJfX2dldE93blByb3BEZXNjIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiX19nZXRPd25Qcm9wTmFtZXMiLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwiX19oYXNPd25Qcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJfX25hbWUiLCJ0YXJnZXQiLCJ2YWx1ZSIsImNvbmZpZ3VyYWJsZSIsIl9fZXhwb3J0IiwiYWxsIiwibmFtZSIsImdldCIsImVudW1lcmFibGUiLCJfX2NvcHlQcm9wcyIsInRvIiwiZnJvbSIsImV4Y2VwdCIsImRlc2MiLCJrZXkiLCJjYWxsIiwiX190b0NvbW1vbkpTIiwibW9kIiwiaW5kZXhfZXhwb3J0cyIsIkVOVl9BQ0NPVU5UX0lEIiwiRU5WX0NSRURFTlRJQUxfU0NPUEUiLCJFTlZfRVhQSVJBVElPTiIsIkVOVl9LRVkiLCJFTlZfU0VDUkVUIiwiRU5WX1NFU1NJT04iLCJmcm9tRW52IiwibW9kdWxlIiwiZXhwb3J0cyIsImltcG9ydF9jbGllbnQiLCJyZXF1aXJlIiwiaW1wb3J0X3Byb3BlcnR5X3Byb3ZpZGVyIiwiaW5pdCIsImxvZ2dlciIsImRlYnVnIiwiYWNjZXNzS2V5SWQiLCJwcm9jZXNzIiwiZW52Iiwic2VjcmV0QWNjZXNzS2V5Iiwic2Vzc2lvblRva2VuIiwiZXhwaXJ5IiwiY3JlZGVudGlhbFNjb3BlIiwiYWNjb3VudElkIiwiY3JlZGVudGlhbHMiLCJleHBpcmF0aW9uIiwiRGF0ZSIsInNldENyZWRlbnRpYWxGZWF0dXJlIiwiQ3JlZGVudGlhbHNQcm92aWRlckVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/credential-provider-env/dist-cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/credential-provider-http/dist-cjs/fromHttp/checkUrl.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/credential-provider-http/dist-cjs/fromHttp/checkUrl.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.checkUrl = void 0;\nconst property_provider_1 = __webpack_require__(/*! @smithy/property-provider */ \"(rsc)/./node_modules/@smithy/property-provider/dist-cjs/index.js\");\nconst LOOPBACK_CIDR_IPv4 = \"127.0.0.0/8\";\nconst LOOPBACK_CIDR_IPv6 = \"::1/128\";\nconst ECS_CONTAINER_HOST = \"169.254.170.2\";\nconst EKS_CONTAINER_HOST_IPv4 = \"169.254.170.23\";\nconst EKS_CONTAINER_HOST_IPv6 = \"[fd00:ec2::23]\";\nconst checkUrl = (url, logger)=>{\n    if (url.protocol === \"https:\") {\n        return;\n    }\n    if (url.hostname === ECS_CONTAINER_HOST || url.hostname === EKS_CONTAINER_HOST_IPv4 || url.hostname === EKS_CONTAINER_HOST_IPv6) {\n        return;\n    }\n    if (url.hostname.includes(\"[\")) {\n        if (url.hostname === \"[::1]\" || url.hostname === \"[0000:0000:0000:0000:0000:0000:0000:0001]\") {\n            return;\n        }\n    } else {\n        if (url.hostname === \"localhost\") {\n            return;\n        }\n        const ipComponents = url.hostname.split(\".\");\n        const inRange = (component)=>{\n            const num = parseInt(component, 10);\n            return 0 <= num && num <= 255;\n        };\n        if (ipComponents[0] === \"127\" && inRange(ipComponents[1]) && inRange(ipComponents[2]) && inRange(ipComponents[3]) && ipComponents.length === 4) {\n            return;\n        }\n    }\n    throw new property_provider_1.CredentialsProviderError(`URL not accepted. It must either be HTTPS or match one of the following:\n  - loopback CIDR 127.0.0.0/8 or [::1/128]\n  - ECS container host 169.254.170.2\n  - EKS container host 169.254.170.23 or [fd00:ec2::23]`, {\n        logger\n    });\n};\nexports.checkUrl = checkUrl;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY3JlZGVudGlhbC1wcm92aWRlci1odHRwL2Rpc3QtY2pzL2Zyb21IdHRwL2NoZWNrVXJsLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxnQkFBZ0IsR0FBRyxLQUFLO0FBQ3hCLE1BQU1HLHNCQUFzQkMsbUJBQU9BLENBQUMsbUdBQTJCO0FBQy9ELE1BQU1DLHFCQUFxQjtBQUMzQixNQUFNQyxxQkFBcUI7QUFDM0IsTUFBTUMscUJBQXFCO0FBQzNCLE1BQU1DLDBCQUEwQjtBQUNoQyxNQUFNQywwQkFBMEI7QUFDaEMsTUFBTVAsV0FBVyxDQUFDUSxLQUFLQztJQUNuQixJQUFJRCxJQUFJRSxRQUFRLEtBQUssVUFBVTtRQUMzQjtJQUNKO0lBQ0EsSUFBSUYsSUFBSUcsUUFBUSxLQUFLTixzQkFDakJHLElBQUlHLFFBQVEsS0FBS0wsMkJBQ2pCRSxJQUFJRyxRQUFRLEtBQUtKLHlCQUF5QjtRQUMxQztJQUNKO0lBQ0EsSUFBSUMsSUFBSUcsUUFBUSxDQUFDQyxRQUFRLENBQUMsTUFBTTtRQUM1QixJQUFJSixJQUFJRyxRQUFRLEtBQUssV0FBV0gsSUFBSUcsUUFBUSxLQUFLLDZDQUE2QztZQUMxRjtRQUNKO0lBQ0osT0FDSztRQUNELElBQUlILElBQUlHLFFBQVEsS0FBSyxhQUFhO1lBQzlCO1FBQ0o7UUFDQSxNQUFNRSxlQUFlTCxJQUFJRyxRQUFRLENBQUNHLEtBQUssQ0FBQztRQUN4QyxNQUFNQyxVQUFVLENBQUNDO1lBQ2IsTUFBTUMsTUFBTUMsU0FBU0YsV0FBVztZQUNoQyxPQUFPLEtBQUtDLE9BQU9BLE9BQU87UUFDOUI7UUFDQSxJQUFJSixZQUFZLENBQUMsRUFBRSxLQUFLLFNBQ3BCRSxRQUFRRixZQUFZLENBQUMsRUFBRSxLQUN2QkUsUUFBUUYsWUFBWSxDQUFDLEVBQUUsS0FDdkJFLFFBQVFGLFlBQVksQ0FBQyxFQUFFLEtBQ3ZCQSxhQUFhTSxNQUFNLEtBQUssR0FBRztZQUMzQjtRQUNKO0lBQ0o7SUFDQSxNQUFNLElBQUlsQixvQkFBb0JtQix3QkFBd0IsQ0FBQyxDQUFDOzs7dURBR0wsQ0FBQyxFQUFFO1FBQUVYO0lBQU87QUFDbkU7QUFDQVgsZ0JBQWdCLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xvdWRzaGlmdC8uL25vZGVfbW9kdWxlcy9AYXdzLXNkay9jcmVkZW50aWFsLXByb3ZpZGVyLWh0dHAvZGlzdC1janMvZnJvbUh0dHAvY2hlY2tVcmwuanM/YWExNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY2hlY2tVcmwgPSB2b2lkIDA7XG5jb25zdCBwcm9wZXJ0eV9wcm92aWRlcl8xID0gcmVxdWlyZShcIkBzbWl0aHkvcHJvcGVydHktcHJvdmlkZXJcIik7XG5jb25zdCBMT09QQkFDS19DSURSX0lQdjQgPSBcIjEyNy4wLjAuMC84XCI7XG5jb25zdCBMT09QQkFDS19DSURSX0lQdjYgPSBcIjo6MS8xMjhcIjtcbmNvbnN0IEVDU19DT05UQUlORVJfSE9TVCA9IFwiMTY5LjI1NC4xNzAuMlwiO1xuY29uc3QgRUtTX0NPTlRBSU5FUl9IT1NUX0lQdjQgPSBcIjE2OS4yNTQuMTcwLjIzXCI7XG5jb25zdCBFS1NfQ09OVEFJTkVSX0hPU1RfSVB2NiA9IFwiW2ZkMDA6ZWMyOjoyM11cIjtcbmNvbnN0IGNoZWNrVXJsID0gKHVybCwgbG9nZ2VyKSA9PiB7XG4gICAgaWYgKHVybC5wcm90b2NvbCA9PT0gXCJodHRwczpcIikge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmICh1cmwuaG9zdG5hbWUgPT09IEVDU19DT05UQUlORVJfSE9TVCB8fFxuICAgICAgICB1cmwuaG9zdG5hbWUgPT09IEVLU19DT05UQUlORVJfSE9TVF9JUHY0IHx8XG4gICAgICAgIHVybC5ob3N0bmFtZSA9PT0gRUtTX0NPTlRBSU5FUl9IT1NUX0lQdjYpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAodXJsLmhvc3RuYW1lLmluY2x1ZGVzKFwiW1wiKSkge1xuICAgICAgICBpZiAodXJsLmhvc3RuYW1lID09PSBcIls6OjFdXCIgfHwgdXJsLmhvc3RuYW1lID09PSBcIlswMDAwOjAwMDA6MDAwMDowMDAwOjAwMDA6MDAwMDowMDAwOjAwMDFdXCIpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgaWYgKHVybC5ob3N0bmFtZSA9PT0gXCJsb2NhbGhvc3RcIikge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGlwQ29tcG9uZW50cyA9IHVybC5ob3N0bmFtZS5zcGxpdChcIi5cIik7XG4gICAgICAgIGNvbnN0IGluUmFuZ2UgPSAoY29tcG9uZW50KSA9PiB7XG4gICAgICAgICAgICBjb25zdCBudW0gPSBwYXJzZUludChjb21wb25lbnQsIDEwKTtcbiAgICAgICAgICAgIHJldHVybiAwIDw9IG51bSAmJiBudW0gPD0gMjU1O1xuICAgICAgICB9O1xuICAgICAgICBpZiAoaXBDb21wb25lbnRzWzBdID09PSBcIjEyN1wiICYmXG4gICAgICAgICAgICBpblJhbmdlKGlwQ29tcG9uZW50c1sxXSkgJiZcbiAgICAgICAgICAgIGluUmFuZ2UoaXBDb21wb25lbnRzWzJdKSAmJlxuICAgICAgICAgICAgaW5SYW5nZShpcENvbXBvbmVudHNbM10pICYmXG4gICAgICAgICAgICBpcENvbXBvbmVudHMubGVuZ3RoID09PSA0KSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICB9XG4gICAgdGhyb3cgbmV3IHByb3BlcnR5X3Byb3ZpZGVyXzEuQ3JlZGVudGlhbHNQcm92aWRlckVycm9yKGBVUkwgbm90IGFjY2VwdGVkLiBJdCBtdXN0IGVpdGhlciBiZSBIVFRQUyBvciBtYXRjaCBvbmUgb2YgdGhlIGZvbGxvd2luZzpcbiAgLSBsb29wYmFjayBDSURSIDEyNy4wLjAuMC84IG9yIFs6OjEvMTI4XVxuICAtIEVDUyBjb250YWluZXIgaG9zdCAxNjkuMjU0LjE3MC4yXG4gIC0gRUtTIGNvbnRhaW5lciBob3N0IDE2OS4yNTQuMTcwLjIzIG9yIFtmZDAwOmVjMjo6MjNdYCwgeyBsb2dnZXIgfSk7XG59O1xuZXhwb3J0cy5jaGVja1VybCA9IGNoZWNrVXJsO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiY2hlY2tVcmwiLCJwcm9wZXJ0eV9wcm92aWRlcl8xIiwicmVxdWlyZSIsIkxPT1BCQUNLX0NJRFJfSVB2NCIsIkxPT1BCQUNLX0NJRFJfSVB2NiIsIkVDU19DT05UQUlORVJfSE9TVCIsIkVLU19DT05UQUlORVJfSE9TVF9JUHY0IiwiRUtTX0NPTlRBSU5FUl9IT1NUX0lQdjYiLCJ1cmwiLCJsb2dnZXIiLCJwcm90b2NvbCIsImhvc3RuYW1lIiwiaW5jbHVkZXMiLCJpcENvbXBvbmVudHMiLCJzcGxpdCIsImluUmFuZ2UiLCJjb21wb25lbnQiLCJudW0iLCJwYXJzZUludCIsImxlbmd0aCIsIkNyZWRlbnRpYWxzUHJvdmlkZXJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/credential-provider-http/dist-cjs/fromHttp/checkUrl.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/credential-provider-http/dist-cjs/fromHttp/fromHttp.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/credential-provider-http/dist-cjs/fromHttp/fromHttp.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.fromHttp = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.mjs\");\nconst client_1 = __webpack_require__(/*! @aws-sdk/core/client */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/client/index.js\");\nconst node_http_handler_1 = __webpack_require__(/*! @smithy/node-http-handler */ \"(rsc)/./node_modules/@smithy/node-http-handler/dist-cjs/index.js\");\nconst property_provider_1 = __webpack_require__(/*! @smithy/property-provider */ \"(rsc)/./node_modules/@smithy/property-provider/dist-cjs/index.js\");\nconst promises_1 = tslib_1.__importDefault(__webpack_require__(/*! fs/promises */ \"fs/promises\"));\nconst checkUrl_1 = __webpack_require__(/*! ./checkUrl */ \"(rsc)/./node_modules/@aws-sdk/credential-provider-http/dist-cjs/fromHttp/checkUrl.js\");\nconst requestHelpers_1 = __webpack_require__(/*! ./requestHelpers */ \"(rsc)/./node_modules/@aws-sdk/credential-provider-http/dist-cjs/fromHttp/requestHelpers.js\");\nconst retry_wrapper_1 = __webpack_require__(/*! ./retry-wrapper */ \"(rsc)/./node_modules/@aws-sdk/credential-provider-http/dist-cjs/fromHttp/retry-wrapper.js\");\nconst AWS_CONTAINER_CREDENTIALS_RELATIVE_URI = \"AWS_CONTAINER_CREDENTIALS_RELATIVE_URI\";\nconst DEFAULT_LINK_LOCAL_HOST = \"http://169.254.170.2\";\nconst AWS_CONTAINER_CREDENTIALS_FULL_URI = \"AWS_CONTAINER_CREDENTIALS_FULL_URI\";\nconst AWS_CONTAINER_AUTHORIZATION_TOKEN_FILE = \"AWS_CONTAINER_AUTHORIZATION_TOKEN_FILE\";\nconst AWS_CONTAINER_AUTHORIZATION_TOKEN = \"AWS_CONTAINER_AUTHORIZATION_TOKEN\";\nconst fromHttp = (options = {})=>{\n    options.logger?.debug(\"@aws-sdk/credential-provider-http - fromHttp\");\n    let host;\n    const relative = options.awsContainerCredentialsRelativeUri ?? process.env[AWS_CONTAINER_CREDENTIALS_RELATIVE_URI];\n    const full = options.awsContainerCredentialsFullUri ?? process.env[AWS_CONTAINER_CREDENTIALS_FULL_URI];\n    const token = options.awsContainerAuthorizationToken ?? process.env[AWS_CONTAINER_AUTHORIZATION_TOKEN];\n    const tokenFile = options.awsContainerAuthorizationTokenFile ?? process.env[AWS_CONTAINER_AUTHORIZATION_TOKEN_FILE];\n    const warn = options.logger?.constructor?.name === \"NoOpLogger\" || !options.logger ? console.warn : options.logger.warn;\n    if (relative && full) {\n        warn(\"@aws-sdk/credential-provider-http: \" + \"you have set both awsContainerCredentialsRelativeUri and awsContainerCredentialsFullUri.\");\n        warn(\"awsContainerCredentialsFullUri will take precedence.\");\n    }\n    if (token && tokenFile) {\n        warn(\"@aws-sdk/credential-provider-http: \" + \"you have set both awsContainerAuthorizationToken and awsContainerAuthorizationTokenFile.\");\n        warn(\"awsContainerAuthorizationToken will take precedence.\");\n    }\n    if (full) {\n        host = full;\n    } else if (relative) {\n        host = `${DEFAULT_LINK_LOCAL_HOST}${relative}`;\n    } else {\n        throw new property_provider_1.CredentialsProviderError(`No HTTP credential provider host provided.\nSet AWS_CONTAINER_CREDENTIALS_FULL_URI or AWS_CONTAINER_CREDENTIALS_RELATIVE_URI.`, {\n            logger: options.logger\n        });\n    }\n    const url = new URL(host);\n    (0, checkUrl_1.checkUrl)(url, options.logger);\n    const requestHandler = new node_http_handler_1.NodeHttpHandler({\n        requestTimeout: options.timeout ?? 1000,\n        connectionTimeout: options.timeout ?? 1000\n    });\n    return (0, retry_wrapper_1.retryWrapper)(async ()=>{\n        const request = (0, requestHelpers_1.createGetRequest)(url);\n        if (token) {\n            request.headers.Authorization = token;\n        } else if (tokenFile) {\n            request.headers.Authorization = (await promises_1.default.readFile(tokenFile)).toString();\n        }\n        try {\n            const result = await requestHandler.handle(request);\n            return (0, requestHelpers_1.getCredentials)(result.response).then((creds)=>(0, client_1.setCredentialFeature)(creds, \"CREDENTIALS_HTTP\", \"z\"));\n        } catch (e) {\n            throw new property_provider_1.CredentialsProviderError(String(e), {\n                logger: options.logger\n            });\n        }\n    }, options.maxRetries ?? 3, options.timeout ?? 1000);\n};\nexports.fromHttp = fromHttp;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/credential-provider-http/dist-cjs/fromHttp/fromHttp.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/credential-provider-http/dist-cjs/fromHttp/requestHelpers.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/credential-provider-http/dist-cjs/fromHttp/requestHelpers.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getCredentials = exports.createGetRequest = void 0;\nconst property_provider_1 = __webpack_require__(/*! @smithy/property-provider */ \"(rsc)/./node_modules/@smithy/property-provider/dist-cjs/index.js\");\nconst protocol_http_1 = __webpack_require__(/*! @smithy/protocol-http */ \"(rsc)/./node_modules/@smithy/protocol-http/dist-cjs/index.js\");\nconst smithy_client_1 = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/./node_modules/@smithy/smithy-client/dist-cjs/index.js\");\nconst util_stream_1 = __webpack_require__(/*! @smithy/util-stream */ \"(rsc)/./node_modules/@smithy/util-stream/dist-cjs/index.js\");\nfunction createGetRequest(url) {\n    return new protocol_http_1.HttpRequest({\n        protocol: url.protocol,\n        hostname: url.hostname,\n        port: Number(url.port),\n        path: url.pathname,\n        query: Array.from(url.searchParams.entries()).reduce((acc, [k, v])=>{\n            acc[k] = v;\n            return acc;\n        }, {}),\n        fragment: url.hash\n    });\n}\nexports.createGetRequest = createGetRequest;\nasync function getCredentials(response, logger) {\n    const stream = (0, util_stream_1.sdkStreamMixin)(response.body);\n    const str = await stream.transformToString();\n    if (response.statusCode === 200) {\n        const parsed = JSON.parse(str);\n        if (typeof parsed.AccessKeyId !== \"string\" || typeof parsed.SecretAccessKey !== \"string\" || typeof parsed.Token !== \"string\" || typeof parsed.Expiration !== \"string\") {\n            throw new property_provider_1.CredentialsProviderError(\"HTTP credential provider response not of the required format, an object matching: \" + \"{ AccessKeyId: string, SecretAccessKey: string, Token: string, Expiration: string(rfc3339) }\", {\n                logger\n            });\n        }\n        return {\n            accessKeyId: parsed.AccessKeyId,\n            secretAccessKey: parsed.SecretAccessKey,\n            sessionToken: parsed.Token,\n            expiration: (0, smithy_client_1.parseRfc3339DateTime)(parsed.Expiration)\n        };\n    }\n    if (response.statusCode >= 400 && response.statusCode < 500) {\n        let parsedBody = {};\n        try {\n            parsedBody = JSON.parse(str);\n        } catch (e) {}\n        throw Object.assign(new property_provider_1.CredentialsProviderError(`Server responded with status: ${response.statusCode}`, {\n            logger\n        }), {\n            Code: parsedBody.Code,\n            Message: parsedBody.Message\n        });\n    }\n    throw new property_provider_1.CredentialsProviderError(`Server responded with status: ${response.statusCode}`, {\n        logger\n    });\n}\nexports.getCredentials = getCredentials;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY3JlZGVudGlhbC1wcm92aWRlci1odHRwL2Rpc3QtY2pzL2Zyb21IdHRwL3JlcXVlc3RIZWxwZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxzQkFBc0IsR0FBR0Esd0JBQXdCLEdBQUcsS0FBSztBQUN6RCxNQUFNSSxzQkFBc0JDLG1CQUFPQSxDQUFDLG1HQUEyQjtBQUMvRCxNQUFNQyxrQkFBa0JELG1CQUFPQSxDQUFDLDJGQUF1QjtBQUN2RCxNQUFNRSxrQkFBa0JGLG1CQUFPQSxDQUFDLDJGQUF1QjtBQUN2RCxNQUFNRyxnQkFBZ0JILG1CQUFPQSxDQUFDLHVGQUFxQjtBQUNuRCxTQUFTRixpQkFBaUJNLEdBQUc7SUFDekIsT0FBTyxJQUFJSCxnQkFBZ0JJLFdBQVcsQ0FBQztRQUNuQ0MsVUFBVUYsSUFBSUUsUUFBUTtRQUN0QkMsVUFBVUgsSUFBSUcsUUFBUTtRQUN0QkMsTUFBTUMsT0FBT0wsSUFBSUksSUFBSTtRQUNyQkUsTUFBTU4sSUFBSU8sUUFBUTtRQUNsQkMsT0FBT0MsTUFBTUMsSUFBSSxDQUFDVixJQUFJVyxZQUFZLENBQUNDLE9BQU8sSUFBSUMsTUFBTSxDQUFDLENBQUNDLEtBQUssQ0FBQ0MsR0FBR0MsRUFBRTtZQUM3REYsR0FBRyxDQUFDQyxFQUFFLEdBQUdDO1lBQ1QsT0FBT0Y7UUFDWCxHQUFHLENBQUM7UUFDSkcsVUFBVWpCLElBQUlrQixJQUFJO0lBQ3RCO0FBQ0o7QUFDQTNCLHdCQUF3QixHQUFHRztBQUMzQixlQUFlRCxlQUFlMEIsUUFBUSxFQUFFQyxNQUFNO0lBQzFDLE1BQU1DLFNBQVMsQ0FBQyxHQUFHdEIsY0FBY3VCLGNBQWMsRUFBRUgsU0FBU0ksSUFBSTtJQUM5RCxNQUFNQyxNQUFNLE1BQU1ILE9BQU9JLGlCQUFpQjtJQUMxQyxJQUFJTixTQUFTTyxVQUFVLEtBQUssS0FBSztRQUM3QixNQUFNQyxTQUFTQyxLQUFLQyxLQUFLLENBQUNMO1FBQzFCLElBQUksT0FBT0csT0FBT0csV0FBVyxLQUFLLFlBQzlCLE9BQU9ILE9BQU9JLGVBQWUsS0FBSyxZQUNsQyxPQUFPSixPQUFPSyxLQUFLLEtBQUssWUFDeEIsT0FBT0wsT0FBT00sVUFBVSxLQUFLLFVBQVU7WUFDdkMsTUFBTSxJQUFJdEMsb0JBQW9CdUMsd0JBQXdCLENBQUMsdUZBQ25ELGdHQUFnRztnQkFBRWQ7WUFBTztRQUNqSDtRQUNBLE9BQU87WUFDSGUsYUFBYVIsT0FBT0csV0FBVztZQUMvQk0saUJBQWlCVCxPQUFPSSxlQUFlO1lBQ3ZDTSxjQUFjVixPQUFPSyxLQUFLO1lBQzFCTSxZQUFZLENBQUMsR0FBR3hDLGdCQUFnQnlDLG9CQUFvQixFQUFFWixPQUFPTSxVQUFVO1FBQzNFO0lBQ0o7SUFDQSxJQUFJZCxTQUFTTyxVQUFVLElBQUksT0FBT1AsU0FBU08sVUFBVSxHQUFHLEtBQUs7UUFDekQsSUFBSWMsYUFBYSxDQUFDO1FBQ2xCLElBQUk7WUFDQUEsYUFBYVosS0FBS0MsS0FBSyxDQUFDTDtRQUM1QixFQUNBLE9BQU9pQixHQUFHLENBQUU7UUFDWixNQUFNcEQsT0FBT3FELE1BQU0sQ0FBQyxJQUFJL0Msb0JBQW9CdUMsd0JBQXdCLENBQUMsQ0FBQyw4QkFBOEIsRUFBRWYsU0FBU08sVUFBVSxDQUFDLENBQUMsRUFBRTtZQUFFTjtRQUFPLElBQUk7WUFDdEl1QixNQUFNSCxXQUFXRyxJQUFJO1lBQ3JCQyxTQUFTSixXQUFXSSxPQUFPO1FBQy9CO0lBQ0o7SUFDQSxNQUFNLElBQUlqRCxvQkFBb0J1Qyx3QkFBd0IsQ0FBQyxDQUFDLDhCQUE4QixFQUFFZixTQUFTTyxVQUFVLENBQUMsQ0FBQyxFQUFFO1FBQUVOO0lBQU87QUFDNUg7QUFDQTdCLHNCQUFzQixHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL2Nsb3Vkc2hpZnQvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY3JlZGVudGlhbC1wcm92aWRlci1odHRwL2Rpc3QtY2pzL2Zyb21IdHRwL3JlcXVlc3RIZWxwZXJzLmpzPzUwN2MiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdldENyZWRlbnRpYWxzID0gZXhwb3J0cy5jcmVhdGVHZXRSZXF1ZXN0ID0gdm9pZCAwO1xuY29uc3QgcHJvcGVydHlfcHJvdmlkZXJfMSA9IHJlcXVpcmUoXCJAc21pdGh5L3Byb3BlcnR5LXByb3ZpZGVyXCIpO1xuY29uc3QgcHJvdG9jb2xfaHR0cF8xID0gcmVxdWlyZShcIkBzbWl0aHkvcHJvdG9jb2wtaHR0cFwiKTtcbmNvbnN0IHNtaXRoeV9jbGllbnRfMSA9IHJlcXVpcmUoXCJAc21pdGh5L3NtaXRoeS1jbGllbnRcIik7XG5jb25zdCB1dGlsX3N0cmVhbV8xID0gcmVxdWlyZShcIkBzbWl0aHkvdXRpbC1zdHJlYW1cIik7XG5mdW5jdGlvbiBjcmVhdGVHZXRSZXF1ZXN0KHVybCkge1xuICAgIHJldHVybiBuZXcgcHJvdG9jb2xfaHR0cF8xLkh0dHBSZXF1ZXN0KHtcbiAgICAgICAgcHJvdG9jb2w6IHVybC5wcm90b2NvbCxcbiAgICAgICAgaG9zdG5hbWU6IHVybC5ob3N0bmFtZSxcbiAgICAgICAgcG9ydDogTnVtYmVyKHVybC5wb3J0KSxcbiAgICAgICAgcGF0aDogdXJsLnBhdGhuYW1lLFxuICAgICAgICBxdWVyeTogQXJyYXkuZnJvbSh1cmwuc2VhcmNoUGFyYW1zLmVudHJpZXMoKSkucmVkdWNlKChhY2MsIFtrLCB2XSkgPT4ge1xuICAgICAgICAgICAgYWNjW2tdID0gdjtcbiAgICAgICAgICAgIHJldHVybiBhY2M7XG4gICAgICAgIH0sIHt9KSxcbiAgICAgICAgZnJhZ21lbnQ6IHVybC5oYXNoLFxuICAgIH0pO1xufVxuZXhwb3J0cy5jcmVhdGVHZXRSZXF1ZXN0ID0gY3JlYXRlR2V0UmVxdWVzdDtcbmFzeW5jIGZ1bmN0aW9uIGdldENyZWRlbnRpYWxzKHJlc3BvbnNlLCBsb2dnZXIpIHtcbiAgICBjb25zdCBzdHJlYW0gPSAoMCwgdXRpbF9zdHJlYW1fMS5zZGtTdHJlYW1NaXhpbikocmVzcG9uc2UuYm9keSk7XG4gICAgY29uc3Qgc3RyID0gYXdhaXQgc3RyZWFtLnRyYW5zZm9ybVRvU3RyaW5nKCk7XG4gICAgaWYgKHJlc3BvbnNlLnN0YXR1c0NvZGUgPT09IDIwMCkge1xuICAgICAgICBjb25zdCBwYXJzZWQgPSBKU09OLnBhcnNlKHN0cik7XG4gICAgICAgIGlmICh0eXBlb2YgcGFyc2VkLkFjY2Vzc0tleUlkICE9PSBcInN0cmluZ1wiIHx8XG4gICAgICAgICAgICB0eXBlb2YgcGFyc2VkLlNlY3JldEFjY2Vzc0tleSAhPT0gXCJzdHJpbmdcIiB8fFxuICAgICAgICAgICAgdHlwZW9mIHBhcnNlZC5Ub2tlbiAhPT0gXCJzdHJpbmdcIiB8fFxuICAgICAgICAgICAgdHlwZW9mIHBhcnNlZC5FeHBpcmF0aW9uICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgcHJvcGVydHlfcHJvdmlkZXJfMS5DcmVkZW50aWFsc1Byb3ZpZGVyRXJyb3IoXCJIVFRQIGNyZWRlbnRpYWwgcHJvdmlkZXIgcmVzcG9uc2Ugbm90IG9mIHRoZSByZXF1aXJlZCBmb3JtYXQsIGFuIG9iamVjdCBtYXRjaGluZzogXCIgK1xuICAgICAgICAgICAgICAgIFwieyBBY2Nlc3NLZXlJZDogc3RyaW5nLCBTZWNyZXRBY2Nlc3NLZXk6IHN0cmluZywgVG9rZW46IHN0cmluZywgRXhwaXJhdGlvbjogc3RyaW5nKHJmYzMzMzkpIH1cIiwgeyBsb2dnZXIgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGFjY2Vzc0tleUlkOiBwYXJzZWQuQWNjZXNzS2V5SWQsXG4gICAgICAgICAgICBzZWNyZXRBY2Nlc3NLZXk6IHBhcnNlZC5TZWNyZXRBY2Nlc3NLZXksXG4gICAgICAgICAgICBzZXNzaW9uVG9rZW46IHBhcnNlZC5Ub2tlbixcbiAgICAgICAgICAgIGV4cGlyYXRpb246ICgwLCBzbWl0aHlfY2xpZW50XzEucGFyc2VSZmMzMzM5RGF0ZVRpbWUpKHBhcnNlZC5FeHBpcmF0aW9uKSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgaWYgKHJlc3BvbnNlLnN0YXR1c0NvZGUgPj0gNDAwICYmIHJlc3BvbnNlLnN0YXR1c0NvZGUgPCA1MDApIHtcbiAgICAgICAgbGV0IHBhcnNlZEJvZHkgPSB7fTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHBhcnNlZEJvZHkgPSBKU09OLnBhcnNlKHN0cik7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHsgfVxuICAgICAgICB0aHJvdyBPYmplY3QuYXNzaWduKG5ldyBwcm9wZXJ0eV9wcm92aWRlcl8xLkNyZWRlbnRpYWxzUHJvdmlkZXJFcnJvcihgU2VydmVyIHJlc3BvbmRlZCB3aXRoIHN0YXR1czogJHtyZXNwb25zZS5zdGF0dXNDb2RlfWAsIHsgbG9nZ2VyIH0pLCB7XG4gICAgICAgICAgICBDb2RlOiBwYXJzZWRCb2R5LkNvZGUsXG4gICAgICAgICAgICBNZXNzYWdlOiBwYXJzZWRCb2R5Lk1lc3NhZ2UsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgcHJvcGVydHlfcHJvdmlkZXJfMS5DcmVkZW50aWFsc1Byb3ZpZGVyRXJyb3IoYFNlcnZlciByZXNwb25kZWQgd2l0aCBzdGF0dXM6ICR7cmVzcG9uc2Uuc3RhdHVzQ29kZX1gLCB7IGxvZ2dlciB9KTtcbn1cbmV4cG9ydHMuZ2V0Q3JlZGVudGlhbHMgPSBnZXRDcmVkZW50aWFscztcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImdldENyZWRlbnRpYWxzIiwiY3JlYXRlR2V0UmVxdWVzdCIsInByb3BlcnR5X3Byb3ZpZGVyXzEiLCJyZXF1aXJlIiwicHJvdG9jb2xfaHR0cF8xIiwic21pdGh5X2NsaWVudF8xIiwidXRpbF9zdHJlYW1fMSIsInVybCIsIkh0dHBSZXF1ZXN0IiwicHJvdG9jb2wiLCJob3N0bmFtZSIsInBvcnQiLCJOdW1iZXIiLCJwYXRoIiwicGF0aG5hbWUiLCJxdWVyeSIsIkFycmF5IiwiZnJvbSIsInNlYXJjaFBhcmFtcyIsImVudHJpZXMiLCJyZWR1Y2UiLCJhY2MiLCJrIiwidiIsImZyYWdtZW50IiwiaGFzaCIsInJlc3BvbnNlIiwibG9nZ2VyIiwic3RyZWFtIiwic2RrU3RyZWFtTWl4aW4iLCJib2R5Iiwic3RyIiwidHJhbnNmb3JtVG9TdHJpbmciLCJzdGF0dXNDb2RlIiwicGFyc2VkIiwiSlNPTiIsInBhcnNlIiwiQWNjZXNzS2V5SWQiLCJTZWNyZXRBY2Nlc3NLZXkiLCJUb2tlbiIsIkV4cGlyYXRpb24iLCJDcmVkZW50aWFsc1Byb3ZpZGVyRXJyb3IiLCJhY2Nlc3NLZXlJZCIsInNlY3JldEFjY2Vzc0tleSIsInNlc3Npb25Ub2tlbiIsImV4cGlyYXRpb24iLCJwYXJzZVJmYzMzMzlEYXRlVGltZSIsInBhcnNlZEJvZHkiLCJlIiwiYXNzaWduIiwiQ29kZSIsIk1lc3NhZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/credential-provider-http/dist-cjs/fromHttp/requestHelpers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/credential-provider-http/dist-cjs/fromHttp/retry-wrapper.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/credential-provider-http/dist-cjs/fromHttp/retry-wrapper.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.retryWrapper = void 0;\nconst retryWrapper = (toRetry, maxRetries, delayMs)=>{\n    return async ()=>{\n        for(let i = 0; i < maxRetries; ++i){\n            try {\n                return await toRetry();\n            } catch (e) {\n                await new Promise((resolve)=>setTimeout(resolve, delayMs));\n            }\n        }\n        return await toRetry();\n    };\n};\nexports.retryWrapper = retryWrapper;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY3JlZGVudGlhbC1wcm92aWRlci1odHRwL2Rpc3QtY2pzL2Zyb21IdHRwL3JldHJ5LXdyYXBwZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELG9CQUFvQixHQUFHLEtBQUs7QUFDNUIsTUFBTUUsZUFBZSxDQUFDQyxTQUFTQyxZQUFZQztJQUN2QyxPQUFPO1FBQ0gsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlGLFlBQVksRUFBRUUsRUFBRztZQUNqQyxJQUFJO2dCQUNBLE9BQU8sTUFBTUg7WUFDakIsRUFDQSxPQUFPSSxHQUFHO2dCQUNOLE1BQU0sSUFBSUMsUUFBUSxDQUFDQyxVQUFZQyxXQUFXRCxTQUFTSjtZQUN2RDtRQUNKO1FBQ0EsT0FBTyxNQUFNRjtJQUNqQjtBQUNKO0FBQ0FILG9CQUFvQixHQUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL2Nsb3Vkc2hpZnQvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY3JlZGVudGlhbC1wcm92aWRlci1odHRwL2Rpc3QtY2pzL2Zyb21IdHRwL3JldHJ5LXdyYXBwZXIuanM/NjEwYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucmV0cnlXcmFwcGVyID0gdm9pZCAwO1xuY29uc3QgcmV0cnlXcmFwcGVyID0gKHRvUmV0cnksIG1heFJldHJpZXMsIGRlbGF5TXMpID0+IHtcbiAgICByZXR1cm4gYXN5bmMgKCkgPT4ge1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG1heFJldHJpZXM7ICsraSkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYXdhaXQgdG9SZXRyeSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICBhd2FpdCBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gc2V0VGltZW91dChyZXNvbHZlLCBkZWxheU1zKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGF3YWl0IHRvUmV0cnkoKTtcbiAgICB9O1xufTtcbmV4cG9ydHMucmV0cnlXcmFwcGVyID0gcmV0cnlXcmFwcGVyO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwicmV0cnlXcmFwcGVyIiwidG9SZXRyeSIsIm1heFJldHJpZXMiLCJkZWxheU1zIiwiaSIsImUiLCJQcm9taXNlIiwicmVzb2x2ZSIsInNldFRpbWVvdXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/credential-provider-http/dist-cjs/fromHttp/retry-wrapper.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/credential-provider-http/dist-cjs/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@aws-sdk/credential-provider-http/dist-cjs/index.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.fromHttp = void 0;\nvar fromHttp_1 = __webpack_require__(/*! ./fromHttp/fromHttp */ \"(rsc)/./node_modules/@aws-sdk/credential-provider-http/dist-cjs/fromHttp/fromHttp.js\");\nObject.defineProperty(exports, \"fromHttp\", ({\n    enumerable: true,\n    get: function() {\n        return fromHttp_1.fromHttp;\n    }\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY3JlZGVudGlhbC1wcm92aWRlci1odHRwL2Rpc3QtY2pzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxnQkFBZ0IsR0FBRyxLQUFLO0FBQ3hCLElBQUlHLGFBQWFDLG1CQUFPQSxDQUFDLGlIQUFxQjtBQUM5Q04sNENBQTJDO0lBQUVPLFlBQVk7SUFBTUMsS0FBSztRQUFjLE9BQU9ILFdBQVdELFFBQVE7SUFBRTtBQUFFLENBQUMsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Nsb3Vkc2hpZnQvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY3JlZGVudGlhbC1wcm92aWRlci1odHRwL2Rpc3QtY2pzL2luZGV4LmpzPzYxYjciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmZyb21IdHRwID0gdm9pZCAwO1xudmFyIGZyb21IdHRwXzEgPSByZXF1aXJlKFwiLi9mcm9tSHR0cC9mcm9tSHR0cFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImZyb21IdHRwXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBmcm9tSHR0cF8xLmZyb21IdHRwOyB9IH0pO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZnJvbUh0dHAiLCJmcm9tSHR0cF8xIiwicmVxdWlyZSIsImVudW1lcmFibGUiLCJnZXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/credential-provider-http/dist-cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/credential-provider-ini/dist-cjs/index.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@aws-sdk/credential-provider-ini/dist-cjs/index.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value)=>__defProp(target, \"name\", {\n        value,\n        configurable: true\n    });\nvar __export = (target, all)=>{\n    for(var name in all)__defProp(target, name, {\n        get: all[name],\n        enumerable: true\n    });\n};\nvar __copyProps = (to, from, except, desc)=>{\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n            get: ()=>from[key],\n            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n    }\n    return to;\n};\nvar __toESM = (mod, isNodeMode, target)=>(target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(// If the importer is in node compatibility mode or this is not an ESM\n    // file that has been converted to a CommonJS file using a Babel-\n    // compatible transform (i.e. \"__esModule\" has not been set), then set\n    // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n    isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n        value: mod,\n        enumerable: true\n    }) : target, mod));\nvar __toCommonJS = (mod)=>__copyProps(__defProp({}, \"__esModule\", {\n        value: true\n    }), mod);\n// src/index.ts\nvar index_exports = {};\n__export(index_exports, {\n    fromIni: ()=>fromIni\n});\nmodule.exports = __toCommonJS(index_exports);\n// src/fromIni.ts\n// src/resolveProfileData.ts\n// src/resolveAssumeRoleCredentials.ts\nvar import_shared_ini_file_loader = __webpack_require__(/*! @smithy/shared-ini-file-loader */ \"(rsc)/./node_modules/@smithy/shared-ini-file-loader/dist-cjs/index.js\");\n// src/resolveCredentialSource.ts\nvar import_client = __webpack_require__(/*! @aws-sdk/core/client */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/client/index.js\");\nvar import_property_provider = __webpack_require__(/*! @smithy/property-provider */ \"(rsc)/./node_modules/@smithy/property-provider/dist-cjs/index.js\");\nvar resolveCredentialSource = /* @__PURE__ */ __name((credentialSource, profileName, logger)=>{\n    const sourceProvidersMap = {\n        EcsContainer: /* @__PURE__ */ __name(async (options)=>{\n            const { fromHttp } = await Promise.resolve().then(()=>__toESM(__webpack_require__(/*! @aws-sdk/credential-provider-http */ \"(rsc)/./node_modules/@aws-sdk/credential-provider-http/dist-cjs/index.js\")));\n            const { fromContainerMetadata } = await Promise.resolve().then(()=>__toESM(__webpack_require__(/*! @smithy/credential-provider-imds */ \"(rsc)/./node_modules/@smithy/credential-provider-imds/dist-cjs/index.js\")));\n            logger?.debug(\"@aws-sdk/credential-provider-ini - credential_source is EcsContainer\");\n            return async ()=>(0, import_property_provider.chain)(fromHttp(options ?? {}), fromContainerMetadata(options))().then(setNamedProvider);\n        }, \"EcsContainer\"),\n        Ec2InstanceMetadata: /* @__PURE__ */ __name(async (options)=>{\n            logger?.debug(\"@aws-sdk/credential-provider-ini - credential_source is Ec2InstanceMetadata\");\n            const { fromInstanceMetadata } = await Promise.resolve().then(()=>__toESM(__webpack_require__(/*! @smithy/credential-provider-imds */ \"(rsc)/./node_modules/@smithy/credential-provider-imds/dist-cjs/index.js\")));\n            return async ()=>fromInstanceMetadata(options)().then(setNamedProvider);\n        }, \"Ec2InstanceMetadata\"),\n        Environment: /* @__PURE__ */ __name(async (options)=>{\n            logger?.debug(\"@aws-sdk/credential-provider-ini - credential_source is Environment\");\n            const { fromEnv } = await Promise.resolve().then(()=>__toESM(__webpack_require__(/*! @aws-sdk/credential-provider-env */ \"(rsc)/./node_modules/@aws-sdk/credential-provider-env/dist-cjs/index.js\")));\n            return async ()=>fromEnv(options)().then(setNamedProvider);\n        }, \"Environment\")\n    };\n    if (credentialSource in sourceProvidersMap) {\n        return sourceProvidersMap[credentialSource];\n    } else {\n        throw new import_property_provider.CredentialsProviderError(`Unsupported credential source in profile ${profileName}. Got ${credentialSource}, expected EcsContainer or Ec2InstanceMetadata or Environment.`, {\n            logger\n        });\n    }\n}, \"resolveCredentialSource\");\nvar setNamedProvider = /* @__PURE__ */ __name((creds)=>(0, import_client.setCredentialFeature)(creds, \"CREDENTIALS_PROFILE_NAMED_PROVIDER\", \"p\"), \"setNamedProvider\");\n// src/resolveAssumeRoleCredentials.ts\nvar isAssumeRoleProfile = /* @__PURE__ */ __name((arg, { profile = \"default\", logger } = {})=>{\n    return Boolean(arg) && typeof arg === \"object\" && typeof arg.role_arn === \"string\" && [\n        \"undefined\",\n        \"string\"\n    ].indexOf(typeof arg.role_session_name) > -1 && [\n        \"undefined\",\n        \"string\"\n    ].indexOf(typeof arg.external_id) > -1 && [\n        \"undefined\",\n        \"string\"\n    ].indexOf(typeof arg.mfa_serial) > -1 && (isAssumeRoleWithSourceProfile(arg, {\n        profile,\n        logger\n    }) || isCredentialSourceProfile(arg, {\n        profile,\n        logger\n    }));\n}, \"isAssumeRoleProfile\");\nvar isAssumeRoleWithSourceProfile = /* @__PURE__ */ __name((arg, { profile, logger })=>{\n    const withSourceProfile = typeof arg.source_profile === \"string\" && typeof arg.credential_source === \"undefined\";\n    if (withSourceProfile) {\n        logger?.debug?.(`    ${profile} isAssumeRoleWithSourceProfile source_profile=${arg.source_profile}`);\n    }\n    return withSourceProfile;\n}, \"isAssumeRoleWithSourceProfile\");\nvar isCredentialSourceProfile = /* @__PURE__ */ __name((arg, { profile, logger })=>{\n    const withProviderProfile = typeof arg.credential_source === \"string\" && typeof arg.source_profile === \"undefined\";\n    if (withProviderProfile) {\n        logger?.debug?.(`    ${profile} isCredentialSourceProfile credential_source=${arg.credential_source}`);\n    }\n    return withProviderProfile;\n}, \"isCredentialSourceProfile\");\nvar resolveAssumeRoleCredentials = /* @__PURE__ */ __name(async (profileName, profiles, options, visitedProfiles = {})=>{\n    options.logger?.debug(\"@aws-sdk/credential-provider-ini - resolveAssumeRoleCredentials (STS)\");\n    const profileData = profiles[profileName];\n    const { source_profile, region } = profileData;\n    if (!options.roleAssumer) {\n        const { getDefaultRoleAssumer } = await Promise.resolve().then(()=>__toESM(__webpack_require__(/*! @aws-sdk/nested-clients/sts */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/index.js\")));\n        options.roleAssumer = getDefaultRoleAssumer({\n            ...options.clientConfig,\n            credentialProviderLogger: options.logger,\n            parentClientConfig: {\n                ...options?.parentClientConfig,\n                region: region ?? options?.parentClientConfig?.region\n            }\n        }, options.clientPlugins);\n    }\n    if (source_profile && source_profile in visitedProfiles) {\n        throw new import_property_provider.CredentialsProviderError(`Detected a cycle attempting to resolve credentials for profile ${(0, import_shared_ini_file_loader.getProfileName)(options)}. Profiles visited: ` + Object.keys(visitedProfiles).join(\", \"), {\n            logger: options.logger\n        });\n    }\n    options.logger?.debug(`@aws-sdk/credential-provider-ini - finding credential resolver using ${source_profile ? `source_profile=[${source_profile}]` : `profile=[${profileName}]`}`);\n    const sourceCredsProvider = source_profile ? resolveProfileData(source_profile, profiles, options, {\n        ...visitedProfiles,\n        [source_profile]: true\n    }, isCredentialSourceWithoutRoleArn(profiles[source_profile] ?? {})) : (await resolveCredentialSource(profileData.credential_source, profileName, options.logger)(options))();\n    if (isCredentialSourceWithoutRoleArn(profileData)) {\n        return sourceCredsProvider.then((creds)=>(0, import_client.setCredentialFeature)(creds, \"CREDENTIALS_PROFILE_SOURCE_PROFILE\", \"o\"));\n    } else {\n        const params = {\n            RoleArn: profileData.role_arn,\n            RoleSessionName: profileData.role_session_name || `aws-sdk-js-${Date.now()}`,\n            ExternalId: profileData.external_id,\n            DurationSeconds: parseInt(profileData.duration_seconds || \"3600\", 10)\n        };\n        const { mfa_serial } = profileData;\n        if (mfa_serial) {\n            if (!options.mfaCodeProvider) {\n                throw new import_property_provider.CredentialsProviderError(`Profile ${profileName} requires multi-factor authentication, but no MFA code callback was provided.`, {\n                    logger: options.logger,\n                    tryNextLink: false\n                });\n            }\n            params.SerialNumber = mfa_serial;\n            params.TokenCode = await options.mfaCodeProvider(mfa_serial);\n        }\n        const sourceCreds = await sourceCredsProvider;\n        return options.roleAssumer(sourceCreds, params).then((creds)=>(0, import_client.setCredentialFeature)(creds, \"CREDENTIALS_PROFILE_SOURCE_PROFILE\", \"o\"));\n    }\n}, \"resolveAssumeRoleCredentials\");\nvar isCredentialSourceWithoutRoleArn = /* @__PURE__ */ __name((section)=>{\n    return !section.role_arn && !!section.credential_source;\n}, \"isCredentialSourceWithoutRoleArn\");\n// src/resolveProcessCredentials.ts\nvar isProcessProfile = /* @__PURE__ */ __name((arg)=>Boolean(arg) && typeof arg === \"object\" && typeof arg.credential_process === \"string\", \"isProcessProfile\");\nvar resolveProcessCredentials = /* @__PURE__ */ __name(async (options, profile)=>Promise.resolve().then(()=>__toESM(__webpack_require__(/*! @aws-sdk/credential-provider-process */ \"(rsc)/./node_modules/@aws-sdk/credential-provider-process/dist-cjs/index.js\"))).then(({ fromProcess })=>fromProcess({\n            ...options,\n            profile\n        })().then((creds)=>(0, import_client.setCredentialFeature)(creds, \"CREDENTIALS_PROFILE_PROCESS\", \"v\"))), \"resolveProcessCredentials\");\n// src/resolveSsoCredentials.ts\nvar resolveSsoCredentials = /* @__PURE__ */ __name(async (profile, profileData, options = {})=>{\n    const { fromSSO } = await Promise.resolve().then(()=>__toESM(__webpack_require__(/*! @aws-sdk/credential-provider-sso */ \"(rsc)/./node_modules/@aws-sdk/credential-provider-sso/dist-cjs/index.js\")));\n    return fromSSO({\n        profile,\n        logger: options.logger,\n        parentClientConfig: options.parentClientConfig,\n        clientConfig: options.clientConfig\n    })().then((creds)=>{\n        if (profileData.sso_session) {\n            return (0, import_client.setCredentialFeature)(creds, \"CREDENTIALS_PROFILE_SSO\", \"r\");\n        } else {\n            return (0, import_client.setCredentialFeature)(creds, \"CREDENTIALS_PROFILE_SSO_LEGACY\", \"t\");\n        }\n    });\n}, \"resolveSsoCredentials\");\nvar isSsoProfile = /* @__PURE__ */ __name((arg)=>arg && (typeof arg.sso_start_url === \"string\" || typeof arg.sso_account_id === \"string\" || typeof arg.sso_session === \"string\" || typeof arg.sso_region === \"string\" || typeof arg.sso_role_name === \"string\"), \"isSsoProfile\");\n// src/resolveStaticCredentials.ts\nvar isStaticCredsProfile = /* @__PURE__ */ __name((arg)=>Boolean(arg) && typeof arg === \"object\" && typeof arg.aws_access_key_id === \"string\" && typeof arg.aws_secret_access_key === \"string\" && [\n        \"undefined\",\n        \"string\"\n    ].indexOf(typeof arg.aws_session_token) > -1 && [\n        \"undefined\",\n        \"string\"\n    ].indexOf(typeof arg.aws_account_id) > -1, \"isStaticCredsProfile\");\nvar resolveStaticCredentials = /* @__PURE__ */ __name(async (profile, options)=>{\n    options?.logger?.debug(\"@aws-sdk/credential-provider-ini - resolveStaticCredentials\");\n    const credentials = {\n        accessKeyId: profile.aws_access_key_id,\n        secretAccessKey: profile.aws_secret_access_key,\n        sessionToken: profile.aws_session_token,\n        ...profile.aws_credential_scope && {\n            credentialScope: profile.aws_credential_scope\n        },\n        ...profile.aws_account_id && {\n            accountId: profile.aws_account_id\n        }\n    };\n    return (0, import_client.setCredentialFeature)(credentials, \"CREDENTIALS_PROFILE\", \"n\");\n}, \"resolveStaticCredentials\");\n// src/resolveWebIdentityCredentials.ts\nvar isWebIdentityProfile = /* @__PURE__ */ __name((arg)=>Boolean(arg) && typeof arg === \"object\" && typeof arg.web_identity_token_file === \"string\" && typeof arg.role_arn === \"string\" && [\n        \"undefined\",\n        \"string\"\n    ].indexOf(typeof arg.role_session_name) > -1, \"isWebIdentityProfile\");\nvar resolveWebIdentityCredentials = /* @__PURE__ */ __name(async (profile, options)=>Promise.resolve().then(()=>__toESM(__webpack_require__(/*! @aws-sdk/credential-provider-web-identity */ \"(rsc)/./node_modules/@aws-sdk/credential-provider-web-identity/dist-cjs/index.js\"))).then(({ fromTokenFile })=>fromTokenFile({\n            webIdentityTokenFile: profile.web_identity_token_file,\n            roleArn: profile.role_arn,\n            roleSessionName: profile.role_session_name,\n            roleAssumerWithWebIdentity: options.roleAssumerWithWebIdentity,\n            logger: options.logger,\n            parentClientConfig: options.parentClientConfig\n        })().then((creds)=>(0, import_client.setCredentialFeature)(creds, \"CREDENTIALS_PROFILE_STS_WEB_ID_TOKEN\", \"q\"))), \"resolveWebIdentityCredentials\");\n// src/resolveProfileData.ts\nvar resolveProfileData = /* @__PURE__ */ __name(async (profileName, profiles, options, visitedProfiles = {}, isAssumeRoleRecursiveCall = false)=>{\n    const data = profiles[profileName];\n    if (Object.keys(visitedProfiles).length > 0 && isStaticCredsProfile(data)) {\n        return resolveStaticCredentials(data, options);\n    }\n    if (isAssumeRoleRecursiveCall || isAssumeRoleProfile(data, {\n        profile: profileName,\n        logger: options.logger\n    })) {\n        return resolveAssumeRoleCredentials(profileName, profiles, options, visitedProfiles);\n    }\n    if (isStaticCredsProfile(data)) {\n        return resolveStaticCredentials(data, options);\n    }\n    if (isWebIdentityProfile(data)) {\n        return resolveWebIdentityCredentials(data, options);\n    }\n    if (isProcessProfile(data)) {\n        return resolveProcessCredentials(options, profileName);\n    }\n    if (isSsoProfile(data)) {\n        return await resolveSsoCredentials(profileName, data, options);\n    }\n    throw new import_property_provider.CredentialsProviderError(`Could not resolve credentials using profile: [${profileName}] in configuration/credentials file(s).`, {\n        logger: options.logger\n    });\n}, \"resolveProfileData\");\n// src/fromIni.ts\nvar fromIni = /* @__PURE__ */ __name((_init = {})=>async ({ callerClientConfig } = {})=>{\n        const init = {\n            ..._init,\n            parentClientConfig: {\n                ...callerClientConfig,\n                ..._init.parentClientConfig\n            }\n        };\n        init.logger?.debug(\"@aws-sdk/credential-provider-ini - fromIni\");\n        const profiles = await (0, import_shared_ini_file_loader.parseKnownFiles)(init);\n        return resolveProfileData((0, import_shared_ini_file_loader.getProfileName)({\n            profile: _init.profile ?? callerClientConfig?.profile\n        }), profiles, init);\n    }, \"fromIni\");\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/credential-provider-ini/dist-cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/credential-provider-node/dist-cjs/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@aws-sdk/credential-provider-node/dist-cjs/index.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value)=>__defProp(target, \"name\", {\n        value,\n        configurable: true\n    });\nvar __export = (target, all)=>{\n    for(var name in all)__defProp(target, name, {\n        get: all[name],\n        enumerable: true\n    });\n};\nvar __copyProps = (to, from, except, desc)=>{\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n            get: ()=>from[key],\n            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n    }\n    return to;\n};\nvar __toESM = (mod, isNodeMode, target)=>(target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(// If the importer is in node compatibility mode or this is not an ESM\n    // file that has been converted to a CommonJS file using a Babel-\n    // compatible transform (i.e. \"__esModule\" has not been set), then set\n    // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n    isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n        value: mod,\n        enumerable: true\n    }) : target, mod));\nvar __toCommonJS = (mod)=>__copyProps(__defProp({}, \"__esModule\", {\n        value: true\n    }), mod);\n// src/index.ts\nvar index_exports = {};\n__export(index_exports, {\n    credentialsTreatedAsExpired: ()=>credentialsTreatedAsExpired,\n    credentialsWillNeedRefresh: ()=>credentialsWillNeedRefresh,\n    defaultProvider: ()=>defaultProvider\n});\nmodule.exports = __toCommonJS(index_exports);\n// src/defaultProvider.ts\nvar import_credential_provider_env = __webpack_require__(/*! @aws-sdk/credential-provider-env */ \"(rsc)/./node_modules/@aws-sdk/credential-provider-env/dist-cjs/index.js\");\nvar import_shared_ini_file_loader = __webpack_require__(/*! @smithy/shared-ini-file-loader */ \"(rsc)/./node_modules/@smithy/shared-ini-file-loader/dist-cjs/index.js\");\n// src/remoteProvider.ts\nvar import_property_provider = __webpack_require__(/*! @smithy/property-provider */ \"(rsc)/./node_modules/@smithy/property-provider/dist-cjs/index.js\");\nvar ENV_IMDS_DISABLED = \"AWS_EC2_METADATA_DISABLED\";\nvar remoteProvider = /* @__PURE__ */ __name(async (init)=>{\n    const { ENV_CMDS_FULL_URI, ENV_CMDS_RELATIVE_URI, fromContainerMetadata, fromInstanceMetadata } = await Promise.resolve().then(()=>__toESM(__webpack_require__(/*! @smithy/credential-provider-imds */ \"(rsc)/./node_modules/@smithy/credential-provider-imds/dist-cjs/index.js\")));\n    if (process.env[ENV_CMDS_RELATIVE_URI] || process.env[ENV_CMDS_FULL_URI]) {\n        init.logger?.debug(\"@aws-sdk/credential-provider-node - remoteProvider::fromHttp/fromContainerMetadata\");\n        const { fromHttp } = await Promise.resolve().then(()=>__toESM(__webpack_require__(/*! @aws-sdk/credential-provider-http */ \"(rsc)/./node_modules/@aws-sdk/credential-provider-http/dist-cjs/index.js\")));\n        return (0, import_property_provider.chain)(fromHttp(init), fromContainerMetadata(init));\n    }\n    if (process.env[ENV_IMDS_DISABLED] && process.env[ENV_IMDS_DISABLED] !== \"false\") {\n        return async ()=>{\n            throw new import_property_provider.CredentialsProviderError(\"EC2 Instance Metadata Service access disabled\", {\n                logger: init.logger\n            });\n        };\n    }\n    init.logger?.debug(\"@aws-sdk/credential-provider-node - remoteProvider::fromInstanceMetadata\");\n    return fromInstanceMetadata(init);\n}, \"remoteProvider\");\n// src/defaultProvider.ts\nvar multipleCredentialSourceWarningEmitted = false;\nvar defaultProvider = /* @__PURE__ */ __name((init = {})=>(0, import_property_provider.memoize)((0, import_property_provider.chain)(async ()=>{\n        const profile = init.profile ?? process.env[import_shared_ini_file_loader.ENV_PROFILE];\n        if (profile) {\n            const envStaticCredentialsAreSet = process.env[import_credential_provider_env.ENV_KEY] && process.env[import_credential_provider_env.ENV_SECRET];\n            if (envStaticCredentialsAreSet) {\n                if (!multipleCredentialSourceWarningEmitted) {\n                    const warnFn = init.logger?.warn && init.logger?.constructor?.name !== \"NoOpLogger\" ? init.logger.warn : console.warn;\n                    warnFn(`@aws-sdk/credential-provider-node - defaultProvider::fromEnv WARNING:\n    Multiple credential sources detected: \n    Both AWS_PROFILE and the pair AWS_ACCESS_KEY_ID/AWS_SECRET_ACCESS_KEY static credentials are set.\n    This SDK will proceed with the AWS_PROFILE value.\n    \n    However, a future version may change this behavior to prefer the ENV static credentials.\n    Please ensure that your environment only sets either the AWS_PROFILE or the\n    AWS_ACCESS_KEY_ID/AWS_SECRET_ACCESS_KEY pair.\n`);\n                    multipleCredentialSourceWarningEmitted = true;\n                }\n            }\n            throw new import_property_provider.CredentialsProviderError(\"AWS_PROFILE is set, skipping fromEnv provider.\", {\n                logger: init.logger,\n                tryNextLink: true\n            });\n        }\n        init.logger?.debug(\"@aws-sdk/credential-provider-node - defaultProvider::fromEnv\");\n        return (0, import_credential_provider_env.fromEnv)(init)();\n    }, async ()=>{\n        init.logger?.debug(\"@aws-sdk/credential-provider-node - defaultProvider::fromSSO\");\n        const { ssoStartUrl, ssoAccountId, ssoRegion, ssoRoleName, ssoSession } = init;\n        if (!ssoStartUrl && !ssoAccountId && !ssoRegion && !ssoRoleName && !ssoSession) {\n            throw new import_property_provider.CredentialsProviderError(\"Skipping SSO provider in default chain (inputs do not include SSO fields).\", {\n                logger: init.logger\n            });\n        }\n        const { fromSSO } = await Promise.resolve().then(()=>__toESM(__webpack_require__(/*! @aws-sdk/credential-provider-sso */ \"(rsc)/./node_modules/@aws-sdk/credential-provider-sso/dist-cjs/index.js\")));\n        return fromSSO(init)();\n    }, async ()=>{\n        init.logger?.debug(\"@aws-sdk/credential-provider-node - defaultProvider::fromIni\");\n        const { fromIni } = await Promise.resolve().then(()=>__toESM(__webpack_require__(/*! @aws-sdk/credential-provider-ini */ \"(rsc)/./node_modules/@aws-sdk/credential-provider-ini/dist-cjs/index.js\")));\n        return fromIni(init)();\n    }, async ()=>{\n        init.logger?.debug(\"@aws-sdk/credential-provider-node - defaultProvider::fromProcess\");\n        const { fromProcess } = await Promise.resolve().then(()=>__toESM(__webpack_require__(/*! @aws-sdk/credential-provider-process */ \"(rsc)/./node_modules/@aws-sdk/credential-provider-process/dist-cjs/index.js\")));\n        return fromProcess(init)();\n    }, async ()=>{\n        init.logger?.debug(\"@aws-sdk/credential-provider-node - defaultProvider::fromTokenFile\");\n        const { fromTokenFile } = await Promise.resolve().then(()=>__toESM(__webpack_require__(/*! @aws-sdk/credential-provider-web-identity */ \"(rsc)/./node_modules/@aws-sdk/credential-provider-web-identity/dist-cjs/index.js\")));\n        return fromTokenFile(init)();\n    }, async ()=>{\n        init.logger?.debug(\"@aws-sdk/credential-provider-node - defaultProvider::remoteProvider\");\n        return (await remoteProvider(init))();\n    }, async ()=>{\n        throw new import_property_provider.CredentialsProviderError(\"Could not load credentials from any providers\", {\n            tryNextLink: false,\n            logger: init.logger\n        });\n    }), credentialsTreatedAsExpired, credentialsWillNeedRefresh), \"defaultProvider\");\nvar credentialsWillNeedRefresh = /* @__PURE__ */ __name((credentials)=>credentials?.expiration !== void 0, \"credentialsWillNeedRefresh\");\nvar credentialsTreatedAsExpired = /* @__PURE__ */ __name((credentials)=>credentials?.expiration !== void 0 && credentials.expiration.getTime() - Date.now() < 3e5, \"credentialsTreatedAsExpired\");\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/credential-provider-node/dist-cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/credential-provider-process/dist-cjs/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@aws-sdk/credential-provider-process/dist-cjs/index.js ***!
  \*****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value)=>__defProp(target, \"name\", {\n        value,\n        configurable: true\n    });\nvar __export = (target, all)=>{\n    for(var name in all)__defProp(target, name, {\n        get: all[name],\n        enumerable: true\n    });\n};\nvar __copyProps = (to, from, except, desc)=>{\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n            get: ()=>from[key],\n            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n    }\n    return to;\n};\nvar __toCommonJS = (mod)=>__copyProps(__defProp({}, \"__esModule\", {\n        value: true\n    }), mod);\n// src/index.ts\nvar index_exports = {};\n__export(index_exports, {\n    fromProcess: ()=>fromProcess\n});\nmodule.exports = __toCommonJS(index_exports);\n// src/fromProcess.ts\nvar import_shared_ini_file_loader = __webpack_require__(/*! @smithy/shared-ini-file-loader */ \"(rsc)/./node_modules/@smithy/shared-ini-file-loader/dist-cjs/index.js\");\n// src/resolveProcessCredentials.ts\nvar import_property_provider = __webpack_require__(/*! @smithy/property-provider */ \"(rsc)/./node_modules/@smithy/property-provider/dist-cjs/index.js\");\nvar import_child_process = __webpack_require__(/*! child_process */ \"child_process\");\nvar import_util = __webpack_require__(/*! util */ \"util\");\n// src/getValidatedProcessCredentials.ts\nvar import_client = __webpack_require__(/*! @aws-sdk/core/client */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/client/index.js\");\nvar getValidatedProcessCredentials = /* @__PURE__ */ __name((profileName, data, profiles)=>{\n    if (data.Version !== 1) {\n        throw Error(`Profile ${profileName} credential_process did not return Version 1.`);\n    }\n    if (data.AccessKeyId === void 0 || data.SecretAccessKey === void 0) {\n        throw Error(`Profile ${profileName} credential_process returned invalid credentials.`);\n    }\n    if (data.Expiration) {\n        const currentTime = /* @__PURE__ */ new Date();\n        const expireTime = new Date(data.Expiration);\n        if (expireTime < currentTime) {\n            throw Error(`Profile ${profileName} credential_process returned expired credentials.`);\n        }\n    }\n    let accountId = data.AccountId;\n    if (!accountId && profiles?.[profileName]?.aws_account_id) {\n        accountId = profiles[profileName].aws_account_id;\n    }\n    const credentials = {\n        accessKeyId: data.AccessKeyId,\n        secretAccessKey: data.SecretAccessKey,\n        ...data.SessionToken && {\n            sessionToken: data.SessionToken\n        },\n        ...data.Expiration && {\n            expiration: new Date(data.Expiration)\n        },\n        ...data.CredentialScope && {\n            credentialScope: data.CredentialScope\n        },\n        ...accountId && {\n            accountId\n        }\n    };\n    (0, import_client.setCredentialFeature)(credentials, \"CREDENTIALS_PROCESS\", \"w\");\n    return credentials;\n}, \"getValidatedProcessCredentials\");\n// src/resolveProcessCredentials.ts\nvar resolveProcessCredentials = /* @__PURE__ */ __name(async (profileName, profiles, logger)=>{\n    const profile = profiles[profileName];\n    if (profiles[profileName]) {\n        const credentialProcess = profile[\"credential_process\"];\n        if (credentialProcess !== void 0) {\n            const execPromise = (0, import_util.promisify)(import_child_process.exec);\n            try {\n                const { stdout } = await execPromise(credentialProcess);\n                let data;\n                try {\n                    data = JSON.parse(stdout.trim());\n                } catch  {\n                    throw Error(`Profile ${profileName} credential_process returned invalid JSON.`);\n                }\n                return getValidatedProcessCredentials(profileName, data, profiles);\n            } catch (error) {\n                throw new import_property_provider.CredentialsProviderError(error.message, {\n                    logger\n                });\n            }\n        } else {\n            throw new import_property_provider.CredentialsProviderError(`Profile ${profileName} did not contain credential_process.`, {\n                logger\n            });\n        }\n    } else {\n        throw new import_property_provider.CredentialsProviderError(`Profile ${profileName} could not be found in shared credentials file.`, {\n            logger\n        });\n    }\n}, \"resolveProcessCredentials\");\n// src/fromProcess.ts\nvar fromProcess = /* @__PURE__ */ __name((init = {})=>async ({ callerClientConfig } = {})=>{\n        init.logger?.debug(\"@aws-sdk/credential-provider-process - fromProcess\");\n        const profiles = await (0, import_shared_ini_file_loader.parseKnownFiles)(init);\n        return resolveProcessCredentials((0, import_shared_ini_file_loader.getProfileName)({\n            profile: init.profile ?? callerClientConfig?.profile\n        }), profiles, init.logger);\n    }, \"fromProcess\");\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/credential-provider-process/dist-cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/credential-provider-sso/dist-cjs/index.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@aws-sdk/credential-provider-sso/dist-cjs/index.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value)=>__defProp(target, \"name\", {\n        value,\n        configurable: true\n    });\nvar __esm = (fn, res)=>function __init() {\n        return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;\n    };\nvar __export = (target, all)=>{\n    for(var name in all)__defProp(target, name, {\n        get: all[name],\n        enumerable: true\n    });\n};\nvar __copyProps = (to, from, except, desc)=>{\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n            get: ()=>from[key],\n            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n    }\n    return to;\n};\nvar __toCommonJS = (mod)=>__copyProps(__defProp({}, \"__esModule\", {\n        value: true\n    }), mod);\n// src/loadSso.ts\nvar loadSso_exports = {};\n__export(loadSso_exports, {\n    GetRoleCredentialsCommand: ()=>import_client_sso.GetRoleCredentialsCommand,\n    SSOClient: ()=>import_client_sso.SSOClient\n});\nvar import_client_sso;\nvar init_loadSso = __esm({\n    \"src/loadSso.ts\" () {\n        \"use strict\";\n        import_client_sso = __webpack_require__(/*! @aws-sdk/client-sso */ \"(rsc)/./node_modules/@aws-sdk/client-sso/dist-cjs/index.js\");\n    }\n});\n// src/index.ts\nvar index_exports = {};\n__export(index_exports, {\n    fromSSO: ()=>fromSSO,\n    isSsoProfile: ()=>isSsoProfile,\n    validateSsoProfile: ()=>validateSsoProfile\n});\nmodule.exports = __toCommonJS(index_exports);\n// src/fromSSO.ts\n// src/isSsoProfile.ts\nvar isSsoProfile = /* @__PURE__ */ __name((arg)=>arg && (typeof arg.sso_start_url === \"string\" || typeof arg.sso_account_id === \"string\" || typeof arg.sso_session === \"string\" || typeof arg.sso_region === \"string\" || typeof arg.sso_role_name === \"string\"), \"isSsoProfile\");\n// src/resolveSSOCredentials.ts\nvar import_client = __webpack_require__(/*! @aws-sdk/core/client */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/client/index.js\");\nvar import_token_providers = __webpack_require__(/*! @aws-sdk/token-providers */ \"(rsc)/./node_modules/@aws-sdk/token-providers/dist-cjs/index.js\");\nvar import_property_provider = __webpack_require__(/*! @smithy/property-provider */ \"(rsc)/./node_modules/@smithy/property-provider/dist-cjs/index.js\");\nvar import_shared_ini_file_loader = __webpack_require__(/*! @smithy/shared-ini-file-loader */ \"(rsc)/./node_modules/@smithy/shared-ini-file-loader/dist-cjs/index.js\");\nvar SHOULD_FAIL_CREDENTIAL_CHAIN = false;\nvar resolveSSOCredentials = /* @__PURE__ */ __name(async ({ ssoStartUrl, ssoSession, ssoAccountId, ssoRegion, ssoRoleName, ssoClient, clientConfig, parentClientConfig, profile, logger })=>{\n    let token;\n    const refreshMessage = `To refresh this SSO session run aws sso login with the corresponding profile.`;\n    if (ssoSession) {\n        try {\n            const _token = await (0, import_token_providers.fromSso)({\n                profile\n            })();\n            token = {\n                accessToken: _token.token,\n                expiresAt: new Date(_token.expiration).toISOString()\n            };\n        } catch (e) {\n            throw new import_property_provider.CredentialsProviderError(e.message, {\n                tryNextLink: SHOULD_FAIL_CREDENTIAL_CHAIN,\n                logger\n            });\n        }\n    } else {\n        try {\n            token = await (0, import_shared_ini_file_loader.getSSOTokenFromFile)(ssoStartUrl);\n        } catch (e) {\n            throw new import_property_provider.CredentialsProviderError(`The SSO session associated with this profile is invalid. ${refreshMessage}`, {\n                tryNextLink: SHOULD_FAIL_CREDENTIAL_CHAIN,\n                logger\n            });\n        }\n    }\n    if (new Date(token.expiresAt).getTime() - Date.now() <= 0) {\n        throw new import_property_provider.CredentialsProviderError(`The SSO session associated with this profile has expired. ${refreshMessage}`, {\n            tryNextLink: SHOULD_FAIL_CREDENTIAL_CHAIN,\n            logger\n        });\n    }\n    const { accessToken } = token;\n    const { SSOClient: SSOClient2, GetRoleCredentialsCommand: GetRoleCredentialsCommand2 } = await Promise.resolve().then(()=>(init_loadSso(), loadSso_exports));\n    const sso = ssoClient || new SSOClient2(Object.assign({}, clientConfig ?? {}, {\n        logger: clientConfig?.logger ?? parentClientConfig?.logger,\n        region: clientConfig?.region ?? ssoRegion\n    }));\n    let ssoResp;\n    try {\n        ssoResp = await sso.send(new GetRoleCredentialsCommand2({\n            accountId: ssoAccountId,\n            roleName: ssoRoleName,\n            accessToken\n        }));\n    } catch (e) {\n        throw new import_property_provider.CredentialsProviderError(e, {\n            tryNextLink: SHOULD_FAIL_CREDENTIAL_CHAIN,\n            logger\n        });\n    }\n    const { roleCredentials: { accessKeyId, secretAccessKey, sessionToken, expiration, credentialScope, accountId } = {} } = ssoResp;\n    if (!accessKeyId || !secretAccessKey || !sessionToken || !expiration) {\n        throw new import_property_provider.CredentialsProviderError(\"SSO returns an invalid temporary credential.\", {\n            tryNextLink: SHOULD_FAIL_CREDENTIAL_CHAIN,\n            logger\n        });\n    }\n    const credentials = {\n        accessKeyId,\n        secretAccessKey,\n        sessionToken,\n        expiration: new Date(expiration),\n        ...credentialScope && {\n            credentialScope\n        },\n        ...accountId && {\n            accountId\n        }\n    };\n    if (ssoSession) {\n        (0, import_client.setCredentialFeature)(credentials, \"CREDENTIALS_SSO\", \"s\");\n    } else {\n        (0, import_client.setCredentialFeature)(credentials, \"CREDENTIALS_SSO_LEGACY\", \"u\");\n    }\n    return credentials;\n}, \"resolveSSOCredentials\");\n// src/validateSsoProfile.ts\nvar validateSsoProfile = /* @__PURE__ */ __name((profile, logger)=>{\n    const { sso_start_url, sso_account_id, sso_region, sso_role_name } = profile;\n    if (!sso_start_url || !sso_account_id || !sso_region || !sso_role_name) {\n        throw new import_property_provider.CredentialsProviderError(`Profile is configured with invalid SSO credentials. Required parameters \"sso_account_id\", \"sso_region\", \"sso_role_name\", \"sso_start_url\". Got ${Object.keys(profile).join(\", \")}\nReference: https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-sso.html`, {\n            tryNextLink: false,\n            logger\n        });\n    }\n    return profile;\n}, \"validateSsoProfile\");\n// src/fromSSO.ts\nvar fromSSO = /* @__PURE__ */ __name((init = {})=>async ({ callerClientConfig } = {})=>{\n        init.logger?.debug(\"@aws-sdk/credential-provider-sso - fromSSO\");\n        const { ssoStartUrl, ssoAccountId, ssoRegion, ssoRoleName, ssoSession } = init;\n        const { ssoClient } = init;\n        const profileName = (0, import_shared_ini_file_loader.getProfileName)({\n            profile: init.profile ?? callerClientConfig?.profile\n        });\n        if (!ssoStartUrl && !ssoAccountId && !ssoRegion && !ssoRoleName && !ssoSession) {\n            const profiles = await (0, import_shared_ini_file_loader.parseKnownFiles)(init);\n            const profile = profiles[profileName];\n            if (!profile) {\n                throw new import_property_provider.CredentialsProviderError(`Profile ${profileName} was not found.`, {\n                    logger: init.logger\n                });\n            }\n            if (!isSsoProfile(profile)) {\n                throw new import_property_provider.CredentialsProviderError(`Profile ${profileName} is not configured with SSO credentials.`, {\n                    logger: init.logger\n                });\n            }\n            if (profile?.sso_session) {\n                const ssoSessions = await (0, import_shared_ini_file_loader.loadSsoSessionData)(init);\n                const session = ssoSessions[profile.sso_session];\n                const conflictMsg = ` configurations in profile ${profileName} and sso-session ${profile.sso_session}`;\n                if (ssoRegion && ssoRegion !== session.sso_region) {\n                    throw new import_property_provider.CredentialsProviderError(`Conflicting SSO region` + conflictMsg, {\n                        tryNextLink: false,\n                        logger: init.logger\n                    });\n                }\n                if (ssoStartUrl && ssoStartUrl !== session.sso_start_url) {\n                    throw new import_property_provider.CredentialsProviderError(`Conflicting SSO start_url` + conflictMsg, {\n                        tryNextLink: false,\n                        logger: init.logger\n                    });\n                }\n                profile.sso_region = session.sso_region;\n                profile.sso_start_url = session.sso_start_url;\n            }\n            const { sso_start_url, sso_account_id, sso_region, sso_role_name, sso_session } = validateSsoProfile(profile, init.logger);\n            return resolveSSOCredentials({\n                ssoStartUrl: sso_start_url,\n                ssoSession: sso_session,\n                ssoAccountId: sso_account_id,\n                ssoRegion: sso_region,\n                ssoRoleName: sso_role_name,\n                ssoClient,\n                clientConfig: init.clientConfig,\n                parentClientConfig: init.parentClientConfig,\n                profile: profileName\n            });\n        } else if (!ssoStartUrl || !ssoAccountId || !ssoRegion || !ssoRoleName) {\n            throw new import_property_provider.CredentialsProviderError('Incomplete configuration. The fromSSO() argument hash must include \"ssoStartUrl\", \"ssoAccountId\", \"ssoRegion\", \"ssoRoleName\"', {\n                tryNextLink: false,\n                logger: init.logger\n            });\n        } else {\n            return resolveSSOCredentials({\n                ssoStartUrl,\n                ssoSession,\n                ssoAccountId,\n                ssoRegion,\n                ssoRoleName,\n                ssoClient,\n                clientConfig: init.clientConfig,\n                parentClientConfig: init.parentClientConfig,\n                profile: profileName\n            });\n        }\n    }, \"fromSSO\");\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/credential-provider-sso/dist-cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/credential-provider-web-identity/dist-cjs/fromTokenFile.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/credential-provider-web-identity/dist-cjs/fromTokenFile.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.fromTokenFile = void 0;\nconst client_1 = __webpack_require__(/*! @aws-sdk/core/client */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/client/index.js\");\nconst property_provider_1 = __webpack_require__(/*! @smithy/property-provider */ \"(rsc)/./node_modules/@smithy/property-provider/dist-cjs/index.js\");\nconst fs_1 = __webpack_require__(/*! fs */ \"fs\");\nconst fromWebToken_1 = __webpack_require__(/*! ./fromWebToken */ \"(rsc)/./node_modules/@aws-sdk/credential-provider-web-identity/dist-cjs/fromWebToken.js\");\nconst ENV_TOKEN_FILE = \"AWS_WEB_IDENTITY_TOKEN_FILE\";\nconst ENV_ROLE_ARN = \"AWS_ROLE_ARN\";\nconst ENV_ROLE_SESSION_NAME = \"AWS_ROLE_SESSION_NAME\";\nconst fromTokenFile = (init = {})=>async ()=>{\n        init.logger?.debug(\"@aws-sdk/credential-provider-web-identity - fromTokenFile\");\n        const webIdentityTokenFile = init?.webIdentityTokenFile ?? process.env[ENV_TOKEN_FILE];\n        const roleArn = init?.roleArn ?? process.env[ENV_ROLE_ARN];\n        const roleSessionName = init?.roleSessionName ?? process.env[ENV_ROLE_SESSION_NAME];\n        if (!webIdentityTokenFile || !roleArn) {\n            throw new property_provider_1.CredentialsProviderError(\"Web identity configuration not specified\", {\n                logger: init.logger\n            });\n        }\n        const credentials = await (0, fromWebToken_1.fromWebToken)({\n            ...init,\n            webIdentityToken: (0, fs_1.readFileSync)(webIdentityTokenFile, {\n                encoding: \"ascii\"\n            }),\n            roleArn,\n            roleSessionName\n        })();\n        if (webIdentityTokenFile === process.env[ENV_TOKEN_FILE]) {\n            (0, client_1.setCredentialFeature)(credentials, \"CREDENTIALS_ENV_VARS_STS_WEB_ID_TOKEN\", \"h\");\n        }\n        return credentials;\n    };\nexports.fromTokenFile = fromTokenFile;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY3JlZGVudGlhbC1wcm92aWRlci13ZWItaWRlbnRpdHkvZGlzdC1janMvZnJvbVRva2VuRmlsZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQscUJBQXFCLEdBQUcsS0FBSztBQUM3QixNQUFNRyxXQUFXQyxtQkFBT0EsQ0FBQyxtR0FBc0I7QUFDL0MsTUFBTUMsc0JBQXNCRCxtQkFBT0EsQ0FBQyxtR0FBMkI7QUFDL0QsTUFBTUUsT0FBT0YsbUJBQU9BLENBQUMsY0FBSTtBQUN6QixNQUFNRyxpQkFBaUJILG1CQUFPQSxDQUFDLCtHQUFnQjtBQUMvQyxNQUFNSSxpQkFBaUI7QUFDdkIsTUFBTUMsZUFBZTtBQUNyQixNQUFNQyx3QkFBd0I7QUFDOUIsTUFBTVIsZ0JBQWdCLENBQUNTLE9BQU8sQ0FBQyxDQUFDLEdBQUs7UUFDakNBLEtBQUtDLE1BQU0sRUFBRUMsTUFBTTtRQUNuQixNQUFNQyx1QkFBdUJILE1BQU1HLHdCQUF3QkMsUUFBUUMsR0FBRyxDQUFDUixlQUFlO1FBQ3RGLE1BQU1TLFVBQVVOLE1BQU1NLFdBQVdGLFFBQVFDLEdBQUcsQ0FBQ1AsYUFBYTtRQUMxRCxNQUFNUyxrQkFBa0JQLE1BQU1PLG1CQUFtQkgsUUFBUUMsR0FBRyxDQUFDTixzQkFBc0I7UUFDbkYsSUFBSSxDQUFDSSx3QkFBd0IsQ0FBQ0csU0FBUztZQUNuQyxNQUFNLElBQUlaLG9CQUFvQmMsd0JBQXdCLENBQUMsNENBQTRDO2dCQUMvRlAsUUFBUUQsS0FBS0MsTUFBTTtZQUN2QjtRQUNKO1FBQ0EsTUFBTVEsY0FBYyxNQUFNLENBQUMsR0FBR2IsZUFBZWMsWUFBWSxFQUFFO1lBQ3ZELEdBQUdWLElBQUk7WUFDUFcsa0JBQWtCLENBQUMsR0FBR2hCLEtBQUtpQixZQUFZLEVBQUVULHNCQUFzQjtnQkFBRVUsVUFBVTtZQUFRO1lBQ25GUDtZQUNBQztRQUNKO1FBQ0EsSUFBSUoseUJBQXlCQyxRQUFRQyxHQUFHLENBQUNSLGVBQWUsRUFBRTtZQUNyRCxJQUFHTCxTQUFTc0Isb0JBQW9CLEVBQUVMLGFBQWEseUNBQXlDO1FBQzdGO1FBQ0EsT0FBT0E7SUFDWDtBQUNBcEIscUJBQXFCLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xvdWRzaGlmdC8uL25vZGVfbW9kdWxlcy9AYXdzLXNkay9jcmVkZW50aWFsLXByb3ZpZGVyLXdlYi1pZGVudGl0eS9kaXN0LWNqcy9mcm9tVG9rZW5GaWxlLmpzPzIzYzEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmZyb21Ub2tlbkZpbGUgPSB2b2lkIDA7XG5jb25zdCBjbGllbnRfMSA9IHJlcXVpcmUoXCJAYXdzLXNkay9jb3JlL2NsaWVudFwiKTtcbmNvbnN0IHByb3BlcnR5X3Byb3ZpZGVyXzEgPSByZXF1aXJlKFwiQHNtaXRoeS9wcm9wZXJ0eS1wcm92aWRlclwiKTtcbmNvbnN0IGZzXzEgPSByZXF1aXJlKFwiZnNcIik7XG5jb25zdCBmcm9tV2ViVG9rZW5fMSA9IHJlcXVpcmUoXCIuL2Zyb21XZWJUb2tlblwiKTtcbmNvbnN0IEVOVl9UT0tFTl9GSUxFID0gXCJBV1NfV0VCX0lERU5USVRZX1RPS0VOX0ZJTEVcIjtcbmNvbnN0IEVOVl9ST0xFX0FSTiA9IFwiQVdTX1JPTEVfQVJOXCI7XG5jb25zdCBFTlZfUk9MRV9TRVNTSU9OX05BTUUgPSBcIkFXU19ST0xFX1NFU1NJT05fTkFNRVwiO1xuY29uc3QgZnJvbVRva2VuRmlsZSA9IChpbml0ID0ge30pID0+IGFzeW5jICgpID0+IHtcbiAgICBpbml0LmxvZ2dlcj8uZGVidWcoXCJAYXdzLXNkay9jcmVkZW50aWFsLXByb3ZpZGVyLXdlYi1pZGVudGl0eSAtIGZyb21Ub2tlbkZpbGVcIik7XG4gICAgY29uc3Qgd2ViSWRlbnRpdHlUb2tlbkZpbGUgPSBpbml0Py53ZWJJZGVudGl0eVRva2VuRmlsZSA/PyBwcm9jZXNzLmVudltFTlZfVE9LRU5fRklMRV07XG4gICAgY29uc3Qgcm9sZUFybiA9IGluaXQ/LnJvbGVBcm4gPz8gcHJvY2Vzcy5lbnZbRU5WX1JPTEVfQVJOXTtcbiAgICBjb25zdCByb2xlU2Vzc2lvbk5hbWUgPSBpbml0Py5yb2xlU2Vzc2lvbk5hbWUgPz8gcHJvY2Vzcy5lbnZbRU5WX1JPTEVfU0VTU0lPTl9OQU1FXTtcbiAgICBpZiAoIXdlYklkZW50aXR5VG9rZW5GaWxlIHx8ICFyb2xlQXJuKSB7XG4gICAgICAgIHRocm93IG5ldyBwcm9wZXJ0eV9wcm92aWRlcl8xLkNyZWRlbnRpYWxzUHJvdmlkZXJFcnJvcihcIldlYiBpZGVudGl0eSBjb25maWd1cmF0aW9uIG5vdCBzcGVjaWZpZWRcIiwge1xuICAgICAgICAgICAgbG9nZ2VyOiBpbml0LmxvZ2dlcixcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGNvbnN0IGNyZWRlbnRpYWxzID0gYXdhaXQgKDAsIGZyb21XZWJUb2tlbl8xLmZyb21XZWJUb2tlbikoe1xuICAgICAgICAuLi5pbml0LFxuICAgICAgICB3ZWJJZGVudGl0eVRva2VuOiAoMCwgZnNfMS5yZWFkRmlsZVN5bmMpKHdlYklkZW50aXR5VG9rZW5GaWxlLCB7IGVuY29kaW5nOiBcImFzY2lpXCIgfSksXG4gICAgICAgIHJvbGVBcm4sXG4gICAgICAgIHJvbGVTZXNzaW9uTmFtZSxcbiAgICB9KSgpO1xuICAgIGlmICh3ZWJJZGVudGl0eVRva2VuRmlsZSA9PT0gcHJvY2Vzcy5lbnZbRU5WX1RPS0VOX0ZJTEVdKSB7XG4gICAgICAgICgwLCBjbGllbnRfMS5zZXRDcmVkZW50aWFsRmVhdHVyZSkoY3JlZGVudGlhbHMsIFwiQ1JFREVOVElBTFNfRU5WX1ZBUlNfU1RTX1dFQl9JRF9UT0tFTlwiLCBcImhcIik7XG4gICAgfVxuICAgIHJldHVybiBjcmVkZW50aWFscztcbn07XG5leHBvcnRzLmZyb21Ub2tlbkZpbGUgPSBmcm9tVG9rZW5GaWxlO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZnJvbVRva2VuRmlsZSIsImNsaWVudF8xIiwicmVxdWlyZSIsInByb3BlcnR5X3Byb3ZpZGVyXzEiLCJmc18xIiwiZnJvbVdlYlRva2VuXzEiLCJFTlZfVE9LRU5fRklMRSIsIkVOVl9ST0xFX0FSTiIsIkVOVl9ST0xFX1NFU1NJT05fTkFNRSIsImluaXQiLCJsb2dnZXIiLCJkZWJ1ZyIsIndlYklkZW50aXR5VG9rZW5GaWxlIiwicHJvY2VzcyIsImVudiIsInJvbGVBcm4iLCJyb2xlU2Vzc2lvbk5hbWUiLCJDcmVkZW50aWFsc1Byb3ZpZGVyRXJyb3IiLCJjcmVkZW50aWFscyIsImZyb21XZWJUb2tlbiIsIndlYklkZW50aXR5VG9rZW4iLCJyZWFkRmlsZVN5bmMiLCJlbmNvZGluZyIsInNldENyZWRlbnRpYWxGZWF0dXJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/credential-provider-web-identity/dist-cjs/fromTokenFile.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/credential-provider-web-identity/dist-cjs/fromWebToken.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/credential-provider-web-identity/dist-cjs/fromWebToken.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.fromWebToken = void 0;\nconst fromWebToken = (init)=>async (awsIdentityProperties)=>{\n        init.logger?.debug(\"@aws-sdk/credential-provider-web-identity - fromWebToken\");\n        const { roleArn, roleSessionName, webIdentityToken, providerId, policyArns, policy, durationSeconds } = init;\n        let { roleAssumerWithWebIdentity } = init;\n        if (!roleAssumerWithWebIdentity) {\n            const { getDefaultRoleAssumerWithWebIdentity } = await Promise.resolve().then(()=>__importStar(__webpack_require__(/*! @aws-sdk/nested-clients/sts */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/index.js\")));\n            roleAssumerWithWebIdentity = getDefaultRoleAssumerWithWebIdentity({\n                ...init.clientConfig,\n                credentialProviderLogger: init.logger,\n                parentClientConfig: {\n                    ...awsIdentityProperties?.callerClientConfig,\n                    ...init.parentClientConfig\n                }\n            }, init.clientPlugins);\n        }\n        return roleAssumerWithWebIdentity({\n            RoleArn: roleArn,\n            RoleSessionName: roleSessionName ?? `aws-sdk-js-session-${Date.now()}`,\n            WebIdentityToken: webIdentityToken,\n            ProviderId: providerId,\n            PolicyArns: policyArns,\n            Policy: policy,\n            DurationSeconds: durationSeconds\n        });\n    };\nexports.fromWebToken = fromWebToken;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY3JlZGVudGlhbC1wcm92aWRlci13ZWItaWRlbnRpdHkvZGlzdC1janMvZnJvbVdlYlRva2VuLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsSUFBSUEsa0JBQWtCLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsZUFBZSxJQUFNQyxDQUFBQSxPQUFPQyxNQUFNLEdBQUksU0FBU0MsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUMxRixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQixJQUFJRyxPQUFPUCxPQUFPUSx3QkFBd0IsQ0FBQ0wsR0FBR0M7SUFDOUMsSUFBSSxDQUFDRyxRQUFTLFVBQVNBLE9BQU8sQ0FBQ0osRUFBRU0sVUFBVSxHQUFHRixLQUFLRyxRQUFRLElBQUlILEtBQUtJLFlBQVksR0FBRztRQUNqRkosT0FBTztZQUFFSyxZQUFZO1lBQU1DLEtBQUs7Z0JBQWEsT0FBT1YsQ0FBQyxDQUFDQyxFQUFFO1lBQUU7UUFBRTtJQUM5RDtJQUNBSixPQUFPYyxjQUFjLENBQUNaLEdBQUdHLElBQUlFO0FBQ2pDLElBQU0sU0FBU0wsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUN0QixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQkYsQ0FBQyxDQUFDRyxHQUFHLEdBQUdGLENBQUMsQ0FBQ0MsRUFBRTtBQUNoQixDQUFDO0FBQ0QsSUFBSVcscUJBQXFCLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsa0JBQWtCLElBQU1mLENBQUFBLE9BQU9DLE1BQU0sR0FBSSxTQUFTQyxDQUFDLEVBQUVjLENBQUM7SUFDekZoQixPQUFPYyxjQUFjLENBQUNaLEdBQUcsV0FBVztRQUFFVSxZQUFZO1FBQU1LLE9BQU9EO0lBQUU7QUFDckUsSUFBSyxTQUFTZCxDQUFDLEVBQUVjLENBQUM7SUFDZGQsQ0FBQyxDQUFDLFVBQVUsR0FBR2M7QUFDbkI7QUFDQSxJQUFJRSxlQUFlLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsWUFBWSxJQUFLLFNBQVVDLEdBQUc7SUFDM0QsSUFBSUEsT0FBT0EsSUFBSVYsVUFBVSxFQUFFLE9BQU9VO0lBQ2xDLElBQUlDLFNBQVMsQ0FBQztJQUNkLElBQUlELE9BQU8sTUFBTTtRQUFBLElBQUssSUFBSWYsS0FBS2UsSUFBSyxJQUFJZixNQUFNLGFBQWFKLE9BQU9xQixTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDSixLQUFLZixJQUFJTCxnQkFBZ0JxQixRQUFRRCxLQUFLZjtJQUFFO0lBQ3hJVyxtQkFBbUJLLFFBQVFEO0lBQzNCLE9BQU9DO0FBQ1g7QUFDQXBCLDhDQUE2QztJQUFFaUIsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RE8sb0JBQW9CLEdBQUcsS0FBSztBQUM1QixNQUFNQyxlQUFlLENBQUNDLE9BQVMsT0FBT0M7UUFDbENELEtBQUtFLE1BQU0sRUFBRUMsTUFBTTtRQUNuQixNQUFNLEVBQUVDLE9BQU8sRUFBRUMsZUFBZSxFQUFFQyxnQkFBZ0IsRUFBRUMsVUFBVSxFQUFFQyxVQUFVLEVBQUVDLE1BQU0sRUFBRUMsZUFBZSxFQUFFLEdBQUdWO1FBQ3hHLElBQUksRUFBRVcsMEJBQTBCLEVBQUUsR0FBR1g7UUFDckMsSUFBSSxDQUFDVyw0QkFBNEI7WUFDN0IsTUFBTSxFQUFFQyxvQ0FBb0MsRUFBRSxHQUFHLE1BQU1DLFFBQVFDLE9BQU8sR0FBR0MsSUFBSSxDQUFDLElBQU12QixhQUFhd0IsbUJBQU9BLENBQUMsaUhBQTZCO1lBQ3RJTCw2QkFBNkJDLHFDQUFxQztnQkFDOUQsR0FBR1osS0FBS2lCLFlBQVk7Z0JBQ3BCQywwQkFBMEJsQixLQUFLRSxNQUFNO2dCQUNyQ2lCLG9CQUFvQjtvQkFDaEIsR0FBR2xCLHVCQUF1Qm1CLGtCQUFrQjtvQkFDNUMsR0FBR3BCLEtBQUttQixrQkFBa0I7Z0JBQzlCO1lBQ0osR0FBR25CLEtBQUtxQixhQUFhO1FBQ3pCO1FBQ0EsT0FBT1YsMkJBQTJCO1lBQzlCVyxTQUFTbEI7WUFDVG1CLGlCQUFpQmxCLG1CQUFtQixDQUFDLG1CQUFtQixFQUFFbUIsS0FBS0MsR0FBRyxHQUFHLENBQUM7WUFDdEVDLGtCQUFrQnBCO1lBQ2xCcUIsWUFBWXBCO1lBQ1pxQixZQUFZcEI7WUFDWnFCLFFBQVFwQjtZQUNScUIsaUJBQWlCcEI7UUFDckI7SUFDSjtBQUNBWixvQkFBb0IsR0FBR0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbG91ZHNoaWZ0Ly4vbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL2NyZWRlbnRpYWwtcHJvdmlkZXItd2ViLWlkZW50aXR5L2Rpc3QtY2pzL2Zyb21XZWJUb2tlbi5qcz9kOGMzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX3NldE1vZHVsZURlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9fc2V0TW9kdWxlRGVmYXVsdCkgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgdikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBcImRlZmF1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdiB9KTtcbn0pIDogZnVuY3Rpb24obywgdikge1xuICAgIG9bXCJkZWZhdWx0XCJdID0gdjtcbn0pO1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrIGluIG1vZCkgaWYgKGsgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChtb2QsIGspKSBfX2NyZWF0ZUJpbmRpbmcocmVzdWx0LCBtb2QsIGspO1xuICAgIF9fc2V0TW9kdWxlRGVmYXVsdChyZXN1bHQsIG1vZCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmZyb21XZWJUb2tlbiA9IHZvaWQgMDtcbmNvbnN0IGZyb21XZWJUb2tlbiA9IChpbml0KSA9PiBhc3luYyAoYXdzSWRlbnRpdHlQcm9wZXJ0aWVzKSA9PiB7XG4gICAgaW5pdC5sb2dnZXI/LmRlYnVnKFwiQGF3cy1zZGsvY3JlZGVudGlhbC1wcm92aWRlci13ZWItaWRlbnRpdHkgLSBmcm9tV2ViVG9rZW5cIik7XG4gICAgY29uc3QgeyByb2xlQXJuLCByb2xlU2Vzc2lvbk5hbWUsIHdlYklkZW50aXR5VG9rZW4sIHByb3ZpZGVySWQsIHBvbGljeUFybnMsIHBvbGljeSwgZHVyYXRpb25TZWNvbmRzIH0gPSBpbml0O1xuICAgIGxldCB7IHJvbGVBc3N1bWVyV2l0aFdlYklkZW50aXR5IH0gPSBpbml0O1xuICAgIGlmICghcm9sZUFzc3VtZXJXaXRoV2ViSWRlbnRpdHkpIHtcbiAgICAgICAgY29uc3QgeyBnZXREZWZhdWx0Um9sZUFzc3VtZXJXaXRoV2ViSWRlbnRpdHkgfSA9IGF3YWl0IFByb21pc2UucmVzb2x2ZSgpLnRoZW4oKCkgPT4gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCJAYXdzLXNkay9uZXN0ZWQtY2xpZW50cy9zdHNcIikpKTtcbiAgICAgICAgcm9sZUFzc3VtZXJXaXRoV2ViSWRlbnRpdHkgPSBnZXREZWZhdWx0Um9sZUFzc3VtZXJXaXRoV2ViSWRlbnRpdHkoe1xuICAgICAgICAgICAgLi4uaW5pdC5jbGllbnRDb25maWcsXG4gICAgICAgICAgICBjcmVkZW50aWFsUHJvdmlkZXJMb2dnZXI6IGluaXQubG9nZ2VyLFxuICAgICAgICAgICAgcGFyZW50Q2xpZW50Q29uZmlnOiB7XG4gICAgICAgICAgICAgICAgLi4uYXdzSWRlbnRpdHlQcm9wZXJ0aWVzPy5jYWxsZXJDbGllbnRDb25maWcsXG4gICAgICAgICAgICAgICAgLi4uaW5pdC5wYXJlbnRDbGllbnRDb25maWcsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9LCBpbml0LmNsaWVudFBsdWdpbnMpO1xuICAgIH1cbiAgICByZXR1cm4gcm9sZUFzc3VtZXJXaXRoV2ViSWRlbnRpdHkoe1xuICAgICAgICBSb2xlQXJuOiByb2xlQXJuLFxuICAgICAgICBSb2xlU2Vzc2lvbk5hbWU6IHJvbGVTZXNzaW9uTmFtZSA/PyBgYXdzLXNkay1qcy1zZXNzaW9uLSR7RGF0ZS5ub3coKX1gLFxuICAgICAgICBXZWJJZGVudGl0eVRva2VuOiB3ZWJJZGVudGl0eVRva2VuLFxuICAgICAgICBQcm92aWRlcklkOiBwcm92aWRlcklkLFxuICAgICAgICBQb2xpY3lBcm5zOiBwb2xpY3lBcm5zLFxuICAgICAgICBQb2xpY3k6IHBvbGljeSxcbiAgICAgICAgRHVyYXRpb25TZWNvbmRzOiBkdXJhdGlvblNlY29uZHMsXG4gICAgfSk7XG59O1xuZXhwb3J0cy5mcm9tV2ViVG9rZW4gPSBmcm9tV2ViVG9rZW47XG4iXSwibmFtZXMiOlsiX19jcmVhdGVCaW5kaW5nIiwiT2JqZWN0IiwiY3JlYXRlIiwibyIsIm0iLCJrIiwiazIiLCJ1bmRlZmluZWQiLCJkZXNjIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiX19lc01vZHVsZSIsIndyaXRhYmxlIiwiY29uZmlndXJhYmxlIiwiZW51bWVyYWJsZSIsImdldCIsImRlZmluZVByb3BlcnR5IiwiX19zZXRNb2R1bGVEZWZhdWx0IiwidiIsInZhbHVlIiwiX19pbXBvcnRTdGFyIiwibW9kIiwicmVzdWx0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiZXhwb3J0cyIsImZyb21XZWJUb2tlbiIsImluaXQiLCJhd3NJZGVudGl0eVByb3BlcnRpZXMiLCJsb2dnZXIiLCJkZWJ1ZyIsInJvbGVBcm4iLCJyb2xlU2Vzc2lvbk5hbWUiLCJ3ZWJJZGVudGl0eVRva2VuIiwicHJvdmlkZXJJZCIsInBvbGljeUFybnMiLCJwb2xpY3kiLCJkdXJhdGlvblNlY29uZHMiLCJyb2xlQXNzdW1lcldpdGhXZWJJZGVudGl0eSIsImdldERlZmF1bHRSb2xlQXNzdW1lcldpdGhXZWJJZGVudGl0eSIsIlByb21pc2UiLCJyZXNvbHZlIiwidGhlbiIsInJlcXVpcmUiLCJjbGllbnRDb25maWciLCJjcmVkZW50aWFsUHJvdmlkZXJMb2dnZXIiLCJwYXJlbnRDbGllbnRDb25maWciLCJjYWxsZXJDbGllbnRDb25maWciLCJjbGllbnRQbHVnaW5zIiwiUm9sZUFybiIsIlJvbGVTZXNzaW9uTmFtZSIsIkRhdGUiLCJub3ciLCJXZWJJZGVudGl0eVRva2VuIiwiUHJvdmlkZXJJZCIsIlBvbGljeUFybnMiLCJQb2xpY3kiLCJEdXJhdGlvblNlY29uZHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/credential-provider-web-identity/dist-cjs/fromWebToken.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/credential-provider-web-identity/dist-cjs/index.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/credential-provider-web-identity/dist-cjs/index.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __copyProps = (to, from, except, desc)=>{\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n            get: ()=>from[key],\n            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n    }\n    return to;\n};\nvar __reExport = (target, mod, secondTarget)=>(__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\nvar __toCommonJS = (mod)=>__copyProps(__defProp({}, \"__esModule\", {\n        value: true\n    }), mod);\n// src/index.ts\nvar index_exports = {};\nmodule.exports = __toCommonJS(index_exports);\n__reExport(index_exports, __webpack_require__(/*! ././fromTokenFile */ \"(rsc)/./node_modules/@aws-sdk/credential-provider-web-identity/dist-cjs/fromTokenFile.js\"), module.exports);\n__reExport(index_exports, __webpack_require__(/*! ././fromWebToken */ \"(rsc)/./node_modules/@aws-sdk/credential-provider-web-identity/dist-cjs/fromWebToken.js\"), module.exports);\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvY3JlZGVudGlhbC1wcm92aWRlci13ZWItaWRlbnRpdHkvZGlzdC1janMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixJQUFJQSxZQUFZQyxPQUFPQyxjQUFjO0FBQ3JDLElBQUlDLG1CQUFtQkYsT0FBT0csd0JBQXdCO0FBQ3RELElBQUlDLG9CQUFvQkosT0FBT0ssbUJBQW1CO0FBQ2xELElBQUlDLGVBQWVOLE9BQU9PLFNBQVMsQ0FBQ0MsY0FBYztBQUNsRCxJQUFJQyxjQUFjLENBQUNDLElBQUlDLE1BQU1DLFFBQVFDO0lBQ25DLElBQUlGLFFBQVEsT0FBT0EsU0FBUyxZQUFZLE9BQU9BLFNBQVMsWUFBWTtRQUNsRSxLQUFLLElBQUlHLE9BQU9WLGtCQUFrQk8sTUFDaEMsSUFBSSxDQUFDTCxhQUFhUyxJQUFJLENBQUNMLElBQUlJLFFBQVFBLFFBQVFGLFFBQ3pDYixVQUFVVyxJQUFJSSxLQUFLO1lBQUVFLEtBQUssSUFBTUwsSUFBSSxDQUFDRyxJQUFJO1lBQUVHLFlBQVksQ0FBRUosQ0FBQUEsT0FBT1gsaUJBQWlCUyxNQUFNRyxJQUFHLEtBQU1ELEtBQUtJLFVBQVU7UUFBQztJQUN0SDtJQUNBLE9BQU9QO0FBQ1Q7QUFDQSxJQUFJUSxhQUFhLENBQUNDLFFBQVFDLEtBQUtDLGVBQWtCWixDQUFBQSxZQUFZVSxRQUFRQyxLQUFLLFlBQVlDLGdCQUFnQlosWUFBWVksY0FBY0QsS0FBSyxVQUFTO0FBQzlJLElBQUlFLGVBQWUsQ0FBQ0YsTUFBUVgsWUFBWVYsVUFBVSxDQUFDLEdBQUcsY0FBYztRQUFFd0IsT0FBTztJQUFLLElBQUlIO0FBRXRGLGVBQWU7QUFDZixJQUFJSSxnQkFBZ0IsQ0FBQztBQUNyQkMsT0FBT0MsT0FBTyxHQUFHSixhQUFhRTtBQUM5Qk4sV0FBV00sZUFBZUcsbUJBQU9BLENBQUMsbUhBQW1CLEdBQUdGLE9BQU9DLE9BQU87QUFDdEVSLFdBQVdNLGVBQWVHLG1CQUFPQSxDQUFDLGlIQUFrQixHQUFHRixPQUFPQyxPQUFPO0FBQ3JFLDZEQUE2RDtBQUU3RCxLQUFNRCxDQUFBQSxDQUdOIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xvdWRzaGlmdC8uL25vZGVfbW9kdWxlcy9AYXdzLXNkay9jcmVkZW50aWFsLXByb3ZpZGVyLXdlYi1pZGVudGl0eS9kaXN0LWNqcy9pbmRleC5qcz8yOGNhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZGVmUHJvcCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBfX2dldE93blByb3BEZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbnZhciBfX2dldE93blByb3BOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xudmFyIF9faGFzT3duUHJvcCA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgX19jb3B5UHJvcHMgPSAodG8sIGZyb20sIGV4Y2VwdCwgZGVzYykgPT4ge1xuICBpZiAoZnJvbSAmJiB0eXBlb2YgZnJvbSA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgZnJvbSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgZm9yIChsZXQga2V5IG9mIF9fZ2V0T3duUHJvcE5hbWVzKGZyb20pKVxuICAgICAgaWYgKCFfX2hhc093blByb3AuY2FsbCh0bywga2V5KSAmJiBrZXkgIT09IGV4Y2VwdClcbiAgICAgICAgX19kZWZQcm9wKHRvLCBrZXksIHsgZ2V0OiAoKSA9PiBmcm9tW2tleV0sIGVudW1lcmFibGU6ICEoZGVzYyA9IF9fZ2V0T3duUHJvcERlc2MoZnJvbSwga2V5KSkgfHwgZGVzYy5lbnVtZXJhYmxlIH0pO1xuICB9XG4gIHJldHVybiB0bztcbn07XG52YXIgX19yZUV4cG9ydCA9ICh0YXJnZXQsIG1vZCwgc2Vjb25kVGFyZ2V0KSA9PiAoX19jb3B5UHJvcHModGFyZ2V0LCBtb2QsIFwiZGVmYXVsdFwiKSwgc2Vjb25kVGFyZ2V0ICYmIF9fY29weVByb3BzKHNlY29uZFRhcmdldCwgbW9kLCBcImRlZmF1bHRcIikpO1xudmFyIF9fdG9Db21tb25KUyA9IChtb2QpID0+IF9fY29weVByb3BzKF9fZGVmUHJvcCh7fSwgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSksIG1vZCk7XG5cbi8vIHNyYy9pbmRleC50c1xudmFyIGluZGV4X2V4cG9ydHMgPSB7fTtcbm1vZHVsZS5leHBvcnRzID0gX190b0NvbW1vbkpTKGluZGV4X2V4cG9ydHMpO1xuX19yZUV4cG9ydChpbmRleF9leHBvcnRzLCByZXF1aXJlKFwiLi8uL2Zyb21Ub2tlbkZpbGVcIiksIG1vZHVsZS5leHBvcnRzKTtcbl9fcmVFeHBvcnQoaW5kZXhfZXhwb3J0cywgcmVxdWlyZShcIi4vLi9mcm9tV2ViVG9rZW5cIiksIG1vZHVsZS5leHBvcnRzKTtcbi8vIEFubm90YXRlIHRoZSBDb21tb25KUyBleHBvcnQgbmFtZXMgZm9yIEVTTSBpbXBvcnQgaW4gbm9kZTpcblxuMCAmJiAobW9kdWxlLmV4cG9ydHMgPSB7XG4gIGZyb21Ub2tlbkZpbGUsXG4gIGZyb21XZWJUb2tlblxufSk7XG5cbiJdLCJuYW1lcyI6WyJfX2RlZlByb3AiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsIl9fZ2V0T3duUHJvcERlc2MiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJfX2dldE93blByb3BOYW1lcyIsImdldE93blByb3BlcnR5TmFtZXMiLCJfX2hhc093blByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsIl9fY29weVByb3BzIiwidG8iLCJmcm9tIiwiZXhjZXB0IiwiZGVzYyIsImtleSIsImNhbGwiLCJnZXQiLCJlbnVtZXJhYmxlIiwiX19yZUV4cG9ydCIsInRhcmdldCIsIm1vZCIsInNlY29uZFRhcmdldCIsIl9fdG9Db21tb25KUyIsInZhbHVlIiwiaW5kZXhfZXhwb3J0cyIsIm1vZHVsZSIsImV4cG9ydHMiLCJyZXF1aXJlIiwiZnJvbVRva2VuRmlsZSIsImZyb21XZWJUb2tlbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/credential-provider-web-identity/dist-cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/middleware-host-header/dist-cjs/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-host-header/dist-cjs/index.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value)=>__defProp(target, \"name\", {\n        value,\n        configurable: true\n    });\nvar __export = (target, all)=>{\n    for(var name in all)__defProp(target, name, {\n        get: all[name],\n        enumerable: true\n    });\n};\nvar __copyProps = (to, from, except, desc)=>{\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n            get: ()=>from[key],\n            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n    }\n    return to;\n};\nvar __toCommonJS = (mod)=>__copyProps(__defProp({}, \"__esModule\", {\n        value: true\n    }), mod);\n// src/index.ts\nvar index_exports = {};\n__export(index_exports, {\n    getHostHeaderPlugin: ()=>getHostHeaderPlugin,\n    hostHeaderMiddleware: ()=>hostHeaderMiddleware,\n    hostHeaderMiddlewareOptions: ()=>hostHeaderMiddlewareOptions,\n    resolveHostHeaderConfig: ()=>resolveHostHeaderConfig\n});\nmodule.exports = __toCommonJS(index_exports);\nvar import_protocol_http = __webpack_require__(/*! @smithy/protocol-http */ \"(rsc)/./node_modules/@smithy/protocol-http/dist-cjs/index.js\");\nfunction resolveHostHeaderConfig(input) {\n    return input;\n}\n__name(resolveHostHeaderConfig, \"resolveHostHeaderConfig\");\nvar hostHeaderMiddleware = /* @__PURE__ */ __name((options)=>(next)=>async (args)=>{\n            if (!import_protocol_http.HttpRequest.isInstance(args.request)) return next(args);\n            const { request } = args;\n            const { handlerProtocol = \"\" } = options.requestHandler.metadata || {};\n            if (handlerProtocol.indexOf(\"h2\") >= 0 && !request.headers[\":authority\"]) {\n                delete request.headers[\"host\"];\n                request.headers[\":authority\"] = request.hostname + (request.port ? \":\" + request.port : \"\");\n            } else if (!request.headers[\"host\"]) {\n                let host = request.hostname;\n                if (request.port != null) host += `:${request.port}`;\n                request.headers[\"host\"] = host;\n            }\n            return next(args);\n        }, \"hostHeaderMiddleware\");\nvar hostHeaderMiddlewareOptions = {\n    name: \"hostHeaderMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\n        \"HOST\"\n    ],\n    override: true\n};\nvar getHostHeaderPlugin = /* @__PURE__ */ __name((options)=>({\n        applyToStack: /* @__PURE__ */ __name((clientStack)=>{\n            clientStack.add(hostHeaderMiddleware(options), hostHeaderMiddlewareOptions);\n        }, \"applyToStack\")\n    }), \"getHostHeaderPlugin\");\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbWlkZGxld2FyZS1ob3N0LWhlYWRlci9kaXN0LWNqcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLElBQUlBLFlBQVlDLE9BQU9DLGNBQWM7QUFDckMsSUFBSUMsbUJBQW1CRixPQUFPRyx3QkFBd0I7QUFDdEQsSUFBSUMsb0JBQW9CSixPQUFPSyxtQkFBbUI7QUFDbEQsSUFBSUMsZUFBZU4sT0FBT08sU0FBUyxDQUFDQyxjQUFjO0FBQ2xELElBQUlDLFNBQVMsQ0FBQ0MsUUFBUUMsUUFBVVosVUFBVVcsUUFBUSxRQUFRO1FBQUVDO1FBQU9DLGNBQWM7SUFBSztBQUN0RixJQUFJQyxXQUFXLENBQUNILFFBQVFJO0lBQ3RCLElBQUssSUFBSUMsUUFBUUQsSUFDZmYsVUFBVVcsUUFBUUssTUFBTTtRQUFFQyxLQUFLRixHQUFHLENBQUNDLEtBQUs7UUFBRUUsWUFBWTtJQUFLO0FBQy9EO0FBQ0EsSUFBSUMsY0FBYyxDQUFDQyxJQUFJQyxNQUFNQyxRQUFRQztJQUNuQyxJQUFJRixRQUFRLE9BQU9BLFNBQVMsWUFBWSxPQUFPQSxTQUFTLFlBQVk7UUFDbEUsS0FBSyxJQUFJRyxPQUFPbkIsa0JBQWtCZ0IsTUFDaEMsSUFBSSxDQUFDZCxhQUFha0IsSUFBSSxDQUFDTCxJQUFJSSxRQUFRQSxRQUFRRixRQUN6Q3RCLFVBQVVvQixJQUFJSSxLQUFLO1lBQUVQLEtBQUssSUFBTUksSUFBSSxDQUFDRyxJQUFJO1lBQUVOLFlBQVksQ0FBRUssQ0FBQUEsT0FBT3BCLGlCQUFpQmtCLE1BQU1HLElBQUcsS0FBTUQsS0FBS0wsVUFBVTtRQUFDO0lBQ3RIO0lBQ0EsT0FBT0U7QUFDVDtBQUNBLElBQUlNLGVBQWUsQ0FBQ0MsTUFBUVIsWUFBWW5CLFVBQVUsQ0FBQyxHQUFHLGNBQWM7UUFBRVksT0FBTztJQUFLLElBQUllO0FBRXRGLGVBQWU7QUFDZixJQUFJQyxnQkFBZ0IsQ0FBQztBQUNyQmQsU0FBU2MsZUFBZTtJQUN0QkMscUJBQXFCLElBQU1BO0lBQzNCQyxzQkFBc0IsSUFBTUE7SUFDNUJDLDZCQUE2QixJQUFNQTtJQUNuQ0MseUJBQXlCLElBQU1BO0FBQ2pDO0FBQ0FDLE9BQU9DLE9BQU8sR0FBR1IsYUFBYUU7QUFDOUIsSUFBSU8sdUJBQXVCQyxtQkFBT0EsQ0FBQywyRkFBdUI7QUFDMUQsU0FBU0osd0JBQXdCSyxLQUFLO0lBQ3BDLE9BQU9BO0FBQ1Q7QUFDQTNCLE9BQU9zQix5QkFBeUI7QUFDaEMsSUFBSUYsdUJBQXVCLGFBQWEsR0FBR3BCLE9BQU8sQ0FBQzRCLFVBQVksQ0FBQ0MsT0FBUyxPQUFPQztZQUM5RSxJQUFJLENBQUNMLHFCQUFxQk0sV0FBVyxDQUFDQyxVQUFVLENBQUNGLEtBQUtHLE9BQU8sR0FBRyxPQUFPSixLQUFLQztZQUM1RSxNQUFNLEVBQUVHLE9BQU8sRUFBRSxHQUFHSDtZQUNwQixNQUFNLEVBQUVJLGtCQUFrQixFQUFFLEVBQUUsR0FBR04sUUFBUU8sY0FBYyxDQUFDQyxRQUFRLElBQUksQ0FBQztZQUNyRSxJQUFJRixnQkFBZ0JHLE9BQU8sQ0FBQyxTQUFTLEtBQUssQ0FBQ0osUUFBUUssT0FBTyxDQUFDLGFBQWEsRUFBRTtnQkFDeEUsT0FBT0wsUUFBUUssT0FBTyxDQUFDLE9BQU87Z0JBQzlCTCxRQUFRSyxPQUFPLENBQUMsYUFBYSxHQUFHTCxRQUFRTSxRQUFRLEdBQUlOLENBQUFBLFFBQVFPLElBQUksR0FBRyxNQUFNUCxRQUFRTyxJQUFJLEdBQUcsRUFBQztZQUMzRixPQUFPLElBQUksQ0FBQ1AsUUFBUUssT0FBTyxDQUFDLE9BQU8sRUFBRTtnQkFDbkMsSUFBSUcsT0FBT1IsUUFBUU0sUUFBUTtnQkFDM0IsSUFBSU4sUUFBUU8sSUFBSSxJQUFJLE1BQU1DLFFBQVEsQ0FBQyxDQUFDLEVBQUVSLFFBQVFPLElBQUksQ0FBQyxDQUFDO2dCQUNwRFAsUUFBUUssT0FBTyxDQUFDLE9BQU8sR0FBR0c7WUFDNUI7WUFDQSxPQUFPWixLQUFLQztRQUNkLEdBQUc7QUFDSCxJQUFJVCw4QkFBOEI7SUFDaENmLE1BQU07SUFDTm9DLE1BQU07SUFDTkMsVUFBVTtJQUNWQyxNQUFNO1FBQUM7S0FBTztJQUNkQyxVQUFVO0FBQ1o7QUFDQSxJQUFJMUIsc0JBQXNCLGFBQWEsR0FBR25CLE9BQU8sQ0FBQzRCLFVBQWE7UUFDN0RrQixjQUFjLGFBQWEsR0FBRzlDLE9BQU8sQ0FBQytDO1lBQ3BDQSxZQUFZQyxHQUFHLENBQUM1QixxQkFBcUJRLFVBQVVQO1FBQ2pELEdBQUc7SUFDTCxJQUFJO0FBQ0osNkRBQTZEO0FBRTdELEtBQU1FLENBQUFBLENBS04iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbG91ZHNoaWZ0Ly4vbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL21pZGRsZXdhcmUtaG9zdC1oZWFkZXIvZGlzdC1janMvaW5kZXguanM/NTNlNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2RlZlByb3AgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgX19nZXRPd25Qcm9wRGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG52YXIgX19nZXRPd25Qcm9wTmFtZXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcztcbnZhciBfX2hhc093blByb3AgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIF9fbmFtZSA9ICh0YXJnZXQsIHZhbHVlKSA9PiBfX2RlZlByb3AodGFyZ2V0LCBcIm5hbWVcIiwgeyB2YWx1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0pO1xudmFyIF9fZXhwb3J0ID0gKHRhcmdldCwgYWxsKSA9PiB7XG4gIGZvciAodmFyIG5hbWUgaW4gYWxsKVxuICAgIF9fZGVmUHJvcCh0YXJnZXQsIG5hbWUsIHsgZ2V0OiBhbGxbbmFtZV0sIGVudW1lcmFibGU6IHRydWUgfSk7XG59O1xudmFyIF9fY29weVByb3BzID0gKHRvLCBmcm9tLCBleGNlcHQsIGRlc2MpID0+IHtcbiAgaWYgKGZyb20gJiYgdHlwZW9mIGZyb20gPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGZyb20gPT09IFwiZnVuY3Rpb25cIikge1xuICAgIGZvciAobGV0IGtleSBvZiBfX2dldE93blByb3BOYW1lcyhmcm9tKSlcbiAgICAgIGlmICghX19oYXNPd25Qcm9wLmNhbGwodG8sIGtleSkgJiYga2V5ICE9PSBleGNlcHQpXG4gICAgICAgIF9fZGVmUHJvcCh0bywga2V5LCB7IGdldDogKCkgPT4gZnJvbVtrZXldLCBlbnVtZXJhYmxlOiAhKGRlc2MgPSBfX2dldE93blByb3BEZXNjKGZyb20sIGtleSkpIHx8IGRlc2MuZW51bWVyYWJsZSB9KTtcbiAgfVxuICByZXR1cm4gdG87XG59O1xudmFyIF9fdG9Db21tb25KUyA9IChtb2QpID0+IF9fY29weVByb3BzKF9fZGVmUHJvcCh7fSwgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSksIG1vZCk7XG5cbi8vIHNyYy9pbmRleC50c1xudmFyIGluZGV4X2V4cG9ydHMgPSB7fTtcbl9fZXhwb3J0KGluZGV4X2V4cG9ydHMsIHtcbiAgZ2V0SG9zdEhlYWRlclBsdWdpbjogKCkgPT4gZ2V0SG9zdEhlYWRlclBsdWdpbixcbiAgaG9zdEhlYWRlck1pZGRsZXdhcmU6ICgpID0+IGhvc3RIZWFkZXJNaWRkbGV3YXJlLFxuICBob3N0SGVhZGVyTWlkZGxld2FyZU9wdGlvbnM6ICgpID0+IGhvc3RIZWFkZXJNaWRkbGV3YXJlT3B0aW9ucyxcbiAgcmVzb2x2ZUhvc3RIZWFkZXJDb25maWc6ICgpID0+IHJlc29sdmVIb3N0SGVhZGVyQ29uZmlnXG59KTtcbm1vZHVsZS5leHBvcnRzID0gX190b0NvbW1vbkpTKGluZGV4X2V4cG9ydHMpO1xudmFyIGltcG9ydF9wcm90b2NvbF9odHRwID0gcmVxdWlyZShcIkBzbWl0aHkvcHJvdG9jb2wtaHR0cFwiKTtcbmZ1bmN0aW9uIHJlc29sdmVIb3N0SGVhZGVyQ29uZmlnKGlucHV0KSB7XG4gIHJldHVybiBpbnB1dDtcbn1cbl9fbmFtZShyZXNvbHZlSG9zdEhlYWRlckNvbmZpZywgXCJyZXNvbHZlSG9zdEhlYWRlckNvbmZpZ1wiKTtcbnZhciBob3N0SGVhZGVyTWlkZGxld2FyZSA9IC8qIEBfX1BVUkVfXyAqLyBfX25hbWUoKG9wdGlvbnMpID0+IChuZXh0KSA9PiBhc3luYyAoYXJncykgPT4ge1xuICBpZiAoIWltcG9ydF9wcm90b2NvbF9odHRwLkh0dHBSZXF1ZXN0LmlzSW5zdGFuY2UoYXJncy5yZXF1ZXN0KSkgcmV0dXJuIG5leHQoYXJncyk7XG4gIGNvbnN0IHsgcmVxdWVzdCB9ID0gYXJncztcbiAgY29uc3QgeyBoYW5kbGVyUHJvdG9jb2wgPSBcIlwiIH0gPSBvcHRpb25zLnJlcXVlc3RIYW5kbGVyLm1ldGFkYXRhIHx8IHt9O1xuICBpZiAoaGFuZGxlclByb3RvY29sLmluZGV4T2YoXCJoMlwiKSA+PSAwICYmICFyZXF1ZXN0LmhlYWRlcnNbXCI6YXV0aG9yaXR5XCJdKSB7XG4gICAgZGVsZXRlIHJlcXVlc3QuaGVhZGVyc1tcImhvc3RcIl07XG4gICAgcmVxdWVzdC5oZWFkZXJzW1wiOmF1dGhvcml0eVwiXSA9IHJlcXVlc3QuaG9zdG5hbWUgKyAocmVxdWVzdC5wb3J0ID8gXCI6XCIgKyByZXF1ZXN0LnBvcnQgOiBcIlwiKTtcbiAgfSBlbHNlIGlmICghcmVxdWVzdC5oZWFkZXJzW1wiaG9zdFwiXSkge1xuICAgIGxldCBob3N0ID0gcmVxdWVzdC5ob3N0bmFtZTtcbiAgICBpZiAocmVxdWVzdC5wb3J0ICE9IG51bGwpIGhvc3QgKz0gYDoke3JlcXVlc3QucG9ydH1gO1xuICAgIHJlcXVlc3QuaGVhZGVyc1tcImhvc3RcIl0gPSBob3N0O1xuICB9XG4gIHJldHVybiBuZXh0KGFyZ3MpO1xufSwgXCJob3N0SGVhZGVyTWlkZGxld2FyZVwiKTtcbnZhciBob3N0SGVhZGVyTWlkZGxld2FyZU9wdGlvbnMgPSB7XG4gIG5hbWU6IFwiaG9zdEhlYWRlck1pZGRsZXdhcmVcIixcbiAgc3RlcDogXCJidWlsZFwiLFxuICBwcmlvcml0eTogXCJsb3dcIixcbiAgdGFnczogW1wiSE9TVFwiXSxcbiAgb3ZlcnJpZGU6IHRydWVcbn07XG52YXIgZ2V0SG9zdEhlYWRlclBsdWdpbiA9IC8qIEBfX1BVUkVfXyAqLyBfX25hbWUoKG9wdGlvbnMpID0+ICh7XG4gIGFwcGx5VG9TdGFjazogLyogQF9fUFVSRV9fICovIF9fbmFtZSgoY2xpZW50U3RhY2spID0+IHtcbiAgICBjbGllbnRTdGFjay5hZGQoaG9zdEhlYWRlck1pZGRsZXdhcmUob3B0aW9ucyksIGhvc3RIZWFkZXJNaWRkbGV3YXJlT3B0aW9ucyk7XG4gIH0sIFwiYXBwbHlUb1N0YWNrXCIpXG59KSwgXCJnZXRIb3N0SGVhZGVyUGx1Z2luXCIpO1xuLy8gQW5ub3RhdGUgdGhlIENvbW1vbkpTIGV4cG9ydCBuYW1lcyBmb3IgRVNNIGltcG9ydCBpbiBub2RlOlxuXG4wICYmIChtb2R1bGUuZXhwb3J0cyA9IHtcbiAgcmVzb2x2ZUhvc3RIZWFkZXJDb25maWcsXG4gIGhvc3RIZWFkZXJNaWRkbGV3YXJlLFxuICBob3N0SGVhZGVyTWlkZGxld2FyZU9wdGlvbnMsXG4gIGdldEhvc3RIZWFkZXJQbHVnaW5cbn0pO1xuXG4iXSwibmFtZXMiOlsiX19kZWZQcm9wIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJfX2dldE93blByb3BEZXNjIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiX19nZXRPd25Qcm9wTmFtZXMiLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwiX19oYXNPd25Qcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJfX25hbWUiLCJ0YXJnZXQiLCJ2YWx1ZSIsImNvbmZpZ3VyYWJsZSIsIl9fZXhwb3J0IiwiYWxsIiwibmFtZSIsImdldCIsImVudW1lcmFibGUiLCJfX2NvcHlQcm9wcyIsInRvIiwiZnJvbSIsImV4Y2VwdCIsImRlc2MiLCJrZXkiLCJjYWxsIiwiX190b0NvbW1vbkpTIiwibW9kIiwiaW5kZXhfZXhwb3J0cyIsImdldEhvc3RIZWFkZXJQbHVnaW4iLCJob3N0SGVhZGVyTWlkZGxld2FyZSIsImhvc3RIZWFkZXJNaWRkbGV3YXJlT3B0aW9ucyIsInJlc29sdmVIb3N0SGVhZGVyQ29uZmlnIiwibW9kdWxlIiwiZXhwb3J0cyIsImltcG9ydF9wcm90b2NvbF9odHRwIiwicmVxdWlyZSIsImlucHV0Iiwib3B0aW9ucyIsIm5leHQiLCJhcmdzIiwiSHR0cFJlcXVlc3QiLCJpc0luc3RhbmNlIiwicmVxdWVzdCIsImhhbmRsZXJQcm90b2NvbCIsInJlcXVlc3RIYW5kbGVyIiwibWV0YWRhdGEiLCJpbmRleE9mIiwiaGVhZGVycyIsImhvc3RuYW1lIiwicG9ydCIsImhvc3QiLCJzdGVwIiwicHJpb3JpdHkiLCJ0YWdzIiwib3ZlcnJpZGUiLCJhcHBseVRvU3RhY2siLCJjbGllbnRTdGFjayIsImFkZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/middleware-host-header/dist-cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/middleware-logger/dist-cjs/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-logger/dist-cjs/index.js ***!
  \*******************************************************************/
/***/ ((module) => {

eval("\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value)=>__defProp(target, \"name\", {\n        value,\n        configurable: true\n    });\nvar __export = (target, all)=>{\n    for(var name in all)__defProp(target, name, {\n        get: all[name],\n        enumerable: true\n    });\n};\nvar __copyProps = (to, from, except, desc)=>{\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n            get: ()=>from[key],\n            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n    }\n    return to;\n};\nvar __toCommonJS = (mod)=>__copyProps(__defProp({}, \"__esModule\", {\n        value: true\n    }), mod);\n// src/index.ts\nvar index_exports = {};\n__export(index_exports, {\n    getLoggerPlugin: ()=>getLoggerPlugin,\n    loggerMiddleware: ()=>loggerMiddleware,\n    loggerMiddlewareOptions: ()=>loggerMiddlewareOptions\n});\nmodule.exports = __toCommonJS(index_exports);\n// src/loggerMiddleware.ts\nvar loggerMiddleware = /* @__PURE__ */ __name(()=>(next, context)=>async (args)=>{\n            try {\n                const response = await next(args);\n                const { clientName, commandName, logger, dynamoDbDocumentClientOptions = {} } = context;\n                const { overrideInputFilterSensitiveLog, overrideOutputFilterSensitiveLog } = dynamoDbDocumentClientOptions;\n                const inputFilterSensitiveLog = overrideInputFilterSensitiveLog ?? context.inputFilterSensitiveLog;\n                const outputFilterSensitiveLog = overrideOutputFilterSensitiveLog ?? context.outputFilterSensitiveLog;\n                const { $metadata, ...outputWithoutMetadata } = response.output;\n                logger?.info?.({\n                    clientName,\n                    commandName,\n                    input: inputFilterSensitiveLog(args.input),\n                    output: outputFilterSensitiveLog(outputWithoutMetadata),\n                    metadata: $metadata\n                });\n                return response;\n            } catch (error) {\n                const { clientName, commandName, logger, dynamoDbDocumentClientOptions = {} } = context;\n                const { overrideInputFilterSensitiveLog } = dynamoDbDocumentClientOptions;\n                const inputFilterSensitiveLog = overrideInputFilterSensitiveLog ?? context.inputFilterSensitiveLog;\n                logger?.error?.({\n                    clientName,\n                    commandName,\n                    input: inputFilterSensitiveLog(args.input),\n                    error,\n                    metadata: error.$metadata\n                });\n                throw error;\n            }\n        }, \"loggerMiddleware\");\nvar loggerMiddlewareOptions = {\n    name: \"loggerMiddleware\",\n    tags: [\n        \"LOGGER\"\n    ],\n    step: \"initialize\",\n    override: true\n};\nvar getLoggerPlugin = /* @__PURE__ */ __name((options)=>({\n        applyToStack: /* @__PURE__ */ __name((clientStack)=>{\n            clientStack.add(loggerMiddleware(), loggerMiddlewareOptions);\n        }, \"applyToStack\")\n    }), \"getLoggerPlugin\");\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/middleware-logger/dist-cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/middleware-recursion-detection/dist-cjs/index.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-recursion-detection/dist-cjs/index.js ***!
  \********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value)=>__defProp(target, \"name\", {\n        value,\n        configurable: true\n    });\nvar __export = (target, all)=>{\n    for(var name in all)__defProp(target, name, {\n        get: all[name],\n        enumerable: true\n    });\n};\nvar __copyProps = (to, from, except, desc)=>{\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n            get: ()=>from[key],\n            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n    }\n    return to;\n};\nvar __toCommonJS = (mod)=>__copyProps(__defProp({}, \"__esModule\", {\n        value: true\n    }), mod);\n// src/index.ts\nvar index_exports = {};\n__export(index_exports, {\n    addRecursionDetectionMiddlewareOptions: ()=>addRecursionDetectionMiddlewareOptions,\n    getRecursionDetectionPlugin: ()=>getRecursionDetectionPlugin,\n    recursionDetectionMiddleware: ()=>recursionDetectionMiddleware\n});\nmodule.exports = __toCommonJS(index_exports);\nvar import_protocol_http = __webpack_require__(/*! @smithy/protocol-http */ \"(rsc)/./node_modules/@smithy/protocol-http/dist-cjs/index.js\");\nvar TRACE_ID_HEADER_NAME = \"X-Amzn-Trace-Id\";\nvar ENV_LAMBDA_FUNCTION_NAME = \"AWS_LAMBDA_FUNCTION_NAME\";\nvar ENV_TRACE_ID = \"_X_AMZN_TRACE_ID\";\nvar recursionDetectionMiddleware = /* @__PURE__ */ __name((options)=>(next)=>async (args)=>{\n            const { request } = args;\n            if (!import_protocol_http.HttpRequest.isInstance(request) || options.runtime !== \"node\") {\n                return next(args);\n            }\n            const traceIdHeader = Object.keys(request.headers ?? {}).find((h)=>h.toLowerCase() === TRACE_ID_HEADER_NAME.toLowerCase()) ?? TRACE_ID_HEADER_NAME;\n            if (request.headers.hasOwnProperty(traceIdHeader)) {\n                return next(args);\n            }\n            const functionName = process.env[ENV_LAMBDA_FUNCTION_NAME];\n            const traceId = process.env[ENV_TRACE_ID];\n            const nonEmptyString = /* @__PURE__ */ __name((str)=>typeof str === \"string\" && str.length > 0, \"nonEmptyString\");\n            if (nonEmptyString(functionName) && nonEmptyString(traceId)) {\n                request.headers[TRACE_ID_HEADER_NAME] = traceId;\n            }\n            return next({\n                ...args,\n                request\n            });\n        }, \"recursionDetectionMiddleware\");\nvar addRecursionDetectionMiddlewareOptions = {\n    step: \"build\",\n    tags: [\n        \"RECURSION_DETECTION\"\n    ],\n    name: \"recursionDetectionMiddleware\",\n    override: true,\n    priority: \"low\"\n};\nvar getRecursionDetectionPlugin = /* @__PURE__ */ __name((options)=>({\n        applyToStack: /* @__PURE__ */ __name((clientStack)=>{\n            clientStack.add(recursionDetectionMiddleware(options), addRecursionDetectionMiddlewareOptions);\n        }, \"applyToStack\")\n    }), \"getRecursionDetectionPlugin\");\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbWlkZGxld2FyZS1yZWN1cnNpb24tZGV0ZWN0aW9uL2Rpc3QtY2pzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsSUFBSUEsWUFBWUMsT0FBT0MsY0FBYztBQUNyQyxJQUFJQyxtQkFBbUJGLE9BQU9HLHdCQUF3QjtBQUN0RCxJQUFJQyxvQkFBb0JKLE9BQU9LLG1CQUFtQjtBQUNsRCxJQUFJQyxlQUFlTixPQUFPTyxTQUFTLENBQUNDLGNBQWM7QUFDbEQsSUFBSUMsU0FBUyxDQUFDQyxRQUFRQyxRQUFVWixVQUFVVyxRQUFRLFFBQVE7UUFBRUM7UUFBT0MsY0FBYztJQUFLO0FBQ3RGLElBQUlDLFdBQVcsQ0FBQ0gsUUFBUUk7SUFDdEIsSUFBSyxJQUFJQyxRQUFRRCxJQUNmZixVQUFVVyxRQUFRSyxNQUFNO1FBQUVDLEtBQUtGLEdBQUcsQ0FBQ0MsS0FBSztRQUFFRSxZQUFZO0lBQUs7QUFDL0Q7QUFDQSxJQUFJQyxjQUFjLENBQUNDLElBQUlDLE1BQU1DLFFBQVFDO0lBQ25DLElBQUlGLFFBQVEsT0FBT0EsU0FBUyxZQUFZLE9BQU9BLFNBQVMsWUFBWTtRQUNsRSxLQUFLLElBQUlHLE9BQU9uQixrQkFBa0JnQixNQUNoQyxJQUFJLENBQUNkLGFBQWFrQixJQUFJLENBQUNMLElBQUlJLFFBQVFBLFFBQVFGLFFBQ3pDdEIsVUFBVW9CLElBQUlJLEtBQUs7WUFBRVAsS0FBSyxJQUFNSSxJQUFJLENBQUNHLElBQUk7WUFBRU4sWUFBWSxDQUFFSyxDQUFBQSxPQUFPcEIsaUJBQWlCa0IsTUFBTUcsSUFBRyxLQUFNRCxLQUFLTCxVQUFVO1FBQUM7SUFDdEg7SUFDQSxPQUFPRTtBQUNUO0FBQ0EsSUFBSU0sZUFBZSxDQUFDQyxNQUFRUixZQUFZbkIsVUFBVSxDQUFDLEdBQUcsY0FBYztRQUFFWSxPQUFPO0lBQUssSUFBSWU7QUFFdEYsZUFBZTtBQUNmLElBQUlDLGdCQUFnQixDQUFDO0FBQ3JCZCxTQUFTYyxlQUFlO0lBQ3RCQyx3Q0FBd0MsSUFBTUE7SUFDOUNDLDZCQUE2QixJQUFNQTtJQUNuQ0MsOEJBQThCLElBQU1BO0FBQ3RDO0FBQ0FDLE9BQU9DLE9BQU8sR0FBR1AsYUFBYUU7QUFDOUIsSUFBSU0sdUJBQXVCQyxtQkFBT0EsQ0FBQywyRkFBdUI7QUFDMUQsSUFBSUMsdUJBQXVCO0FBQzNCLElBQUlDLDJCQUEyQjtBQUMvQixJQUFJQyxlQUFlO0FBQ25CLElBQUlQLCtCQUErQixhQUFhLEdBQUdyQixPQUFPLENBQUM2QixVQUFZLENBQUNDLE9BQVMsT0FBT0M7WUFDdEYsTUFBTSxFQUFFQyxPQUFPLEVBQUUsR0FBR0Q7WUFDcEIsSUFBSSxDQUFDUCxxQkFBcUJTLFdBQVcsQ0FBQ0MsVUFBVSxDQUFDRixZQUFZSCxRQUFRTSxPQUFPLEtBQUssUUFBUTtnQkFDdkYsT0FBT0wsS0FBS0M7WUFDZDtZQUNBLE1BQU1LLGdCQUFnQjdDLE9BQU84QyxJQUFJLENBQUNMLFFBQVFNLE9BQU8sSUFBSSxDQUFDLEdBQUdDLElBQUksQ0FBQyxDQUFDQyxJQUFNQSxFQUFFQyxXQUFXLE9BQU9mLHFCQUFxQmUsV0FBVyxPQUFPZjtZQUNoSSxJQUFJTSxRQUFRTSxPQUFPLENBQUN2QyxjQUFjLENBQUNxQyxnQkFBZ0I7Z0JBQ2pELE9BQU9OLEtBQUtDO1lBQ2Q7WUFDQSxNQUFNVyxlQUFlQyxRQUFRQyxHQUFHLENBQUNqQix5QkFBeUI7WUFDMUQsTUFBTWtCLFVBQVVGLFFBQVFDLEdBQUcsQ0FBQ2hCLGFBQWE7WUFDekMsTUFBTWtCLGlCQUFpQixhQUFhLEdBQUc5QyxPQUFPLENBQUMrQyxNQUFRLE9BQU9BLFFBQVEsWUFBWUEsSUFBSUMsTUFBTSxHQUFHLEdBQUc7WUFDbEcsSUFBSUYsZUFBZUosaUJBQWlCSSxlQUFlRCxVQUFVO2dCQUMzRGIsUUFBUU0sT0FBTyxDQUFDWixxQkFBcUIsR0FBR21CO1lBQzFDO1lBQ0EsT0FBT2YsS0FBSztnQkFDVixHQUFHQyxJQUFJO2dCQUNQQztZQUNGO1FBQ0YsR0FBRztBQUNILElBQUliLHlDQUF5QztJQUMzQzhCLE1BQU07SUFDTkMsTUFBTTtRQUFDO0tBQXNCO0lBQzdCNUMsTUFBTTtJQUNONkMsVUFBVTtJQUNWQyxVQUFVO0FBQ1o7QUFDQSxJQUFJaEMsOEJBQThCLGFBQWEsR0FBR3BCLE9BQU8sQ0FBQzZCLFVBQWE7UUFDckV3QixjQUFjLGFBQWEsR0FBR3JELE9BQU8sQ0FBQ3NEO1lBQ3BDQSxZQUFZQyxHQUFHLENBQUNsQyw2QkFBNkJRLFVBQVVWO1FBQ3pELEdBQUc7SUFDTCxJQUFJO0FBQ0osNkRBQTZEO0FBRTdELEtBQU1HLENBQUFBLENBSU4iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbG91ZHNoaWZ0Ly4vbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL21pZGRsZXdhcmUtcmVjdXJzaW9uLWRldGVjdGlvbi9kaXN0LWNqcy9pbmRleC5qcz8xMjA2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZGVmUHJvcCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBfX2dldE93blByb3BEZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbnZhciBfX2dldE93blByb3BOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xudmFyIF9faGFzT3duUHJvcCA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgX19uYW1lID0gKHRhcmdldCwgdmFsdWUpID0+IF9fZGVmUHJvcCh0YXJnZXQsIFwibmFtZVwiLCB7IHZhbHVlLCBjb25maWd1cmFibGU6IHRydWUgfSk7XG52YXIgX19leHBvcnQgPSAodGFyZ2V0LCBhbGwpID0+IHtcbiAgZm9yICh2YXIgbmFtZSBpbiBhbGwpXG4gICAgX19kZWZQcm9wKHRhcmdldCwgbmFtZSwgeyBnZXQ6IGFsbFtuYW1lXSwgZW51bWVyYWJsZTogdHJ1ZSB9KTtcbn07XG52YXIgX19jb3B5UHJvcHMgPSAodG8sIGZyb20sIGV4Y2VwdCwgZGVzYykgPT4ge1xuICBpZiAoZnJvbSAmJiB0eXBlb2YgZnJvbSA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgZnJvbSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgZm9yIChsZXQga2V5IG9mIF9fZ2V0T3duUHJvcE5hbWVzKGZyb20pKVxuICAgICAgaWYgKCFfX2hhc093blByb3AuY2FsbCh0bywga2V5KSAmJiBrZXkgIT09IGV4Y2VwdClcbiAgICAgICAgX19kZWZQcm9wKHRvLCBrZXksIHsgZ2V0OiAoKSA9PiBmcm9tW2tleV0sIGVudW1lcmFibGU6ICEoZGVzYyA9IF9fZ2V0T3duUHJvcERlc2MoZnJvbSwga2V5KSkgfHwgZGVzYy5lbnVtZXJhYmxlIH0pO1xuICB9XG4gIHJldHVybiB0bztcbn07XG52YXIgX190b0NvbW1vbkpTID0gKG1vZCkgPT4gX19jb3B5UHJvcHMoX19kZWZQcm9wKHt9LCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KSwgbW9kKTtcblxuLy8gc3JjL2luZGV4LnRzXG52YXIgaW5kZXhfZXhwb3J0cyA9IHt9O1xuX19leHBvcnQoaW5kZXhfZXhwb3J0cywge1xuICBhZGRSZWN1cnNpb25EZXRlY3Rpb25NaWRkbGV3YXJlT3B0aW9uczogKCkgPT4gYWRkUmVjdXJzaW9uRGV0ZWN0aW9uTWlkZGxld2FyZU9wdGlvbnMsXG4gIGdldFJlY3Vyc2lvbkRldGVjdGlvblBsdWdpbjogKCkgPT4gZ2V0UmVjdXJzaW9uRGV0ZWN0aW9uUGx1Z2luLFxuICByZWN1cnNpb25EZXRlY3Rpb25NaWRkbGV3YXJlOiAoKSA9PiByZWN1cnNpb25EZXRlY3Rpb25NaWRkbGV3YXJlXG59KTtcbm1vZHVsZS5leHBvcnRzID0gX190b0NvbW1vbkpTKGluZGV4X2V4cG9ydHMpO1xudmFyIGltcG9ydF9wcm90b2NvbF9odHRwID0gcmVxdWlyZShcIkBzbWl0aHkvcHJvdG9jb2wtaHR0cFwiKTtcbnZhciBUUkFDRV9JRF9IRUFERVJfTkFNRSA9IFwiWC1BbXpuLVRyYWNlLUlkXCI7XG52YXIgRU5WX0xBTUJEQV9GVU5DVElPTl9OQU1FID0gXCJBV1NfTEFNQkRBX0ZVTkNUSU9OX05BTUVcIjtcbnZhciBFTlZfVFJBQ0VfSUQgPSBcIl9YX0FNWk5fVFJBQ0VfSURcIjtcbnZhciByZWN1cnNpb25EZXRlY3Rpb25NaWRkbGV3YXJlID0gLyogQF9fUFVSRV9fICovIF9fbmFtZSgob3B0aW9ucykgPT4gKG5leHQpID0+IGFzeW5jIChhcmdzKSA9PiB7XG4gIGNvbnN0IHsgcmVxdWVzdCB9ID0gYXJncztcbiAgaWYgKCFpbXBvcnRfcHJvdG9jb2xfaHR0cC5IdHRwUmVxdWVzdC5pc0luc3RhbmNlKHJlcXVlc3QpIHx8IG9wdGlvbnMucnVudGltZSAhPT0gXCJub2RlXCIpIHtcbiAgICByZXR1cm4gbmV4dChhcmdzKTtcbiAgfVxuICBjb25zdCB0cmFjZUlkSGVhZGVyID0gT2JqZWN0LmtleXMocmVxdWVzdC5oZWFkZXJzID8/IHt9KS5maW5kKChoKSA9PiBoLnRvTG93ZXJDYXNlKCkgPT09IFRSQUNFX0lEX0hFQURFUl9OQU1FLnRvTG93ZXJDYXNlKCkpID8/IFRSQUNFX0lEX0hFQURFUl9OQU1FO1xuICBpZiAocmVxdWVzdC5oZWFkZXJzLmhhc093blByb3BlcnR5KHRyYWNlSWRIZWFkZXIpKSB7XG4gICAgcmV0dXJuIG5leHQoYXJncyk7XG4gIH1cbiAgY29uc3QgZnVuY3Rpb25OYW1lID0gcHJvY2Vzcy5lbnZbRU5WX0xBTUJEQV9GVU5DVElPTl9OQU1FXTtcbiAgY29uc3QgdHJhY2VJZCA9IHByb2Nlc3MuZW52W0VOVl9UUkFDRV9JRF07XG4gIGNvbnN0IG5vbkVtcHR5U3RyaW5nID0gLyogQF9fUFVSRV9fICovIF9fbmFtZSgoc3RyKSA9PiB0eXBlb2Ygc3RyID09PSBcInN0cmluZ1wiICYmIHN0ci5sZW5ndGggPiAwLCBcIm5vbkVtcHR5U3RyaW5nXCIpO1xuICBpZiAobm9uRW1wdHlTdHJpbmcoZnVuY3Rpb25OYW1lKSAmJiBub25FbXB0eVN0cmluZyh0cmFjZUlkKSkge1xuICAgIHJlcXVlc3QuaGVhZGVyc1tUUkFDRV9JRF9IRUFERVJfTkFNRV0gPSB0cmFjZUlkO1xuICB9XG4gIHJldHVybiBuZXh0KHtcbiAgICAuLi5hcmdzLFxuICAgIHJlcXVlc3RcbiAgfSk7XG59LCBcInJlY3Vyc2lvbkRldGVjdGlvbk1pZGRsZXdhcmVcIik7XG52YXIgYWRkUmVjdXJzaW9uRGV0ZWN0aW9uTWlkZGxld2FyZU9wdGlvbnMgPSB7XG4gIHN0ZXA6IFwiYnVpbGRcIixcbiAgdGFnczogW1wiUkVDVVJTSU9OX0RFVEVDVElPTlwiXSxcbiAgbmFtZTogXCJyZWN1cnNpb25EZXRlY3Rpb25NaWRkbGV3YXJlXCIsXG4gIG92ZXJyaWRlOiB0cnVlLFxuICBwcmlvcml0eTogXCJsb3dcIlxufTtcbnZhciBnZXRSZWN1cnNpb25EZXRlY3Rpb25QbHVnaW4gPSAvKiBAX19QVVJFX18gKi8gX19uYW1lKChvcHRpb25zKSA9PiAoe1xuICBhcHBseVRvU3RhY2s6IC8qIEBfX1BVUkVfXyAqLyBfX25hbWUoKGNsaWVudFN0YWNrKSA9PiB7XG4gICAgY2xpZW50U3RhY2suYWRkKHJlY3Vyc2lvbkRldGVjdGlvbk1pZGRsZXdhcmUob3B0aW9ucyksIGFkZFJlY3Vyc2lvbkRldGVjdGlvbk1pZGRsZXdhcmVPcHRpb25zKTtcbiAgfSwgXCJhcHBseVRvU3RhY2tcIilcbn0pLCBcImdldFJlY3Vyc2lvbkRldGVjdGlvblBsdWdpblwiKTtcbi8vIEFubm90YXRlIHRoZSBDb21tb25KUyBleHBvcnQgbmFtZXMgZm9yIEVTTSBpbXBvcnQgaW4gbm9kZTpcblxuMCAmJiAobW9kdWxlLmV4cG9ydHMgPSB7XG4gIHJlY3Vyc2lvbkRldGVjdGlvbk1pZGRsZXdhcmUsXG4gIGFkZFJlY3Vyc2lvbkRldGVjdGlvbk1pZGRsZXdhcmVPcHRpb25zLFxuICBnZXRSZWN1cnNpb25EZXRlY3Rpb25QbHVnaW5cbn0pO1xuXG4iXSwibmFtZXMiOlsiX19kZWZQcm9wIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJfX2dldE93blByb3BEZXNjIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiX19nZXRPd25Qcm9wTmFtZXMiLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwiX19oYXNPd25Qcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJfX25hbWUiLCJ0YXJnZXQiLCJ2YWx1ZSIsImNvbmZpZ3VyYWJsZSIsIl9fZXhwb3J0IiwiYWxsIiwibmFtZSIsImdldCIsImVudW1lcmFibGUiLCJfX2NvcHlQcm9wcyIsInRvIiwiZnJvbSIsImV4Y2VwdCIsImRlc2MiLCJrZXkiLCJjYWxsIiwiX190b0NvbW1vbkpTIiwibW9kIiwiaW5kZXhfZXhwb3J0cyIsImFkZFJlY3Vyc2lvbkRldGVjdGlvbk1pZGRsZXdhcmVPcHRpb25zIiwiZ2V0UmVjdXJzaW9uRGV0ZWN0aW9uUGx1Z2luIiwicmVjdXJzaW9uRGV0ZWN0aW9uTWlkZGxld2FyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJpbXBvcnRfcHJvdG9jb2xfaHR0cCIsInJlcXVpcmUiLCJUUkFDRV9JRF9IRUFERVJfTkFNRSIsIkVOVl9MQU1CREFfRlVOQ1RJT05fTkFNRSIsIkVOVl9UUkFDRV9JRCIsIm9wdGlvbnMiLCJuZXh0IiwiYXJncyIsInJlcXVlc3QiLCJIdHRwUmVxdWVzdCIsImlzSW5zdGFuY2UiLCJydW50aW1lIiwidHJhY2VJZEhlYWRlciIsImtleXMiLCJoZWFkZXJzIiwiZmluZCIsImgiLCJ0b0xvd2VyQ2FzZSIsImZ1bmN0aW9uTmFtZSIsInByb2Nlc3MiLCJlbnYiLCJ0cmFjZUlkIiwibm9uRW1wdHlTdHJpbmciLCJzdHIiLCJsZW5ndGgiLCJzdGVwIiwidGFncyIsIm92ZXJyaWRlIiwicHJpb3JpdHkiLCJhcHBseVRvU3RhY2siLCJjbGllbnRTdGFjayIsImFkZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/middleware-recursion-detection/dist-cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/middleware-user-agent/dist-cjs/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-user-agent/dist-cjs/index.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value)=>__defProp(target, \"name\", {\n        value,\n        configurable: true\n    });\nvar __export = (target, all)=>{\n    for(var name in all)__defProp(target, name, {\n        get: all[name],\n        enumerable: true\n    });\n};\nvar __copyProps = (to, from, except, desc)=>{\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n            get: ()=>from[key],\n            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n    }\n    return to;\n};\nvar __toCommonJS = (mod)=>__copyProps(__defProp({}, \"__esModule\", {\n        value: true\n    }), mod);\n// src/index.ts\nvar index_exports = {};\n__export(index_exports, {\n    DEFAULT_UA_APP_ID: ()=>DEFAULT_UA_APP_ID,\n    getUserAgentMiddlewareOptions: ()=>getUserAgentMiddlewareOptions,\n    getUserAgentPlugin: ()=>getUserAgentPlugin,\n    resolveUserAgentConfig: ()=>resolveUserAgentConfig,\n    userAgentMiddleware: ()=>userAgentMiddleware\n});\nmodule.exports = __toCommonJS(index_exports);\n// src/configurations.ts\nvar import_core = __webpack_require__(/*! @smithy/core */ \"(rsc)/./node_modules/@smithy/core/dist-es/index.js\");\nvar DEFAULT_UA_APP_ID = void 0;\nfunction isValidUserAgentAppId(appId) {\n    if (appId === void 0) {\n        return true;\n    }\n    return typeof appId === \"string\" && appId.length <= 50;\n}\n__name(isValidUserAgentAppId, \"isValidUserAgentAppId\");\nfunction resolveUserAgentConfig(input) {\n    const normalizedAppIdProvider = (0, import_core.normalizeProvider)(input.userAgentAppId ?? DEFAULT_UA_APP_ID);\n    const { customUserAgent } = input;\n    return Object.assign(input, {\n        customUserAgent: typeof customUserAgent === \"string\" ? [\n            [\n                customUserAgent\n            ]\n        ] : customUserAgent,\n        userAgentAppId: /* @__PURE__ */ __name(async ()=>{\n            const appId = await normalizedAppIdProvider();\n            if (!isValidUserAgentAppId(appId)) {\n                const logger = input.logger?.constructor?.name === \"NoOpLogger\" || !input.logger ? console : input.logger;\n                if (typeof appId !== \"string\") {\n                    logger?.warn(\"userAgentAppId must be a string or undefined.\");\n                } else if (appId.length > 50) {\n                    logger?.warn(\"The provided userAgentAppId exceeds the maximum length of 50 characters.\");\n                }\n            }\n            return appId;\n        }, \"userAgentAppId\")\n    });\n}\n__name(resolveUserAgentConfig, \"resolveUserAgentConfig\");\n// src/user-agent-middleware.ts\nvar import_util_endpoints = __webpack_require__(/*! @aws-sdk/util-endpoints */ \"(rsc)/./node_modules/@aws-sdk/util-endpoints/dist-cjs/index.js\");\nvar import_protocol_http = __webpack_require__(/*! @smithy/protocol-http */ \"(rsc)/./node_modules/@smithy/protocol-http/dist-cjs/index.js\");\n// src/check-features.ts\nvar import_core2 = __webpack_require__(/*! @aws-sdk/core */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/index.js\");\nvar ACCOUNT_ID_ENDPOINT_REGEX = /\\d{12}\\.ddb/;\nasync function checkFeatures(context, config, args) {\n    const request = args.request;\n    if (request?.headers?.[\"smithy-protocol\"] === \"rpc-v2-cbor\") {\n        (0, import_core2.setFeature)(context, \"PROTOCOL_RPC_V2_CBOR\", \"M\");\n    }\n    if (typeof config.retryStrategy === \"function\") {\n        const retryStrategy = await config.retryStrategy();\n        if (typeof retryStrategy.acquireInitialRetryToken === \"function\") {\n            if (retryStrategy.constructor?.name?.includes(\"Adaptive\")) {\n                (0, import_core2.setFeature)(context, \"RETRY_MODE_ADAPTIVE\", \"F\");\n            } else {\n                (0, import_core2.setFeature)(context, \"RETRY_MODE_STANDARD\", \"E\");\n            }\n        } else {\n            (0, import_core2.setFeature)(context, \"RETRY_MODE_LEGACY\", \"D\");\n        }\n    }\n    if (typeof config.accountIdEndpointMode === \"function\") {\n        const endpointV2 = context.endpointV2;\n        if (String(endpointV2?.url?.hostname).match(ACCOUNT_ID_ENDPOINT_REGEX)) {\n            (0, import_core2.setFeature)(context, \"ACCOUNT_ID_ENDPOINT\", \"O\");\n        }\n        switch(await config.accountIdEndpointMode?.()){\n            case \"disabled\":\n                (0, import_core2.setFeature)(context, \"ACCOUNT_ID_MODE_DISABLED\", \"Q\");\n                break;\n            case \"preferred\":\n                (0, import_core2.setFeature)(context, \"ACCOUNT_ID_MODE_PREFERRED\", \"P\");\n                break;\n            case \"required\":\n                (0, import_core2.setFeature)(context, \"ACCOUNT_ID_MODE_REQUIRED\", \"R\");\n                break;\n        }\n    }\n    const identity = context.__smithy_context?.selectedHttpAuthScheme?.identity;\n    if (identity?.$source) {\n        const credentials = identity;\n        if (credentials.accountId) {\n            (0, import_core2.setFeature)(context, \"RESOLVED_ACCOUNT_ID\", \"T\");\n        }\n        for (const [key, value] of Object.entries(credentials.$source ?? {})){\n            (0, import_core2.setFeature)(context, key, value);\n        }\n    }\n}\n__name(checkFeatures, \"checkFeatures\");\n// src/constants.ts\nvar USER_AGENT = \"user-agent\";\nvar X_AMZ_USER_AGENT = \"x-amz-user-agent\";\nvar SPACE = \" \";\nvar UA_NAME_SEPARATOR = \"/\";\nvar UA_NAME_ESCAPE_REGEX = /[^\\!\\$\\%\\&\\'\\*\\+\\-\\.\\^\\_\\`\\|\\~\\d\\w]/g;\nvar UA_VALUE_ESCAPE_REGEX = /[^\\!\\$\\%\\&\\'\\*\\+\\-\\.\\^\\_\\`\\|\\~\\d\\w\\#]/g;\nvar UA_ESCAPE_CHAR = \"-\";\n// src/encode-features.ts\nvar BYTE_LIMIT = 1024;\nfunction encodeFeatures(features) {\n    let buffer = \"\";\n    for(const key in features){\n        const val = features[key];\n        if (buffer.length + val.length + 1 <= BYTE_LIMIT) {\n            if (buffer.length) {\n                buffer += \",\" + val;\n            } else {\n                buffer += val;\n            }\n            continue;\n        }\n        break;\n    }\n    return buffer;\n}\n__name(encodeFeatures, \"encodeFeatures\");\n// src/user-agent-middleware.ts\nvar userAgentMiddleware = /* @__PURE__ */ __name((options)=>(next, context)=>async (args)=>{\n            const { request } = args;\n            if (!import_protocol_http.HttpRequest.isInstance(request)) {\n                return next(args);\n            }\n            const { headers } = request;\n            const userAgent = context?.userAgent?.map(escapeUserAgent) || [];\n            const defaultUserAgent = (await options.defaultUserAgentProvider()).map(escapeUserAgent);\n            await checkFeatures(context, options, args);\n            const awsContext = context;\n            defaultUserAgent.push(`m/${encodeFeatures(Object.assign({}, context.__smithy_context?.features, awsContext.__aws_sdk_context?.features))}`);\n            const customUserAgent = options?.customUserAgent?.map(escapeUserAgent) || [];\n            const appId = await options.userAgentAppId();\n            if (appId) {\n                defaultUserAgent.push(escapeUserAgent([\n                    `app/${appId}`\n                ]));\n            }\n            const prefix = (0, import_util_endpoints.getUserAgentPrefix)();\n            const sdkUserAgentValue = (prefix ? [\n                prefix\n            ] : []).concat([\n                ...defaultUserAgent,\n                ...userAgent,\n                ...customUserAgent\n            ]).join(SPACE);\n            const normalUAValue = [\n                ...defaultUserAgent.filter((section)=>section.startsWith(\"aws-sdk-\")),\n                ...customUserAgent\n            ].join(SPACE);\n            if (options.runtime !== \"browser\") {\n                if (normalUAValue) {\n                    headers[X_AMZ_USER_AGENT] = headers[X_AMZ_USER_AGENT] ? `${headers[USER_AGENT]} ${normalUAValue}` : normalUAValue;\n                }\n                headers[USER_AGENT] = sdkUserAgentValue;\n            } else {\n                headers[X_AMZ_USER_AGENT] = sdkUserAgentValue;\n            }\n            return next({\n                ...args,\n                request\n            });\n        }, \"userAgentMiddleware\");\nvar escapeUserAgent = /* @__PURE__ */ __name((userAgentPair)=>{\n    const name = userAgentPair[0].split(UA_NAME_SEPARATOR).map((part)=>part.replace(UA_NAME_ESCAPE_REGEX, UA_ESCAPE_CHAR)).join(UA_NAME_SEPARATOR);\n    const version = userAgentPair[1]?.replace(UA_VALUE_ESCAPE_REGEX, UA_ESCAPE_CHAR);\n    const prefixSeparatorIndex = name.indexOf(UA_NAME_SEPARATOR);\n    const prefix = name.substring(0, prefixSeparatorIndex);\n    let uaName = name.substring(prefixSeparatorIndex + 1);\n    if (prefix === \"api\") {\n        uaName = uaName.toLowerCase();\n    }\n    return [\n        prefix,\n        uaName,\n        version\n    ].filter((item)=>item && item.length > 0).reduce((acc, item, index)=>{\n        switch(index){\n            case 0:\n                return item;\n            case 1:\n                return `${acc}/${item}`;\n            default:\n                return `${acc}#${item}`;\n        }\n    }, \"\");\n}, \"escapeUserAgent\");\nvar getUserAgentMiddlewareOptions = {\n    name: \"getUserAgentMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\n        \"SET_USER_AGENT\",\n        \"USER_AGENT\"\n    ],\n    override: true\n};\nvar getUserAgentPlugin = /* @__PURE__ */ __name((config)=>({\n        applyToStack: /* @__PURE__ */ __name((clientStack)=>{\n            clientStack.add(userAgentMiddleware(config), getUserAgentMiddlewareOptions);\n        }, \"applyToStack\")\n    }), \"getUserAgentPlugin\");\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/middleware-user-agent/dist-cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/SSOOIDC.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/SSOOIDC.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SSOOIDC: () => (/* binding */ SSOOIDC)\n/* harmony export */ });\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/./node_modules/@smithy/smithy-client/dist-cjs/index.js\");\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _commands_CreateTokenCommand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./commands/CreateTokenCommand */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/commands/CreateTokenCommand.js\");\n/* harmony import */ var _SSOOIDCClient__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SSOOIDCClient */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/SSOOIDCClient.js\");\n\n\n\nconst commands = {\n    CreateTokenCommand: _commands_CreateTokenCommand__WEBPACK_IMPORTED_MODULE_1__.CreateTokenCommand\n};\nclass SSOOIDC extends _SSOOIDCClient__WEBPACK_IMPORTED_MODULE_2__.SSOOIDCClient {\n}\n(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.createAggregatedClient)(commands, SSOOIDC);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3Nzby1vaWRjL1NTT09JREMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBK0Q7QUFDSTtBQUNuQjtBQUNoRCxNQUFNRyxXQUFXO0lBQ2JGLGtCQUFrQkEsOEVBQUFBO0FBQ3RCO0FBQ08sTUFBTUcsZ0JBQWdCRix5REFBYUE7QUFDMUM7QUFDQUYsNkVBQXNCQSxDQUFDRyxVQUFVQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Nsb3Vkc2hpZnQvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3Nzby1vaWRjL1NTT09JREMuanM/MWQzMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVBZ2dyZWdhdGVkQ2xpZW50IH0gZnJvbSBcIkBzbWl0aHkvc21pdGh5LWNsaWVudFwiO1xuaW1wb3J0IHsgQ3JlYXRlVG9rZW5Db21tYW5kIH0gZnJvbSBcIi4vY29tbWFuZHMvQ3JlYXRlVG9rZW5Db21tYW5kXCI7XG5pbXBvcnQgeyBTU09PSURDQ2xpZW50IH0gZnJvbSBcIi4vU1NPT0lEQ0NsaWVudFwiO1xuY29uc3QgY29tbWFuZHMgPSB7XG4gICAgQ3JlYXRlVG9rZW5Db21tYW5kLFxufTtcbmV4cG9ydCBjbGFzcyBTU09PSURDIGV4dGVuZHMgU1NPT0lEQ0NsaWVudCB7XG59XG5jcmVhdGVBZ2dyZWdhdGVkQ2xpZW50KGNvbW1hbmRzLCBTU09PSURDKTtcbiJdLCJuYW1lcyI6WyJjcmVhdGVBZ2dyZWdhdGVkQ2xpZW50IiwiQ3JlYXRlVG9rZW5Db21tYW5kIiwiU1NPT0lEQ0NsaWVudCIsImNvbW1hbmRzIiwiU1NPT0lEQyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/SSOOIDC.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/SSOOIDCClient.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/SSOOIDCClient.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SSOOIDCClient: () => (/* binding */ SSOOIDCClient),\n/* harmony export */   __Client: () => (/* reexport safe */ _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_9__.Client)\n/* harmony export */ });\n/* harmony import */ var _aws_sdk_middleware_host_header__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/middleware-host-header */ \"(rsc)/./node_modules/@aws-sdk/middleware-host-header/dist-cjs/index.js\");\n/* harmony import */ var _aws_sdk_middleware_host_header__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_aws_sdk_middleware_host_header__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _aws_sdk_middleware_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/middleware-logger */ \"(rsc)/./node_modules/@aws-sdk/middleware-logger/dist-cjs/index.js\");\n/* harmony import */ var _aws_sdk_middleware_logger__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_aws_sdk_middleware_logger__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _aws_sdk_middleware_recursion_detection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/middleware-recursion-detection */ \"(rsc)/./node_modules/@aws-sdk/middleware-recursion-detection/dist-cjs/index.js\");\n/* harmony import */ var _aws_sdk_middleware_recursion_detection__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_aws_sdk_middleware_recursion_detection__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _aws_sdk_middleware_user_agent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aws-sdk/middleware-user-agent */ \"(rsc)/./node_modules/@aws-sdk/middleware-user-agent/dist-cjs/index.js\");\n/* harmony import */ var _aws_sdk_middleware_user_agent__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_aws_sdk_middleware_user_agent__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _smithy_config_resolver__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @smithy/config-resolver */ \"(rsc)/./node_modules/@smithy/config-resolver/dist-cjs/index.js\");\n/* harmony import */ var _smithy_config_resolver__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_smithy_config_resolver__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _smithy_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @smithy/core */ \"(rsc)/./node_modules/@smithy/core/dist-es/index.js\");\n/* harmony import */ var _smithy_middleware_content_length__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @smithy/middleware-content-length */ \"(rsc)/./node_modules/@smithy/middleware-content-length/dist-cjs/index.js\");\n/* harmony import */ var _smithy_middleware_content_length__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_smithy_middleware_content_length__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _smithy_middleware_endpoint__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @smithy/middleware-endpoint */ \"(rsc)/./node_modules/@smithy/middleware-endpoint/dist-cjs/index.js\");\n/* harmony import */ var _smithy_middleware_endpoint__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_smithy_middleware_endpoint__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _smithy_middleware_retry__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @smithy/middleware-retry */ \"(rsc)/./node_modules/@smithy/middleware-retry/dist-cjs/index.js\");\n/* harmony import */ var _smithy_middleware_retry__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_smithy_middleware_retry__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/./node_modules/@smithy/smithy-client/dist-cjs/index.js\");\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _auth_httpAuthSchemeProvider__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./auth/httpAuthSchemeProvider */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/auth/httpAuthSchemeProvider.js\");\n/* harmony import */ var _endpoint_EndpointParameters__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./endpoint/EndpointParameters */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/endpoint/EndpointParameters.js\");\n/* harmony import */ var _runtimeConfig__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./runtimeConfig */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/runtimeConfig.js\");\n/* harmony import */ var _runtimeExtensions__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./runtimeExtensions */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/runtimeExtensions.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass SSOOIDCClient extends _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_9__.Client {\n    constructor(...[configuration]){\n        const _config_0 = (0,_runtimeConfig__WEBPACK_IMPORTED_MODULE_12__.getRuntimeConfig)(configuration || {});\n        super(_config_0);\n        this.initConfig = _config_0;\n        const _config_1 = (0,_endpoint_EndpointParameters__WEBPACK_IMPORTED_MODULE_11__.resolveClientEndpointParameters)(_config_0);\n        const _config_2 = (0,_aws_sdk_middleware_user_agent__WEBPACK_IMPORTED_MODULE_3__.resolveUserAgentConfig)(_config_1);\n        const _config_3 = (0,_smithy_middleware_retry__WEBPACK_IMPORTED_MODULE_8__.resolveRetryConfig)(_config_2);\n        const _config_4 = (0,_smithy_config_resolver__WEBPACK_IMPORTED_MODULE_4__.resolveRegionConfig)(_config_3);\n        const _config_5 = (0,_aws_sdk_middleware_host_header__WEBPACK_IMPORTED_MODULE_0__.resolveHostHeaderConfig)(_config_4);\n        const _config_6 = (0,_smithy_middleware_endpoint__WEBPACK_IMPORTED_MODULE_7__.resolveEndpointConfig)(_config_5);\n        const _config_7 = (0,_auth_httpAuthSchemeProvider__WEBPACK_IMPORTED_MODULE_10__.resolveHttpAuthSchemeConfig)(_config_6);\n        const _config_8 = (0,_runtimeExtensions__WEBPACK_IMPORTED_MODULE_13__.resolveRuntimeExtensions)(_config_7, configuration?.extensions || []);\n        this.config = _config_8;\n        this.middlewareStack.use((0,_aws_sdk_middleware_user_agent__WEBPACK_IMPORTED_MODULE_3__.getUserAgentPlugin)(this.config));\n        this.middlewareStack.use((0,_smithy_middleware_retry__WEBPACK_IMPORTED_MODULE_8__.getRetryPlugin)(this.config));\n        this.middlewareStack.use((0,_smithy_middleware_content_length__WEBPACK_IMPORTED_MODULE_6__.getContentLengthPlugin)(this.config));\n        this.middlewareStack.use((0,_aws_sdk_middleware_host_header__WEBPACK_IMPORTED_MODULE_0__.getHostHeaderPlugin)(this.config));\n        this.middlewareStack.use((0,_aws_sdk_middleware_logger__WEBPACK_IMPORTED_MODULE_1__.getLoggerPlugin)(this.config));\n        this.middlewareStack.use((0,_aws_sdk_middleware_recursion_detection__WEBPACK_IMPORTED_MODULE_2__.getRecursionDetectionPlugin)(this.config));\n        this.middlewareStack.use((0,_smithy_core__WEBPACK_IMPORTED_MODULE_5__.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {\n            httpAuthSchemeParametersProvider: _auth_httpAuthSchemeProvider__WEBPACK_IMPORTED_MODULE_10__.defaultSSOOIDCHttpAuthSchemeParametersProvider,\n            identityProviderConfigProvider: async (config)=>new _smithy_core__WEBPACK_IMPORTED_MODULE_5__.DefaultIdentityProviderConfig({\n                    \"aws.auth#sigv4\": config.credentials\n                })\n        }));\n        this.middlewareStack.use((0,_smithy_core__WEBPACK_IMPORTED_MODULE_5__.getHttpSigningPlugin)(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3Nzby1vaWRjL1NTT09JRENDbGllbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFnRztBQUNuQztBQUN5QjtBQUNPO0FBQy9CO0FBQzhEO0FBQ2pEO0FBQ1A7QUFDVTtBQUNsQjtBQUNpRTtBQUM1QztBQUNSO0FBQ1Y7QUFDM0M7QUFDYixNQUFNc0Isc0JBQXNCUCx5REFBUUE7SUFFdkNRLFlBQVksR0FBRyxDQUFDQyxjQUFjLENBQUU7UUFDNUIsTUFBTUMsWUFBWUwsaUVBQWtCQSxDQUFDSSxpQkFBaUIsQ0FBQztRQUN2RCxLQUFLLENBQUNDO1FBQ04sSUFBSSxDQUFDQyxVQUFVLEdBQUdEO1FBQ2xCLE1BQU1FLFlBQVlULDhGQUErQkEsQ0FBQ087UUFDbEQsTUFBTUcsWUFBWXZCLHNGQUFzQkEsQ0FBQ3NCO1FBQ3pDLE1BQU1FLFlBQVloQiw0RUFBa0JBLENBQUNlO1FBQ3JDLE1BQU1FLFlBQVl4Qiw0RUFBbUJBLENBQUN1QjtRQUN0QyxNQUFNRSxZQUFZOUIsd0ZBQXVCQSxDQUFDNkI7UUFDMUMsTUFBTUUsWUFBWXJCLGtGQUFxQkEsQ0FBQ29CO1FBQ3hDLE1BQU1FLFlBQVloQiwwRkFBMkJBLENBQUNlO1FBQzlDLE1BQU1FLFlBQVliLDZFQUF3QkEsQ0FBQ1ksV0FBV1QsZUFBZVcsY0FBYyxFQUFFO1FBQ3JGLElBQUksQ0FBQ0MsTUFBTSxHQUFHRjtRQUNkLElBQUksQ0FBQ0csZUFBZSxDQUFDQyxHQUFHLENBQUNsQyxrRkFBa0JBLENBQUMsSUFBSSxDQUFDZ0MsTUFBTTtRQUN2RCxJQUFJLENBQUNDLGVBQWUsQ0FBQ0MsR0FBRyxDQUFDMUIsd0VBQWNBLENBQUMsSUFBSSxDQUFDd0IsTUFBTTtRQUNuRCxJQUFJLENBQUNDLGVBQWUsQ0FBQ0MsR0FBRyxDQUFDNUIseUZBQXNCQSxDQUFDLElBQUksQ0FBQzBCLE1BQU07UUFDM0QsSUFBSSxDQUFDQyxlQUFlLENBQUNDLEdBQUcsQ0FBQ3RDLG9GQUFtQkEsQ0FBQyxJQUFJLENBQUNvQyxNQUFNO1FBQ3hELElBQUksQ0FBQ0MsZUFBZSxDQUFDQyxHQUFHLENBQUNwQywyRUFBZUEsQ0FBQyxJQUFJLENBQUNrQyxNQUFNO1FBQ3BELElBQUksQ0FBQ0MsZUFBZSxDQUFDQyxHQUFHLENBQUNuQyxvR0FBMkJBLENBQUMsSUFBSSxDQUFDaUMsTUFBTTtRQUNoRSxJQUFJLENBQUNDLGVBQWUsQ0FBQ0MsR0FBRyxDQUFDOUIsb0ZBQXNDQSxDQUFDLElBQUksQ0FBQzRCLE1BQU0sRUFBRTtZQUN6RUcsa0NBQWtDdkIseUdBQThDQTtZQUNoRndCLGdDQUFnQyxPQUFPSixTQUFXLElBQUk3Qix1RUFBNkJBLENBQUM7b0JBQ2hGLGtCQUFrQjZCLE9BQU9LLFdBQVc7Z0JBQ3hDO1FBQ0o7UUFDQSxJQUFJLENBQUNKLGVBQWUsQ0FBQ0MsR0FBRyxDQUFDN0Isa0VBQW9CQSxDQUFDLElBQUksQ0FBQzJCLE1BQU07SUFDN0Q7SUFDQU0sVUFBVTtRQUNOLEtBQUssQ0FBQ0E7SUFDVjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xvdWRzaGlmdC8uL25vZGVfbW9kdWxlcy9AYXdzLXNkay9uZXN0ZWQtY2xpZW50cy9kaXN0LWVzL3N1Ym1vZHVsZXMvc3NvLW9pZGMvU1NPT0lEQ0NsaWVudC5qcz80NjAwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldEhvc3RIZWFkZXJQbHVnaW4sIHJlc29sdmVIb3N0SGVhZGVyQ29uZmlnLCB9IGZyb20gXCJAYXdzLXNkay9taWRkbGV3YXJlLWhvc3QtaGVhZGVyXCI7XG5pbXBvcnQgeyBnZXRMb2dnZXJQbHVnaW4gfSBmcm9tIFwiQGF3cy1zZGsvbWlkZGxld2FyZS1sb2dnZXJcIjtcbmltcG9ydCB7IGdldFJlY3Vyc2lvbkRldGVjdGlvblBsdWdpbiB9IGZyb20gXCJAYXdzLXNkay9taWRkbGV3YXJlLXJlY3Vyc2lvbi1kZXRlY3Rpb25cIjtcbmltcG9ydCB7IGdldFVzZXJBZ2VudFBsdWdpbiwgcmVzb2x2ZVVzZXJBZ2VudENvbmZpZywgfSBmcm9tIFwiQGF3cy1zZGsvbWlkZGxld2FyZS11c2VyLWFnZW50XCI7XG5pbXBvcnQgeyByZXNvbHZlUmVnaW9uQ29uZmlnIH0gZnJvbSBcIkBzbWl0aHkvY29uZmlnLXJlc29sdmVyXCI7XG5pbXBvcnQgeyBEZWZhdWx0SWRlbnRpdHlQcm92aWRlckNvbmZpZywgZ2V0SHR0cEF1dGhTY2hlbWVFbmRwb2ludFJ1bGVTZXRQbHVnaW4sIGdldEh0dHBTaWduaW5nUGx1Z2luLCB9IGZyb20gXCJAc21pdGh5L2NvcmVcIjtcbmltcG9ydCB7IGdldENvbnRlbnRMZW5ndGhQbHVnaW4gfSBmcm9tIFwiQHNtaXRoeS9taWRkbGV3YXJlLWNvbnRlbnQtbGVuZ3RoXCI7XG5pbXBvcnQgeyByZXNvbHZlRW5kcG9pbnRDb25maWcgfSBmcm9tIFwiQHNtaXRoeS9taWRkbGV3YXJlLWVuZHBvaW50XCI7XG5pbXBvcnQgeyBnZXRSZXRyeVBsdWdpbiwgcmVzb2x2ZVJldHJ5Q29uZmlnIH0gZnJvbSBcIkBzbWl0aHkvbWlkZGxld2FyZS1yZXRyeVwiO1xuaW1wb3J0IHsgQ2xpZW50IGFzIF9fQ2xpZW50LCB9IGZyb20gXCJAc21pdGh5L3NtaXRoeS1jbGllbnRcIjtcbmltcG9ydCB7IGRlZmF1bHRTU09PSURDSHR0cEF1dGhTY2hlbWVQYXJhbWV0ZXJzUHJvdmlkZXIsIHJlc29sdmVIdHRwQXV0aFNjaGVtZUNvbmZpZywgfSBmcm9tIFwiLi9hdXRoL2h0dHBBdXRoU2NoZW1lUHJvdmlkZXJcIjtcbmltcG9ydCB7IHJlc29sdmVDbGllbnRFbmRwb2ludFBhcmFtZXRlcnMsIH0gZnJvbSBcIi4vZW5kcG9pbnQvRW5kcG9pbnRQYXJhbWV0ZXJzXCI7XG5pbXBvcnQgeyBnZXRSdW50aW1lQ29uZmlnIGFzIF9fZ2V0UnVudGltZUNvbmZpZyB9IGZyb20gXCIuL3J1bnRpbWVDb25maWdcIjtcbmltcG9ydCB7IHJlc29sdmVSdW50aW1lRXh0ZW5zaW9ucyB9IGZyb20gXCIuL3J1bnRpbWVFeHRlbnNpb25zXCI7XG5leHBvcnQgeyBfX0NsaWVudCB9O1xuZXhwb3J0IGNsYXNzIFNTT09JRENDbGllbnQgZXh0ZW5kcyBfX0NsaWVudCB7XG4gICAgY29uZmlnO1xuICAgIGNvbnN0cnVjdG9yKC4uLltjb25maWd1cmF0aW9uXSkge1xuICAgICAgICBjb25zdCBfY29uZmlnXzAgPSBfX2dldFJ1bnRpbWVDb25maWcoY29uZmlndXJhdGlvbiB8fCB7fSk7XG4gICAgICAgIHN1cGVyKF9jb25maWdfMCk7XG4gICAgICAgIHRoaXMuaW5pdENvbmZpZyA9IF9jb25maWdfMDtcbiAgICAgICAgY29uc3QgX2NvbmZpZ18xID0gcmVzb2x2ZUNsaWVudEVuZHBvaW50UGFyYW1ldGVycyhfY29uZmlnXzApO1xuICAgICAgICBjb25zdCBfY29uZmlnXzIgPSByZXNvbHZlVXNlckFnZW50Q29uZmlnKF9jb25maWdfMSk7XG4gICAgICAgIGNvbnN0IF9jb25maWdfMyA9IHJlc29sdmVSZXRyeUNvbmZpZyhfY29uZmlnXzIpO1xuICAgICAgICBjb25zdCBfY29uZmlnXzQgPSByZXNvbHZlUmVnaW9uQ29uZmlnKF9jb25maWdfMyk7XG4gICAgICAgIGNvbnN0IF9jb25maWdfNSA9IHJlc29sdmVIb3N0SGVhZGVyQ29uZmlnKF9jb25maWdfNCk7XG4gICAgICAgIGNvbnN0IF9jb25maWdfNiA9IHJlc29sdmVFbmRwb2ludENvbmZpZyhfY29uZmlnXzUpO1xuICAgICAgICBjb25zdCBfY29uZmlnXzcgPSByZXNvbHZlSHR0cEF1dGhTY2hlbWVDb25maWcoX2NvbmZpZ182KTtcbiAgICAgICAgY29uc3QgX2NvbmZpZ184ID0gcmVzb2x2ZVJ1bnRpbWVFeHRlbnNpb25zKF9jb25maWdfNywgY29uZmlndXJhdGlvbj8uZXh0ZW5zaW9ucyB8fCBbXSk7XG4gICAgICAgIHRoaXMuY29uZmlnID0gX2NvbmZpZ184O1xuICAgICAgICB0aGlzLm1pZGRsZXdhcmVTdGFjay51c2UoZ2V0VXNlckFnZW50UGx1Z2luKHRoaXMuY29uZmlnKSk7XG4gICAgICAgIHRoaXMubWlkZGxld2FyZVN0YWNrLnVzZShnZXRSZXRyeVBsdWdpbih0aGlzLmNvbmZpZykpO1xuICAgICAgICB0aGlzLm1pZGRsZXdhcmVTdGFjay51c2UoZ2V0Q29udGVudExlbmd0aFBsdWdpbih0aGlzLmNvbmZpZykpO1xuICAgICAgICB0aGlzLm1pZGRsZXdhcmVTdGFjay51c2UoZ2V0SG9zdEhlYWRlclBsdWdpbih0aGlzLmNvbmZpZykpO1xuICAgICAgICB0aGlzLm1pZGRsZXdhcmVTdGFjay51c2UoZ2V0TG9nZ2VyUGx1Z2luKHRoaXMuY29uZmlnKSk7XG4gICAgICAgIHRoaXMubWlkZGxld2FyZVN0YWNrLnVzZShnZXRSZWN1cnNpb25EZXRlY3Rpb25QbHVnaW4odGhpcy5jb25maWcpKTtcbiAgICAgICAgdGhpcy5taWRkbGV3YXJlU3RhY2sudXNlKGdldEh0dHBBdXRoU2NoZW1lRW5kcG9pbnRSdWxlU2V0UGx1Z2luKHRoaXMuY29uZmlnLCB7XG4gICAgICAgICAgICBodHRwQXV0aFNjaGVtZVBhcmFtZXRlcnNQcm92aWRlcjogZGVmYXVsdFNTT09JRENIdHRwQXV0aFNjaGVtZVBhcmFtZXRlcnNQcm92aWRlcixcbiAgICAgICAgICAgIGlkZW50aXR5UHJvdmlkZXJDb25maWdQcm92aWRlcjogYXN5bmMgKGNvbmZpZykgPT4gbmV3IERlZmF1bHRJZGVudGl0eVByb3ZpZGVyQ29uZmlnKHtcbiAgICAgICAgICAgICAgICBcImF3cy5hdXRoI3NpZ3Y0XCI6IGNvbmZpZy5jcmVkZW50aWFscyxcbiAgICAgICAgICAgIH0pLFxuICAgICAgICB9KSk7XG4gICAgICAgIHRoaXMubWlkZGxld2FyZVN0YWNrLnVzZShnZXRIdHRwU2lnbmluZ1BsdWdpbih0aGlzLmNvbmZpZykpO1xuICAgIH1cbiAgICBkZXN0cm95KCkge1xuICAgICAgICBzdXBlci5kZXN0cm95KCk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbImdldEhvc3RIZWFkZXJQbHVnaW4iLCJyZXNvbHZlSG9zdEhlYWRlckNvbmZpZyIsImdldExvZ2dlclBsdWdpbiIsImdldFJlY3Vyc2lvbkRldGVjdGlvblBsdWdpbiIsImdldFVzZXJBZ2VudFBsdWdpbiIsInJlc29sdmVVc2VyQWdlbnRDb25maWciLCJyZXNvbHZlUmVnaW9uQ29uZmlnIiwiRGVmYXVsdElkZW50aXR5UHJvdmlkZXJDb25maWciLCJnZXRIdHRwQXV0aFNjaGVtZUVuZHBvaW50UnVsZVNldFBsdWdpbiIsImdldEh0dHBTaWduaW5nUGx1Z2luIiwiZ2V0Q29udGVudExlbmd0aFBsdWdpbiIsInJlc29sdmVFbmRwb2ludENvbmZpZyIsImdldFJldHJ5UGx1Z2luIiwicmVzb2x2ZVJldHJ5Q29uZmlnIiwiQ2xpZW50IiwiX19DbGllbnQiLCJkZWZhdWx0U1NPT0lEQ0h0dHBBdXRoU2NoZW1lUGFyYW1ldGVyc1Byb3ZpZGVyIiwicmVzb2x2ZUh0dHBBdXRoU2NoZW1lQ29uZmlnIiwicmVzb2x2ZUNsaWVudEVuZHBvaW50UGFyYW1ldGVycyIsImdldFJ1bnRpbWVDb25maWciLCJfX2dldFJ1bnRpbWVDb25maWciLCJyZXNvbHZlUnVudGltZUV4dGVuc2lvbnMiLCJTU09PSURDQ2xpZW50IiwiY29uc3RydWN0b3IiLCJjb25maWd1cmF0aW9uIiwiX2NvbmZpZ18wIiwiaW5pdENvbmZpZyIsIl9jb25maWdfMSIsIl9jb25maWdfMiIsIl9jb25maWdfMyIsIl9jb25maWdfNCIsIl9jb25maWdfNSIsIl9jb25maWdfNiIsIl9jb25maWdfNyIsIl9jb25maWdfOCIsImV4dGVuc2lvbnMiLCJjb25maWciLCJtaWRkbGV3YXJlU3RhY2siLCJ1c2UiLCJodHRwQXV0aFNjaGVtZVBhcmFtZXRlcnNQcm92aWRlciIsImlkZW50aXR5UHJvdmlkZXJDb25maWdQcm92aWRlciIsImNyZWRlbnRpYWxzIiwiZGVzdHJveSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/SSOOIDCClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/auth/httpAuthExtensionConfiguration.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/auth/httpAuthExtensionConfiguration.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getHttpAuthExtensionConfiguration: () => (/* binding */ getHttpAuthExtensionConfiguration),\n/* harmony export */   resolveHttpAuthRuntimeConfig: () => (/* binding */ resolveHttpAuthRuntimeConfig)\n/* harmony export */ });\nconst getHttpAuthExtensionConfiguration = (runtimeConfig)=>{\n    const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;\n    let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;\n    let _credentials = runtimeConfig.credentials;\n    return {\n        setHttpAuthScheme (httpAuthScheme) {\n            const index = _httpAuthSchemes.findIndex((scheme)=>scheme.schemeId === httpAuthScheme.schemeId);\n            if (index === -1) {\n                _httpAuthSchemes.push(httpAuthScheme);\n            } else {\n                _httpAuthSchemes.splice(index, 1, httpAuthScheme);\n            }\n        },\n        httpAuthSchemes () {\n            return _httpAuthSchemes;\n        },\n        setHttpAuthSchemeProvider (httpAuthSchemeProvider) {\n            _httpAuthSchemeProvider = httpAuthSchemeProvider;\n        },\n        httpAuthSchemeProvider () {\n            return _httpAuthSchemeProvider;\n        },\n        setCredentials (credentials) {\n            _credentials = credentials;\n        },\n        credentials () {\n            return _credentials;\n        }\n    };\n};\nconst resolveHttpAuthRuntimeConfig = (config)=>{\n    return {\n        httpAuthSchemes: config.httpAuthSchemes(),\n        httpAuthSchemeProvider: config.httpAuthSchemeProvider(),\n        credentials: config.credentials()\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3Nzby1vaWRjL2F1dGgvaHR0cEF1dGhFeHRlbnNpb25Db25maWd1cmF0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU8sTUFBTUEsb0NBQW9DLENBQUNDO0lBQzlDLE1BQU1DLG1CQUFtQkQsY0FBY0UsZUFBZTtJQUN0RCxJQUFJQywwQkFBMEJILGNBQWNJLHNCQUFzQjtJQUNsRSxJQUFJQyxlQUFlTCxjQUFjTSxXQUFXO0lBQzVDLE9BQU87UUFDSEMsbUJBQWtCQyxjQUFjO1lBQzVCLE1BQU1DLFFBQVFSLGlCQUFpQlMsU0FBUyxDQUFDLENBQUNDLFNBQVdBLE9BQU9DLFFBQVEsS0FBS0osZUFBZUksUUFBUTtZQUNoRyxJQUFJSCxVQUFVLENBQUMsR0FBRztnQkFDZFIsaUJBQWlCWSxJQUFJLENBQUNMO1lBQzFCLE9BQ0s7Z0JBQ0RQLGlCQUFpQmEsTUFBTSxDQUFDTCxPQUFPLEdBQUdEO1lBQ3RDO1FBQ0o7UUFDQU47WUFDSSxPQUFPRDtRQUNYO1FBQ0FjLDJCQUEwQlgsc0JBQXNCO1lBQzVDRCwwQkFBMEJDO1FBQzlCO1FBQ0FBO1lBQ0ksT0FBT0Q7UUFDWDtRQUNBYSxnQkFBZVYsV0FBVztZQUN0QkQsZUFBZUM7UUFDbkI7UUFDQUE7WUFDSSxPQUFPRDtRQUNYO0lBQ0o7QUFDSixFQUFFO0FBQ0ssTUFBTVksK0JBQStCLENBQUNDO0lBQ3pDLE9BQU87UUFDSGhCLGlCQUFpQmdCLE9BQU9oQixlQUFlO1FBQ3ZDRSx3QkFBd0JjLE9BQU9kLHNCQUFzQjtRQUNyREUsYUFBYVksT0FBT1osV0FBVztJQUNuQztBQUNKLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbG91ZHNoaWZ0Ly4vbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL25lc3RlZC1jbGllbnRzL2Rpc3QtZXMvc3VibW9kdWxlcy9zc28tb2lkYy9hdXRoL2h0dHBBdXRoRXh0ZW5zaW9uQ29uZmlndXJhdGlvbi5qcz85MDExIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBnZXRIdHRwQXV0aEV4dGVuc2lvbkNvbmZpZ3VyYXRpb24gPSAocnVudGltZUNvbmZpZykgPT4ge1xuICAgIGNvbnN0IF9odHRwQXV0aFNjaGVtZXMgPSBydW50aW1lQ29uZmlnLmh0dHBBdXRoU2NoZW1lcztcbiAgICBsZXQgX2h0dHBBdXRoU2NoZW1lUHJvdmlkZXIgPSBydW50aW1lQ29uZmlnLmh0dHBBdXRoU2NoZW1lUHJvdmlkZXI7XG4gICAgbGV0IF9jcmVkZW50aWFscyA9IHJ1bnRpbWVDb25maWcuY3JlZGVudGlhbHM7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgc2V0SHR0cEF1dGhTY2hlbWUoaHR0cEF1dGhTY2hlbWUpIHtcbiAgICAgICAgICAgIGNvbnN0IGluZGV4ID0gX2h0dHBBdXRoU2NoZW1lcy5maW5kSW5kZXgoKHNjaGVtZSkgPT4gc2NoZW1lLnNjaGVtZUlkID09PSBodHRwQXV0aFNjaGVtZS5zY2hlbWVJZCk7XG4gICAgICAgICAgICBpZiAoaW5kZXggPT09IC0xKSB7XG4gICAgICAgICAgICAgICAgX2h0dHBBdXRoU2NoZW1lcy5wdXNoKGh0dHBBdXRoU2NoZW1lKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIF9odHRwQXV0aFNjaGVtZXMuc3BsaWNlKGluZGV4LCAxLCBodHRwQXV0aFNjaGVtZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGh0dHBBdXRoU2NoZW1lcygpIHtcbiAgICAgICAgICAgIHJldHVybiBfaHR0cEF1dGhTY2hlbWVzO1xuICAgICAgICB9LFxuICAgICAgICBzZXRIdHRwQXV0aFNjaGVtZVByb3ZpZGVyKGh0dHBBdXRoU2NoZW1lUHJvdmlkZXIpIHtcbiAgICAgICAgICAgIF9odHRwQXV0aFNjaGVtZVByb3ZpZGVyID0gaHR0cEF1dGhTY2hlbWVQcm92aWRlcjtcbiAgICAgICAgfSxcbiAgICAgICAgaHR0cEF1dGhTY2hlbWVQcm92aWRlcigpIHtcbiAgICAgICAgICAgIHJldHVybiBfaHR0cEF1dGhTY2hlbWVQcm92aWRlcjtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0Q3JlZGVudGlhbHMoY3JlZGVudGlhbHMpIHtcbiAgICAgICAgICAgIF9jcmVkZW50aWFscyA9IGNyZWRlbnRpYWxzO1xuICAgICAgICB9LFxuICAgICAgICBjcmVkZW50aWFscygpIHtcbiAgICAgICAgICAgIHJldHVybiBfY3JlZGVudGlhbHM7XG4gICAgICAgIH0sXG4gICAgfTtcbn07XG5leHBvcnQgY29uc3QgcmVzb2x2ZUh0dHBBdXRoUnVudGltZUNvbmZpZyA9IChjb25maWcpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICBodHRwQXV0aFNjaGVtZXM6IGNvbmZpZy5odHRwQXV0aFNjaGVtZXMoKSxcbiAgICAgICAgaHR0cEF1dGhTY2hlbWVQcm92aWRlcjogY29uZmlnLmh0dHBBdXRoU2NoZW1lUHJvdmlkZXIoKSxcbiAgICAgICAgY3JlZGVudGlhbHM6IGNvbmZpZy5jcmVkZW50aWFscygpLFxuICAgIH07XG59O1xuIl0sIm5hbWVzIjpbImdldEh0dHBBdXRoRXh0ZW5zaW9uQ29uZmlndXJhdGlvbiIsInJ1bnRpbWVDb25maWciLCJfaHR0cEF1dGhTY2hlbWVzIiwiaHR0cEF1dGhTY2hlbWVzIiwiX2h0dHBBdXRoU2NoZW1lUHJvdmlkZXIiLCJodHRwQXV0aFNjaGVtZVByb3ZpZGVyIiwiX2NyZWRlbnRpYWxzIiwiY3JlZGVudGlhbHMiLCJzZXRIdHRwQXV0aFNjaGVtZSIsImh0dHBBdXRoU2NoZW1lIiwiaW5kZXgiLCJmaW5kSW5kZXgiLCJzY2hlbWUiLCJzY2hlbWVJZCIsInB1c2giLCJzcGxpY2UiLCJzZXRIdHRwQXV0aFNjaGVtZVByb3ZpZGVyIiwic2V0Q3JlZGVudGlhbHMiLCJyZXNvbHZlSHR0cEF1dGhSdW50aW1lQ29uZmlnIiwiY29uZmlnIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/auth/httpAuthExtensionConfiguration.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/auth/httpAuthSchemeProvider.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/auth/httpAuthSchemeProvider.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultSSOOIDCHttpAuthSchemeParametersProvider: () => (/* binding */ defaultSSOOIDCHttpAuthSchemeParametersProvider),\n/* harmony export */   defaultSSOOIDCHttpAuthSchemeProvider: () => (/* binding */ defaultSSOOIDCHttpAuthSchemeProvider),\n/* harmony export */   resolveHttpAuthSchemeConfig: () => (/* binding */ resolveHttpAuthSchemeConfig)\n/* harmony export */ });\n/* harmony import */ var _aws_sdk_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/core */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/resolveAwsSdkSigV4Config.js\");\n/* harmony import */ var _smithy_util_middleware__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @smithy/util-middleware */ \"(rsc)/./node_modules/@smithy/util-middleware/dist-cjs/index.js\");\n/* harmony import */ var _smithy_util_middleware__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_smithy_util_middleware__WEBPACK_IMPORTED_MODULE_0__);\n\n\nconst defaultSSOOIDCHttpAuthSchemeParametersProvider = async (config, context, input)=>{\n    return {\n        operation: (0,_smithy_util_middleware__WEBPACK_IMPORTED_MODULE_0__.getSmithyContext)(context).operation,\n        region: await (0,_smithy_util_middleware__WEBPACK_IMPORTED_MODULE_0__.normalizeProvider)(config.region)() || (()=>{\n            throw new Error(\"expected `region` to be configured for `aws.auth#sigv4`\");\n        })()\n    };\n};\nfunction createAwsAuthSigv4HttpAuthOption(authParameters) {\n    return {\n        schemeId: \"aws.auth#sigv4\",\n        signingProperties: {\n            name: \"sso-oauth\",\n            region: authParameters.region\n        },\n        propertiesExtractor: (config, context)=>({\n                signingProperties: {\n                    config,\n                    context\n                }\n            })\n    };\n}\nfunction createSmithyApiNoAuthHttpAuthOption(authParameters) {\n    return {\n        schemeId: \"smithy.api#noAuth\"\n    };\n}\nconst defaultSSOOIDCHttpAuthSchemeProvider = (authParameters)=>{\n    const options = [];\n    switch(authParameters.operation){\n        case \"CreateToken\":\n            {\n                options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n                break;\n            }\n        default:\n            {\n                options.push(createAwsAuthSigv4HttpAuthOption(authParameters));\n            }\n    }\n    return options;\n};\nconst resolveHttpAuthSchemeConfig = (config)=>{\n    const config_0 = (0,_aws_sdk_core__WEBPACK_IMPORTED_MODULE_1__.resolveAwsSdkSigV4Config)(config);\n    return Object.assign(config_0, {\n        authSchemePreference: (0,_smithy_util_middleware__WEBPACK_IMPORTED_MODULE_0__.normalizeProvider)(config.authSchemePreference ?? [])\n    });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3Nzby1vaWRjL2F1dGgvaHR0cEF1dGhTY2hlbWVQcm92aWRlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBMEQ7QUFDb0I7QUFDdkUsTUFBTUcsaURBQWlELE9BQU9DLFFBQVFDLFNBQVNDO0lBQ2xGLE9BQU87UUFDSEMsV0FBV04seUVBQWdCQSxDQUFDSSxTQUFTRSxTQUFTO1FBQzlDQyxRQUFRLE1BQU9OLDBFQUFpQkEsQ0FBQ0UsT0FBT0ksTUFBTSxPQUMxQyxDQUFDO1lBQ0csTUFBTSxJQUFJQyxNQUFNO1FBQ3BCO0lBQ1I7QUFDSixFQUFFO0FBQ0YsU0FBU0MsaUNBQWlDQyxjQUFjO0lBQ3BELE9BQU87UUFDSEMsVUFBVTtRQUNWQyxtQkFBbUI7WUFDZkMsTUFBTTtZQUNOTixRQUFRRyxlQUFlSCxNQUFNO1FBQ2pDO1FBQ0FPLHFCQUFxQixDQUFDWCxRQUFRQyxVQUFhO2dCQUN2Q1EsbUJBQW1CO29CQUNmVDtvQkFDQUM7Z0JBQ0o7WUFDSjtJQUNKO0FBQ0o7QUFDQSxTQUFTVyxvQ0FBb0NMLGNBQWM7SUFDdkQsT0FBTztRQUNIQyxVQUFVO0lBQ2Q7QUFDSjtBQUNPLE1BQU1LLHVDQUF1QyxDQUFDTjtJQUNqRCxNQUFNTyxVQUFVLEVBQUU7SUFDbEIsT0FBUVAsZUFBZUosU0FBUztRQUM1QixLQUFLO1lBQWU7Z0JBQ2hCVyxRQUFRQyxJQUFJLENBQUNILG9DQUFvQ0w7Z0JBQ2pEO1lBQ0o7UUFDQTtZQUFTO2dCQUNMTyxRQUFRQyxJQUFJLENBQUNULGlDQUFpQ0M7WUFDbEQ7SUFDSjtJQUNBLE9BQU9PO0FBQ1gsRUFBRTtBQUNLLE1BQU1FLDhCQUE4QixDQUFDaEI7SUFDeEMsTUFBTWlCLFdBQVdyQix1RUFBd0JBLENBQUNJO0lBQzFDLE9BQU9rQixPQUFPQyxNQUFNLENBQUNGLFVBQVU7UUFDM0JHLHNCQUFzQnRCLDBFQUFpQkEsQ0FBQ0UsT0FBT29CLG9CQUFvQixJQUFJLEVBQUU7SUFDN0U7QUFDSixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xvdWRzaGlmdC8uL25vZGVfbW9kdWxlcy9AYXdzLXNkay9uZXN0ZWQtY2xpZW50cy9kaXN0LWVzL3N1Ym1vZHVsZXMvc3NvLW9pZGMvYXV0aC9odHRwQXV0aFNjaGVtZVByb3ZpZGVyLmpzPzBkYTgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVzb2x2ZUF3c1Nka1NpZ1Y0Q29uZmlnLCB9IGZyb20gXCJAYXdzLXNkay9jb3JlXCI7XG5pbXBvcnQgeyBnZXRTbWl0aHlDb250ZXh0LCBub3JtYWxpemVQcm92aWRlciB9IGZyb20gXCJAc21pdGh5L3V0aWwtbWlkZGxld2FyZVwiO1xuZXhwb3J0IGNvbnN0IGRlZmF1bHRTU09PSURDSHR0cEF1dGhTY2hlbWVQYXJhbWV0ZXJzUHJvdmlkZXIgPSBhc3luYyAoY29uZmlnLCBjb250ZXh0LCBpbnB1dCkgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICAgIG9wZXJhdGlvbjogZ2V0U21pdGh5Q29udGV4dChjb250ZXh0KS5vcGVyYXRpb24sXG4gICAgICAgIHJlZ2lvbjogKGF3YWl0IG5vcm1hbGl6ZVByb3ZpZGVyKGNvbmZpZy5yZWdpb24pKCkpIHx8XG4gICAgICAgICAgICAoKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcImV4cGVjdGVkIGByZWdpb25gIHRvIGJlIGNvbmZpZ3VyZWQgZm9yIGBhd3MuYXV0aCNzaWd2NGBcIik7XG4gICAgICAgICAgICB9KSgpLFxuICAgIH07XG59O1xuZnVuY3Rpb24gY3JlYXRlQXdzQXV0aFNpZ3Y0SHR0cEF1dGhPcHRpb24oYXV0aFBhcmFtZXRlcnMpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBzY2hlbWVJZDogXCJhd3MuYXV0aCNzaWd2NFwiLFxuICAgICAgICBzaWduaW5nUHJvcGVydGllczoge1xuICAgICAgICAgICAgbmFtZTogXCJzc28tb2F1dGhcIixcbiAgICAgICAgICAgIHJlZ2lvbjogYXV0aFBhcmFtZXRlcnMucmVnaW9uLFxuICAgICAgICB9LFxuICAgICAgICBwcm9wZXJ0aWVzRXh0cmFjdG9yOiAoY29uZmlnLCBjb250ZXh0KSA9PiAoe1xuICAgICAgICAgICAgc2lnbmluZ1Byb3BlcnRpZXM6IHtcbiAgICAgICAgICAgICAgICBjb25maWcsXG4gICAgICAgICAgICAgICAgY29udGV4dCxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pLFxuICAgIH07XG59XG5mdW5jdGlvbiBjcmVhdGVTbWl0aHlBcGlOb0F1dGhIdHRwQXV0aE9wdGlvbihhdXRoUGFyYW1ldGVycykge1xuICAgIHJldHVybiB7XG4gICAgICAgIHNjaGVtZUlkOiBcInNtaXRoeS5hcGkjbm9BdXRoXCIsXG4gICAgfTtcbn1cbmV4cG9ydCBjb25zdCBkZWZhdWx0U1NPT0lEQ0h0dHBBdXRoU2NoZW1lUHJvdmlkZXIgPSAoYXV0aFBhcmFtZXRlcnMpID0+IHtcbiAgICBjb25zdCBvcHRpb25zID0gW107XG4gICAgc3dpdGNoIChhdXRoUGFyYW1ldGVycy5vcGVyYXRpb24pIHtcbiAgICAgICAgY2FzZSBcIkNyZWF0ZVRva2VuXCI6IHtcbiAgICAgICAgICAgIG9wdGlvbnMucHVzaChjcmVhdGVTbWl0aHlBcGlOb0F1dGhIdHRwQXV0aE9wdGlvbihhdXRoUGFyYW1ldGVycykpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgZGVmYXVsdDoge1xuICAgICAgICAgICAgb3B0aW9ucy5wdXNoKGNyZWF0ZUF3c0F1dGhTaWd2NEh0dHBBdXRoT3B0aW9uKGF1dGhQYXJhbWV0ZXJzKSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG9wdGlvbnM7XG59O1xuZXhwb3J0IGNvbnN0IHJlc29sdmVIdHRwQXV0aFNjaGVtZUNvbmZpZyA9IChjb25maWcpID0+IHtcbiAgICBjb25zdCBjb25maWdfMCA9IHJlc29sdmVBd3NTZGtTaWdWNENvbmZpZyhjb25maWcpO1xuICAgIHJldHVybiBPYmplY3QuYXNzaWduKGNvbmZpZ18wLCB7XG4gICAgICAgIGF1dGhTY2hlbWVQcmVmZXJlbmNlOiBub3JtYWxpemVQcm92aWRlcihjb25maWcuYXV0aFNjaGVtZVByZWZlcmVuY2UgPz8gW10pLFxuICAgIH0pO1xufTtcbiJdLCJuYW1lcyI6WyJyZXNvbHZlQXdzU2RrU2lnVjRDb25maWciLCJnZXRTbWl0aHlDb250ZXh0Iiwibm9ybWFsaXplUHJvdmlkZXIiLCJkZWZhdWx0U1NPT0lEQ0h0dHBBdXRoU2NoZW1lUGFyYW1ldGVyc1Byb3ZpZGVyIiwiY29uZmlnIiwiY29udGV4dCIsImlucHV0Iiwib3BlcmF0aW9uIiwicmVnaW9uIiwiRXJyb3IiLCJjcmVhdGVBd3NBdXRoU2lndjRIdHRwQXV0aE9wdGlvbiIsImF1dGhQYXJhbWV0ZXJzIiwic2NoZW1lSWQiLCJzaWduaW5nUHJvcGVydGllcyIsIm5hbWUiLCJwcm9wZXJ0aWVzRXh0cmFjdG9yIiwiY3JlYXRlU21pdGh5QXBpTm9BdXRoSHR0cEF1dGhPcHRpb24iLCJkZWZhdWx0U1NPT0lEQ0h0dHBBdXRoU2NoZW1lUHJvdmlkZXIiLCJvcHRpb25zIiwicHVzaCIsInJlc29sdmVIdHRwQXV0aFNjaGVtZUNvbmZpZyIsImNvbmZpZ18wIiwiT2JqZWN0IiwiYXNzaWduIiwiYXV0aFNjaGVtZVByZWZlcmVuY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/auth/httpAuthSchemeProvider.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/commands/CreateTokenCommand.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/commands/CreateTokenCommand.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   $Command: () => (/* reexport safe */ _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_2__.Command),\n/* harmony export */   CreateTokenCommand: () => (/* binding */ CreateTokenCommand)\n/* harmony export */ });\n/* harmony import */ var _smithy_middleware_endpoint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @smithy/middleware-endpoint */ \"(rsc)/./node_modules/@smithy/middleware-endpoint/dist-cjs/index.js\");\n/* harmony import */ var _smithy_middleware_endpoint__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_smithy_middleware_endpoint__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _smithy_middleware_serde__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @smithy/middleware-serde */ \"(rsc)/./node_modules/@smithy/middleware-serde/dist-cjs/index.js\");\n/* harmony import */ var _smithy_middleware_serde__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_smithy_middleware_serde__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/./node_modules/@smithy/smithy-client/dist-cjs/index.js\");\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _endpoint_EndpointParameters__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../endpoint/EndpointParameters */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/endpoint/EndpointParameters.js\");\n/* harmony import */ var _models_models_0__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../models/models_0 */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/models/models_0.js\");\n/* harmony import */ var _protocols_Aws_restJson1__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../protocols/Aws_restJson1 */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/protocols/Aws_restJson1.js\");\n\n\n\n\n\n\n\nclass CreateTokenCommand extends _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_2__.Command.classBuilder().ep(_endpoint_EndpointParameters__WEBPACK_IMPORTED_MODULE_3__.commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0,_smithy_middleware_serde__WEBPACK_IMPORTED_MODULE_1__.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0,_smithy_middleware_endpoint__WEBPACK_IMPORTED_MODULE_0__.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSSSOOIDCService\", \"CreateToken\", {}).n(\"SSOOIDCClient\", \"CreateTokenCommand\").f(_models_models_0__WEBPACK_IMPORTED_MODULE_4__.CreateTokenRequestFilterSensitiveLog, _models_models_0__WEBPACK_IMPORTED_MODULE_4__.CreateTokenResponseFilterSensitiveLog).ser(_protocols_Aws_restJson1__WEBPACK_IMPORTED_MODULE_5__.se_CreateTokenCommand).de(_protocols_Aws_restJson1__WEBPACK_IMPORTED_MODULE_5__.de_CreateTokenCommand).build() {\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3Nzby1vaWRjL2NvbW1hbmRzL0NyZWF0ZVRva2VuQ29tbWFuZC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFnRTtBQUNOO0FBQ0U7QUFDRTtBQUNvRDtBQUN4QjtBQUN0RTtBQUNiLE1BQU1TLDJCQUEyQk4sMERBQVFBLENBQzNDTyxZQUFZLEdBQ1pDLEVBQUUsQ0FBQ1Asc0VBQVlBLEVBQ2ZRLENBQUMsQ0FBQyxTQUFVVixPQUFPLEVBQUVXLEVBQUUsRUFBRUMsTUFBTSxFQUFFQyxDQUFDO0lBQ25DLE9BQU87UUFDSGQsd0VBQWNBLENBQUNhLFFBQVEsSUFBSSxDQUFDRSxTQUFTLEVBQUUsSUFBSSxDQUFDQyxXQUFXO1FBQ3ZEakIsOEVBQWlCQSxDQUFDYyxRQUFRWixRQUFRZ0IsZ0NBQWdDO0tBQ3JFO0FBQ0wsR0FDS0MsQ0FBQyxDQUFDLHFCQUFxQixlQUFlLENBQUMsR0FDdkNDLENBQUMsQ0FBQyxpQkFBaUIsc0JBQ25CQyxDQUFDLENBQUNoQixrRkFBb0NBLEVBQUVDLG1GQUFxQ0EsRUFDN0VnQixHQUFHLENBQUNkLDJFQUFxQkEsRUFDekJlLEVBQUUsQ0FBQ2hCLDJFQUFxQkEsRUFDeEJpQixLQUFLO0FBQ1YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbG91ZHNoaWZ0Ly4vbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL25lc3RlZC1jbGllbnRzL2Rpc3QtZXMvc3VibW9kdWxlcy9zc28tb2lkYy9jb21tYW5kcy9DcmVhdGVUb2tlbkNvbW1hbmQuanM/OThjOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRFbmRwb2ludFBsdWdpbiB9IGZyb20gXCJAc21pdGh5L21pZGRsZXdhcmUtZW5kcG9pbnRcIjtcbmltcG9ydCB7IGdldFNlcmRlUGx1Z2luIH0gZnJvbSBcIkBzbWl0aHkvbWlkZGxld2FyZS1zZXJkZVwiO1xuaW1wb3J0IHsgQ29tbWFuZCBhcyAkQ29tbWFuZCB9IGZyb20gXCJAc21pdGh5L3NtaXRoeS1jbGllbnRcIjtcbmltcG9ydCB7IGNvbW1vblBhcmFtcyB9IGZyb20gXCIuLi9lbmRwb2ludC9FbmRwb2ludFBhcmFtZXRlcnNcIjtcbmltcG9ydCB7IENyZWF0ZVRva2VuUmVxdWVzdEZpbHRlclNlbnNpdGl2ZUxvZywgQ3JlYXRlVG9rZW5SZXNwb25zZUZpbHRlclNlbnNpdGl2ZUxvZywgfSBmcm9tIFwiLi4vbW9kZWxzL21vZGVsc18wXCI7XG5pbXBvcnQgeyBkZV9DcmVhdGVUb2tlbkNvbW1hbmQsIHNlX0NyZWF0ZVRva2VuQ29tbWFuZCB9IGZyb20gXCIuLi9wcm90b2NvbHMvQXdzX3Jlc3RKc29uMVwiO1xuZXhwb3J0IHsgJENvbW1hbmQgfTtcbmV4cG9ydCBjbGFzcyBDcmVhdGVUb2tlbkNvbW1hbmQgZXh0ZW5kcyAkQ29tbWFuZFxuICAgIC5jbGFzc0J1aWxkZXIoKVxuICAgIC5lcChjb21tb25QYXJhbXMpXG4gICAgLm0oZnVuY3Rpb24gKENvbW1hbmQsIGNzLCBjb25maWcsIG8pIHtcbiAgICByZXR1cm4gW1xuICAgICAgICBnZXRTZXJkZVBsdWdpbihjb25maWcsIHRoaXMuc2VyaWFsaXplLCB0aGlzLmRlc2VyaWFsaXplKSxcbiAgICAgICAgZ2V0RW5kcG9pbnRQbHVnaW4oY29uZmlnLCBDb21tYW5kLmdldEVuZHBvaW50UGFyYW1ldGVySW5zdHJ1Y3Rpb25zKCkpLFxuICAgIF07XG59KVxuICAgIC5zKFwiQVdTU1NPT0lEQ1NlcnZpY2VcIiwgXCJDcmVhdGVUb2tlblwiLCB7fSlcbiAgICAubihcIlNTT09JRENDbGllbnRcIiwgXCJDcmVhdGVUb2tlbkNvbW1hbmRcIilcbiAgICAuZihDcmVhdGVUb2tlblJlcXVlc3RGaWx0ZXJTZW5zaXRpdmVMb2csIENyZWF0ZVRva2VuUmVzcG9uc2VGaWx0ZXJTZW5zaXRpdmVMb2cpXG4gICAgLnNlcihzZV9DcmVhdGVUb2tlbkNvbW1hbmQpXG4gICAgLmRlKGRlX0NyZWF0ZVRva2VuQ29tbWFuZClcbiAgICAuYnVpbGQoKSB7XG59XG4iXSwibmFtZXMiOlsiZ2V0RW5kcG9pbnRQbHVnaW4iLCJnZXRTZXJkZVBsdWdpbiIsIkNvbW1hbmQiLCIkQ29tbWFuZCIsImNvbW1vblBhcmFtcyIsIkNyZWF0ZVRva2VuUmVxdWVzdEZpbHRlclNlbnNpdGl2ZUxvZyIsIkNyZWF0ZVRva2VuUmVzcG9uc2VGaWx0ZXJTZW5zaXRpdmVMb2ciLCJkZV9DcmVhdGVUb2tlbkNvbW1hbmQiLCJzZV9DcmVhdGVUb2tlbkNvbW1hbmQiLCJDcmVhdGVUb2tlbkNvbW1hbmQiLCJjbGFzc0J1aWxkZXIiLCJlcCIsIm0iLCJjcyIsImNvbmZpZyIsIm8iLCJzZXJpYWxpemUiLCJkZXNlcmlhbGl6ZSIsImdldEVuZHBvaW50UGFyYW1ldGVySW5zdHJ1Y3Rpb25zIiwicyIsIm4iLCJmIiwic2VyIiwiZGUiLCJidWlsZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/commands/CreateTokenCommand.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/commands/index.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/commands/index.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   $Command: () => (/* reexport safe */ _CreateTokenCommand__WEBPACK_IMPORTED_MODULE_0__.$Command),\n/* harmony export */   CreateTokenCommand: () => (/* reexport safe */ _CreateTokenCommand__WEBPACK_IMPORTED_MODULE_0__.CreateTokenCommand)\n/* harmony export */ });\n/* harmony import */ var _CreateTokenCommand__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CreateTokenCommand */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/commands/CreateTokenCommand.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3Nzby1vaWRjL2NvbW1hbmRzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Nsb3Vkc2hpZnQvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3Nzby1vaWRjL2NvbW1hbmRzL2luZGV4LmpzPzNhMTYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vQ3JlYXRlVG9rZW5Db21tYW5kXCI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/commands/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/endpoint/EndpointParameters.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/endpoint/EndpointParameters.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   commonParams: () => (/* binding */ commonParams),\n/* harmony export */   resolveClientEndpointParameters: () => (/* binding */ resolveClientEndpointParameters)\n/* harmony export */ });\nconst resolveClientEndpointParameters = (options)=>{\n    return Object.assign(options, {\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        defaultSigningName: \"sso-oauth\"\n    });\n};\nconst commonParams = {\n    UseFIPS: {\n        type: \"builtInParams\",\n        name: \"useFipsEndpoint\"\n    },\n    Endpoint: {\n        type: \"builtInParams\",\n        name: \"endpoint\"\n    },\n    Region: {\n        type: \"builtInParams\",\n        name: \"region\"\n    },\n    UseDualStack: {\n        type: \"builtInParams\",\n        name: \"useDualstackEndpoint\"\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3Nzby1vaWRjL2VuZHBvaW50L0VuZHBvaW50UGFyYW1ldGVycy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFPLE1BQU1BLGtDQUFrQyxDQUFDQztJQUM1QyxPQUFPQyxPQUFPQyxNQUFNLENBQUNGLFNBQVM7UUFDMUJHLHNCQUFzQkgsUUFBUUcsb0JBQW9CLElBQUk7UUFDdERDLGlCQUFpQkosUUFBUUksZUFBZSxJQUFJO1FBQzVDQyxvQkFBb0I7SUFDeEI7QUFDSixFQUFFO0FBQ0ssTUFBTUMsZUFBZTtJQUN4QkMsU0FBUztRQUFFQyxNQUFNO1FBQWlCQyxNQUFNO0lBQWtCO0lBQzFEQyxVQUFVO1FBQUVGLE1BQU07UUFBaUJDLE1BQU07SUFBVztJQUNwREUsUUFBUTtRQUFFSCxNQUFNO1FBQWlCQyxNQUFNO0lBQVM7SUFDaERHLGNBQWM7UUFBRUosTUFBTTtRQUFpQkMsTUFBTTtJQUF1QjtBQUN4RSxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xvdWRzaGlmdC8uL25vZGVfbW9kdWxlcy9AYXdzLXNkay9uZXN0ZWQtY2xpZW50cy9kaXN0LWVzL3N1Ym1vZHVsZXMvc3NvLW9pZGMvZW5kcG9pbnQvRW5kcG9pbnRQYXJhbWV0ZXJzLmpzPzJlM2IiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHJlc29sdmVDbGllbnRFbmRwb2ludFBhcmFtZXRlcnMgPSAob3B0aW9ucykgPT4ge1xuICAgIHJldHVybiBPYmplY3QuYXNzaWduKG9wdGlvbnMsIHtcbiAgICAgICAgdXNlRHVhbHN0YWNrRW5kcG9pbnQ6IG9wdGlvbnMudXNlRHVhbHN0YWNrRW5kcG9pbnQgPz8gZmFsc2UsXG4gICAgICAgIHVzZUZpcHNFbmRwb2ludDogb3B0aW9ucy51c2VGaXBzRW5kcG9pbnQgPz8gZmFsc2UsXG4gICAgICAgIGRlZmF1bHRTaWduaW5nTmFtZTogXCJzc28tb2F1dGhcIixcbiAgICB9KTtcbn07XG5leHBvcnQgY29uc3QgY29tbW9uUGFyYW1zID0ge1xuICAgIFVzZUZJUFM6IHsgdHlwZTogXCJidWlsdEluUGFyYW1zXCIsIG5hbWU6IFwidXNlRmlwc0VuZHBvaW50XCIgfSxcbiAgICBFbmRwb2ludDogeyB0eXBlOiBcImJ1aWx0SW5QYXJhbXNcIiwgbmFtZTogXCJlbmRwb2ludFwiIH0sXG4gICAgUmVnaW9uOiB7IHR5cGU6IFwiYnVpbHRJblBhcmFtc1wiLCBuYW1lOiBcInJlZ2lvblwiIH0sXG4gICAgVXNlRHVhbFN0YWNrOiB7IHR5cGU6IFwiYnVpbHRJblBhcmFtc1wiLCBuYW1lOiBcInVzZUR1YWxzdGFja0VuZHBvaW50XCIgfSxcbn07XG4iXSwibmFtZXMiOlsicmVzb2x2ZUNsaWVudEVuZHBvaW50UGFyYW1ldGVycyIsIm9wdGlvbnMiLCJPYmplY3QiLCJhc3NpZ24iLCJ1c2VEdWFsc3RhY2tFbmRwb2ludCIsInVzZUZpcHNFbmRwb2ludCIsImRlZmF1bHRTaWduaW5nTmFtZSIsImNvbW1vblBhcmFtcyIsIlVzZUZJUFMiLCJ0eXBlIiwibmFtZSIsIkVuZHBvaW50IiwiUmVnaW9uIiwiVXNlRHVhbFN0YWNrIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/endpoint/EndpointParameters.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/endpoint/endpointResolver.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/endpoint/endpointResolver.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultEndpointResolver: () => (/* binding */ defaultEndpointResolver)\n/* harmony export */ });\n/* harmony import */ var _aws_sdk_util_endpoints__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/util-endpoints */ \"(rsc)/./node_modules/@aws-sdk/util-endpoints/dist-cjs/index.js\");\n/* harmony import */ var _aws_sdk_util_endpoints__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_aws_sdk_util_endpoints__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _smithy_util_endpoints__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @smithy/util-endpoints */ \"(rsc)/./node_modules/@smithy/util-endpoints/dist-cjs/index.js\");\n/* harmony import */ var _smithy_util_endpoints__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_smithy_util_endpoints__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ruleset__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ruleset */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/endpoint/ruleset.js\");\n\n\n\nconst cache = new _smithy_util_endpoints__WEBPACK_IMPORTED_MODULE_1__.EndpointCache({\n    size: 50,\n    params: [\n        \"Endpoint\",\n        \"Region\",\n        \"UseDualStack\",\n        \"UseFIPS\"\n    ]\n});\nconst defaultEndpointResolver = (endpointParams, context = {})=>{\n    return cache.get(endpointParams, ()=>(0,_smithy_util_endpoints__WEBPACK_IMPORTED_MODULE_1__.resolveEndpoint)(_ruleset__WEBPACK_IMPORTED_MODULE_2__.ruleSet, {\n            endpointParams: endpointParams,\n            logger: context.logger\n        }));\n};\n_smithy_util_endpoints__WEBPACK_IMPORTED_MODULE_1__.customEndpointFunctions.aws = _aws_sdk_util_endpoints__WEBPACK_IMPORTED_MODULE_0__.awsEndpointFunctions;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3Nzby1vaWRjL2VuZHBvaW50L2VuZHBvaW50UmVzb2x2ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQStEO0FBQ2tDO0FBQzdEO0FBQ3BDLE1BQU1LLFFBQVEsSUFBSUgsaUVBQWFBLENBQUM7SUFDNUJJLE1BQU07SUFDTkMsUUFBUTtRQUFDO1FBQVk7UUFBVTtRQUFnQjtLQUFVO0FBQzdEO0FBQ08sTUFBTUMsMEJBQTBCLENBQUNDLGdCQUFnQkMsVUFBVSxDQUFDLENBQUM7SUFDaEUsT0FBT0wsTUFBTU0sR0FBRyxDQUFDRixnQkFBZ0IsSUFBTU4sdUVBQWVBLENBQUNDLDZDQUFPQSxFQUFFO1lBQzVESyxnQkFBZ0JBO1lBQ2hCRyxRQUFRRixRQUFRRSxNQUFNO1FBQzFCO0FBQ0osRUFBRTtBQUNGWCwyRUFBdUJBLENBQUNZLEdBQUcsR0FBR2IseUVBQW9CQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Nsb3Vkc2hpZnQvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3Nzby1vaWRjL2VuZHBvaW50L2VuZHBvaW50UmVzb2x2ZXIuanM/ODEzYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhd3NFbmRwb2ludEZ1bmN0aW9ucyB9IGZyb20gXCJAYXdzLXNkay91dGlsLWVuZHBvaW50c1wiO1xuaW1wb3J0IHsgY3VzdG9tRW5kcG9pbnRGdW5jdGlvbnMsIEVuZHBvaW50Q2FjaGUsIHJlc29sdmVFbmRwb2ludCB9IGZyb20gXCJAc21pdGh5L3V0aWwtZW5kcG9pbnRzXCI7XG5pbXBvcnQgeyBydWxlU2V0IH0gZnJvbSBcIi4vcnVsZXNldFwiO1xuY29uc3QgY2FjaGUgPSBuZXcgRW5kcG9pbnRDYWNoZSh7XG4gICAgc2l6ZTogNTAsXG4gICAgcGFyYW1zOiBbXCJFbmRwb2ludFwiLCBcIlJlZ2lvblwiLCBcIlVzZUR1YWxTdGFja1wiLCBcIlVzZUZJUFNcIl0sXG59KTtcbmV4cG9ydCBjb25zdCBkZWZhdWx0RW5kcG9pbnRSZXNvbHZlciA9IChlbmRwb2ludFBhcmFtcywgY29udGV4dCA9IHt9KSA9PiB7XG4gICAgcmV0dXJuIGNhY2hlLmdldChlbmRwb2ludFBhcmFtcywgKCkgPT4gcmVzb2x2ZUVuZHBvaW50KHJ1bGVTZXQsIHtcbiAgICAgICAgZW5kcG9pbnRQYXJhbXM6IGVuZHBvaW50UGFyYW1zLFxuICAgICAgICBsb2dnZXI6IGNvbnRleHQubG9nZ2VyLFxuICAgIH0pKTtcbn07XG5jdXN0b21FbmRwb2ludEZ1bmN0aW9ucy5hd3MgPSBhd3NFbmRwb2ludEZ1bmN0aW9ucztcbiJdLCJuYW1lcyI6WyJhd3NFbmRwb2ludEZ1bmN0aW9ucyIsImN1c3RvbUVuZHBvaW50RnVuY3Rpb25zIiwiRW5kcG9pbnRDYWNoZSIsInJlc29sdmVFbmRwb2ludCIsInJ1bGVTZXQiLCJjYWNoZSIsInNpemUiLCJwYXJhbXMiLCJkZWZhdWx0RW5kcG9pbnRSZXNvbHZlciIsImVuZHBvaW50UGFyYW1zIiwiY29udGV4dCIsImdldCIsImxvZ2dlciIsImF3cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/endpoint/endpointResolver.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/endpoint/ruleset.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/endpoint/ruleset.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ruleSet: () => (/* binding */ ruleSet)\n/* harmony export */ });\nconst u = \"required\", v = \"fn\", w = \"argv\", x = \"ref\";\nconst a = true, b = \"isSet\", c = \"booleanEquals\", d = \"error\", e = \"endpoint\", f = \"tree\", g = \"PartitionResult\", h = \"getAttr\", i = {\n    [u]: false,\n    \"type\": \"String\"\n}, j = {\n    [u]: true,\n    \"default\": false,\n    \"type\": \"Boolean\"\n}, k = {\n    [x]: \"Endpoint\"\n}, l = {\n    [v]: c,\n    [w]: [\n        {\n            [x]: \"UseFIPS\"\n        },\n        true\n    ]\n}, m = {\n    [v]: c,\n    [w]: [\n        {\n            [x]: \"UseDualStack\"\n        },\n        true\n    ]\n}, n = {}, o = {\n    [v]: h,\n    [w]: [\n        {\n            [x]: g\n        },\n        \"supportsFIPS\"\n    ]\n}, p = {\n    [x]: g\n}, q = {\n    [v]: c,\n    [w]: [\n        true,\n        {\n            [v]: h,\n            [w]: [\n                p,\n                \"supportsDualStack\"\n            ]\n        }\n    ]\n}, r = [\n    l\n], s = [\n    m\n], t = [\n    {\n        [x]: \"Region\"\n    }\n];\nconst _data = {\n    version: \"1.0\",\n    parameters: {\n        Region: i,\n        UseDualStack: j,\n        UseFIPS: j,\n        Endpoint: i\n    },\n    rules: [\n        {\n            conditions: [\n                {\n                    [v]: b,\n                    [w]: [\n                        k\n                    ]\n                }\n            ],\n            rules: [\n                {\n                    conditions: r,\n                    error: \"Invalid Configuration: FIPS and custom endpoint are not supported\",\n                    type: d\n                },\n                {\n                    conditions: s,\n                    error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\",\n                    type: d\n                },\n                {\n                    endpoint: {\n                        url: k,\n                        properties: n,\n                        headers: n\n                    },\n                    type: e\n                }\n            ],\n            type: f\n        },\n        {\n            conditions: [\n                {\n                    [v]: b,\n                    [w]: t\n                }\n            ],\n            rules: [\n                {\n                    conditions: [\n                        {\n                            [v]: \"aws.partition\",\n                            [w]: t,\n                            assign: g\n                        }\n                    ],\n                    rules: [\n                        {\n                            conditions: [\n                                l,\n                                m\n                            ],\n                            rules: [\n                                {\n                                    conditions: [\n                                        {\n                                            [v]: c,\n                                            [w]: [\n                                                a,\n                                                o\n                                            ]\n                                        },\n                                        q\n                                    ],\n                                    rules: [\n                                        {\n                                            endpoint: {\n                                                url: \"https://oidc-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\",\n                                                properties: n,\n                                                headers: n\n                                            },\n                                            type: e\n                                        }\n                                    ],\n                                    type: f\n                                },\n                                {\n                                    error: \"FIPS and DualStack are enabled, but this partition does not support one or both\",\n                                    type: d\n                                }\n                            ],\n                            type: f\n                        },\n                        {\n                            conditions: r,\n                            rules: [\n                                {\n                                    conditions: [\n                                        {\n                                            [v]: c,\n                                            [w]: [\n                                                o,\n                                                a\n                                            ]\n                                        }\n                                    ],\n                                    rules: [\n                                        {\n                                            conditions: [\n                                                {\n                                                    [v]: \"stringEquals\",\n                                                    [w]: [\n                                                        {\n                                                            [v]: h,\n                                                            [w]: [\n                                                                p,\n                                                                \"name\"\n                                                            ]\n                                                        },\n                                                        \"aws-us-gov\"\n                                                    ]\n                                                }\n                                            ],\n                                            endpoint: {\n                                                url: \"https://oidc.{Region}.amazonaws.com\",\n                                                properties: n,\n                                                headers: n\n                                            },\n                                            type: e\n                                        },\n                                        {\n                                            endpoint: {\n                                                url: \"https://oidc-fips.{Region}.{PartitionResult#dnsSuffix}\",\n                                                properties: n,\n                                                headers: n\n                                            },\n                                            type: e\n                                        }\n                                    ],\n                                    type: f\n                                },\n                                {\n                                    error: \"FIPS is enabled but this partition does not support FIPS\",\n                                    type: d\n                                }\n                            ],\n                            type: f\n                        },\n                        {\n                            conditions: s,\n                            rules: [\n                                {\n                                    conditions: [\n                                        q\n                                    ],\n                                    rules: [\n                                        {\n                                            endpoint: {\n                                                url: \"https://oidc.{Region}.{PartitionResult#dualStackDnsSuffix}\",\n                                                properties: n,\n                                                headers: n\n                                            },\n                                            type: e\n                                        }\n                                    ],\n                                    type: f\n                                },\n                                {\n                                    error: \"DualStack is enabled but this partition does not support DualStack\",\n                                    type: d\n                                }\n                            ],\n                            type: f\n                        },\n                        {\n                            endpoint: {\n                                url: \"https://oidc.{Region}.{PartitionResult#dnsSuffix}\",\n                                properties: n,\n                                headers: n\n                            },\n                            type: e\n                        }\n                    ],\n                    type: f\n                }\n            ],\n            type: f\n        },\n        {\n            error: \"Invalid Configuration: Missing Region\",\n            type: d\n        }\n    ]\n};\nconst ruleSet = _data;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3Nzby1vaWRjL2VuZHBvaW50L3J1bGVzZXQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE1BQU1BLElBQUksWUFBWUMsSUFBSSxNQUFNQyxJQUFJLFFBQVFDLElBQUk7QUFDaEQsTUFBTUMsSUFBSSxNQUFNQyxJQUFJLFNBQVNDLElBQUksaUJBQWlCQyxJQUFJLFNBQVNDLElBQUksWUFBWUMsSUFBSSxRQUFRQyxJQUFJLG1CQUFtQkMsSUFBSSxXQUFXQyxJQUFJO0lBQUUsQ0FBQ1osRUFBRSxFQUFFO0lBQU8sUUFBUTtBQUFTLEdBQUdhLElBQUk7SUFBRSxDQUFDYixFQUFFLEVBQUU7SUFBTSxXQUFXO0lBQU8sUUFBUTtBQUFVLEdBQUdjLElBQUk7SUFBRSxDQUFDWCxFQUFFLEVBQUU7QUFBVyxHQUFHWSxJQUFJO0lBQUUsQ0FBQ2QsRUFBRSxFQUFFSztJQUFHLENBQUNKLEVBQUUsRUFBRTtRQUFDO1lBQUUsQ0FBQ0MsRUFBRSxFQUFFO1FBQVU7UUFBRztLQUFLO0FBQUMsR0FBR2EsSUFBSTtJQUFFLENBQUNmLEVBQUUsRUFBRUs7SUFBRyxDQUFDSixFQUFFLEVBQUU7UUFBQztZQUFFLENBQUNDLEVBQUUsRUFBRTtRQUFlO1FBQUc7S0FBSztBQUFDLEdBQUdjLElBQUksQ0FBQyxHQUFHQyxJQUFJO0lBQUUsQ0FBQ2pCLEVBQUUsRUFBRVU7SUFBRyxDQUFDVCxFQUFFLEVBQUU7UUFBQztZQUFFLENBQUNDLEVBQUUsRUFBRU87UUFBRTtRQUFHO0tBQWU7QUFBQyxHQUFHUyxJQUFJO0lBQUUsQ0FBQ2hCLEVBQUUsRUFBRU87QUFBRSxHQUFHVSxJQUFJO0lBQUUsQ0FBQ25CLEVBQUUsRUFBRUs7SUFBRyxDQUFDSixFQUFFLEVBQUU7UUFBQztRQUFNO1lBQUUsQ0FBQ0QsRUFBRSxFQUFFVTtZQUFHLENBQUNULEVBQUUsRUFBRTtnQkFBQ2lCO2dCQUFHO2FBQW9CO1FBQUM7S0FBRTtBQUFDLEdBQUdFLElBQUk7SUFBQ047Q0FBRSxFQUFFTyxJQUFJO0lBQUNOO0NBQUUsRUFBRU8sSUFBSTtJQUFDO1FBQUUsQ0FBQ3BCLEVBQUUsRUFBRTtJQUFTO0NBQUU7QUFDM2hCLE1BQU1xQixRQUFRO0lBQUVDLFNBQVM7SUFBT0MsWUFBWTtRQUFFQyxRQUFRZjtRQUFHZ0IsY0FBY2Y7UUFBR2dCLFNBQVNoQjtRQUFHaUIsVUFBVWxCO0lBQUU7SUFBR21CLE9BQU87UUFBQztZQUFFQyxZQUFZO2dCQUFDO29CQUFFLENBQUMvQixFQUFFLEVBQUVJO29CQUFHLENBQUNILEVBQUUsRUFBRTt3QkFBQ1k7cUJBQUU7Z0JBQUM7YUFBRTtZQUFFaUIsT0FBTztnQkFBQztvQkFBRUMsWUFBWVg7b0JBQUdZLE9BQU87b0JBQXFFQyxNQUFNM0I7Z0JBQUU7Z0JBQUc7b0JBQUV5QixZQUFZVjtvQkFBR1csT0FBTztvQkFBMEVDLE1BQU0zQjtnQkFBRTtnQkFBRztvQkFBRTRCLFVBQVU7d0JBQUVDLEtBQUt0Qjt3QkFBR3VCLFlBQVlwQjt3QkFBR3FCLFNBQVNyQjtvQkFBRTtvQkFBR2lCLE1BQU0xQjtnQkFBRTthQUFFO1lBQUUwQixNQUFNekI7UUFBRTtRQUFHO1lBQUV1QixZQUFZO2dCQUFDO29CQUFFLENBQUMvQixFQUFFLEVBQUVJO29CQUFHLENBQUNILEVBQUUsRUFBRXFCO2dCQUFFO2FBQUU7WUFBRVEsT0FBTztnQkFBQztvQkFBRUMsWUFBWTt3QkFBQzs0QkFBRSxDQUFDL0IsRUFBRSxFQUFFOzRCQUFpQixDQUFDQyxFQUFFLEVBQUVxQjs0QkFBR2dCLFFBQVE3Qjt3QkFBRTtxQkFBRTtvQkFBRXFCLE9BQU87d0JBQUM7NEJBQUVDLFlBQVk7Z0NBQUNqQjtnQ0FBR0M7NkJBQUU7NEJBQUVlLE9BQU87Z0NBQUM7b0NBQUVDLFlBQVk7d0NBQUM7NENBQUUsQ0FBQy9CLEVBQUUsRUFBRUs7NENBQUcsQ0FBQ0osRUFBRSxFQUFFO2dEQUFDRTtnREFBR2M7NkNBQUU7d0NBQUM7d0NBQUdFO3FDQUFFO29DQUFFVyxPQUFPO3dDQUFDOzRDQUFFSSxVQUFVO2dEQUFFQyxLQUFLO2dEQUFtRUMsWUFBWXBCO2dEQUFHcUIsU0FBU3JCOzRDQUFFOzRDQUFHaUIsTUFBTTFCO3dDQUFFO3FDQUFFO29DQUFFMEIsTUFBTXpCO2dDQUFFO2dDQUFHO29DQUFFd0IsT0FBTztvQ0FBbUZDLE1BQU0zQjtnQ0FBRTs2QkFBRTs0QkFBRTJCLE1BQU16Qjt3QkFBRTt3QkFBRzs0QkFBRXVCLFlBQVlYOzRCQUFHVSxPQUFPO2dDQUFDO29DQUFFQyxZQUFZO3dDQUFDOzRDQUFFLENBQUMvQixFQUFFLEVBQUVLOzRDQUFHLENBQUNKLEVBQUUsRUFBRTtnREFBQ2dCO2dEQUFHZDs2Q0FBRTt3Q0FBQztxQ0FBRTtvQ0FBRTJCLE9BQU87d0NBQUM7NENBQUVDLFlBQVk7Z0RBQUM7b0RBQUUsQ0FBQy9CLEVBQUUsRUFBRTtvREFBZ0IsQ0FBQ0MsRUFBRSxFQUFFO3dEQUFDOzREQUFFLENBQUNELEVBQUUsRUFBRVU7NERBQUcsQ0FBQ1QsRUFBRSxFQUFFO2dFQUFDaUI7Z0VBQUc7NkRBQU87d0RBQUM7d0RBQUc7cURBQWE7Z0RBQUM7NkNBQUU7NENBQUVnQixVQUFVO2dEQUFFQyxLQUFLO2dEQUF1Q0MsWUFBWXBCO2dEQUFHcUIsU0FBU3JCOzRDQUFFOzRDQUFHaUIsTUFBTTFCO3dDQUFFO3dDQUFHOzRDQUFFMkIsVUFBVTtnREFBRUMsS0FBSztnREFBMERDLFlBQVlwQjtnREFBR3FCLFNBQVNyQjs0Q0FBRTs0Q0FBR2lCLE1BQU0xQjt3Q0FBRTtxQ0FBRTtvQ0FBRTBCLE1BQU16QjtnQ0FBRTtnQ0FBRztvQ0FBRXdCLE9BQU87b0NBQTREQyxNQUFNM0I7Z0NBQUU7NkJBQUU7NEJBQUUyQixNQUFNekI7d0JBQUU7d0JBQUc7NEJBQUV1QixZQUFZVjs0QkFBR1MsT0FBTztnQ0FBQztvQ0FBRUMsWUFBWTt3Q0FBQ1o7cUNBQUU7b0NBQUVXLE9BQU87d0NBQUM7NENBQUVJLFVBQVU7Z0RBQUVDLEtBQUs7Z0RBQThEQyxZQUFZcEI7Z0RBQUdxQixTQUFTckI7NENBQUU7NENBQUdpQixNQUFNMUI7d0NBQUU7cUNBQUU7b0NBQUUwQixNQUFNekI7Z0NBQUU7Z0NBQUc7b0NBQUV3QixPQUFPO29DQUFzRUMsTUFBTTNCO2dDQUFFOzZCQUFFOzRCQUFFMkIsTUFBTXpCO3dCQUFFO3dCQUFHOzRCQUFFMEIsVUFBVTtnQ0FBRUMsS0FBSztnQ0FBcURDLFlBQVlwQjtnQ0FBR3FCLFNBQVNyQjs0QkFBRTs0QkFBR2lCLE1BQU0xQjt3QkFBRTtxQkFBRTtvQkFBRTBCLE1BQU16QjtnQkFBRTthQUFFO1lBQUV5QixNQUFNekI7UUFBRTtRQUFHO1lBQUV3QixPQUFPO1lBQXlDQyxNQUFNM0I7UUFBRTtLQUFFO0FBQUM7QUFDMXpELE1BQU1pQyxVQUFVaEIsTUFBTSIsInNvdXJjZXMiOlsid2VicGFjazovL2Nsb3Vkc2hpZnQvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3Nzby1vaWRjL2VuZHBvaW50L3J1bGVzZXQuanM/OGVmNSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB1ID0gXCJyZXF1aXJlZFwiLCB2ID0gXCJmblwiLCB3ID0gXCJhcmd2XCIsIHggPSBcInJlZlwiO1xuY29uc3QgYSA9IHRydWUsIGIgPSBcImlzU2V0XCIsIGMgPSBcImJvb2xlYW5FcXVhbHNcIiwgZCA9IFwiZXJyb3JcIiwgZSA9IFwiZW5kcG9pbnRcIiwgZiA9IFwidHJlZVwiLCBnID0gXCJQYXJ0aXRpb25SZXN1bHRcIiwgaCA9IFwiZ2V0QXR0clwiLCBpID0geyBbdV06IGZhbHNlLCBcInR5cGVcIjogXCJTdHJpbmdcIiB9LCBqID0geyBbdV06IHRydWUsIFwiZGVmYXVsdFwiOiBmYWxzZSwgXCJ0eXBlXCI6IFwiQm9vbGVhblwiIH0sIGsgPSB7IFt4XTogXCJFbmRwb2ludFwiIH0sIGwgPSB7IFt2XTogYywgW3ddOiBbeyBbeF06IFwiVXNlRklQU1wiIH0sIHRydWVdIH0sIG0gPSB7IFt2XTogYywgW3ddOiBbeyBbeF06IFwiVXNlRHVhbFN0YWNrXCIgfSwgdHJ1ZV0gfSwgbiA9IHt9LCBvID0geyBbdl06IGgsIFt3XTogW3sgW3hdOiBnIH0sIFwic3VwcG9ydHNGSVBTXCJdIH0sIHAgPSB7IFt4XTogZyB9LCBxID0geyBbdl06IGMsIFt3XTogW3RydWUsIHsgW3ZdOiBoLCBbd106IFtwLCBcInN1cHBvcnRzRHVhbFN0YWNrXCJdIH1dIH0sIHIgPSBbbF0sIHMgPSBbbV0sIHQgPSBbeyBbeF06IFwiUmVnaW9uXCIgfV07XG5jb25zdCBfZGF0YSA9IHsgdmVyc2lvbjogXCIxLjBcIiwgcGFyYW1ldGVyczogeyBSZWdpb246IGksIFVzZUR1YWxTdGFjazogaiwgVXNlRklQUzogaiwgRW5kcG9pbnQ6IGkgfSwgcnVsZXM6IFt7IGNvbmRpdGlvbnM6IFt7IFt2XTogYiwgW3ddOiBba10gfV0sIHJ1bGVzOiBbeyBjb25kaXRpb25zOiByLCBlcnJvcjogXCJJbnZhbGlkIENvbmZpZ3VyYXRpb246IEZJUFMgYW5kIGN1c3RvbSBlbmRwb2ludCBhcmUgbm90IHN1cHBvcnRlZFwiLCB0eXBlOiBkIH0sIHsgY29uZGl0aW9uczogcywgZXJyb3I6IFwiSW52YWxpZCBDb25maWd1cmF0aW9uOiBEdWFsc3RhY2sgYW5kIGN1c3RvbSBlbmRwb2ludCBhcmUgbm90IHN1cHBvcnRlZFwiLCB0eXBlOiBkIH0sIHsgZW5kcG9pbnQ6IHsgdXJsOiBrLCBwcm9wZXJ0aWVzOiBuLCBoZWFkZXJzOiBuIH0sIHR5cGU6IGUgfV0sIHR5cGU6IGYgfSwgeyBjb25kaXRpb25zOiBbeyBbdl06IGIsIFt3XTogdCB9XSwgcnVsZXM6IFt7IGNvbmRpdGlvbnM6IFt7IFt2XTogXCJhd3MucGFydGl0aW9uXCIsIFt3XTogdCwgYXNzaWduOiBnIH1dLCBydWxlczogW3sgY29uZGl0aW9uczogW2wsIG1dLCBydWxlczogW3sgY29uZGl0aW9uczogW3sgW3ZdOiBjLCBbd106IFthLCBvXSB9LCBxXSwgcnVsZXM6IFt7IGVuZHBvaW50OiB7IHVybDogXCJodHRwczovL29pZGMtZmlwcy57UmVnaW9ufS57UGFydGl0aW9uUmVzdWx0I2R1YWxTdGFja0Ruc1N1ZmZpeH1cIiwgcHJvcGVydGllczogbiwgaGVhZGVyczogbiB9LCB0eXBlOiBlIH1dLCB0eXBlOiBmIH0sIHsgZXJyb3I6IFwiRklQUyBhbmQgRHVhbFN0YWNrIGFyZSBlbmFibGVkLCBidXQgdGhpcyBwYXJ0aXRpb24gZG9lcyBub3Qgc3VwcG9ydCBvbmUgb3IgYm90aFwiLCB0eXBlOiBkIH1dLCB0eXBlOiBmIH0sIHsgY29uZGl0aW9uczogciwgcnVsZXM6IFt7IGNvbmRpdGlvbnM6IFt7IFt2XTogYywgW3ddOiBbbywgYV0gfV0sIHJ1bGVzOiBbeyBjb25kaXRpb25zOiBbeyBbdl06IFwic3RyaW5nRXF1YWxzXCIsIFt3XTogW3sgW3ZdOiBoLCBbd106IFtwLCBcIm5hbWVcIl0gfSwgXCJhd3MtdXMtZ292XCJdIH1dLCBlbmRwb2ludDogeyB1cmw6IFwiaHR0cHM6Ly9vaWRjLntSZWdpb259LmFtYXpvbmF3cy5jb21cIiwgcHJvcGVydGllczogbiwgaGVhZGVyczogbiB9LCB0eXBlOiBlIH0sIHsgZW5kcG9pbnQ6IHsgdXJsOiBcImh0dHBzOi8vb2lkYy1maXBzLntSZWdpb259LntQYXJ0aXRpb25SZXN1bHQjZG5zU3VmZml4fVwiLCBwcm9wZXJ0aWVzOiBuLCBoZWFkZXJzOiBuIH0sIHR5cGU6IGUgfV0sIHR5cGU6IGYgfSwgeyBlcnJvcjogXCJGSVBTIGlzIGVuYWJsZWQgYnV0IHRoaXMgcGFydGl0aW9uIGRvZXMgbm90IHN1cHBvcnQgRklQU1wiLCB0eXBlOiBkIH1dLCB0eXBlOiBmIH0sIHsgY29uZGl0aW9uczogcywgcnVsZXM6IFt7IGNvbmRpdGlvbnM6IFtxXSwgcnVsZXM6IFt7IGVuZHBvaW50OiB7IHVybDogXCJodHRwczovL29pZGMue1JlZ2lvbn0ue1BhcnRpdGlvblJlc3VsdCNkdWFsU3RhY2tEbnNTdWZmaXh9XCIsIHByb3BlcnRpZXM6IG4sIGhlYWRlcnM6IG4gfSwgdHlwZTogZSB9XSwgdHlwZTogZiB9LCB7IGVycm9yOiBcIkR1YWxTdGFjayBpcyBlbmFibGVkIGJ1dCB0aGlzIHBhcnRpdGlvbiBkb2VzIG5vdCBzdXBwb3J0IER1YWxTdGFja1wiLCB0eXBlOiBkIH1dLCB0eXBlOiBmIH0sIHsgZW5kcG9pbnQ6IHsgdXJsOiBcImh0dHBzOi8vb2lkYy57UmVnaW9ufS57UGFydGl0aW9uUmVzdWx0I2Ruc1N1ZmZpeH1cIiwgcHJvcGVydGllczogbiwgaGVhZGVyczogbiB9LCB0eXBlOiBlIH1dLCB0eXBlOiBmIH1dLCB0eXBlOiBmIH0sIHsgZXJyb3I6IFwiSW52YWxpZCBDb25maWd1cmF0aW9uOiBNaXNzaW5nIFJlZ2lvblwiLCB0eXBlOiBkIH1dIH07XG5leHBvcnQgY29uc3QgcnVsZVNldCA9IF9kYXRhO1xuIl0sIm5hbWVzIjpbInUiLCJ2IiwidyIsIngiLCJhIiwiYiIsImMiLCJkIiwiZSIsImYiLCJnIiwiaCIsImkiLCJqIiwiayIsImwiLCJtIiwibiIsIm8iLCJwIiwicSIsInIiLCJzIiwidCIsIl9kYXRhIiwidmVyc2lvbiIsInBhcmFtZXRlcnMiLCJSZWdpb24iLCJVc2VEdWFsU3RhY2siLCJVc2VGSVBTIiwiRW5kcG9pbnQiLCJydWxlcyIsImNvbmRpdGlvbnMiLCJlcnJvciIsInR5cGUiLCJlbmRwb2ludCIsInVybCIsInByb3BlcnRpZXMiLCJoZWFkZXJzIiwiYXNzaWduIiwicnVsZVNldCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/endpoint/ruleset.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/index.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/index.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   $Command: () => (/* reexport safe */ _commands__WEBPACK_IMPORTED_MODULE_2__.$Command),\n/* harmony export */   AccessDeniedException: () => (/* reexport safe */ _models__WEBPACK_IMPORTED_MODULE_3__.AccessDeniedException),\n/* harmony export */   AuthorizationPendingException: () => (/* reexport safe */ _models__WEBPACK_IMPORTED_MODULE_3__.AuthorizationPendingException),\n/* harmony export */   CreateTokenCommand: () => (/* reexport safe */ _commands__WEBPACK_IMPORTED_MODULE_2__.CreateTokenCommand),\n/* harmony export */   CreateTokenRequestFilterSensitiveLog: () => (/* reexport safe */ _models__WEBPACK_IMPORTED_MODULE_3__.CreateTokenRequestFilterSensitiveLog),\n/* harmony export */   CreateTokenResponseFilterSensitiveLog: () => (/* reexport safe */ _models__WEBPACK_IMPORTED_MODULE_3__.CreateTokenResponseFilterSensitiveLog),\n/* harmony export */   ExpiredTokenException: () => (/* reexport safe */ _models__WEBPACK_IMPORTED_MODULE_3__.ExpiredTokenException),\n/* harmony export */   InternalServerException: () => (/* reexport safe */ _models__WEBPACK_IMPORTED_MODULE_3__.InternalServerException),\n/* harmony export */   InvalidClientException: () => (/* reexport safe */ _models__WEBPACK_IMPORTED_MODULE_3__.InvalidClientException),\n/* harmony export */   InvalidGrantException: () => (/* reexport safe */ _models__WEBPACK_IMPORTED_MODULE_3__.InvalidGrantException),\n/* harmony export */   InvalidRequestException: () => (/* reexport safe */ _models__WEBPACK_IMPORTED_MODULE_3__.InvalidRequestException),\n/* harmony export */   InvalidScopeException: () => (/* reexport safe */ _models__WEBPACK_IMPORTED_MODULE_3__.InvalidScopeException),\n/* harmony export */   SSOOIDC: () => (/* reexport safe */ _SSOOIDC__WEBPACK_IMPORTED_MODULE_1__.SSOOIDC),\n/* harmony export */   SSOOIDCClient: () => (/* reexport safe */ _SSOOIDCClient__WEBPACK_IMPORTED_MODULE_0__.SSOOIDCClient),\n/* harmony export */   SSOOIDCServiceException: () => (/* reexport safe */ _models_SSOOIDCServiceException__WEBPACK_IMPORTED_MODULE_4__.SSOOIDCServiceException),\n/* harmony export */   SlowDownException: () => (/* reexport safe */ _models__WEBPACK_IMPORTED_MODULE_3__.SlowDownException),\n/* harmony export */   UnauthorizedClientException: () => (/* reexport safe */ _models__WEBPACK_IMPORTED_MODULE_3__.UnauthorizedClientException),\n/* harmony export */   UnsupportedGrantTypeException: () => (/* reexport safe */ _models__WEBPACK_IMPORTED_MODULE_3__.UnsupportedGrantTypeException),\n/* harmony export */   __Client: () => (/* reexport safe */ _SSOOIDCClient__WEBPACK_IMPORTED_MODULE_0__.__Client)\n/* harmony export */ });\n/* harmony import */ var _SSOOIDCClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SSOOIDCClient */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/SSOOIDCClient.js\");\n/* harmony import */ var _SSOOIDC__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SSOOIDC */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/SSOOIDC.js\");\n/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./commands */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/commands/index.js\");\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./models */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/models/index.js\");\n/* harmony import */ var _models_SSOOIDCServiceException__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./models/SSOOIDCServiceException */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/models/SSOOIDCServiceException.js\");\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3Nzby1vaWRjL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFnQztBQUNOO0FBQ0M7QUFDRjtBQUNrRCIsInNvdXJjZXMiOlsid2VicGFjazovL2Nsb3Vkc2hpZnQvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3Nzby1vaWRjL2luZGV4LmpzP2RmMWYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vU1NPT0lEQ0NsaWVudFwiO1xuZXhwb3J0ICogZnJvbSBcIi4vU1NPT0lEQ1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vY29tbWFuZHNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL21vZGVsc1wiO1xuZXhwb3J0IHsgU1NPT0lEQ1NlcnZpY2VFeGNlcHRpb24gfSBmcm9tIFwiLi9tb2RlbHMvU1NPT0lEQ1NlcnZpY2VFeGNlcHRpb25cIjtcbiJdLCJuYW1lcyI6WyJTU09PSURDU2VydmljZUV4Y2VwdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/models/SSOOIDCServiceException.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/models/SSOOIDCServiceException.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SSOOIDCServiceException: () => (/* binding */ SSOOIDCServiceException),\n/* harmony export */   __ServiceException: () => (/* reexport safe */ _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.ServiceException)\n/* harmony export */ });\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/./node_modules/@smithy/smithy-client/dist-cjs/index.js\");\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__);\n\n\nclass SSOOIDCServiceException extends _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.ServiceException {\n    constructor(options){\n        super(options);\n        Object.setPrototypeOf(this, SSOOIDCServiceException.prototype);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3Nzby1vaWRjL21vZGVscy9TU09PSURDU2VydmljZUV4Y2VwdGlvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWdGO0FBQ2xEO0FBQ3ZCLE1BQU1FLGdDQUFnQ0QsbUVBQWtCQTtJQUMzREUsWUFBWUMsT0FBTyxDQUFFO1FBQ2pCLEtBQUssQ0FBQ0E7UUFDTkMsT0FBT0MsY0FBYyxDQUFDLElBQUksRUFBRUosd0JBQXdCSyxTQUFTO0lBQ2pFO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbG91ZHNoaWZ0Ly4vbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL25lc3RlZC1jbGllbnRzL2Rpc3QtZXMvc3VibW9kdWxlcy9zc28tb2lkYy9tb2RlbHMvU1NPT0lEQ1NlcnZpY2VFeGNlcHRpb24uanM/OGM5OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTZXJ2aWNlRXhjZXB0aW9uIGFzIF9fU2VydmljZUV4Y2VwdGlvbiwgfSBmcm9tIFwiQHNtaXRoeS9zbWl0aHktY2xpZW50XCI7XG5leHBvcnQgeyBfX1NlcnZpY2VFeGNlcHRpb24gfTtcbmV4cG9ydCBjbGFzcyBTU09PSURDU2VydmljZUV4Y2VwdGlvbiBleHRlbmRzIF9fU2VydmljZUV4Y2VwdGlvbiB7XG4gICAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgICAgICBzdXBlcihvcHRpb25zKTtcbiAgICAgICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsIFNTT09JRENTZXJ2aWNlRXhjZXB0aW9uLnByb3RvdHlwZSk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbIlNlcnZpY2VFeGNlcHRpb24iLCJfX1NlcnZpY2VFeGNlcHRpb24iLCJTU09PSURDU2VydmljZUV4Y2VwdGlvbiIsImNvbnN0cnVjdG9yIiwib3B0aW9ucyIsIk9iamVjdCIsInNldFByb3RvdHlwZU9mIiwicHJvdG90eXBlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/models/SSOOIDCServiceException.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/models/index.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/models/index.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccessDeniedException: () => (/* reexport safe */ _models_0__WEBPACK_IMPORTED_MODULE_0__.AccessDeniedException),\n/* harmony export */   AuthorizationPendingException: () => (/* reexport safe */ _models_0__WEBPACK_IMPORTED_MODULE_0__.AuthorizationPendingException),\n/* harmony export */   CreateTokenRequestFilterSensitiveLog: () => (/* reexport safe */ _models_0__WEBPACK_IMPORTED_MODULE_0__.CreateTokenRequestFilterSensitiveLog),\n/* harmony export */   CreateTokenResponseFilterSensitiveLog: () => (/* reexport safe */ _models_0__WEBPACK_IMPORTED_MODULE_0__.CreateTokenResponseFilterSensitiveLog),\n/* harmony export */   ExpiredTokenException: () => (/* reexport safe */ _models_0__WEBPACK_IMPORTED_MODULE_0__.ExpiredTokenException),\n/* harmony export */   InternalServerException: () => (/* reexport safe */ _models_0__WEBPACK_IMPORTED_MODULE_0__.InternalServerException),\n/* harmony export */   InvalidClientException: () => (/* reexport safe */ _models_0__WEBPACK_IMPORTED_MODULE_0__.InvalidClientException),\n/* harmony export */   InvalidGrantException: () => (/* reexport safe */ _models_0__WEBPACK_IMPORTED_MODULE_0__.InvalidGrantException),\n/* harmony export */   InvalidRequestException: () => (/* reexport safe */ _models_0__WEBPACK_IMPORTED_MODULE_0__.InvalidRequestException),\n/* harmony export */   InvalidScopeException: () => (/* reexport safe */ _models_0__WEBPACK_IMPORTED_MODULE_0__.InvalidScopeException),\n/* harmony export */   SlowDownException: () => (/* reexport safe */ _models_0__WEBPACK_IMPORTED_MODULE_0__.SlowDownException),\n/* harmony export */   UnauthorizedClientException: () => (/* reexport safe */ _models_0__WEBPACK_IMPORTED_MODULE_0__.UnauthorizedClientException),\n/* harmony export */   UnsupportedGrantTypeException: () => (/* reexport safe */ _models_0__WEBPACK_IMPORTED_MODULE_0__.UnsupportedGrantTypeException)\n/* harmony export */ });\n/* harmony import */ var _models_0__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./models_0 */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/models/models_0.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3Nzby1vaWRjL21vZGVscy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUEyQiIsInNvdXJjZXMiOlsid2VicGFjazovL2Nsb3Vkc2hpZnQvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3Nzby1vaWRjL21vZGVscy9pbmRleC5qcz82NjRmIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL21vZGVsc18wXCI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/models/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/models/models_0.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/models/models_0.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccessDeniedException: () => (/* binding */ AccessDeniedException),\n/* harmony export */   AuthorizationPendingException: () => (/* binding */ AuthorizationPendingException),\n/* harmony export */   CreateTokenRequestFilterSensitiveLog: () => (/* binding */ CreateTokenRequestFilterSensitiveLog),\n/* harmony export */   CreateTokenResponseFilterSensitiveLog: () => (/* binding */ CreateTokenResponseFilterSensitiveLog),\n/* harmony export */   ExpiredTokenException: () => (/* binding */ ExpiredTokenException),\n/* harmony export */   InternalServerException: () => (/* binding */ InternalServerException),\n/* harmony export */   InvalidClientException: () => (/* binding */ InvalidClientException),\n/* harmony export */   InvalidGrantException: () => (/* binding */ InvalidGrantException),\n/* harmony export */   InvalidRequestException: () => (/* binding */ InvalidRequestException),\n/* harmony export */   InvalidScopeException: () => (/* binding */ InvalidScopeException),\n/* harmony export */   SlowDownException: () => (/* binding */ SlowDownException),\n/* harmony export */   UnauthorizedClientException: () => (/* binding */ UnauthorizedClientException),\n/* harmony export */   UnsupportedGrantTypeException: () => (/* binding */ UnsupportedGrantTypeException)\n/* harmony export */ });\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/./node_modules/@smithy/smithy-client/dist-cjs/index.js\");\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _SSOOIDCServiceException__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SSOOIDCServiceException */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/models/SSOOIDCServiceException.js\");\n\n\nclass AccessDeniedException extends _SSOOIDCServiceException__WEBPACK_IMPORTED_MODULE_1__.SSOOIDCServiceException {\n    constructor(opts){\n        super({\n            name: \"AccessDeniedException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"AccessDeniedException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AccessDeniedException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nclass AuthorizationPendingException extends _SSOOIDCServiceException__WEBPACK_IMPORTED_MODULE_1__.SSOOIDCServiceException {\n    constructor(opts){\n        super({\n            name: \"AuthorizationPendingException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"AuthorizationPendingException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AuthorizationPendingException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nconst CreateTokenRequestFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.clientSecret && {\n            clientSecret: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        },\n        ...obj.refreshToken && {\n            refreshToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        },\n        ...obj.codeVerifier && {\n            codeVerifier: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        }\n    });\nconst CreateTokenResponseFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.accessToken && {\n            accessToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        },\n        ...obj.refreshToken && {\n            refreshToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        },\n        ...obj.idToken && {\n            idToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        }\n    });\nclass ExpiredTokenException extends _SSOOIDCServiceException__WEBPACK_IMPORTED_MODULE_1__.SSOOIDCServiceException {\n    constructor(opts){\n        super({\n            name: \"ExpiredTokenException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"ExpiredTokenException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ExpiredTokenException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nclass InternalServerException extends _SSOOIDCServiceException__WEBPACK_IMPORTED_MODULE_1__.SSOOIDCServiceException {\n    constructor(opts){\n        super({\n            name: \"InternalServerException\",\n            $fault: \"server\",\n            ...opts\n        });\n        this.name = \"InternalServerException\";\n        this.$fault = \"server\";\n        Object.setPrototypeOf(this, InternalServerException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nclass InvalidClientException extends _SSOOIDCServiceException__WEBPACK_IMPORTED_MODULE_1__.SSOOIDCServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidClientException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidClientException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidClientException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nclass InvalidGrantException extends _SSOOIDCServiceException__WEBPACK_IMPORTED_MODULE_1__.SSOOIDCServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidGrantException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidGrantException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidGrantException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nclass InvalidRequestException extends _SSOOIDCServiceException__WEBPACK_IMPORTED_MODULE_1__.SSOOIDCServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidRequestException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidRequestException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidRequestException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nclass InvalidScopeException extends _SSOOIDCServiceException__WEBPACK_IMPORTED_MODULE_1__.SSOOIDCServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidScopeException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidScopeException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidScopeException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nclass SlowDownException extends _SSOOIDCServiceException__WEBPACK_IMPORTED_MODULE_1__.SSOOIDCServiceException {\n    constructor(opts){\n        super({\n            name: \"SlowDownException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"SlowDownException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, SlowDownException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nclass UnauthorizedClientException extends _SSOOIDCServiceException__WEBPACK_IMPORTED_MODULE_1__.SSOOIDCServiceException {\n    constructor(opts){\n        super({\n            name: \"UnauthorizedClientException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"UnauthorizedClientException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, UnauthorizedClientException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nclass UnsupportedGrantTypeException extends _SSOOIDCServiceException__WEBPACK_IMPORTED_MODULE_1__.SSOOIDCServiceException {\n    constructor(opts){\n        super({\n            name: \"UnsupportedGrantTypeException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"UnsupportedGrantTypeException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, UnsupportedGrantTypeException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/models/models_0.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/protocols/Aws_restJson1.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/protocols/Aws_restJson1.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   de_CreateTokenCommand: () => (/* binding */ de_CreateTokenCommand),\n/* harmony export */   se_CreateTokenCommand: () => (/* binding */ se_CreateTokenCommand)\n/* harmony export */ });\n/* harmony import */ var _aws_sdk_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @aws-sdk/core */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/protocols/json/parseJsonBody.js\");\n/* harmony import */ var _smithy_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @smithy/core */ \"(rsc)/./node_modules/@smithy/core/dist-es/index.js\");\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/./node_modules/@smithy/smithy-client/dist-cjs/index.js\");\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _models_models_0__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../models/models_0 */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/models/models_0.js\");\n/* harmony import */ var _models_SSOOIDCServiceException__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../models/SSOOIDCServiceException */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/models/SSOOIDCServiceException.js\");\n\n\n\n\n\nconst se_CreateTokenCommand = async (input, context)=>{\n    const b = (0,_smithy_core__WEBPACK_IMPORTED_MODULE_0__.requestBuilder)(input, context);\n    const headers = {\n        \"content-type\": \"application/json\"\n    };\n    b.bp(\"/token\");\n    let body;\n    body = JSON.stringify((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(input, {\n        clientId: [],\n        clientSecret: [],\n        code: [],\n        codeVerifier: [],\n        deviceCode: [],\n        grantType: [],\n        redirectUri: [],\n        refreshToken: [],\n        scope: (_)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__._json)(_)\n    }));\n    b.m(\"POST\").h(headers).b(body);\n    return b.build();\n};\nconst de_CreateTokenCommand = async (output, context)=>{\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.map)({\n        $metadata: deserializeMetadata(output)\n    });\n    const data = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectObject)(await (0,_aws_sdk_core__WEBPACK_IMPORTED_MODULE_4__.parseJsonBody)(output.body, context)), \"body\");\n    const doc = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(data, {\n        accessToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        expiresIn: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectInt32,\n        idToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        refreshToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        tokenType: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nconst de_CommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await (0,_aws_sdk_core__WEBPACK_IMPORTED_MODULE_4__.parseJsonErrorBody)(output.body, context)\n    };\n    const errorCode = (0,_aws_sdk_core__WEBPACK_IMPORTED_MODULE_4__.loadRestJsonErrorCode)(output, parsedOutput.body);\n    switch(errorCode){\n        case \"AccessDeniedException\":\n        case \"com.amazonaws.ssooidc#AccessDeniedException\":\n            throw await de_AccessDeniedExceptionRes(parsedOutput, context);\n        case \"AuthorizationPendingException\":\n        case \"com.amazonaws.ssooidc#AuthorizationPendingException\":\n            throw await de_AuthorizationPendingExceptionRes(parsedOutput, context);\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.ssooidc#ExpiredTokenException\":\n            throw await de_ExpiredTokenExceptionRes(parsedOutput, context);\n        case \"InternalServerException\":\n        case \"com.amazonaws.ssooidc#InternalServerException\":\n            throw await de_InternalServerExceptionRes(parsedOutput, context);\n        case \"InvalidClientException\":\n        case \"com.amazonaws.ssooidc#InvalidClientException\":\n            throw await de_InvalidClientExceptionRes(parsedOutput, context);\n        case \"InvalidGrantException\":\n        case \"com.amazonaws.ssooidc#InvalidGrantException\":\n            throw await de_InvalidGrantExceptionRes(parsedOutput, context);\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.ssooidc#InvalidRequestException\":\n            throw await de_InvalidRequestExceptionRes(parsedOutput, context);\n        case \"InvalidScopeException\":\n        case \"com.amazonaws.ssooidc#InvalidScopeException\":\n            throw await de_InvalidScopeExceptionRes(parsedOutput, context);\n        case \"SlowDownException\":\n        case \"com.amazonaws.ssooidc#SlowDownException\":\n            throw await de_SlowDownExceptionRes(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.ssooidc#UnauthorizedClientException\":\n            throw await de_UnauthorizedClientExceptionRes(parsedOutput, context);\n        case \"UnsupportedGrantTypeException\":\n        case \"com.amazonaws.ssooidc#UnsupportedGrantTypeException\":\n            throw await de_UnsupportedGrantTypeExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nconst throwDefaultError = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.withBaseException)(_models_SSOOIDCServiceException__WEBPACK_IMPORTED_MODULE_3__.SSOOIDCServiceException);\nconst de_AccessDeniedExceptionRes = async (parsedOutput, context)=>{\n    const contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.map)({});\n    const data = parsedOutput.body;\n    const doc = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(data, {\n        error: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        error_description: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n    Object.assign(contents, doc);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.AccessDeniedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, parsedOutput.body);\n};\nconst de_AuthorizationPendingExceptionRes = async (parsedOutput, context)=>{\n    const contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.map)({});\n    const data = parsedOutput.body;\n    const doc = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(data, {\n        error: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        error_description: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n    Object.assign(contents, doc);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.AuthorizationPendingException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, parsedOutput.body);\n};\nconst de_ExpiredTokenExceptionRes = async (parsedOutput, context)=>{\n    const contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.map)({});\n    const data = parsedOutput.body;\n    const doc = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(data, {\n        error: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        error_description: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n    Object.assign(contents, doc);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.ExpiredTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, parsedOutput.body);\n};\nconst de_InternalServerExceptionRes = async (parsedOutput, context)=>{\n    const contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.map)({});\n    const data = parsedOutput.body;\n    const doc = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(data, {\n        error: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        error_description: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n    Object.assign(contents, doc);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.InternalServerException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, parsedOutput.body);\n};\nconst de_InvalidClientExceptionRes = async (parsedOutput, context)=>{\n    const contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.map)({});\n    const data = parsedOutput.body;\n    const doc = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(data, {\n        error: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        error_description: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n    Object.assign(contents, doc);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.InvalidClientException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, parsedOutput.body);\n};\nconst de_InvalidGrantExceptionRes = async (parsedOutput, context)=>{\n    const contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.map)({});\n    const data = parsedOutput.body;\n    const doc = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(data, {\n        error: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        error_description: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n    Object.assign(contents, doc);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.InvalidGrantException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, parsedOutput.body);\n};\nconst de_InvalidRequestExceptionRes = async (parsedOutput, context)=>{\n    const contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.map)({});\n    const data = parsedOutput.body;\n    const doc = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(data, {\n        error: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        error_description: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n    Object.assign(contents, doc);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.InvalidRequestException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, parsedOutput.body);\n};\nconst de_InvalidScopeExceptionRes = async (parsedOutput, context)=>{\n    const contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.map)({});\n    const data = parsedOutput.body;\n    const doc = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(data, {\n        error: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        error_description: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n    Object.assign(contents, doc);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.InvalidScopeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, parsedOutput.body);\n};\nconst de_SlowDownExceptionRes = async (parsedOutput, context)=>{\n    const contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.map)({});\n    const data = parsedOutput.body;\n    const doc = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(data, {\n        error: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        error_description: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n    Object.assign(contents, doc);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.SlowDownException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, parsedOutput.body);\n};\nconst de_UnauthorizedClientExceptionRes = async (parsedOutput, context)=>{\n    const contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.map)({});\n    const data = parsedOutput.body;\n    const doc = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(data, {\n        error: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        error_description: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n    Object.assign(contents, doc);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.UnauthorizedClientException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, parsedOutput.body);\n};\nconst de_UnsupportedGrantTypeExceptionRes = async (parsedOutput, context)=>{\n    const contents = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.map)({});\n    const data = parsedOutput.body;\n    const doc = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.take)(data, {\n        error: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString,\n        error_description: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString\n    });\n    Object.assign(contents, doc);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.UnsupportedGrantTypeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, parsedOutput.body);\n};\nconst deserializeMetadata = (output)=>({\n        httpStatusCode: output.statusCode,\n        requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n        extendedRequestId: output.headers[\"x-amz-id-2\"],\n        cfId: output.headers[\"x-amz-cf-id\"]\n    });\nconst collectBodyString = (streamBody, context)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.collectBody)(streamBody, context).then((body)=>context.utf8Encoder(body));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/protocols/Aws_restJson1.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/runtimeConfig.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/runtimeConfig.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRuntimeConfig: () => (/* binding */ getRuntimeConfig)\n/* harmony export */ });\n/* harmony import */ var _package_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../package.json */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/package.json\");\n/* harmony import */ var _aws_sdk_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @aws-sdk/core */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/client/emitWarningIfUnsupportedVersion.js\");\n/* harmony import */ var _aws_sdk_util_user_agent_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/util-user-agent-node */ \"(rsc)/./node_modules/@aws-sdk/util-user-agent-node/dist-cjs/index.js\");\n/* harmony import */ var _aws_sdk_util_user_agent_node__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_aws_sdk_util_user_agent_node__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _smithy_config_resolver__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @smithy/config-resolver */ \"(rsc)/./node_modules/@smithy/config-resolver/dist-cjs/index.js\");\n/* harmony import */ var _smithy_config_resolver__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_smithy_config_resolver__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _smithy_hash_node__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @smithy/hash-node */ \"(rsc)/./node_modules/@smithy/hash-node/dist-cjs/index.js\");\n/* harmony import */ var _smithy_hash_node__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_smithy_hash_node__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _smithy_middleware_retry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @smithy/middleware-retry */ \"(rsc)/./node_modules/@smithy/middleware-retry/dist-cjs/index.js\");\n/* harmony import */ var _smithy_middleware_retry__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_smithy_middleware_retry__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _smithy_node_config_provider__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @smithy/node-config-provider */ \"(rsc)/./node_modules/@smithy/node-config-provider/dist-cjs/index.js\");\n/* harmony import */ var _smithy_node_config_provider__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_smithy_node_config_provider__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _smithy_node_http_handler__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @smithy/node-http-handler */ \"(rsc)/./node_modules/@smithy/node-http-handler/dist-cjs/index.js\");\n/* harmony import */ var _smithy_node_http_handler__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_smithy_node_http_handler__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _smithy_util_body_length_node__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @smithy/util-body-length-node */ \"(rsc)/./node_modules/@smithy/util-body-length-node/dist-cjs/index.js\");\n/* harmony import */ var _smithy_util_body_length_node__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_smithy_util_body_length_node__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _smithy_util_retry__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @smithy/util-retry */ \"(rsc)/./node_modules/@smithy/util-retry/dist-cjs/index.js\");\n/* harmony import */ var _smithy_util_retry__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_smithy_util_retry__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _runtimeConfig_shared__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./runtimeConfig.shared */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/runtimeConfig.shared.js\");\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/./node_modules/@smithy/smithy-client/dist-cjs/index.js\");\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _smithy_util_defaults_mode_node__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @smithy/util-defaults-mode-node */ \"(rsc)/./node_modules/@smithy/util-defaults-mode-node/dist-cjs/index.js\");\n/* harmony import */ var _smithy_util_defaults_mode_node__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_smithy_util_defaults_mode_node__WEBPACK_IMPORTED_MODULE_11__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst getRuntimeConfig = (config)=>{\n    (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_10__.emitWarningIfUnsupportedVersion)(process.version);\n    const defaultsMode = (0,_smithy_util_defaults_mode_node__WEBPACK_IMPORTED_MODULE_11__.resolveDefaultsModeConfig)(config);\n    const defaultConfigProvider = ()=>defaultsMode().then(_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_10__.loadConfigsForDefaultMode);\n    const clientSharedValues = (0,_runtimeConfig_shared__WEBPACK_IMPORTED_MODULE_9__.getRuntimeConfig)(config);\n    (0,_aws_sdk_core__WEBPACK_IMPORTED_MODULE_12__.emitWarningIfUnsupportedVersion)(process.version);\n    const profileConfig = {\n        profile: config?.profile\n    };\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? _smithy_util_body_length_node__WEBPACK_IMPORTED_MODULE_7__.calculateBodyLength,\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ?? (0,_aws_sdk_util_user_agent_node__WEBPACK_IMPORTED_MODULE_1__.createDefaultUserAgentProvider)({\n            serviceId: clientSharedValues.serviceId,\n            clientVersion: _package_json__WEBPACK_IMPORTED_MODULE_0__.version\n        }),\n        maxAttempts: config?.maxAttempts ?? (0,_smithy_node_config_provider__WEBPACK_IMPORTED_MODULE_5__.loadConfig)(_smithy_middleware_retry__WEBPACK_IMPORTED_MODULE_4__.NODE_MAX_ATTEMPT_CONFIG_OPTIONS, config),\n        region: config?.region ?? (0,_smithy_node_config_provider__WEBPACK_IMPORTED_MODULE_5__.loadConfig)(_smithy_config_resolver__WEBPACK_IMPORTED_MODULE_2__.NODE_REGION_CONFIG_OPTIONS, {\n            ..._smithy_config_resolver__WEBPACK_IMPORTED_MODULE_2__.NODE_REGION_CONFIG_FILE_OPTIONS,\n            ...profileConfig\n        }),\n        requestHandler: _smithy_node_http_handler__WEBPACK_IMPORTED_MODULE_6__.NodeHttpHandler.create(config?.requestHandler ?? defaultConfigProvider),\n        retryMode: config?.retryMode ?? (0,_smithy_node_config_provider__WEBPACK_IMPORTED_MODULE_5__.loadConfig)({\n            ..._smithy_middleware_retry__WEBPACK_IMPORTED_MODULE_4__.NODE_RETRY_MODE_CONFIG_OPTIONS,\n            default: async ()=>(await defaultConfigProvider()).retryMode || _smithy_util_retry__WEBPACK_IMPORTED_MODULE_8__.DEFAULT_RETRY_MODE\n        }, config),\n        sha256: config?.sha256 ?? _smithy_hash_node__WEBPACK_IMPORTED_MODULE_3__.Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? _smithy_node_http_handler__WEBPACK_IMPORTED_MODULE_6__.streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? (0,_smithy_node_config_provider__WEBPACK_IMPORTED_MODULE_5__.loadConfig)(_smithy_config_resolver__WEBPACK_IMPORTED_MODULE_2__.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, profileConfig),\n        useFipsEndpoint: config?.useFipsEndpoint ?? (0,_smithy_node_config_provider__WEBPACK_IMPORTED_MODULE_5__.loadConfig)(_smithy_config_resolver__WEBPACK_IMPORTED_MODULE_2__.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, profileConfig),\n        userAgentAppId: config?.userAgentAppId ?? (0,_smithy_node_config_provider__WEBPACK_IMPORTED_MODULE_5__.loadConfig)(_aws_sdk_util_user_agent_node__WEBPACK_IMPORTED_MODULE_1__.NODE_APP_ID_CONFIG_OPTIONS, profileConfig)\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3Nzby1vaWRjL3J1bnRpbWVDb25maWcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQWdEO0FBQ21DO0FBQ3dCO0FBQytFO0FBQ2pKO0FBQ2tFO0FBQy9CO0FBQ21CO0FBQzNCO0FBQ1o7QUFDNEI7QUFDbEI7QUFDVTtBQUNKO0FBQ2pFLE1BQU1tQixtQkFBbUIsQ0FBQ0k7SUFDN0J0Qix1RkFBK0JBLENBQUN1QixRQUFRQyxPQUFPO0lBQy9DLE1BQU1DLGVBQWVKLDJGQUF5QkEsQ0FBQ0M7SUFDL0MsTUFBTUksd0JBQXdCLElBQU1ELGVBQWVFLElBQUksQ0FBQ1AsNkVBQXlCQTtJQUNqRixNQUFNUSxxQkFBcUJULHVFQUFzQkEsQ0FBQ0c7SUFDbERyQiwrRUFBZUEsQ0FBQ3NCLFFBQVFDLE9BQU87SUFDL0IsTUFBTUssZ0JBQWdCO1FBQUVDLFNBQVNSLFFBQVFRO0lBQVE7SUFDakQsT0FBTztRQUNILEdBQUdGLGtCQUFrQjtRQUNyQixHQUFHTixNQUFNO1FBQ1RTLFNBQVM7UUFDVE47UUFDQU8sbUJBQW1CVixRQUFRVSxxQkFBcUJoQiw4RUFBbUJBO1FBQ25FaUIsMEJBQTBCWCxRQUFRVyw0QkFDOUI5Qiw2RkFBOEJBLENBQUM7WUFBRStCLFdBQVdOLG1CQUFtQk0sU0FBUztZQUFFQyxlQUFlcEMsa0RBQW1CO1FBQUM7UUFDakhxQyxhQUFhZCxRQUFRYyxlQUFleEIsd0VBQWNBLENBQUNILHFGQUErQkEsRUFBRWE7UUFDcEZlLFFBQVFmLFFBQVFlLFVBQ1p6Qix3RUFBY0EsQ0FBQ1AsK0VBQTBCQSxFQUFFO1lBQUUsR0FBR0Qsb0ZBQStCO1lBQUUsR0FBR3lCLGFBQWE7UUFBQztRQUN0R1MsZ0JBQWdCeEIsc0VBQWNBLENBQUN5QixNQUFNLENBQUNqQixRQUFRZ0Isa0JBQWtCWjtRQUNoRWMsV0FBV2xCLFFBQVFrQixhQUNmNUIsd0VBQWNBLENBQUM7WUFDWCxHQUFHRixvRkFBOEI7WUFDakMrQixTQUFTLFVBQVksQ0FBQyxNQUFNZix1QkFBc0IsRUFBR2MsU0FBUyxJQUFJdkIsa0VBQWtCQTtRQUN4RixHQUFHSztRQUNQb0IsUUFBUXBCLFFBQVFvQixVQUFVbEMsbURBQUlBLENBQUNtQyxJQUFJLENBQUMsTUFBTTtRQUMxQzVCLGlCQUFpQk8sUUFBUVAsbUJBQW1CQSxzRUFBZUE7UUFDM0Q2QixzQkFBc0J0QixRQUFRc0Isd0JBQXdCaEMsd0VBQWNBLENBQUNOLCtGQUEwQ0EsRUFBRXVCO1FBQ2pIZ0IsaUJBQWlCdkIsUUFBUXVCLG1CQUFtQmpDLHdFQUFjQSxDQUFDTCwwRkFBcUNBLEVBQUVzQjtRQUNsR2lCLGdCQUFnQnhCLFFBQVF3QixrQkFBa0JsQyx3RUFBY0EsQ0FBQ1YscUZBQTBCQSxFQUFFMkI7SUFDekY7QUFDSixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xvdWRzaGlmdC8uL25vZGVfbW9kdWxlcy9AYXdzLXNkay9uZXN0ZWQtY2xpZW50cy9kaXN0LWVzL3N1Ym1vZHVsZXMvc3NvLW9pZGMvcnVudGltZUNvbmZpZy5qcz80NWVlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBwYWNrYWdlSW5mbyBmcm9tIFwiLi4vLi4vLi4vcGFja2FnZS5qc29uXCI7XG5pbXBvcnQgeyBlbWl0V2FybmluZ0lmVW5zdXBwb3J0ZWRWZXJzaW9uIGFzIGF3c0NoZWNrVmVyc2lvbiB9IGZyb20gXCJAYXdzLXNkay9jb3JlXCI7XG5pbXBvcnQgeyBOT0RFX0FQUF9JRF9DT05GSUdfT1BUSU9OUywgY3JlYXRlRGVmYXVsdFVzZXJBZ2VudFByb3ZpZGVyIH0gZnJvbSBcIkBhd3Mtc2RrL3V0aWwtdXNlci1hZ2VudC1ub2RlXCI7XG5pbXBvcnQgeyBOT0RFX1JFR0lPTl9DT05GSUdfRklMRV9PUFRJT05TLCBOT0RFX1JFR0lPTl9DT05GSUdfT1BUSU9OUywgTk9ERV9VU0VfRFVBTFNUQUNLX0VORFBPSU5UX0NPTkZJR19PUFRJT05TLCBOT0RFX1VTRV9GSVBTX0VORFBPSU5UX0NPTkZJR19PUFRJT05TLCB9IGZyb20gXCJAc21pdGh5L2NvbmZpZy1yZXNvbHZlclwiO1xuaW1wb3J0IHsgSGFzaCB9IGZyb20gXCJAc21pdGh5L2hhc2gtbm9kZVwiO1xuaW1wb3J0IHsgTk9ERV9NQVhfQVRURU1QVF9DT05GSUdfT1BUSU9OUywgTk9ERV9SRVRSWV9NT0RFX0NPTkZJR19PUFRJT05TIH0gZnJvbSBcIkBzbWl0aHkvbWlkZGxld2FyZS1yZXRyeVwiO1xuaW1wb3J0IHsgbG9hZENvbmZpZyBhcyBsb2FkTm9kZUNvbmZpZyB9IGZyb20gXCJAc21pdGh5L25vZGUtY29uZmlnLXByb3ZpZGVyXCI7XG5pbXBvcnQgeyBOb2RlSHR0cEhhbmRsZXIgYXMgUmVxdWVzdEhhbmRsZXIsIHN0cmVhbUNvbGxlY3RvciB9IGZyb20gXCJAc21pdGh5L25vZGUtaHR0cC1oYW5kbGVyXCI7XG5pbXBvcnQgeyBjYWxjdWxhdGVCb2R5TGVuZ3RoIH0gZnJvbSBcIkBzbWl0aHkvdXRpbC1ib2R5LWxlbmd0aC1ub2RlXCI7XG5pbXBvcnQgeyBERUZBVUxUX1JFVFJZX01PREUgfSBmcm9tIFwiQHNtaXRoeS91dGlsLXJldHJ5XCI7XG5pbXBvcnQgeyBnZXRSdW50aW1lQ29uZmlnIGFzIGdldFNoYXJlZFJ1bnRpbWVDb25maWcgfSBmcm9tIFwiLi9ydW50aW1lQ29uZmlnLnNoYXJlZFwiO1xuaW1wb3J0IHsgbG9hZENvbmZpZ3NGb3JEZWZhdWx0TW9kZSB9IGZyb20gXCJAc21pdGh5L3NtaXRoeS1jbGllbnRcIjtcbmltcG9ydCB7IHJlc29sdmVEZWZhdWx0c01vZGVDb25maWcgfSBmcm9tIFwiQHNtaXRoeS91dGlsLWRlZmF1bHRzLW1vZGUtbm9kZVwiO1xuaW1wb3J0IHsgZW1pdFdhcm5pbmdJZlVuc3VwcG9ydGVkVmVyc2lvbiB9IGZyb20gXCJAc21pdGh5L3NtaXRoeS1jbGllbnRcIjtcbmV4cG9ydCBjb25zdCBnZXRSdW50aW1lQ29uZmlnID0gKGNvbmZpZykgPT4ge1xuICAgIGVtaXRXYXJuaW5nSWZVbnN1cHBvcnRlZFZlcnNpb24ocHJvY2Vzcy52ZXJzaW9uKTtcbiAgICBjb25zdCBkZWZhdWx0c01vZGUgPSByZXNvbHZlRGVmYXVsdHNNb2RlQ29uZmlnKGNvbmZpZyk7XG4gICAgY29uc3QgZGVmYXVsdENvbmZpZ1Byb3ZpZGVyID0gKCkgPT4gZGVmYXVsdHNNb2RlKCkudGhlbihsb2FkQ29uZmlnc0ZvckRlZmF1bHRNb2RlKTtcbiAgICBjb25zdCBjbGllbnRTaGFyZWRWYWx1ZXMgPSBnZXRTaGFyZWRSdW50aW1lQ29uZmlnKGNvbmZpZyk7XG4gICAgYXdzQ2hlY2tWZXJzaW9uKHByb2Nlc3MudmVyc2lvbik7XG4gICAgY29uc3QgcHJvZmlsZUNvbmZpZyA9IHsgcHJvZmlsZTogY29uZmlnPy5wcm9maWxlIH07XG4gICAgcmV0dXJuIHtcbiAgICAgICAgLi4uY2xpZW50U2hhcmVkVmFsdWVzLFxuICAgICAgICAuLi5jb25maWcsXG4gICAgICAgIHJ1bnRpbWU6IFwibm9kZVwiLFxuICAgICAgICBkZWZhdWx0c01vZGUsXG4gICAgICAgIGJvZHlMZW5ndGhDaGVja2VyOiBjb25maWc/LmJvZHlMZW5ndGhDaGVja2VyID8/IGNhbGN1bGF0ZUJvZHlMZW5ndGgsXG4gICAgICAgIGRlZmF1bHRVc2VyQWdlbnRQcm92aWRlcjogY29uZmlnPy5kZWZhdWx0VXNlckFnZW50UHJvdmlkZXIgPz9cbiAgICAgICAgICAgIGNyZWF0ZURlZmF1bHRVc2VyQWdlbnRQcm92aWRlcih7IHNlcnZpY2VJZDogY2xpZW50U2hhcmVkVmFsdWVzLnNlcnZpY2VJZCwgY2xpZW50VmVyc2lvbjogcGFja2FnZUluZm8udmVyc2lvbiB9KSxcbiAgICAgICAgbWF4QXR0ZW1wdHM6IGNvbmZpZz8ubWF4QXR0ZW1wdHMgPz8gbG9hZE5vZGVDb25maWcoTk9ERV9NQVhfQVRURU1QVF9DT05GSUdfT1BUSU9OUywgY29uZmlnKSxcbiAgICAgICAgcmVnaW9uOiBjb25maWc/LnJlZ2lvbiA/P1xuICAgICAgICAgICAgbG9hZE5vZGVDb25maWcoTk9ERV9SRUdJT05fQ09ORklHX09QVElPTlMsIHsgLi4uTk9ERV9SRUdJT05fQ09ORklHX0ZJTEVfT1BUSU9OUywgLi4ucHJvZmlsZUNvbmZpZyB9KSxcbiAgICAgICAgcmVxdWVzdEhhbmRsZXI6IFJlcXVlc3RIYW5kbGVyLmNyZWF0ZShjb25maWc/LnJlcXVlc3RIYW5kbGVyID8/IGRlZmF1bHRDb25maWdQcm92aWRlciksXG4gICAgICAgIHJldHJ5TW9kZTogY29uZmlnPy5yZXRyeU1vZGUgPz9cbiAgICAgICAgICAgIGxvYWROb2RlQ29uZmlnKHtcbiAgICAgICAgICAgICAgICAuLi5OT0RFX1JFVFJZX01PREVfQ09ORklHX09QVElPTlMsXG4gICAgICAgICAgICAgICAgZGVmYXVsdDogYXN5bmMgKCkgPT4gKGF3YWl0IGRlZmF1bHRDb25maWdQcm92aWRlcigpKS5yZXRyeU1vZGUgfHwgREVGQVVMVF9SRVRSWV9NT0RFLFxuICAgICAgICAgICAgfSwgY29uZmlnKSxcbiAgICAgICAgc2hhMjU2OiBjb25maWc/LnNoYTI1NiA/PyBIYXNoLmJpbmQobnVsbCwgXCJzaGEyNTZcIiksXG4gICAgICAgIHN0cmVhbUNvbGxlY3RvcjogY29uZmlnPy5zdHJlYW1Db2xsZWN0b3IgPz8gc3RyZWFtQ29sbGVjdG9yLFxuICAgICAgICB1c2VEdWFsc3RhY2tFbmRwb2ludDogY29uZmlnPy51c2VEdWFsc3RhY2tFbmRwb2ludCA/PyBsb2FkTm9kZUNvbmZpZyhOT0RFX1VTRV9EVUFMU1RBQ0tfRU5EUE9JTlRfQ09ORklHX09QVElPTlMsIHByb2ZpbGVDb25maWcpLFxuICAgICAgICB1c2VGaXBzRW5kcG9pbnQ6IGNvbmZpZz8udXNlRmlwc0VuZHBvaW50ID8/IGxvYWROb2RlQ29uZmlnKE5PREVfVVNFX0ZJUFNfRU5EUE9JTlRfQ09ORklHX09QVElPTlMsIHByb2ZpbGVDb25maWcpLFxuICAgICAgICB1c2VyQWdlbnRBcHBJZDogY29uZmlnPy51c2VyQWdlbnRBcHBJZCA/PyBsb2FkTm9kZUNvbmZpZyhOT0RFX0FQUF9JRF9DT05GSUdfT1BUSU9OUywgcHJvZmlsZUNvbmZpZyksXG4gICAgfTtcbn07XG4iXSwibmFtZXMiOlsicGFja2FnZUluZm8iLCJlbWl0V2FybmluZ0lmVW5zdXBwb3J0ZWRWZXJzaW9uIiwiYXdzQ2hlY2tWZXJzaW9uIiwiTk9ERV9BUFBfSURfQ09ORklHX09QVElPTlMiLCJjcmVhdGVEZWZhdWx0VXNlckFnZW50UHJvdmlkZXIiLCJOT0RFX1JFR0lPTl9DT05GSUdfRklMRV9PUFRJT05TIiwiTk9ERV9SRUdJT05fQ09ORklHX09QVElPTlMiLCJOT0RFX1VTRV9EVUFMU1RBQ0tfRU5EUE9JTlRfQ09ORklHX09QVElPTlMiLCJOT0RFX1VTRV9GSVBTX0VORFBPSU5UX0NPTkZJR19PUFRJT05TIiwiSGFzaCIsIk5PREVfTUFYX0FUVEVNUFRfQ09ORklHX09QVElPTlMiLCJOT0RFX1JFVFJZX01PREVfQ09ORklHX09QVElPTlMiLCJsb2FkQ29uZmlnIiwibG9hZE5vZGVDb25maWciLCJOb2RlSHR0cEhhbmRsZXIiLCJSZXF1ZXN0SGFuZGxlciIsInN0cmVhbUNvbGxlY3RvciIsImNhbGN1bGF0ZUJvZHlMZW5ndGgiLCJERUZBVUxUX1JFVFJZX01PREUiLCJnZXRSdW50aW1lQ29uZmlnIiwiZ2V0U2hhcmVkUnVudGltZUNvbmZpZyIsImxvYWRDb25maWdzRm9yRGVmYXVsdE1vZGUiLCJyZXNvbHZlRGVmYXVsdHNNb2RlQ29uZmlnIiwiY29uZmlnIiwicHJvY2VzcyIsInZlcnNpb24iLCJkZWZhdWx0c01vZGUiLCJkZWZhdWx0Q29uZmlnUHJvdmlkZXIiLCJ0aGVuIiwiY2xpZW50U2hhcmVkVmFsdWVzIiwicHJvZmlsZUNvbmZpZyIsInByb2ZpbGUiLCJydW50aW1lIiwiYm9keUxlbmd0aENoZWNrZXIiLCJkZWZhdWx0VXNlckFnZW50UHJvdmlkZXIiLCJzZXJ2aWNlSWQiLCJjbGllbnRWZXJzaW9uIiwibWF4QXR0ZW1wdHMiLCJyZWdpb24iLCJyZXF1ZXN0SGFuZGxlciIsImNyZWF0ZSIsInJldHJ5TW9kZSIsImRlZmF1bHQiLCJzaGEyNTYiLCJiaW5kIiwidXNlRHVhbHN0YWNrRW5kcG9pbnQiLCJ1c2VGaXBzRW5kcG9pbnQiLCJ1c2VyQWdlbnRBcHBJZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/runtimeConfig.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/runtimeConfig.shared.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/runtimeConfig.shared.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRuntimeConfig: () => (/* binding */ getRuntimeConfig)\n/* harmony export */ });\n/* harmony import */ var _aws_sdk_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @aws-sdk/core */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/AwsSdkSigV4Signer.js\");\n/* harmony import */ var _smithy_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @smithy/core */ \"(rsc)/./node_modules/@smithy/core/dist-es/index.js\");\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/./node_modules/@smithy/smithy-client/dist-cjs/index.js\");\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _smithy_url_parser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @smithy/url-parser */ \"(rsc)/./node_modules/@smithy/url-parser/dist-cjs/index.js\");\n/* harmony import */ var _smithy_url_parser__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_smithy_url_parser__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _smithy_util_base64__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @smithy/util-base64 */ \"(rsc)/./node_modules/@smithy/util-base64/dist-cjs/index.js\");\n/* harmony import */ var _smithy_util_base64__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_smithy_util_base64__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _smithy_util_utf8__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @smithy/util-utf8 */ \"(rsc)/./node_modules/@smithy/util-utf8/dist-cjs/index.js\");\n/* harmony import */ var _smithy_util_utf8__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_smithy_util_utf8__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _auth_httpAuthSchemeProvider__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./auth/httpAuthSchemeProvider */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/auth/httpAuthSchemeProvider.js\");\n/* harmony import */ var _endpoint_endpointResolver__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./endpoint/endpointResolver */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/endpoint/endpointResolver.js\");\n\n\n\n\n\n\n\n\nconst getRuntimeConfig = (config)=>{\n    return {\n        apiVersion: \"2019-06-10\",\n        base64Decoder: config?.base64Decoder ?? _smithy_util_base64__WEBPACK_IMPORTED_MODULE_3__.fromBase64,\n        base64Encoder: config?.base64Encoder ?? _smithy_util_base64__WEBPACK_IMPORTED_MODULE_3__.toBase64,\n        disableHostPrefix: config?.disableHostPrefix ?? false,\n        endpointProvider: config?.endpointProvider ?? _endpoint_endpointResolver__WEBPACK_IMPORTED_MODULE_6__.defaultEndpointResolver,\n        extensions: config?.extensions ?? [],\n        httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? _auth_httpAuthSchemeProvider__WEBPACK_IMPORTED_MODULE_5__.defaultSSOOIDCHttpAuthSchemeProvider,\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc)=>ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n                signer: new _aws_sdk_core__WEBPACK_IMPORTED_MODULE_7__.AwsSdkSigV4Signer()\n            },\n            {\n                schemeId: \"smithy.api#noAuth\",\n                identityProvider: (ipc)=>ipc.getIdentityProvider(\"smithy.api#noAuth\") || (async ()=>({})),\n                signer: new _smithy_core__WEBPACK_IMPORTED_MODULE_0__.NoAuthSigner()\n            }\n        ],\n        logger: config?.logger ?? new _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.NoOpLogger(),\n        serviceId: config?.serviceId ?? \"SSO OIDC\",\n        urlParser: config?.urlParser ?? _smithy_url_parser__WEBPACK_IMPORTED_MODULE_2__.parseUrl,\n        utf8Decoder: config?.utf8Decoder ?? _smithy_util_utf8__WEBPACK_IMPORTED_MODULE_4__.fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? _smithy_util_utf8__WEBPACK_IMPORTED_MODULE_4__.toUtf8\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3Nzby1vaWRjL3J1bnRpbWVDb25maWcuc2hhcmVkLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBa0Q7QUFDTjtBQUNPO0FBQ0w7QUFDYTtBQUNOO0FBQ2dDO0FBQ2Y7QUFDL0QsTUFBTVUsbUJBQW1CLENBQUNDO0lBQzdCLE9BQU87UUFDSEMsWUFBWTtRQUNaQyxlQUFlRixRQUFRRSxpQkFBaUJULDJEQUFVQTtRQUNsRFUsZUFBZUgsUUFBUUcsaUJBQWlCVCx5REFBUUE7UUFDaERVLG1CQUFtQkosUUFBUUkscUJBQXFCO1FBQ2hEQyxrQkFBa0JMLFFBQVFLLG9CQUFvQlAsK0VBQXVCQTtRQUNyRVEsWUFBWU4sUUFBUU0sY0FBYyxFQUFFO1FBQ3BDQyx3QkFBd0JQLFFBQVFPLDBCQUEwQlYsOEZBQW9DQTtRQUM5RlcsaUJBQWlCUixRQUFRUSxtQkFBbUI7WUFDeEM7Z0JBQ0lDLFVBQVU7Z0JBQ1ZDLGtCQUFrQixDQUFDQyxNQUFRQSxJQUFJQyxtQkFBbUIsQ0FBQztnQkFDbkRDLFFBQVEsSUFBSXhCLDREQUFpQkE7WUFDakM7WUFDQTtnQkFDSW9CLFVBQVU7Z0JBQ1ZDLGtCQUFrQixDQUFDQyxNQUFRQSxJQUFJQyxtQkFBbUIsQ0FBQyx3QkFBeUIsV0FBYSxFQUFDLEVBQUM7Z0JBQzNGQyxRQUFRLElBQUl2QixzREFBWUE7WUFDNUI7U0FDSDtRQUNEd0IsUUFBUWQsUUFBUWMsVUFBVSxJQUFJdkIsNkRBQVVBO1FBQ3hDd0IsV0FBV2YsUUFBUWUsYUFBYTtRQUNoQ0MsV0FBV2hCLFFBQVFnQixhQUFheEIsd0RBQVFBO1FBQ3hDeUIsYUFBYWpCLFFBQVFpQixlQUFldEIsdURBQVFBO1FBQzVDdUIsYUFBYWxCLFFBQVFrQixlQUFldEIscURBQU1BO0lBQzlDO0FBQ0osRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL2Nsb3Vkc2hpZnQvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3Nzby1vaWRjL3J1bnRpbWVDb25maWcuc2hhcmVkLmpzPzBkNmUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXdzU2RrU2lnVjRTaWduZXIgfSBmcm9tIFwiQGF3cy1zZGsvY29yZVwiO1xuaW1wb3J0IHsgTm9BdXRoU2lnbmVyIH0gZnJvbSBcIkBzbWl0aHkvY29yZVwiO1xuaW1wb3J0IHsgTm9PcExvZ2dlciB9IGZyb20gXCJAc21pdGh5L3NtaXRoeS1jbGllbnRcIjtcbmltcG9ydCB7IHBhcnNlVXJsIH0gZnJvbSBcIkBzbWl0aHkvdXJsLXBhcnNlclwiO1xuaW1wb3J0IHsgZnJvbUJhc2U2NCwgdG9CYXNlNjQgfSBmcm9tIFwiQHNtaXRoeS91dGlsLWJhc2U2NFwiO1xuaW1wb3J0IHsgZnJvbVV0ZjgsIHRvVXRmOCB9IGZyb20gXCJAc21pdGh5L3V0aWwtdXRmOFwiO1xuaW1wb3J0IHsgZGVmYXVsdFNTT09JRENIdHRwQXV0aFNjaGVtZVByb3ZpZGVyIH0gZnJvbSBcIi4vYXV0aC9odHRwQXV0aFNjaGVtZVByb3ZpZGVyXCI7XG5pbXBvcnQgeyBkZWZhdWx0RW5kcG9pbnRSZXNvbHZlciB9IGZyb20gXCIuL2VuZHBvaW50L2VuZHBvaW50UmVzb2x2ZXJcIjtcbmV4cG9ydCBjb25zdCBnZXRSdW50aW1lQ29uZmlnID0gKGNvbmZpZykgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICAgIGFwaVZlcnNpb246IFwiMjAxOS0wNi0xMFwiLFxuICAgICAgICBiYXNlNjREZWNvZGVyOiBjb25maWc/LmJhc2U2NERlY29kZXIgPz8gZnJvbUJhc2U2NCxcbiAgICAgICAgYmFzZTY0RW5jb2RlcjogY29uZmlnPy5iYXNlNjRFbmNvZGVyID8/IHRvQmFzZTY0LFxuICAgICAgICBkaXNhYmxlSG9zdFByZWZpeDogY29uZmlnPy5kaXNhYmxlSG9zdFByZWZpeCA/PyBmYWxzZSxcbiAgICAgICAgZW5kcG9pbnRQcm92aWRlcjogY29uZmlnPy5lbmRwb2ludFByb3ZpZGVyID8/IGRlZmF1bHRFbmRwb2ludFJlc29sdmVyLFxuICAgICAgICBleHRlbnNpb25zOiBjb25maWc/LmV4dGVuc2lvbnMgPz8gW10sXG4gICAgICAgIGh0dHBBdXRoU2NoZW1lUHJvdmlkZXI6IGNvbmZpZz8uaHR0cEF1dGhTY2hlbWVQcm92aWRlciA/PyBkZWZhdWx0U1NPT0lEQ0h0dHBBdXRoU2NoZW1lUHJvdmlkZXIsXG4gICAgICAgIGh0dHBBdXRoU2NoZW1lczogY29uZmlnPy5odHRwQXV0aFNjaGVtZXMgPz8gW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNjaGVtZUlkOiBcImF3cy5hdXRoI3NpZ3Y0XCIsXG4gICAgICAgICAgICAgICAgaWRlbnRpdHlQcm92aWRlcjogKGlwYykgPT4gaXBjLmdldElkZW50aXR5UHJvdmlkZXIoXCJhd3MuYXV0aCNzaWd2NFwiKSxcbiAgICAgICAgICAgICAgICBzaWduZXI6IG5ldyBBd3NTZGtTaWdWNFNpZ25lcigpLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzY2hlbWVJZDogXCJzbWl0aHkuYXBpI25vQXV0aFwiLFxuICAgICAgICAgICAgICAgIGlkZW50aXR5UHJvdmlkZXI6IChpcGMpID0+IGlwYy5nZXRJZGVudGl0eVByb3ZpZGVyKFwic21pdGh5LmFwaSNub0F1dGhcIikgfHwgKGFzeW5jICgpID0+ICh7fSkpLFxuICAgICAgICAgICAgICAgIHNpZ25lcjogbmV3IE5vQXV0aFNpZ25lcigpLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgXSxcbiAgICAgICAgbG9nZ2VyOiBjb25maWc/LmxvZ2dlciA/PyBuZXcgTm9PcExvZ2dlcigpLFxuICAgICAgICBzZXJ2aWNlSWQ6IGNvbmZpZz8uc2VydmljZUlkID8/IFwiU1NPIE9JRENcIixcbiAgICAgICAgdXJsUGFyc2VyOiBjb25maWc/LnVybFBhcnNlciA/PyBwYXJzZVVybCxcbiAgICAgICAgdXRmOERlY29kZXI6IGNvbmZpZz8udXRmOERlY29kZXIgPz8gZnJvbVV0ZjgsXG4gICAgICAgIHV0ZjhFbmNvZGVyOiBjb25maWc/LnV0ZjhFbmNvZGVyID8/IHRvVXRmOCxcbiAgICB9O1xufTtcbiJdLCJuYW1lcyI6WyJBd3NTZGtTaWdWNFNpZ25lciIsIk5vQXV0aFNpZ25lciIsIk5vT3BMb2dnZXIiLCJwYXJzZVVybCIsImZyb21CYXNlNjQiLCJ0b0Jhc2U2NCIsImZyb21VdGY4IiwidG9VdGY4IiwiZGVmYXVsdFNTT09JRENIdHRwQXV0aFNjaGVtZVByb3ZpZGVyIiwiZGVmYXVsdEVuZHBvaW50UmVzb2x2ZXIiLCJnZXRSdW50aW1lQ29uZmlnIiwiY29uZmlnIiwiYXBpVmVyc2lvbiIsImJhc2U2NERlY29kZXIiLCJiYXNlNjRFbmNvZGVyIiwiZGlzYWJsZUhvc3RQcmVmaXgiLCJlbmRwb2ludFByb3ZpZGVyIiwiZXh0ZW5zaW9ucyIsImh0dHBBdXRoU2NoZW1lUHJvdmlkZXIiLCJodHRwQXV0aFNjaGVtZXMiLCJzY2hlbWVJZCIsImlkZW50aXR5UHJvdmlkZXIiLCJpcGMiLCJnZXRJZGVudGl0eVByb3ZpZGVyIiwic2lnbmVyIiwibG9nZ2VyIiwic2VydmljZUlkIiwidXJsUGFyc2VyIiwidXRmOERlY29kZXIiLCJ1dGY4RW5jb2RlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/runtimeConfig.shared.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/runtimeExtensions.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/runtimeExtensions.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   resolveRuntimeExtensions: () => (/* binding */ resolveRuntimeExtensions)\n/* harmony export */ });\n/* harmony import */ var _aws_sdk_region_config_resolver__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/region-config-resolver */ \"(rsc)/./node_modules/@aws-sdk/region-config-resolver/dist-cjs/index.js\");\n/* harmony import */ var _aws_sdk_region_config_resolver__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_aws_sdk_region_config_resolver__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _smithy_protocol_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @smithy/protocol-http */ \"(rsc)/./node_modules/@smithy/protocol-http/dist-cjs/index.js\");\n/* harmony import */ var _smithy_protocol_http__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_smithy_protocol_http__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/./node_modules/@smithy/smithy-client/dist-cjs/index.js\");\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _auth_httpAuthExtensionConfiguration__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./auth/httpAuthExtensionConfiguration */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/auth/httpAuthExtensionConfiguration.js\");\n\n\n\n\nconst resolveRuntimeExtensions = (runtimeConfig, extensions)=>{\n    const extensionConfiguration = Object.assign((0,_aws_sdk_region_config_resolver__WEBPACK_IMPORTED_MODULE_0__.getAwsRegionExtensionConfiguration)(runtimeConfig), (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_2__.getDefaultExtensionConfiguration)(runtimeConfig), (0,_smithy_protocol_http__WEBPACK_IMPORTED_MODULE_1__.getHttpHandlerExtensionConfiguration)(runtimeConfig), (0,_auth_httpAuthExtensionConfiguration__WEBPACK_IMPORTED_MODULE_3__.getHttpAuthExtensionConfiguration)(runtimeConfig));\n    extensions.forEach((extension)=>extension.configure(extensionConfiguration));\n    return Object.assign(runtimeConfig, (0,_aws_sdk_region_config_resolver__WEBPACK_IMPORTED_MODULE_0__.resolveAwsRegionExtensionConfiguration)(extensionConfiguration), (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_2__.resolveDefaultRuntimeConfig)(extensionConfiguration), (0,_smithy_protocol_http__WEBPACK_IMPORTED_MODULE_1__.resolveHttpHandlerRuntimeConfig)(extensionConfiguration), (0,_auth_httpAuthExtensionConfiguration__WEBPACK_IMPORTED_MODULE_3__.resolveHttpAuthRuntimeConfig)(extensionConfiguration));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3Nzby1vaWRjL3J1bnRpbWVFeHRlbnNpb25zLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQThIO0FBQ2hCO0FBQ1I7QUFDa0I7QUFDakgsTUFBTVEsMkJBQTJCLENBQUNDLGVBQWVDO0lBQ3BELE1BQU1DLHlCQUF5QkMsT0FBT0MsTUFBTSxDQUFDYixtR0FBa0NBLENBQUNTLGdCQUFnQkwsdUZBQWdDQSxDQUFDSyxnQkFBZ0JQLDJGQUFvQ0EsQ0FBQ08sZ0JBQWdCSCx1R0FBaUNBLENBQUNHO0lBQ3hPQyxXQUFXSSxPQUFPLENBQUMsQ0FBQ0MsWUFBY0EsVUFBVUMsU0FBUyxDQUFDTDtJQUN0RCxPQUFPQyxPQUFPQyxNQUFNLENBQUNKLGVBQWVSLHVHQUFzQ0EsQ0FBQ1UseUJBQXlCTixrRkFBMkJBLENBQUNNLHlCQUF5QlIsc0ZBQStCQSxDQUFDUSx5QkFBeUJKLGtHQUE0QkEsQ0FBQ0k7QUFDblAsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL2Nsb3Vkc2hpZnQvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3Nzby1vaWRjL3J1bnRpbWVFeHRlbnNpb25zLmpzP2MwN2QiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0QXdzUmVnaW9uRXh0ZW5zaW9uQ29uZmlndXJhdGlvbiwgcmVzb2x2ZUF3c1JlZ2lvbkV4dGVuc2lvbkNvbmZpZ3VyYXRpb24sIH0gZnJvbSBcIkBhd3Mtc2RrL3JlZ2lvbi1jb25maWctcmVzb2x2ZXJcIjtcbmltcG9ydCB7IGdldEh0dHBIYW5kbGVyRXh0ZW5zaW9uQ29uZmlndXJhdGlvbiwgcmVzb2x2ZUh0dHBIYW5kbGVyUnVudGltZUNvbmZpZyB9IGZyb20gXCJAc21pdGh5L3Byb3RvY29sLWh0dHBcIjtcbmltcG9ydCB7IGdldERlZmF1bHRFeHRlbnNpb25Db25maWd1cmF0aW9uLCByZXNvbHZlRGVmYXVsdFJ1bnRpbWVDb25maWcgfSBmcm9tIFwiQHNtaXRoeS9zbWl0aHktY2xpZW50XCI7XG5pbXBvcnQgeyBnZXRIdHRwQXV0aEV4dGVuc2lvbkNvbmZpZ3VyYXRpb24sIHJlc29sdmVIdHRwQXV0aFJ1bnRpbWVDb25maWcgfSBmcm9tIFwiLi9hdXRoL2h0dHBBdXRoRXh0ZW5zaW9uQ29uZmlndXJhdGlvblwiO1xuZXhwb3J0IGNvbnN0IHJlc29sdmVSdW50aW1lRXh0ZW5zaW9ucyA9IChydW50aW1lQ29uZmlnLCBleHRlbnNpb25zKSA9PiB7XG4gICAgY29uc3QgZXh0ZW5zaW9uQ29uZmlndXJhdGlvbiA9IE9iamVjdC5hc3NpZ24oZ2V0QXdzUmVnaW9uRXh0ZW5zaW9uQ29uZmlndXJhdGlvbihydW50aW1lQ29uZmlnKSwgZ2V0RGVmYXVsdEV4dGVuc2lvbkNvbmZpZ3VyYXRpb24ocnVudGltZUNvbmZpZyksIGdldEh0dHBIYW5kbGVyRXh0ZW5zaW9uQ29uZmlndXJhdGlvbihydW50aW1lQ29uZmlnKSwgZ2V0SHR0cEF1dGhFeHRlbnNpb25Db25maWd1cmF0aW9uKHJ1bnRpbWVDb25maWcpKTtcbiAgICBleHRlbnNpb25zLmZvckVhY2goKGV4dGVuc2lvbikgPT4gZXh0ZW5zaW9uLmNvbmZpZ3VyZShleHRlbnNpb25Db25maWd1cmF0aW9uKSk7XG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24ocnVudGltZUNvbmZpZywgcmVzb2x2ZUF3c1JlZ2lvbkV4dGVuc2lvbkNvbmZpZ3VyYXRpb24oZXh0ZW5zaW9uQ29uZmlndXJhdGlvbiksIHJlc29sdmVEZWZhdWx0UnVudGltZUNvbmZpZyhleHRlbnNpb25Db25maWd1cmF0aW9uKSwgcmVzb2x2ZUh0dHBIYW5kbGVyUnVudGltZUNvbmZpZyhleHRlbnNpb25Db25maWd1cmF0aW9uKSwgcmVzb2x2ZUh0dHBBdXRoUnVudGltZUNvbmZpZyhleHRlbnNpb25Db25maWd1cmF0aW9uKSk7XG59O1xuIl0sIm5hbWVzIjpbImdldEF3c1JlZ2lvbkV4dGVuc2lvbkNvbmZpZ3VyYXRpb24iLCJyZXNvbHZlQXdzUmVnaW9uRXh0ZW5zaW9uQ29uZmlndXJhdGlvbiIsImdldEh0dHBIYW5kbGVyRXh0ZW5zaW9uQ29uZmlndXJhdGlvbiIsInJlc29sdmVIdHRwSGFuZGxlclJ1bnRpbWVDb25maWciLCJnZXREZWZhdWx0RXh0ZW5zaW9uQ29uZmlndXJhdGlvbiIsInJlc29sdmVEZWZhdWx0UnVudGltZUNvbmZpZyIsImdldEh0dHBBdXRoRXh0ZW5zaW9uQ29uZmlndXJhdGlvbiIsInJlc29sdmVIdHRwQXV0aFJ1bnRpbWVDb25maWciLCJyZXNvbHZlUnVudGltZUV4dGVuc2lvbnMiLCJydW50aW1lQ29uZmlnIiwiZXh0ZW5zaW9ucyIsImV4dGVuc2lvbkNvbmZpZ3VyYXRpb24iLCJPYmplY3QiLCJhc3NpZ24iLCJmb3JFYWNoIiwiZXh0ZW5zaW9uIiwiY29uZmlndXJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/runtimeExtensions.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/STS.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/STS.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   STS: () => (/* binding */ STS)\n/* harmony export */ });\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/./node_modules/@smithy/smithy-client/dist-cjs/index.js\");\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _commands_AssumeRoleCommand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./commands/AssumeRoleCommand */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/commands/AssumeRoleCommand.js\");\n/* harmony import */ var _commands_AssumeRoleWithWebIdentityCommand__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./commands/AssumeRoleWithWebIdentityCommand */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/commands/AssumeRoleWithWebIdentityCommand.js\");\n/* harmony import */ var _STSClient__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./STSClient */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/STSClient.js\");\n\n\n\n\nconst commands = {\n    AssumeRoleCommand: _commands_AssumeRoleCommand__WEBPACK_IMPORTED_MODULE_1__.AssumeRoleCommand,\n    AssumeRoleWithWebIdentityCommand: _commands_AssumeRoleWithWebIdentityCommand__WEBPACK_IMPORTED_MODULE_2__.AssumeRoleWithWebIdentityCommand\n};\nclass STS extends _STSClient__WEBPACK_IMPORTED_MODULE_3__.STSClient {\n}\n(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.createAggregatedClient)(commands, STS);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3N0cy9TVFMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQStEO0FBQ0U7QUFDK0I7QUFDeEQ7QUFDeEMsTUFBTUksV0FBVztJQUNiSCxpQkFBaUJBLDRFQUFBQTtJQUNqQkMsZ0NBQWdDQSwwR0FBQUE7QUFDcEM7QUFDTyxNQUFNRyxZQUFZRixpREFBU0E7QUFDbEM7QUFDQUgsNkVBQXNCQSxDQUFDSSxVQUFVQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Nsb3Vkc2hpZnQvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3N0cy9TVFMuanM/MDIwNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVBZ2dyZWdhdGVkQ2xpZW50IH0gZnJvbSBcIkBzbWl0aHkvc21pdGh5LWNsaWVudFwiO1xuaW1wb3J0IHsgQXNzdW1lUm9sZUNvbW1hbmQgfSBmcm9tIFwiLi9jb21tYW5kcy9Bc3N1bWVSb2xlQ29tbWFuZFwiO1xuaW1wb3J0IHsgQXNzdW1lUm9sZVdpdGhXZWJJZGVudGl0eUNvbW1hbmQsIH0gZnJvbSBcIi4vY29tbWFuZHMvQXNzdW1lUm9sZVdpdGhXZWJJZGVudGl0eUNvbW1hbmRcIjtcbmltcG9ydCB7IFNUU0NsaWVudCB9IGZyb20gXCIuL1NUU0NsaWVudFwiO1xuY29uc3QgY29tbWFuZHMgPSB7XG4gICAgQXNzdW1lUm9sZUNvbW1hbmQsXG4gICAgQXNzdW1lUm9sZVdpdGhXZWJJZGVudGl0eUNvbW1hbmQsXG59O1xuZXhwb3J0IGNsYXNzIFNUUyBleHRlbmRzIFNUU0NsaWVudCB7XG59XG5jcmVhdGVBZ2dyZWdhdGVkQ2xpZW50KGNvbW1hbmRzLCBTVFMpO1xuIl0sIm5hbWVzIjpbImNyZWF0ZUFnZ3JlZ2F0ZWRDbGllbnQiLCJBc3N1bWVSb2xlQ29tbWFuZCIsIkFzc3VtZVJvbGVXaXRoV2ViSWRlbnRpdHlDb21tYW5kIiwiU1RTQ2xpZW50IiwiY29tbWFuZHMiLCJTVFMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/STS.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/STSClient.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/STSClient.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   STSClient: () => (/* binding */ STSClient),\n/* harmony export */   __Client: () => (/* reexport safe */ _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_9__.Client)\n/* harmony export */ });\n/* harmony import */ var _aws_sdk_middleware_host_header__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/middleware-host-header */ \"(rsc)/./node_modules/@aws-sdk/middleware-host-header/dist-cjs/index.js\");\n/* harmony import */ var _aws_sdk_middleware_host_header__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_aws_sdk_middleware_host_header__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _aws_sdk_middleware_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/middleware-logger */ \"(rsc)/./node_modules/@aws-sdk/middleware-logger/dist-cjs/index.js\");\n/* harmony import */ var _aws_sdk_middleware_logger__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_aws_sdk_middleware_logger__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _aws_sdk_middleware_recursion_detection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/middleware-recursion-detection */ \"(rsc)/./node_modules/@aws-sdk/middleware-recursion-detection/dist-cjs/index.js\");\n/* harmony import */ var _aws_sdk_middleware_recursion_detection__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_aws_sdk_middleware_recursion_detection__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _aws_sdk_middleware_user_agent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aws-sdk/middleware-user-agent */ \"(rsc)/./node_modules/@aws-sdk/middleware-user-agent/dist-cjs/index.js\");\n/* harmony import */ var _aws_sdk_middleware_user_agent__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_aws_sdk_middleware_user_agent__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _smithy_config_resolver__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @smithy/config-resolver */ \"(rsc)/./node_modules/@smithy/config-resolver/dist-cjs/index.js\");\n/* harmony import */ var _smithy_config_resolver__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_smithy_config_resolver__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _smithy_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @smithy/core */ \"(rsc)/./node_modules/@smithy/core/dist-es/index.js\");\n/* harmony import */ var _smithy_middleware_content_length__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @smithy/middleware-content-length */ \"(rsc)/./node_modules/@smithy/middleware-content-length/dist-cjs/index.js\");\n/* harmony import */ var _smithy_middleware_content_length__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_smithy_middleware_content_length__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _smithy_middleware_endpoint__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @smithy/middleware-endpoint */ \"(rsc)/./node_modules/@smithy/middleware-endpoint/dist-cjs/index.js\");\n/* harmony import */ var _smithy_middleware_endpoint__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_smithy_middleware_endpoint__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _smithy_middleware_retry__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @smithy/middleware-retry */ \"(rsc)/./node_modules/@smithy/middleware-retry/dist-cjs/index.js\");\n/* harmony import */ var _smithy_middleware_retry__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_smithy_middleware_retry__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/./node_modules/@smithy/smithy-client/dist-cjs/index.js\");\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _auth_httpAuthSchemeProvider__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./auth/httpAuthSchemeProvider */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/auth/httpAuthSchemeProvider.js\");\n/* harmony import */ var _endpoint_EndpointParameters__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./endpoint/EndpointParameters */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/endpoint/EndpointParameters.js\");\n/* harmony import */ var _runtimeConfig__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./runtimeConfig */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/runtimeConfig.js\");\n/* harmony import */ var _runtimeExtensions__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./runtimeExtensions */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/runtimeExtensions.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass STSClient extends _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_9__.Client {\n    constructor(...[configuration]){\n        const _config_0 = (0,_runtimeConfig__WEBPACK_IMPORTED_MODULE_12__.getRuntimeConfig)(configuration || {});\n        super(_config_0);\n        this.initConfig = _config_0;\n        const _config_1 = (0,_endpoint_EndpointParameters__WEBPACK_IMPORTED_MODULE_11__.resolveClientEndpointParameters)(_config_0);\n        const _config_2 = (0,_aws_sdk_middleware_user_agent__WEBPACK_IMPORTED_MODULE_3__.resolveUserAgentConfig)(_config_1);\n        const _config_3 = (0,_smithy_middleware_retry__WEBPACK_IMPORTED_MODULE_8__.resolveRetryConfig)(_config_2);\n        const _config_4 = (0,_smithy_config_resolver__WEBPACK_IMPORTED_MODULE_4__.resolveRegionConfig)(_config_3);\n        const _config_5 = (0,_aws_sdk_middleware_host_header__WEBPACK_IMPORTED_MODULE_0__.resolveHostHeaderConfig)(_config_4);\n        const _config_6 = (0,_smithy_middleware_endpoint__WEBPACK_IMPORTED_MODULE_7__.resolveEndpointConfig)(_config_5);\n        const _config_7 = (0,_auth_httpAuthSchemeProvider__WEBPACK_IMPORTED_MODULE_10__.resolveHttpAuthSchemeConfig)(_config_6);\n        const _config_8 = (0,_runtimeExtensions__WEBPACK_IMPORTED_MODULE_13__.resolveRuntimeExtensions)(_config_7, configuration?.extensions || []);\n        this.config = _config_8;\n        this.middlewareStack.use((0,_aws_sdk_middleware_user_agent__WEBPACK_IMPORTED_MODULE_3__.getUserAgentPlugin)(this.config));\n        this.middlewareStack.use((0,_smithy_middleware_retry__WEBPACK_IMPORTED_MODULE_8__.getRetryPlugin)(this.config));\n        this.middlewareStack.use((0,_smithy_middleware_content_length__WEBPACK_IMPORTED_MODULE_6__.getContentLengthPlugin)(this.config));\n        this.middlewareStack.use((0,_aws_sdk_middleware_host_header__WEBPACK_IMPORTED_MODULE_0__.getHostHeaderPlugin)(this.config));\n        this.middlewareStack.use((0,_aws_sdk_middleware_logger__WEBPACK_IMPORTED_MODULE_1__.getLoggerPlugin)(this.config));\n        this.middlewareStack.use((0,_aws_sdk_middleware_recursion_detection__WEBPACK_IMPORTED_MODULE_2__.getRecursionDetectionPlugin)(this.config));\n        this.middlewareStack.use((0,_smithy_core__WEBPACK_IMPORTED_MODULE_5__.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {\n            httpAuthSchemeParametersProvider: _auth_httpAuthSchemeProvider__WEBPACK_IMPORTED_MODULE_10__.defaultSTSHttpAuthSchemeParametersProvider,\n            identityProviderConfigProvider: async (config)=>new _smithy_core__WEBPACK_IMPORTED_MODULE_5__.DefaultIdentityProviderConfig({\n                    \"aws.auth#sigv4\": config.credentials\n                })\n        }));\n        this.middlewareStack.use((0,_smithy_core__WEBPACK_IMPORTED_MODULE_5__.getHttpSigningPlugin)(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3N0cy9TVFNDbGllbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFnRztBQUNuQztBQUN5QjtBQUNPO0FBQy9CO0FBQzhEO0FBQ2pEO0FBQ1A7QUFDVTtBQUNsQjtBQUM2RDtBQUN4QztBQUNSO0FBQ1Y7QUFDM0M7QUFDYixNQUFNc0Isa0JBQWtCUCx5REFBUUE7SUFFbkNRLFlBQVksR0FBRyxDQUFDQyxjQUFjLENBQUU7UUFDNUIsTUFBTUMsWUFBWUwsaUVBQWtCQSxDQUFDSSxpQkFBaUIsQ0FBQztRQUN2RCxLQUFLLENBQUNDO1FBQ04sSUFBSSxDQUFDQyxVQUFVLEdBQUdEO1FBQ2xCLE1BQU1FLFlBQVlULDhGQUErQkEsQ0FBQ087UUFDbEQsTUFBTUcsWUFBWXZCLHNGQUFzQkEsQ0FBQ3NCO1FBQ3pDLE1BQU1FLFlBQVloQiw0RUFBa0JBLENBQUNlO1FBQ3JDLE1BQU1FLFlBQVl4Qiw0RUFBbUJBLENBQUN1QjtRQUN0QyxNQUFNRSxZQUFZOUIsd0ZBQXVCQSxDQUFDNkI7UUFDMUMsTUFBTUUsWUFBWXJCLGtGQUFxQkEsQ0FBQ29CO1FBQ3hDLE1BQU1FLFlBQVloQiwwRkFBMkJBLENBQUNlO1FBQzlDLE1BQU1FLFlBQVliLDZFQUF3QkEsQ0FBQ1ksV0FBV1QsZUFBZVcsY0FBYyxFQUFFO1FBQ3JGLElBQUksQ0FBQ0MsTUFBTSxHQUFHRjtRQUNkLElBQUksQ0FBQ0csZUFBZSxDQUFDQyxHQUFHLENBQUNsQyxrRkFBa0JBLENBQUMsSUFBSSxDQUFDZ0MsTUFBTTtRQUN2RCxJQUFJLENBQUNDLGVBQWUsQ0FBQ0MsR0FBRyxDQUFDMUIsd0VBQWNBLENBQUMsSUFBSSxDQUFDd0IsTUFBTTtRQUNuRCxJQUFJLENBQUNDLGVBQWUsQ0FBQ0MsR0FBRyxDQUFDNUIseUZBQXNCQSxDQUFDLElBQUksQ0FBQzBCLE1BQU07UUFDM0QsSUFBSSxDQUFDQyxlQUFlLENBQUNDLEdBQUcsQ0FBQ3RDLG9GQUFtQkEsQ0FBQyxJQUFJLENBQUNvQyxNQUFNO1FBQ3hELElBQUksQ0FBQ0MsZUFBZSxDQUFDQyxHQUFHLENBQUNwQywyRUFBZUEsQ0FBQyxJQUFJLENBQUNrQyxNQUFNO1FBQ3BELElBQUksQ0FBQ0MsZUFBZSxDQUFDQyxHQUFHLENBQUNuQyxvR0FBMkJBLENBQUMsSUFBSSxDQUFDaUMsTUFBTTtRQUNoRSxJQUFJLENBQUNDLGVBQWUsQ0FBQ0MsR0FBRyxDQUFDOUIsb0ZBQXNDQSxDQUFDLElBQUksQ0FBQzRCLE1BQU0sRUFBRTtZQUN6RUcsa0NBQWtDdkIscUdBQTBDQTtZQUM1RXdCLGdDQUFnQyxPQUFPSixTQUFXLElBQUk3Qix1RUFBNkJBLENBQUM7b0JBQ2hGLGtCQUFrQjZCLE9BQU9LLFdBQVc7Z0JBQ3hDO1FBQ0o7UUFDQSxJQUFJLENBQUNKLGVBQWUsQ0FBQ0MsR0FBRyxDQUFDN0Isa0VBQW9CQSxDQUFDLElBQUksQ0FBQzJCLE1BQU07SUFDN0Q7SUFDQU0sVUFBVTtRQUNOLEtBQUssQ0FBQ0E7SUFDVjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xvdWRzaGlmdC8uL25vZGVfbW9kdWxlcy9AYXdzLXNkay9uZXN0ZWQtY2xpZW50cy9kaXN0LWVzL3N1Ym1vZHVsZXMvc3RzL1NUU0NsaWVudC5qcz80OTllIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldEhvc3RIZWFkZXJQbHVnaW4sIHJlc29sdmVIb3N0SGVhZGVyQ29uZmlnLCB9IGZyb20gXCJAYXdzLXNkay9taWRkbGV3YXJlLWhvc3QtaGVhZGVyXCI7XG5pbXBvcnQgeyBnZXRMb2dnZXJQbHVnaW4gfSBmcm9tIFwiQGF3cy1zZGsvbWlkZGxld2FyZS1sb2dnZXJcIjtcbmltcG9ydCB7IGdldFJlY3Vyc2lvbkRldGVjdGlvblBsdWdpbiB9IGZyb20gXCJAYXdzLXNkay9taWRkbGV3YXJlLXJlY3Vyc2lvbi1kZXRlY3Rpb25cIjtcbmltcG9ydCB7IGdldFVzZXJBZ2VudFBsdWdpbiwgcmVzb2x2ZVVzZXJBZ2VudENvbmZpZywgfSBmcm9tIFwiQGF3cy1zZGsvbWlkZGxld2FyZS11c2VyLWFnZW50XCI7XG5pbXBvcnQgeyByZXNvbHZlUmVnaW9uQ29uZmlnIH0gZnJvbSBcIkBzbWl0aHkvY29uZmlnLXJlc29sdmVyXCI7XG5pbXBvcnQgeyBEZWZhdWx0SWRlbnRpdHlQcm92aWRlckNvbmZpZywgZ2V0SHR0cEF1dGhTY2hlbWVFbmRwb2ludFJ1bGVTZXRQbHVnaW4sIGdldEh0dHBTaWduaW5nUGx1Z2luLCB9IGZyb20gXCJAc21pdGh5L2NvcmVcIjtcbmltcG9ydCB7IGdldENvbnRlbnRMZW5ndGhQbHVnaW4gfSBmcm9tIFwiQHNtaXRoeS9taWRkbGV3YXJlLWNvbnRlbnQtbGVuZ3RoXCI7XG5pbXBvcnQgeyByZXNvbHZlRW5kcG9pbnRDb25maWcgfSBmcm9tIFwiQHNtaXRoeS9taWRkbGV3YXJlLWVuZHBvaW50XCI7XG5pbXBvcnQgeyBnZXRSZXRyeVBsdWdpbiwgcmVzb2x2ZVJldHJ5Q29uZmlnIH0gZnJvbSBcIkBzbWl0aHkvbWlkZGxld2FyZS1yZXRyeVwiO1xuaW1wb3J0IHsgQ2xpZW50IGFzIF9fQ2xpZW50LCB9IGZyb20gXCJAc21pdGh5L3NtaXRoeS1jbGllbnRcIjtcbmltcG9ydCB7IGRlZmF1bHRTVFNIdHRwQXV0aFNjaGVtZVBhcmFtZXRlcnNQcm92aWRlciwgcmVzb2x2ZUh0dHBBdXRoU2NoZW1lQ29uZmlnLCB9IGZyb20gXCIuL2F1dGgvaHR0cEF1dGhTY2hlbWVQcm92aWRlclwiO1xuaW1wb3J0IHsgcmVzb2x2ZUNsaWVudEVuZHBvaW50UGFyYW1ldGVycywgfSBmcm9tIFwiLi9lbmRwb2ludC9FbmRwb2ludFBhcmFtZXRlcnNcIjtcbmltcG9ydCB7IGdldFJ1bnRpbWVDb25maWcgYXMgX19nZXRSdW50aW1lQ29uZmlnIH0gZnJvbSBcIi4vcnVudGltZUNvbmZpZ1wiO1xuaW1wb3J0IHsgcmVzb2x2ZVJ1bnRpbWVFeHRlbnNpb25zIH0gZnJvbSBcIi4vcnVudGltZUV4dGVuc2lvbnNcIjtcbmV4cG9ydCB7IF9fQ2xpZW50IH07XG5leHBvcnQgY2xhc3MgU1RTQ2xpZW50IGV4dGVuZHMgX19DbGllbnQge1xuICAgIGNvbmZpZztcbiAgICBjb25zdHJ1Y3RvciguLi5bY29uZmlndXJhdGlvbl0pIHtcbiAgICAgICAgY29uc3QgX2NvbmZpZ18wID0gX19nZXRSdW50aW1lQ29uZmlnKGNvbmZpZ3VyYXRpb24gfHwge30pO1xuICAgICAgICBzdXBlcihfY29uZmlnXzApO1xuICAgICAgICB0aGlzLmluaXRDb25maWcgPSBfY29uZmlnXzA7XG4gICAgICAgIGNvbnN0IF9jb25maWdfMSA9IHJlc29sdmVDbGllbnRFbmRwb2ludFBhcmFtZXRlcnMoX2NvbmZpZ18wKTtcbiAgICAgICAgY29uc3QgX2NvbmZpZ18yID0gcmVzb2x2ZVVzZXJBZ2VudENvbmZpZyhfY29uZmlnXzEpO1xuICAgICAgICBjb25zdCBfY29uZmlnXzMgPSByZXNvbHZlUmV0cnlDb25maWcoX2NvbmZpZ18yKTtcbiAgICAgICAgY29uc3QgX2NvbmZpZ180ID0gcmVzb2x2ZVJlZ2lvbkNvbmZpZyhfY29uZmlnXzMpO1xuICAgICAgICBjb25zdCBfY29uZmlnXzUgPSByZXNvbHZlSG9zdEhlYWRlckNvbmZpZyhfY29uZmlnXzQpO1xuICAgICAgICBjb25zdCBfY29uZmlnXzYgPSByZXNvbHZlRW5kcG9pbnRDb25maWcoX2NvbmZpZ181KTtcbiAgICAgICAgY29uc3QgX2NvbmZpZ183ID0gcmVzb2x2ZUh0dHBBdXRoU2NoZW1lQ29uZmlnKF9jb25maWdfNik7XG4gICAgICAgIGNvbnN0IF9jb25maWdfOCA9IHJlc29sdmVSdW50aW1lRXh0ZW5zaW9ucyhfY29uZmlnXzcsIGNvbmZpZ3VyYXRpb24/LmV4dGVuc2lvbnMgfHwgW10pO1xuICAgICAgICB0aGlzLmNvbmZpZyA9IF9jb25maWdfODtcbiAgICAgICAgdGhpcy5taWRkbGV3YXJlU3RhY2sudXNlKGdldFVzZXJBZ2VudFBsdWdpbih0aGlzLmNvbmZpZykpO1xuICAgICAgICB0aGlzLm1pZGRsZXdhcmVTdGFjay51c2UoZ2V0UmV0cnlQbHVnaW4odGhpcy5jb25maWcpKTtcbiAgICAgICAgdGhpcy5taWRkbGV3YXJlU3RhY2sudXNlKGdldENvbnRlbnRMZW5ndGhQbHVnaW4odGhpcy5jb25maWcpKTtcbiAgICAgICAgdGhpcy5taWRkbGV3YXJlU3RhY2sudXNlKGdldEhvc3RIZWFkZXJQbHVnaW4odGhpcy5jb25maWcpKTtcbiAgICAgICAgdGhpcy5taWRkbGV3YXJlU3RhY2sudXNlKGdldExvZ2dlclBsdWdpbih0aGlzLmNvbmZpZykpO1xuICAgICAgICB0aGlzLm1pZGRsZXdhcmVTdGFjay51c2UoZ2V0UmVjdXJzaW9uRGV0ZWN0aW9uUGx1Z2luKHRoaXMuY29uZmlnKSk7XG4gICAgICAgIHRoaXMubWlkZGxld2FyZVN0YWNrLnVzZShnZXRIdHRwQXV0aFNjaGVtZUVuZHBvaW50UnVsZVNldFBsdWdpbih0aGlzLmNvbmZpZywge1xuICAgICAgICAgICAgaHR0cEF1dGhTY2hlbWVQYXJhbWV0ZXJzUHJvdmlkZXI6IGRlZmF1bHRTVFNIdHRwQXV0aFNjaGVtZVBhcmFtZXRlcnNQcm92aWRlcixcbiAgICAgICAgICAgIGlkZW50aXR5UHJvdmlkZXJDb25maWdQcm92aWRlcjogYXN5bmMgKGNvbmZpZykgPT4gbmV3IERlZmF1bHRJZGVudGl0eVByb3ZpZGVyQ29uZmlnKHtcbiAgICAgICAgICAgICAgICBcImF3cy5hdXRoI3NpZ3Y0XCI6IGNvbmZpZy5jcmVkZW50aWFscyxcbiAgICAgICAgICAgIH0pLFxuICAgICAgICB9KSk7XG4gICAgICAgIHRoaXMubWlkZGxld2FyZVN0YWNrLnVzZShnZXRIdHRwU2lnbmluZ1BsdWdpbih0aGlzLmNvbmZpZykpO1xuICAgIH1cbiAgICBkZXN0cm95KCkge1xuICAgICAgICBzdXBlci5kZXN0cm95KCk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbImdldEhvc3RIZWFkZXJQbHVnaW4iLCJyZXNvbHZlSG9zdEhlYWRlckNvbmZpZyIsImdldExvZ2dlclBsdWdpbiIsImdldFJlY3Vyc2lvbkRldGVjdGlvblBsdWdpbiIsImdldFVzZXJBZ2VudFBsdWdpbiIsInJlc29sdmVVc2VyQWdlbnRDb25maWciLCJyZXNvbHZlUmVnaW9uQ29uZmlnIiwiRGVmYXVsdElkZW50aXR5UHJvdmlkZXJDb25maWciLCJnZXRIdHRwQXV0aFNjaGVtZUVuZHBvaW50UnVsZVNldFBsdWdpbiIsImdldEh0dHBTaWduaW5nUGx1Z2luIiwiZ2V0Q29udGVudExlbmd0aFBsdWdpbiIsInJlc29sdmVFbmRwb2ludENvbmZpZyIsImdldFJldHJ5UGx1Z2luIiwicmVzb2x2ZVJldHJ5Q29uZmlnIiwiQ2xpZW50IiwiX19DbGllbnQiLCJkZWZhdWx0U1RTSHR0cEF1dGhTY2hlbWVQYXJhbWV0ZXJzUHJvdmlkZXIiLCJyZXNvbHZlSHR0cEF1dGhTY2hlbWVDb25maWciLCJyZXNvbHZlQ2xpZW50RW5kcG9pbnRQYXJhbWV0ZXJzIiwiZ2V0UnVudGltZUNvbmZpZyIsIl9fZ2V0UnVudGltZUNvbmZpZyIsInJlc29sdmVSdW50aW1lRXh0ZW5zaW9ucyIsIlNUU0NsaWVudCIsImNvbnN0cnVjdG9yIiwiY29uZmlndXJhdGlvbiIsIl9jb25maWdfMCIsImluaXRDb25maWciLCJfY29uZmlnXzEiLCJfY29uZmlnXzIiLCJfY29uZmlnXzMiLCJfY29uZmlnXzQiLCJfY29uZmlnXzUiLCJfY29uZmlnXzYiLCJfY29uZmlnXzciLCJfY29uZmlnXzgiLCJleHRlbnNpb25zIiwiY29uZmlnIiwibWlkZGxld2FyZVN0YWNrIiwidXNlIiwiaHR0cEF1dGhTY2hlbWVQYXJhbWV0ZXJzUHJvdmlkZXIiLCJpZGVudGl0eVByb3ZpZGVyQ29uZmlnUHJvdmlkZXIiLCJjcmVkZW50aWFscyIsImRlc3Ryb3kiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/STSClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/auth/httpAuthExtensionConfiguration.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/auth/httpAuthExtensionConfiguration.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getHttpAuthExtensionConfiguration: () => (/* binding */ getHttpAuthExtensionConfiguration),\n/* harmony export */   resolveHttpAuthRuntimeConfig: () => (/* binding */ resolveHttpAuthRuntimeConfig)\n/* harmony export */ });\nconst getHttpAuthExtensionConfiguration = (runtimeConfig)=>{\n    const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;\n    let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;\n    let _credentials = runtimeConfig.credentials;\n    return {\n        setHttpAuthScheme (httpAuthScheme) {\n            const index = _httpAuthSchemes.findIndex((scheme)=>scheme.schemeId === httpAuthScheme.schemeId);\n            if (index === -1) {\n                _httpAuthSchemes.push(httpAuthScheme);\n            } else {\n                _httpAuthSchemes.splice(index, 1, httpAuthScheme);\n            }\n        },\n        httpAuthSchemes () {\n            return _httpAuthSchemes;\n        },\n        setHttpAuthSchemeProvider (httpAuthSchemeProvider) {\n            _httpAuthSchemeProvider = httpAuthSchemeProvider;\n        },\n        httpAuthSchemeProvider () {\n            return _httpAuthSchemeProvider;\n        },\n        setCredentials (credentials) {\n            _credentials = credentials;\n        },\n        credentials () {\n            return _credentials;\n        }\n    };\n};\nconst resolveHttpAuthRuntimeConfig = (config)=>{\n    return {\n        httpAuthSchemes: config.httpAuthSchemes(),\n        httpAuthSchemeProvider: config.httpAuthSchemeProvider(),\n        credentials: config.credentials()\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3N0cy9hdXRoL2h0dHBBdXRoRXh0ZW5zaW9uQ29uZmlndXJhdGlvbi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFPLE1BQU1BLG9DQUFvQyxDQUFDQztJQUM5QyxNQUFNQyxtQkFBbUJELGNBQWNFLGVBQWU7SUFDdEQsSUFBSUMsMEJBQTBCSCxjQUFjSSxzQkFBc0I7SUFDbEUsSUFBSUMsZUFBZUwsY0FBY00sV0FBVztJQUM1QyxPQUFPO1FBQ0hDLG1CQUFrQkMsY0FBYztZQUM1QixNQUFNQyxRQUFRUixpQkFBaUJTLFNBQVMsQ0FBQyxDQUFDQyxTQUFXQSxPQUFPQyxRQUFRLEtBQUtKLGVBQWVJLFFBQVE7WUFDaEcsSUFBSUgsVUFBVSxDQUFDLEdBQUc7Z0JBQ2RSLGlCQUFpQlksSUFBSSxDQUFDTDtZQUMxQixPQUNLO2dCQUNEUCxpQkFBaUJhLE1BQU0sQ0FBQ0wsT0FBTyxHQUFHRDtZQUN0QztRQUNKO1FBQ0FOO1lBQ0ksT0FBT0Q7UUFDWDtRQUNBYywyQkFBMEJYLHNCQUFzQjtZQUM1Q0QsMEJBQTBCQztRQUM5QjtRQUNBQTtZQUNJLE9BQU9EO1FBQ1g7UUFDQWEsZ0JBQWVWLFdBQVc7WUFDdEJELGVBQWVDO1FBQ25CO1FBQ0FBO1lBQ0ksT0FBT0Q7UUFDWDtJQUNKO0FBQ0osRUFBRTtBQUNLLE1BQU1ZLCtCQUErQixDQUFDQztJQUN6QyxPQUFPO1FBQ0hoQixpQkFBaUJnQixPQUFPaEIsZUFBZTtRQUN2Q0Usd0JBQXdCYyxPQUFPZCxzQkFBc0I7UUFDckRFLGFBQWFZLE9BQU9aLFdBQVc7SUFDbkM7QUFDSixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xvdWRzaGlmdC8uL25vZGVfbW9kdWxlcy9AYXdzLXNkay9uZXN0ZWQtY2xpZW50cy9kaXN0LWVzL3N1Ym1vZHVsZXMvc3RzL2F1dGgvaHR0cEF1dGhFeHRlbnNpb25Db25maWd1cmF0aW9uLmpzPzk0OGYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGdldEh0dHBBdXRoRXh0ZW5zaW9uQ29uZmlndXJhdGlvbiA9IChydW50aW1lQ29uZmlnKSA9PiB7XG4gICAgY29uc3QgX2h0dHBBdXRoU2NoZW1lcyA9IHJ1bnRpbWVDb25maWcuaHR0cEF1dGhTY2hlbWVzO1xuICAgIGxldCBfaHR0cEF1dGhTY2hlbWVQcm92aWRlciA9IHJ1bnRpbWVDb25maWcuaHR0cEF1dGhTY2hlbWVQcm92aWRlcjtcbiAgICBsZXQgX2NyZWRlbnRpYWxzID0gcnVudGltZUNvbmZpZy5jcmVkZW50aWFscztcbiAgICByZXR1cm4ge1xuICAgICAgICBzZXRIdHRwQXV0aFNjaGVtZShodHRwQXV0aFNjaGVtZSkge1xuICAgICAgICAgICAgY29uc3QgaW5kZXggPSBfaHR0cEF1dGhTY2hlbWVzLmZpbmRJbmRleCgoc2NoZW1lKSA9PiBzY2hlbWUuc2NoZW1lSWQgPT09IGh0dHBBdXRoU2NoZW1lLnNjaGVtZUlkKTtcbiAgICAgICAgICAgIGlmIChpbmRleCA9PT0gLTEpIHtcbiAgICAgICAgICAgICAgICBfaHR0cEF1dGhTY2hlbWVzLnB1c2goaHR0cEF1dGhTY2hlbWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgX2h0dHBBdXRoU2NoZW1lcy5zcGxpY2UoaW5kZXgsIDEsIGh0dHBBdXRoU2NoZW1lKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgaHR0cEF1dGhTY2hlbWVzKCkge1xuICAgICAgICAgICAgcmV0dXJuIF9odHRwQXV0aFNjaGVtZXM7XG4gICAgICAgIH0sXG4gICAgICAgIHNldEh0dHBBdXRoU2NoZW1lUHJvdmlkZXIoaHR0cEF1dGhTY2hlbWVQcm92aWRlcikge1xuICAgICAgICAgICAgX2h0dHBBdXRoU2NoZW1lUHJvdmlkZXIgPSBodHRwQXV0aFNjaGVtZVByb3ZpZGVyO1xuICAgICAgICB9LFxuICAgICAgICBodHRwQXV0aFNjaGVtZVByb3ZpZGVyKCkge1xuICAgICAgICAgICAgcmV0dXJuIF9odHRwQXV0aFNjaGVtZVByb3ZpZGVyO1xuICAgICAgICB9LFxuICAgICAgICBzZXRDcmVkZW50aWFscyhjcmVkZW50aWFscykge1xuICAgICAgICAgICAgX2NyZWRlbnRpYWxzID0gY3JlZGVudGlhbHM7XG4gICAgICAgIH0sXG4gICAgICAgIGNyZWRlbnRpYWxzKCkge1xuICAgICAgICAgICAgcmV0dXJuIF9jcmVkZW50aWFscztcbiAgICAgICAgfSxcbiAgICB9O1xufTtcbmV4cG9ydCBjb25zdCByZXNvbHZlSHR0cEF1dGhSdW50aW1lQ29uZmlnID0gKGNvbmZpZykgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICAgIGh0dHBBdXRoU2NoZW1lczogY29uZmlnLmh0dHBBdXRoU2NoZW1lcygpLFxuICAgICAgICBodHRwQXV0aFNjaGVtZVByb3ZpZGVyOiBjb25maWcuaHR0cEF1dGhTY2hlbWVQcm92aWRlcigpLFxuICAgICAgICBjcmVkZW50aWFsczogY29uZmlnLmNyZWRlbnRpYWxzKCksXG4gICAgfTtcbn07XG4iXSwibmFtZXMiOlsiZ2V0SHR0cEF1dGhFeHRlbnNpb25Db25maWd1cmF0aW9uIiwicnVudGltZUNvbmZpZyIsIl9odHRwQXV0aFNjaGVtZXMiLCJodHRwQXV0aFNjaGVtZXMiLCJfaHR0cEF1dGhTY2hlbWVQcm92aWRlciIsImh0dHBBdXRoU2NoZW1lUHJvdmlkZXIiLCJfY3JlZGVudGlhbHMiLCJjcmVkZW50aWFscyIsInNldEh0dHBBdXRoU2NoZW1lIiwiaHR0cEF1dGhTY2hlbWUiLCJpbmRleCIsImZpbmRJbmRleCIsInNjaGVtZSIsInNjaGVtZUlkIiwicHVzaCIsInNwbGljZSIsInNldEh0dHBBdXRoU2NoZW1lUHJvdmlkZXIiLCJzZXRDcmVkZW50aWFscyIsInJlc29sdmVIdHRwQXV0aFJ1bnRpbWVDb25maWciLCJjb25maWciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/auth/httpAuthExtensionConfiguration.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/auth/httpAuthSchemeProvider.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/auth/httpAuthSchemeProvider.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultSTSHttpAuthSchemeParametersProvider: () => (/* binding */ defaultSTSHttpAuthSchemeParametersProvider),\n/* harmony export */   defaultSTSHttpAuthSchemeProvider: () => (/* binding */ defaultSTSHttpAuthSchemeProvider),\n/* harmony export */   resolveHttpAuthSchemeConfig: () => (/* binding */ resolveHttpAuthSchemeConfig),\n/* harmony export */   resolveStsAuthConfig: () => (/* binding */ resolveStsAuthConfig)\n/* harmony export */ });\n/* harmony import */ var _aws_sdk_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/core */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/resolveAwsSdkSigV4Config.js\");\n/* harmony import */ var _smithy_util_middleware__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @smithy/util-middleware */ \"(rsc)/./node_modules/@smithy/util-middleware/dist-cjs/index.js\");\n/* harmony import */ var _smithy_util_middleware__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_smithy_util_middleware__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _STSClient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../STSClient */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/STSClient.js\");\n\n\n\nconst defaultSTSHttpAuthSchemeParametersProvider = async (config, context, input)=>{\n    return {\n        operation: (0,_smithy_util_middleware__WEBPACK_IMPORTED_MODULE_0__.getSmithyContext)(context).operation,\n        region: await (0,_smithy_util_middleware__WEBPACK_IMPORTED_MODULE_0__.normalizeProvider)(config.region)() || (()=>{\n            throw new Error(\"expected `region` to be configured for `aws.auth#sigv4`\");\n        })()\n    };\n};\nfunction createAwsAuthSigv4HttpAuthOption(authParameters) {\n    return {\n        schemeId: \"aws.auth#sigv4\",\n        signingProperties: {\n            name: \"sts\",\n            region: authParameters.region\n        },\n        propertiesExtractor: (config, context)=>({\n                signingProperties: {\n                    config,\n                    context\n                }\n            })\n    };\n}\nfunction createSmithyApiNoAuthHttpAuthOption(authParameters) {\n    return {\n        schemeId: \"smithy.api#noAuth\"\n    };\n}\nconst defaultSTSHttpAuthSchemeProvider = (authParameters)=>{\n    const options = [];\n    switch(authParameters.operation){\n        case \"AssumeRoleWithWebIdentity\":\n            {\n                options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n                break;\n            }\n        default:\n            {\n                options.push(createAwsAuthSigv4HttpAuthOption(authParameters));\n            }\n    }\n    return options;\n};\nconst resolveStsAuthConfig = (input)=>Object.assign(input, {\n        stsClientCtor: _STSClient__WEBPACK_IMPORTED_MODULE_1__.STSClient\n    });\nconst resolveHttpAuthSchemeConfig = (config)=>{\n    const config_0 = resolveStsAuthConfig(config);\n    const config_1 = (0,_aws_sdk_core__WEBPACK_IMPORTED_MODULE_2__.resolveAwsSdkSigV4Config)(config_0);\n    return Object.assign(config_1, {\n        authSchemePreference: (0,_smithy_util_middleware__WEBPACK_IMPORTED_MODULE_0__.normalizeProvider)(config.authSchemePreference ?? [])\n    });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3N0cy9hdXRoL2h0dHBBdXRoU2NoZW1lUHJvdmlkZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBMEQ7QUFDb0I7QUFDckM7QUFDbEMsTUFBTUksNkNBQTZDLE9BQU9DLFFBQVFDLFNBQVNDO0lBQzlFLE9BQU87UUFDSEMsV0FBV1AseUVBQWdCQSxDQUFDSyxTQUFTRSxTQUFTO1FBQzlDQyxRQUFRLE1BQU9QLDBFQUFpQkEsQ0FBQ0csT0FBT0ksTUFBTSxPQUMxQyxDQUFDO1lBQ0csTUFBTSxJQUFJQyxNQUFNO1FBQ3BCO0lBQ1I7QUFDSixFQUFFO0FBQ0YsU0FBU0MsaUNBQWlDQyxjQUFjO0lBQ3BELE9BQU87UUFDSEMsVUFBVTtRQUNWQyxtQkFBbUI7WUFDZkMsTUFBTTtZQUNOTixRQUFRRyxlQUFlSCxNQUFNO1FBQ2pDO1FBQ0FPLHFCQUFxQixDQUFDWCxRQUFRQyxVQUFhO2dCQUN2Q1EsbUJBQW1CO29CQUNmVDtvQkFDQUM7Z0JBQ0o7WUFDSjtJQUNKO0FBQ0o7QUFDQSxTQUFTVyxvQ0FBb0NMLGNBQWM7SUFDdkQsT0FBTztRQUNIQyxVQUFVO0lBQ2Q7QUFDSjtBQUNPLE1BQU1LLG1DQUFtQyxDQUFDTjtJQUM3QyxNQUFNTyxVQUFVLEVBQUU7SUFDbEIsT0FBUVAsZUFBZUosU0FBUztRQUM1QixLQUFLO1lBQTZCO2dCQUM5QlcsUUFBUUMsSUFBSSxDQUFDSCxvQ0FBb0NMO2dCQUNqRDtZQUNKO1FBQ0E7WUFBUztnQkFDTE8sUUFBUUMsSUFBSSxDQUFDVCxpQ0FBaUNDO1lBQ2xEO0lBQ0o7SUFDQSxPQUFPTztBQUNYLEVBQUU7QUFDSyxNQUFNRSx1QkFBdUIsQ0FBQ2QsUUFBVWUsT0FBT0MsTUFBTSxDQUFDaEIsT0FBTztRQUNoRWlCLGVBQWVyQixpREFBU0E7SUFDNUIsR0FBRztBQUNJLE1BQU1zQiw4QkFBOEIsQ0FBQ3BCO0lBQ3hDLE1BQU1xQixXQUFXTCxxQkFBcUJoQjtJQUN0QyxNQUFNc0IsV0FBVzNCLHVFQUF3QkEsQ0FBQzBCO0lBQzFDLE9BQU9KLE9BQU9DLE1BQU0sQ0FBQ0ksVUFBVTtRQUMzQkMsc0JBQXNCMUIsMEVBQWlCQSxDQUFDRyxPQUFPdUIsb0JBQW9CLElBQUksRUFBRTtJQUM3RTtBQUNKLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbG91ZHNoaWZ0Ly4vbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL25lc3RlZC1jbGllbnRzL2Rpc3QtZXMvc3VibW9kdWxlcy9zdHMvYXV0aC9odHRwQXV0aFNjaGVtZVByb3ZpZGVyLmpzP2JlZjEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVzb2x2ZUF3c1Nka1NpZ1Y0Q29uZmlnLCB9IGZyb20gXCJAYXdzLXNkay9jb3JlXCI7XG5pbXBvcnQgeyBnZXRTbWl0aHlDb250ZXh0LCBub3JtYWxpemVQcm92aWRlciB9IGZyb20gXCJAc21pdGh5L3V0aWwtbWlkZGxld2FyZVwiO1xuaW1wb3J0IHsgU1RTQ2xpZW50IH0gZnJvbSBcIi4uL1NUU0NsaWVudFwiO1xuZXhwb3J0IGNvbnN0IGRlZmF1bHRTVFNIdHRwQXV0aFNjaGVtZVBhcmFtZXRlcnNQcm92aWRlciA9IGFzeW5jIChjb25maWcsIGNvbnRleHQsIGlucHV0KSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgb3BlcmF0aW9uOiBnZXRTbWl0aHlDb250ZXh0KGNvbnRleHQpLm9wZXJhdGlvbixcbiAgICAgICAgcmVnaW9uOiAoYXdhaXQgbm9ybWFsaXplUHJvdmlkZXIoY29uZmlnLnJlZ2lvbikoKSkgfHxcbiAgICAgICAgICAgICgoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiZXhwZWN0ZWQgYHJlZ2lvbmAgdG8gYmUgY29uZmlndXJlZCBmb3IgYGF3cy5hdXRoI3NpZ3Y0YFwiKTtcbiAgICAgICAgICAgIH0pKCksXG4gICAgfTtcbn07XG5mdW5jdGlvbiBjcmVhdGVBd3NBdXRoU2lndjRIdHRwQXV0aE9wdGlvbihhdXRoUGFyYW1ldGVycykge1xuICAgIHJldHVybiB7XG4gICAgICAgIHNjaGVtZUlkOiBcImF3cy5hdXRoI3NpZ3Y0XCIsXG4gICAgICAgIHNpZ25pbmdQcm9wZXJ0aWVzOiB7XG4gICAgICAgICAgICBuYW1lOiBcInN0c1wiLFxuICAgICAgICAgICAgcmVnaW9uOiBhdXRoUGFyYW1ldGVycy5yZWdpb24sXG4gICAgICAgIH0sXG4gICAgICAgIHByb3BlcnRpZXNFeHRyYWN0b3I6IChjb25maWcsIGNvbnRleHQpID0+ICh7XG4gICAgICAgICAgICBzaWduaW5nUHJvcGVydGllczoge1xuICAgICAgICAgICAgICAgIGNvbmZpZyxcbiAgICAgICAgICAgICAgICBjb250ZXh0LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSksXG4gICAgfTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZVNtaXRoeUFwaU5vQXV0aEh0dHBBdXRoT3B0aW9uKGF1dGhQYXJhbWV0ZXJzKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgc2NoZW1lSWQ6IFwic21pdGh5LmFwaSNub0F1dGhcIixcbiAgICB9O1xufVxuZXhwb3J0IGNvbnN0IGRlZmF1bHRTVFNIdHRwQXV0aFNjaGVtZVByb3ZpZGVyID0gKGF1dGhQYXJhbWV0ZXJzKSA9PiB7XG4gICAgY29uc3Qgb3B0aW9ucyA9IFtdO1xuICAgIHN3aXRjaCAoYXV0aFBhcmFtZXRlcnMub3BlcmF0aW9uKSB7XG4gICAgICAgIGNhc2UgXCJBc3N1bWVSb2xlV2l0aFdlYklkZW50aXR5XCI6IHtcbiAgICAgICAgICAgIG9wdGlvbnMucHVzaChjcmVhdGVTbWl0aHlBcGlOb0F1dGhIdHRwQXV0aE9wdGlvbihhdXRoUGFyYW1ldGVycykpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgZGVmYXVsdDoge1xuICAgICAgICAgICAgb3B0aW9ucy5wdXNoKGNyZWF0ZUF3c0F1dGhTaWd2NEh0dHBBdXRoT3B0aW9uKGF1dGhQYXJhbWV0ZXJzKSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG9wdGlvbnM7XG59O1xuZXhwb3J0IGNvbnN0IHJlc29sdmVTdHNBdXRoQ29uZmlnID0gKGlucHV0KSA9PiBPYmplY3QuYXNzaWduKGlucHV0LCB7XG4gICAgc3RzQ2xpZW50Q3RvcjogU1RTQ2xpZW50LFxufSk7XG5leHBvcnQgY29uc3QgcmVzb2x2ZUh0dHBBdXRoU2NoZW1lQ29uZmlnID0gKGNvbmZpZykgPT4ge1xuICAgIGNvbnN0IGNvbmZpZ18wID0gcmVzb2x2ZVN0c0F1dGhDb25maWcoY29uZmlnKTtcbiAgICBjb25zdCBjb25maWdfMSA9IHJlc29sdmVBd3NTZGtTaWdWNENvbmZpZyhjb25maWdfMCk7XG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oY29uZmlnXzEsIHtcbiAgICAgICAgYXV0aFNjaGVtZVByZWZlcmVuY2U6IG5vcm1hbGl6ZVByb3ZpZGVyKGNvbmZpZy5hdXRoU2NoZW1lUHJlZmVyZW5jZSA/PyBbXSksXG4gICAgfSk7XG59O1xuIl0sIm5hbWVzIjpbInJlc29sdmVBd3NTZGtTaWdWNENvbmZpZyIsImdldFNtaXRoeUNvbnRleHQiLCJub3JtYWxpemVQcm92aWRlciIsIlNUU0NsaWVudCIsImRlZmF1bHRTVFNIdHRwQXV0aFNjaGVtZVBhcmFtZXRlcnNQcm92aWRlciIsImNvbmZpZyIsImNvbnRleHQiLCJpbnB1dCIsIm9wZXJhdGlvbiIsInJlZ2lvbiIsIkVycm9yIiwiY3JlYXRlQXdzQXV0aFNpZ3Y0SHR0cEF1dGhPcHRpb24iLCJhdXRoUGFyYW1ldGVycyIsInNjaGVtZUlkIiwic2lnbmluZ1Byb3BlcnRpZXMiLCJuYW1lIiwicHJvcGVydGllc0V4dHJhY3RvciIsImNyZWF0ZVNtaXRoeUFwaU5vQXV0aEh0dHBBdXRoT3B0aW9uIiwiZGVmYXVsdFNUU0h0dHBBdXRoU2NoZW1lUHJvdmlkZXIiLCJvcHRpb25zIiwicHVzaCIsInJlc29sdmVTdHNBdXRoQ29uZmlnIiwiT2JqZWN0IiwiYXNzaWduIiwic3RzQ2xpZW50Q3RvciIsInJlc29sdmVIdHRwQXV0aFNjaGVtZUNvbmZpZyIsImNvbmZpZ18wIiwiY29uZmlnXzEiLCJhdXRoU2NoZW1lUHJlZmVyZW5jZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/auth/httpAuthSchemeProvider.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/commands/AssumeRoleCommand.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/commands/AssumeRoleCommand.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   $Command: () => (/* reexport safe */ _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_2__.Command),\n/* harmony export */   AssumeRoleCommand: () => (/* binding */ AssumeRoleCommand)\n/* harmony export */ });\n/* harmony import */ var _smithy_middleware_endpoint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @smithy/middleware-endpoint */ \"(rsc)/./node_modules/@smithy/middleware-endpoint/dist-cjs/index.js\");\n/* harmony import */ var _smithy_middleware_endpoint__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_smithy_middleware_endpoint__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _smithy_middleware_serde__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @smithy/middleware-serde */ \"(rsc)/./node_modules/@smithy/middleware-serde/dist-cjs/index.js\");\n/* harmony import */ var _smithy_middleware_serde__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_smithy_middleware_serde__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/./node_modules/@smithy/smithy-client/dist-cjs/index.js\");\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _endpoint_EndpointParameters__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../endpoint/EndpointParameters */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/endpoint/EndpointParameters.js\");\n/* harmony import */ var _models_models_0__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../models/models_0 */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/models/models_0.js\");\n/* harmony import */ var _protocols_Aws_query__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../protocols/Aws_query */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/protocols/Aws_query.js\");\n\n\n\n\n\n\n\nclass AssumeRoleCommand extends _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_2__.Command.classBuilder().ep(_endpoint_EndpointParameters__WEBPACK_IMPORTED_MODULE_3__.commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0,_smithy_middleware_serde__WEBPACK_IMPORTED_MODULE_1__.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0,_smithy_middleware_endpoint__WEBPACK_IMPORTED_MODULE_0__.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSSecurityTokenServiceV20110615\", \"AssumeRole\", {}).n(\"STSClient\", \"AssumeRoleCommand\").f(void 0, _models_models_0__WEBPACK_IMPORTED_MODULE_4__.AssumeRoleResponseFilterSensitiveLog).ser(_protocols_Aws_query__WEBPACK_IMPORTED_MODULE_5__.se_AssumeRoleCommand).de(_protocols_Aws_query__WEBPACK_IMPORTED_MODULE_5__.de_AssumeRoleCommand).build() {\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3N0cy9jb21tYW5kcy9Bc3N1bWVSb2xlQ29tbWFuZC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFnRTtBQUNOO0FBQ0U7QUFDRTtBQUNZO0FBQ1U7QUFDaEU7QUFDYixNQUFNUSwwQkFBMEJMLDBEQUFRQSxDQUMxQ00sWUFBWSxHQUNaQyxFQUFFLENBQUNOLHNFQUFZQSxFQUNmTyxDQUFDLENBQUMsU0FBVVQsT0FBTyxFQUFFVSxFQUFFLEVBQUVDLE1BQU0sRUFBRUMsQ0FBQztJQUNuQyxPQUFPO1FBQ0hiLHdFQUFjQSxDQUFDWSxRQUFRLElBQUksQ0FBQ0UsU0FBUyxFQUFFLElBQUksQ0FBQ0MsV0FBVztRQUN2RGhCLDhFQUFpQkEsQ0FBQ2EsUUFBUVgsUUFBUWUsZ0NBQWdDO0tBQ3JFO0FBQ0wsR0FDS0MsQ0FBQyxDQUFDLG9DQUFvQyxjQUFjLENBQUMsR0FDckRDLENBQUMsQ0FBQyxhQUFhLHFCQUNmQyxDQUFDLENBQUMsS0FBSyxHQUFHZixrRkFBb0NBLEVBQzlDZ0IsR0FBRyxDQUFDZCxzRUFBb0JBLEVBQ3hCZSxFQUFFLENBQUNoQixzRUFBb0JBLEVBQ3ZCaUIsS0FBSztBQUNWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xvdWRzaGlmdC8uL25vZGVfbW9kdWxlcy9AYXdzLXNkay9uZXN0ZWQtY2xpZW50cy9kaXN0LWVzL3N1Ym1vZHVsZXMvc3RzL2NvbW1hbmRzL0Fzc3VtZVJvbGVDb21tYW5kLmpzPzQzMDQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0RW5kcG9pbnRQbHVnaW4gfSBmcm9tIFwiQHNtaXRoeS9taWRkbGV3YXJlLWVuZHBvaW50XCI7XG5pbXBvcnQgeyBnZXRTZXJkZVBsdWdpbiB9IGZyb20gXCJAc21pdGh5L21pZGRsZXdhcmUtc2VyZGVcIjtcbmltcG9ydCB7IENvbW1hbmQgYXMgJENvbW1hbmQgfSBmcm9tIFwiQHNtaXRoeS9zbWl0aHktY2xpZW50XCI7XG5pbXBvcnQgeyBjb21tb25QYXJhbXMgfSBmcm9tIFwiLi4vZW5kcG9pbnQvRW5kcG9pbnRQYXJhbWV0ZXJzXCI7XG5pbXBvcnQgeyBBc3N1bWVSb2xlUmVzcG9uc2VGaWx0ZXJTZW5zaXRpdmVMb2cgfSBmcm9tIFwiLi4vbW9kZWxzL21vZGVsc18wXCI7XG5pbXBvcnQgeyBkZV9Bc3N1bWVSb2xlQ29tbWFuZCwgc2VfQXNzdW1lUm9sZUNvbW1hbmQgfSBmcm9tIFwiLi4vcHJvdG9jb2xzL0F3c19xdWVyeVwiO1xuZXhwb3J0IHsgJENvbW1hbmQgfTtcbmV4cG9ydCBjbGFzcyBBc3N1bWVSb2xlQ29tbWFuZCBleHRlbmRzICRDb21tYW5kXG4gICAgLmNsYXNzQnVpbGRlcigpXG4gICAgLmVwKGNvbW1vblBhcmFtcylcbiAgICAubShmdW5jdGlvbiAoQ29tbWFuZCwgY3MsIGNvbmZpZywgbykge1xuICAgIHJldHVybiBbXG4gICAgICAgIGdldFNlcmRlUGx1Z2luKGNvbmZpZywgdGhpcy5zZXJpYWxpemUsIHRoaXMuZGVzZXJpYWxpemUpLFxuICAgICAgICBnZXRFbmRwb2ludFBsdWdpbihjb25maWcsIENvbW1hbmQuZ2V0RW5kcG9pbnRQYXJhbWV0ZXJJbnN0cnVjdGlvbnMoKSksXG4gICAgXTtcbn0pXG4gICAgLnMoXCJBV1NTZWN1cml0eVRva2VuU2VydmljZVYyMDExMDYxNVwiLCBcIkFzc3VtZVJvbGVcIiwge30pXG4gICAgLm4oXCJTVFNDbGllbnRcIiwgXCJBc3N1bWVSb2xlQ29tbWFuZFwiKVxuICAgIC5mKHZvaWQgMCwgQXNzdW1lUm9sZVJlc3BvbnNlRmlsdGVyU2Vuc2l0aXZlTG9nKVxuICAgIC5zZXIoc2VfQXNzdW1lUm9sZUNvbW1hbmQpXG4gICAgLmRlKGRlX0Fzc3VtZVJvbGVDb21tYW5kKVxuICAgIC5idWlsZCgpIHtcbn1cbiJdLCJuYW1lcyI6WyJnZXRFbmRwb2ludFBsdWdpbiIsImdldFNlcmRlUGx1Z2luIiwiQ29tbWFuZCIsIiRDb21tYW5kIiwiY29tbW9uUGFyYW1zIiwiQXNzdW1lUm9sZVJlc3BvbnNlRmlsdGVyU2Vuc2l0aXZlTG9nIiwiZGVfQXNzdW1lUm9sZUNvbW1hbmQiLCJzZV9Bc3N1bWVSb2xlQ29tbWFuZCIsIkFzc3VtZVJvbGVDb21tYW5kIiwiY2xhc3NCdWlsZGVyIiwiZXAiLCJtIiwiY3MiLCJjb25maWciLCJvIiwic2VyaWFsaXplIiwiZGVzZXJpYWxpemUiLCJnZXRFbmRwb2ludFBhcmFtZXRlckluc3RydWN0aW9ucyIsInMiLCJuIiwiZiIsInNlciIsImRlIiwiYnVpbGQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/commands/AssumeRoleCommand.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/commands/AssumeRoleWithWebIdentityCommand.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/commands/AssumeRoleWithWebIdentityCommand.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   $Command: () => (/* reexport safe */ _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_2__.Command),\n/* harmony export */   AssumeRoleWithWebIdentityCommand: () => (/* binding */ AssumeRoleWithWebIdentityCommand)\n/* harmony export */ });\n/* harmony import */ var _smithy_middleware_endpoint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @smithy/middleware-endpoint */ \"(rsc)/./node_modules/@smithy/middleware-endpoint/dist-cjs/index.js\");\n/* harmony import */ var _smithy_middleware_endpoint__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_smithy_middleware_endpoint__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _smithy_middleware_serde__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @smithy/middleware-serde */ \"(rsc)/./node_modules/@smithy/middleware-serde/dist-cjs/index.js\");\n/* harmony import */ var _smithy_middleware_serde__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_smithy_middleware_serde__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/./node_modules/@smithy/smithy-client/dist-cjs/index.js\");\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _endpoint_EndpointParameters__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../endpoint/EndpointParameters */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/endpoint/EndpointParameters.js\");\n/* harmony import */ var _models_models_0__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../models/models_0 */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/models/models_0.js\");\n/* harmony import */ var _protocols_Aws_query__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../protocols/Aws_query */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/protocols/Aws_query.js\");\n\n\n\n\n\n\n\nclass AssumeRoleWithWebIdentityCommand extends _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_2__.Command.classBuilder().ep(_endpoint_EndpointParameters__WEBPACK_IMPORTED_MODULE_3__.commonParams).m(function(Command, cs, config, o) {\n    return [\n        (0,_smithy_middleware_serde__WEBPACK_IMPORTED_MODULE_1__.getSerdePlugin)(config, this.serialize, this.deserialize),\n        (0,_smithy_middleware_endpoint__WEBPACK_IMPORTED_MODULE_0__.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n    ];\n}).s(\"AWSSecurityTokenServiceV20110615\", \"AssumeRoleWithWebIdentity\", {}).n(\"STSClient\", \"AssumeRoleWithWebIdentityCommand\").f(_models_models_0__WEBPACK_IMPORTED_MODULE_4__.AssumeRoleWithWebIdentityRequestFilterSensitiveLog, _models_models_0__WEBPACK_IMPORTED_MODULE_4__.AssumeRoleWithWebIdentityResponseFilterSensitiveLog).ser(_protocols_Aws_query__WEBPACK_IMPORTED_MODULE_5__.se_AssumeRoleWithWebIdentityCommand).de(_protocols_Aws_query__WEBPACK_IMPORTED_MODULE_5__.de_AssumeRoleWithWebIdentityCommand).build() {\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3N0cy9jb21tYW5kcy9Bc3N1bWVSb2xlV2l0aFdlYklkZW50aXR5Q29tbWFuZC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFnRTtBQUNOO0FBQ0U7QUFDRTtBQUNnRjtBQUM1QjtBQUM5RjtBQUNiLE1BQU1TLHlDQUF5Q04sMERBQVFBLENBQ3pETyxZQUFZLEdBQ1pDLEVBQUUsQ0FBQ1Asc0VBQVlBLEVBQ2ZRLENBQUMsQ0FBQyxTQUFVVixPQUFPLEVBQUVXLEVBQUUsRUFBRUMsTUFBTSxFQUFFQyxDQUFDO0lBQ25DLE9BQU87UUFDSGQsd0VBQWNBLENBQUNhLFFBQVEsSUFBSSxDQUFDRSxTQUFTLEVBQUUsSUFBSSxDQUFDQyxXQUFXO1FBQ3ZEakIsOEVBQWlCQSxDQUFDYyxRQUFRWixRQUFRZ0IsZ0NBQWdDO0tBQ3JFO0FBQ0wsR0FDS0MsQ0FBQyxDQUFDLG9DQUFvQyw2QkFBNkIsQ0FBQyxHQUNwRUMsQ0FBQyxDQUFDLGFBQWEsb0NBQ2ZDLENBQUMsQ0FBQ2hCLGdHQUFrREEsRUFBRUMsaUdBQW1EQSxFQUN6R2dCLEdBQUcsQ0FBQ2QscUZBQW1DQSxFQUN2Q2UsRUFBRSxDQUFDaEIscUZBQW1DQSxFQUN0Q2lCLEtBQUs7QUFDViIsInNvdXJjZXMiOlsid2VicGFjazovL2Nsb3Vkc2hpZnQvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3N0cy9jb21tYW5kcy9Bc3N1bWVSb2xlV2l0aFdlYklkZW50aXR5Q29tbWFuZC5qcz8zNzU5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldEVuZHBvaW50UGx1Z2luIH0gZnJvbSBcIkBzbWl0aHkvbWlkZGxld2FyZS1lbmRwb2ludFwiO1xuaW1wb3J0IHsgZ2V0U2VyZGVQbHVnaW4gfSBmcm9tIFwiQHNtaXRoeS9taWRkbGV3YXJlLXNlcmRlXCI7XG5pbXBvcnQgeyBDb21tYW5kIGFzICRDb21tYW5kIH0gZnJvbSBcIkBzbWl0aHkvc21pdGh5LWNsaWVudFwiO1xuaW1wb3J0IHsgY29tbW9uUGFyYW1zIH0gZnJvbSBcIi4uL2VuZHBvaW50L0VuZHBvaW50UGFyYW1ldGVyc1wiO1xuaW1wb3J0IHsgQXNzdW1lUm9sZVdpdGhXZWJJZGVudGl0eVJlcXVlc3RGaWx0ZXJTZW5zaXRpdmVMb2csIEFzc3VtZVJvbGVXaXRoV2ViSWRlbnRpdHlSZXNwb25zZUZpbHRlclNlbnNpdGl2ZUxvZywgfSBmcm9tIFwiLi4vbW9kZWxzL21vZGVsc18wXCI7XG5pbXBvcnQgeyBkZV9Bc3N1bWVSb2xlV2l0aFdlYklkZW50aXR5Q29tbWFuZCwgc2VfQXNzdW1lUm9sZVdpdGhXZWJJZGVudGl0eUNvbW1hbmQgfSBmcm9tIFwiLi4vcHJvdG9jb2xzL0F3c19xdWVyeVwiO1xuZXhwb3J0IHsgJENvbW1hbmQgfTtcbmV4cG9ydCBjbGFzcyBBc3N1bWVSb2xlV2l0aFdlYklkZW50aXR5Q29tbWFuZCBleHRlbmRzICRDb21tYW5kXG4gICAgLmNsYXNzQnVpbGRlcigpXG4gICAgLmVwKGNvbW1vblBhcmFtcylcbiAgICAubShmdW5jdGlvbiAoQ29tbWFuZCwgY3MsIGNvbmZpZywgbykge1xuICAgIHJldHVybiBbXG4gICAgICAgIGdldFNlcmRlUGx1Z2luKGNvbmZpZywgdGhpcy5zZXJpYWxpemUsIHRoaXMuZGVzZXJpYWxpemUpLFxuICAgICAgICBnZXRFbmRwb2ludFBsdWdpbihjb25maWcsIENvbW1hbmQuZ2V0RW5kcG9pbnRQYXJhbWV0ZXJJbnN0cnVjdGlvbnMoKSksXG4gICAgXTtcbn0pXG4gICAgLnMoXCJBV1NTZWN1cml0eVRva2VuU2VydmljZVYyMDExMDYxNVwiLCBcIkFzc3VtZVJvbGVXaXRoV2ViSWRlbnRpdHlcIiwge30pXG4gICAgLm4oXCJTVFNDbGllbnRcIiwgXCJBc3N1bWVSb2xlV2l0aFdlYklkZW50aXR5Q29tbWFuZFwiKVxuICAgIC5mKEFzc3VtZVJvbGVXaXRoV2ViSWRlbnRpdHlSZXF1ZXN0RmlsdGVyU2Vuc2l0aXZlTG9nLCBBc3N1bWVSb2xlV2l0aFdlYklkZW50aXR5UmVzcG9uc2VGaWx0ZXJTZW5zaXRpdmVMb2cpXG4gICAgLnNlcihzZV9Bc3N1bWVSb2xlV2l0aFdlYklkZW50aXR5Q29tbWFuZClcbiAgICAuZGUoZGVfQXNzdW1lUm9sZVdpdGhXZWJJZGVudGl0eUNvbW1hbmQpXG4gICAgLmJ1aWxkKCkge1xufVxuIl0sIm5hbWVzIjpbImdldEVuZHBvaW50UGx1Z2luIiwiZ2V0U2VyZGVQbHVnaW4iLCJDb21tYW5kIiwiJENvbW1hbmQiLCJjb21tb25QYXJhbXMiLCJBc3N1bWVSb2xlV2l0aFdlYklkZW50aXR5UmVxdWVzdEZpbHRlclNlbnNpdGl2ZUxvZyIsIkFzc3VtZVJvbGVXaXRoV2ViSWRlbnRpdHlSZXNwb25zZUZpbHRlclNlbnNpdGl2ZUxvZyIsImRlX0Fzc3VtZVJvbGVXaXRoV2ViSWRlbnRpdHlDb21tYW5kIiwic2VfQXNzdW1lUm9sZVdpdGhXZWJJZGVudGl0eUNvbW1hbmQiLCJBc3N1bWVSb2xlV2l0aFdlYklkZW50aXR5Q29tbWFuZCIsImNsYXNzQnVpbGRlciIsImVwIiwibSIsImNzIiwiY29uZmlnIiwibyIsInNlcmlhbGl6ZSIsImRlc2VyaWFsaXplIiwiZ2V0RW5kcG9pbnRQYXJhbWV0ZXJJbnN0cnVjdGlvbnMiLCJzIiwibiIsImYiLCJzZXIiLCJkZSIsImJ1aWxkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/commands/AssumeRoleWithWebIdentityCommand.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/commands/index.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/commands/index.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   $Command: () => (/* reexport safe */ _AssumeRoleCommand__WEBPACK_IMPORTED_MODULE_0__.$Command),\n/* harmony export */   AssumeRoleCommand: () => (/* reexport safe */ _AssumeRoleCommand__WEBPACK_IMPORTED_MODULE_0__.AssumeRoleCommand),\n/* harmony export */   AssumeRoleWithWebIdentityCommand: () => (/* reexport safe */ _AssumeRoleWithWebIdentityCommand__WEBPACK_IMPORTED_MODULE_1__.AssumeRoleWithWebIdentityCommand)\n/* harmony export */ });\n/* harmony import */ var _AssumeRoleCommand__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AssumeRoleCommand */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/commands/AssumeRoleCommand.js\");\n/* harmony import */ var _AssumeRoleWithWebIdentityCommand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AssumeRoleWithWebIdentityCommand */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/commands/AssumeRoleWithWebIdentityCommand.js\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3N0cy9jb21tYW5kcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFvQztBQUNlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xvdWRzaGlmdC8uL25vZGVfbW9kdWxlcy9AYXdzLXNkay9uZXN0ZWQtY2xpZW50cy9kaXN0LWVzL3N1Ym1vZHVsZXMvc3RzL2NvbW1hbmRzL2luZGV4LmpzPzNlMTEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vQXNzdW1lUm9sZUNvbW1hbmRcIjtcbmV4cG9ydCAqIGZyb20gXCIuL0Fzc3VtZVJvbGVXaXRoV2ViSWRlbnRpdHlDb21tYW5kXCI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/commands/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/defaultRoleAssumers.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/defaultRoleAssumers.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decorateDefaultCredentialProvider: () => (/* binding */ decorateDefaultCredentialProvider),\n/* harmony export */   getDefaultRoleAssumer: () => (/* binding */ getDefaultRoleAssumer),\n/* harmony export */   getDefaultRoleAssumerWithWebIdentity: () => (/* binding */ getDefaultRoleAssumerWithWebIdentity)\n/* harmony export */ });\n/* harmony import */ var _defaultStsRoleAssumers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultStsRoleAssumers */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/defaultStsRoleAssumers.js\");\n/* harmony import */ var _STSClient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./STSClient */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/STSClient.js\");\n\n\nconst getCustomizableStsClientCtor = (baseCtor, customizations)=>{\n    if (!customizations) return baseCtor;\n    else return class CustomizableSTSClient extends baseCtor {\n        constructor(config){\n            super(config);\n            for (const customization of customizations){\n                this.middlewareStack.use(customization);\n            }\n        }\n    };\n};\nconst getDefaultRoleAssumer = (stsOptions = {}, stsPlugins)=>(0,_defaultStsRoleAssumers__WEBPACK_IMPORTED_MODULE_0__.getDefaultRoleAssumer)(stsOptions, getCustomizableStsClientCtor(_STSClient__WEBPACK_IMPORTED_MODULE_1__.STSClient, stsPlugins));\nconst getDefaultRoleAssumerWithWebIdentity = (stsOptions = {}, stsPlugins)=>(0,_defaultStsRoleAssumers__WEBPACK_IMPORTED_MODULE_0__.getDefaultRoleAssumerWithWebIdentity)(stsOptions, getCustomizableStsClientCtor(_STSClient__WEBPACK_IMPORTED_MODULE_1__.STSClient, stsPlugins));\nconst decorateDefaultCredentialProvider = (provider)=>(input)=>provider({\n            roleAssumer: getDefaultRoleAssumer(input),\n            roleAssumerWithWebIdentity: getDefaultRoleAssumerWithWebIdentity(input),\n            ...input\n        });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3N0cy9kZWZhdWx0Um9sZUFzc3VtZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQStLO0FBQ3ZJO0FBQ3hDLE1BQU1LLCtCQUErQixDQUFDQyxVQUFVQztJQUM1QyxJQUFJLENBQUNBLGdCQUNELE9BQU9EO1NBRVAsT0FBTyxNQUFNRSw4QkFBOEJGO1FBQ3ZDRyxZQUFZQyxNQUFNLENBQUU7WUFDaEIsS0FBSyxDQUFDQTtZQUNOLEtBQUssTUFBTUMsaUJBQWlCSixlQUFnQjtnQkFDeEMsSUFBSSxDQUFDSyxlQUFlLENBQUNDLEdBQUcsQ0FBQ0Y7WUFDN0I7UUFDSjtJQUNKO0FBQ1I7QUFDTyxNQUFNWCx3QkFBd0IsQ0FBQ2MsYUFBYSxDQUFDLENBQUMsRUFBRUMsYUFBZWQsOEVBQXdCQSxDQUFDYSxZQUFZVCw2QkFBNkJELGlEQUFTQSxFQUFFVyxhQUFhO0FBQ3pKLE1BQU1iLHVDQUF1QyxDQUFDWSxhQUFhLENBQUMsQ0FBQyxFQUFFQyxhQUFlWiw2RkFBdUNBLENBQUNXLFlBQVlULDZCQUE2QkQsaURBQVNBLEVBQUVXLGFBQWE7QUFDdkwsTUFBTUMsb0NBQW9DLENBQUNDLFdBQWEsQ0FBQ0MsUUFBVUQsU0FBUztZQUMvRUUsYUFBYW5CLHNCQUFzQmtCO1lBQ25DRSw0QkFBNEJsQixxQ0FBcUNnQjtZQUNqRSxHQUFHQSxLQUFLO1FBQ1osR0FBRyIsInNvdXJjZXMiOlsid2VicGFjazovL2Nsb3Vkc2hpZnQvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3N0cy9kZWZhdWx0Um9sZUFzc3VtZXJzLmpzP2JhZDkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0RGVmYXVsdFJvbGVBc3N1bWVyIGFzIFN0c0dldERlZmF1bHRSb2xlQXNzdW1lciwgZ2V0RGVmYXVsdFJvbGVBc3N1bWVyV2l0aFdlYklkZW50aXR5IGFzIFN0c0dldERlZmF1bHRSb2xlQXNzdW1lcldpdGhXZWJJZGVudGl0eSwgfSBmcm9tIFwiLi9kZWZhdWx0U3RzUm9sZUFzc3VtZXJzXCI7XG5pbXBvcnQgeyBTVFNDbGllbnQgfSBmcm9tIFwiLi9TVFNDbGllbnRcIjtcbmNvbnN0IGdldEN1c3RvbWl6YWJsZVN0c0NsaWVudEN0b3IgPSAoYmFzZUN0b3IsIGN1c3RvbWl6YXRpb25zKSA9PiB7XG4gICAgaWYgKCFjdXN0b21pemF0aW9ucylcbiAgICAgICAgcmV0dXJuIGJhc2VDdG9yO1xuICAgIGVsc2VcbiAgICAgICAgcmV0dXJuIGNsYXNzIEN1c3RvbWl6YWJsZVNUU0NsaWVudCBleHRlbmRzIGJhc2VDdG9yIHtcbiAgICAgICAgICAgIGNvbnN0cnVjdG9yKGNvbmZpZykge1xuICAgICAgICAgICAgICAgIHN1cGVyKGNvbmZpZyk7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBjdXN0b21pemF0aW9uIG9mIGN1c3RvbWl6YXRpb25zKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubWlkZGxld2FyZVN0YWNrLnVzZShjdXN0b21pemF0aW9uKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG59O1xuZXhwb3J0IGNvbnN0IGdldERlZmF1bHRSb2xlQXNzdW1lciA9IChzdHNPcHRpb25zID0ge30sIHN0c1BsdWdpbnMpID0+IFN0c0dldERlZmF1bHRSb2xlQXNzdW1lcihzdHNPcHRpb25zLCBnZXRDdXN0b21pemFibGVTdHNDbGllbnRDdG9yKFNUU0NsaWVudCwgc3RzUGx1Z2lucykpO1xuZXhwb3J0IGNvbnN0IGdldERlZmF1bHRSb2xlQXNzdW1lcldpdGhXZWJJZGVudGl0eSA9IChzdHNPcHRpb25zID0ge30sIHN0c1BsdWdpbnMpID0+IFN0c0dldERlZmF1bHRSb2xlQXNzdW1lcldpdGhXZWJJZGVudGl0eShzdHNPcHRpb25zLCBnZXRDdXN0b21pemFibGVTdHNDbGllbnRDdG9yKFNUU0NsaWVudCwgc3RzUGx1Z2lucykpO1xuZXhwb3J0IGNvbnN0IGRlY29yYXRlRGVmYXVsdENyZWRlbnRpYWxQcm92aWRlciA9IChwcm92aWRlcikgPT4gKGlucHV0KSA9PiBwcm92aWRlcih7XG4gICAgcm9sZUFzc3VtZXI6IGdldERlZmF1bHRSb2xlQXNzdW1lcihpbnB1dCksXG4gICAgcm9sZUFzc3VtZXJXaXRoV2ViSWRlbnRpdHk6IGdldERlZmF1bHRSb2xlQXNzdW1lcldpdGhXZWJJZGVudGl0eShpbnB1dCksXG4gICAgLi4uaW5wdXQsXG59KTtcbiJdLCJuYW1lcyI6WyJnZXREZWZhdWx0Um9sZUFzc3VtZXIiLCJTdHNHZXREZWZhdWx0Um9sZUFzc3VtZXIiLCJnZXREZWZhdWx0Um9sZUFzc3VtZXJXaXRoV2ViSWRlbnRpdHkiLCJTdHNHZXREZWZhdWx0Um9sZUFzc3VtZXJXaXRoV2ViSWRlbnRpdHkiLCJTVFNDbGllbnQiLCJnZXRDdXN0b21pemFibGVTdHNDbGllbnRDdG9yIiwiYmFzZUN0b3IiLCJjdXN0b21pemF0aW9ucyIsIkN1c3RvbWl6YWJsZVNUU0NsaWVudCIsImNvbnN0cnVjdG9yIiwiY29uZmlnIiwiY3VzdG9taXphdGlvbiIsIm1pZGRsZXdhcmVTdGFjayIsInVzZSIsInN0c09wdGlvbnMiLCJzdHNQbHVnaW5zIiwiZGVjb3JhdGVEZWZhdWx0Q3JlZGVudGlhbFByb3ZpZGVyIiwicHJvdmlkZXIiLCJpbnB1dCIsInJvbGVBc3N1bWVyIiwicm9sZUFzc3VtZXJXaXRoV2ViSWRlbnRpdHkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/defaultRoleAssumers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/defaultStsRoleAssumers.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/defaultStsRoleAssumers.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decorateDefaultCredentialProvider: () => (/* binding */ decorateDefaultCredentialProvider),\n/* harmony export */   getDefaultRoleAssumer: () => (/* binding */ getDefaultRoleAssumer),\n/* harmony export */   getDefaultRoleAssumerWithWebIdentity: () => (/* binding */ getDefaultRoleAssumerWithWebIdentity)\n/* harmony export */ });\n/* harmony import */ var _aws_sdk_core_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/core/client */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/client/setCredentialFeature.js\");\n/* harmony import */ var _commands_AssumeRoleCommand__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./commands/AssumeRoleCommand */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/commands/AssumeRoleCommand.js\");\n/* harmony import */ var _commands_AssumeRoleWithWebIdentityCommand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./commands/AssumeRoleWithWebIdentityCommand */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/commands/AssumeRoleWithWebIdentityCommand.js\");\n\n\n\nconst ASSUME_ROLE_DEFAULT_REGION = \"us-east-1\";\nconst getAccountIdFromAssumedRoleUser = (assumedRoleUser)=>{\n    if (typeof assumedRoleUser?.Arn === \"string\") {\n        const arnComponents = assumedRoleUser.Arn.split(\":\");\n        if (arnComponents.length > 4 && arnComponents[4] !== \"\") {\n            return arnComponents[4];\n        }\n    }\n    return undefined;\n};\nconst resolveRegion = async (_region, _parentRegion, credentialProviderLogger)=>{\n    const region = typeof _region === \"function\" ? await _region() : _region;\n    const parentRegion = typeof _parentRegion === \"function\" ? await _parentRegion() : _parentRegion;\n    credentialProviderLogger?.debug?.(\"@aws-sdk/client-sts::resolveRegion\", \"accepting first of:\", `${region} (provider)`, `${parentRegion} (parent client)`, `${ASSUME_ROLE_DEFAULT_REGION} (STS default)`);\n    return region ?? parentRegion ?? ASSUME_ROLE_DEFAULT_REGION;\n};\nconst getDefaultRoleAssumer = (stsOptions, STSClient)=>{\n    let stsClient;\n    let closureSourceCreds;\n    return async (sourceCreds, params)=>{\n        closureSourceCreds = sourceCreds;\n        if (!stsClient) {\n            const { logger = stsOptions?.parentClientConfig?.logger, region, requestHandler = stsOptions?.parentClientConfig?.requestHandler, credentialProviderLogger } = stsOptions;\n            const resolvedRegion = await resolveRegion(region, stsOptions?.parentClientConfig?.region, credentialProviderLogger);\n            const isCompatibleRequestHandler = !isH2(requestHandler);\n            stsClient = new STSClient({\n                profile: stsOptions?.parentClientConfig?.profile,\n                credentialDefaultProvider: ()=>async ()=>closureSourceCreds,\n                region: resolvedRegion,\n                requestHandler: isCompatibleRequestHandler ? requestHandler : undefined,\n                logger: logger\n            });\n        }\n        const { Credentials, AssumedRoleUser } = await stsClient.send(new _commands_AssumeRoleCommand__WEBPACK_IMPORTED_MODULE_0__.AssumeRoleCommand(params));\n        if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {\n            throw new Error(`Invalid response from STS.assumeRole call with role ${params.RoleArn}`);\n        }\n        const accountId = getAccountIdFromAssumedRoleUser(AssumedRoleUser);\n        const credentials = {\n            accessKeyId: Credentials.AccessKeyId,\n            secretAccessKey: Credentials.SecretAccessKey,\n            sessionToken: Credentials.SessionToken,\n            expiration: Credentials.Expiration,\n            ...Credentials.CredentialScope && {\n                credentialScope: Credentials.CredentialScope\n            },\n            ...accountId && {\n                accountId\n            }\n        };\n        (0,_aws_sdk_core_client__WEBPACK_IMPORTED_MODULE_2__.setCredentialFeature)(credentials, \"CREDENTIALS_STS_ASSUME_ROLE\", \"i\");\n        return credentials;\n    };\n};\nconst getDefaultRoleAssumerWithWebIdentity = (stsOptions, STSClient)=>{\n    let stsClient;\n    return async (params)=>{\n        if (!stsClient) {\n            const { logger = stsOptions?.parentClientConfig?.logger, region, requestHandler = stsOptions?.parentClientConfig?.requestHandler, credentialProviderLogger } = stsOptions;\n            const resolvedRegion = await resolveRegion(region, stsOptions?.parentClientConfig?.region, credentialProviderLogger);\n            const isCompatibleRequestHandler = !isH2(requestHandler);\n            stsClient = new STSClient({\n                profile: stsOptions?.parentClientConfig?.profile,\n                region: resolvedRegion,\n                requestHandler: isCompatibleRequestHandler ? requestHandler : undefined,\n                logger: logger\n            });\n        }\n        const { Credentials, AssumedRoleUser } = await stsClient.send(new _commands_AssumeRoleWithWebIdentityCommand__WEBPACK_IMPORTED_MODULE_1__.AssumeRoleWithWebIdentityCommand(params));\n        if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {\n            throw new Error(`Invalid response from STS.assumeRoleWithWebIdentity call with role ${params.RoleArn}`);\n        }\n        const accountId = getAccountIdFromAssumedRoleUser(AssumedRoleUser);\n        const credentials = {\n            accessKeyId: Credentials.AccessKeyId,\n            secretAccessKey: Credentials.SecretAccessKey,\n            sessionToken: Credentials.SessionToken,\n            expiration: Credentials.Expiration,\n            ...Credentials.CredentialScope && {\n                credentialScope: Credentials.CredentialScope\n            },\n            ...accountId && {\n                accountId\n            }\n        };\n        if (accountId) {\n            (0,_aws_sdk_core_client__WEBPACK_IMPORTED_MODULE_2__.setCredentialFeature)(credentials, \"RESOLVED_ACCOUNT_ID\", \"T\");\n        }\n        (0,_aws_sdk_core_client__WEBPACK_IMPORTED_MODULE_2__.setCredentialFeature)(credentials, \"CREDENTIALS_STS_ASSUME_ROLE_WEB_ID\", \"k\");\n        return credentials;\n    };\n};\nconst decorateDefaultCredentialProvider = (provider)=>(input)=>provider({\n            roleAssumer: getDefaultRoleAssumer(input, input.stsClientCtor),\n            roleAssumerWithWebIdentity: getDefaultRoleAssumerWithWebIdentity(input, input.stsClientCtor),\n            ...input\n        });\nconst isH2 = (requestHandler)=>{\n    return requestHandler?.metadata?.handlerProtocol === \"h2\";\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/defaultStsRoleAssumers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/endpoint/EndpointParameters.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/endpoint/EndpointParameters.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   commonParams: () => (/* binding */ commonParams),\n/* harmony export */   resolveClientEndpointParameters: () => (/* binding */ resolveClientEndpointParameters)\n/* harmony export */ });\nconst resolveClientEndpointParameters = (options)=>{\n    return Object.assign(options, {\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        useGlobalEndpoint: options.useGlobalEndpoint ?? false,\n        defaultSigningName: \"sts\"\n    });\n};\nconst commonParams = {\n    UseGlobalEndpoint: {\n        type: \"builtInParams\",\n        name: \"useGlobalEndpoint\"\n    },\n    UseFIPS: {\n        type: \"builtInParams\",\n        name: \"useFipsEndpoint\"\n    },\n    Endpoint: {\n        type: \"builtInParams\",\n        name: \"endpoint\"\n    },\n    Region: {\n        type: \"builtInParams\",\n        name: \"region\"\n    },\n    UseDualStack: {\n        type: \"builtInParams\",\n        name: \"useDualstackEndpoint\"\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3N0cy9lbmRwb2ludC9FbmRwb2ludFBhcmFtZXRlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxNQUFNQSxrQ0FBa0MsQ0FBQ0M7SUFDNUMsT0FBT0MsT0FBT0MsTUFBTSxDQUFDRixTQUFTO1FBQzFCRyxzQkFBc0JILFFBQVFHLG9CQUFvQixJQUFJO1FBQ3REQyxpQkFBaUJKLFFBQVFJLGVBQWUsSUFBSTtRQUM1Q0MsbUJBQW1CTCxRQUFRSyxpQkFBaUIsSUFBSTtRQUNoREMsb0JBQW9CO0lBQ3hCO0FBQ0osRUFBRTtBQUNLLE1BQU1DLGVBQWU7SUFDeEJDLG1CQUFtQjtRQUFFQyxNQUFNO1FBQWlCQyxNQUFNO0lBQW9CO0lBQ3RFQyxTQUFTO1FBQUVGLE1BQU07UUFBaUJDLE1BQU07SUFBa0I7SUFDMURFLFVBQVU7UUFBRUgsTUFBTTtRQUFpQkMsTUFBTTtJQUFXO0lBQ3BERyxRQUFRO1FBQUVKLE1BQU07UUFBaUJDLE1BQU07SUFBUztJQUNoREksY0FBYztRQUFFTCxNQUFNO1FBQWlCQyxNQUFNO0lBQXVCO0FBQ3hFLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbG91ZHNoaWZ0Ly4vbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL25lc3RlZC1jbGllbnRzL2Rpc3QtZXMvc3VibW9kdWxlcy9zdHMvZW5kcG9pbnQvRW5kcG9pbnRQYXJhbWV0ZXJzLmpzPzA3NmQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHJlc29sdmVDbGllbnRFbmRwb2ludFBhcmFtZXRlcnMgPSAob3B0aW9ucykgPT4ge1xuICAgIHJldHVybiBPYmplY3QuYXNzaWduKG9wdGlvbnMsIHtcbiAgICAgICAgdXNlRHVhbHN0YWNrRW5kcG9pbnQ6IG9wdGlvbnMudXNlRHVhbHN0YWNrRW5kcG9pbnQgPz8gZmFsc2UsXG4gICAgICAgIHVzZUZpcHNFbmRwb2ludDogb3B0aW9ucy51c2VGaXBzRW5kcG9pbnQgPz8gZmFsc2UsXG4gICAgICAgIHVzZUdsb2JhbEVuZHBvaW50OiBvcHRpb25zLnVzZUdsb2JhbEVuZHBvaW50ID8/IGZhbHNlLFxuICAgICAgICBkZWZhdWx0U2lnbmluZ05hbWU6IFwic3RzXCIsXG4gICAgfSk7XG59O1xuZXhwb3J0IGNvbnN0IGNvbW1vblBhcmFtcyA9IHtcbiAgICBVc2VHbG9iYWxFbmRwb2ludDogeyB0eXBlOiBcImJ1aWx0SW5QYXJhbXNcIiwgbmFtZTogXCJ1c2VHbG9iYWxFbmRwb2ludFwiIH0sXG4gICAgVXNlRklQUzogeyB0eXBlOiBcImJ1aWx0SW5QYXJhbXNcIiwgbmFtZTogXCJ1c2VGaXBzRW5kcG9pbnRcIiB9LFxuICAgIEVuZHBvaW50OiB7IHR5cGU6IFwiYnVpbHRJblBhcmFtc1wiLCBuYW1lOiBcImVuZHBvaW50XCIgfSxcbiAgICBSZWdpb246IHsgdHlwZTogXCJidWlsdEluUGFyYW1zXCIsIG5hbWU6IFwicmVnaW9uXCIgfSxcbiAgICBVc2VEdWFsU3RhY2s6IHsgdHlwZTogXCJidWlsdEluUGFyYW1zXCIsIG5hbWU6IFwidXNlRHVhbHN0YWNrRW5kcG9pbnRcIiB9LFxufTtcbiJdLCJuYW1lcyI6WyJyZXNvbHZlQ2xpZW50RW5kcG9pbnRQYXJhbWV0ZXJzIiwib3B0aW9ucyIsIk9iamVjdCIsImFzc2lnbiIsInVzZUR1YWxzdGFja0VuZHBvaW50IiwidXNlRmlwc0VuZHBvaW50IiwidXNlR2xvYmFsRW5kcG9pbnQiLCJkZWZhdWx0U2lnbmluZ05hbWUiLCJjb21tb25QYXJhbXMiLCJVc2VHbG9iYWxFbmRwb2ludCIsInR5cGUiLCJuYW1lIiwiVXNlRklQUyIsIkVuZHBvaW50IiwiUmVnaW9uIiwiVXNlRHVhbFN0YWNrIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/endpoint/EndpointParameters.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/endpoint/endpointResolver.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/endpoint/endpointResolver.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultEndpointResolver: () => (/* binding */ defaultEndpointResolver)\n/* harmony export */ });\n/* harmony import */ var _aws_sdk_util_endpoints__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/util-endpoints */ \"(rsc)/./node_modules/@aws-sdk/util-endpoints/dist-cjs/index.js\");\n/* harmony import */ var _aws_sdk_util_endpoints__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_aws_sdk_util_endpoints__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _smithy_util_endpoints__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @smithy/util-endpoints */ \"(rsc)/./node_modules/@smithy/util-endpoints/dist-cjs/index.js\");\n/* harmony import */ var _smithy_util_endpoints__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_smithy_util_endpoints__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ruleset__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ruleset */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/endpoint/ruleset.js\");\n\n\n\nconst cache = new _smithy_util_endpoints__WEBPACK_IMPORTED_MODULE_1__.EndpointCache({\n    size: 50,\n    params: [\n        \"Endpoint\",\n        \"Region\",\n        \"UseDualStack\",\n        \"UseFIPS\",\n        \"UseGlobalEndpoint\"\n    ]\n});\nconst defaultEndpointResolver = (endpointParams, context = {})=>{\n    return cache.get(endpointParams, ()=>(0,_smithy_util_endpoints__WEBPACK_IMPORTED_MODULE_1__.resolveEndpoint)(_ruleset__WEBPACK_IMPORTED_MODULE_2__.ruleSet, {\n            endpointParams: endpointParams,\n            logger: context.logger\n        }));\n};\n_smithy_util_endpoints__WEBPACK_IMPORTED_MODULE_1__.customEndpointFunctions.aws = _aws_sdk_util_endpoints__WEBPACK_IMPORTED_MODULE_0__.awsEndpointFunctions;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3N0cy9lbmRwb2ludC9lbmRwb2ludFJlc29sdmVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUErRDtBQUNrQztBQUM3RDtBQUNwQyxNQUFNSyxRQUFRLElBQUlILGlFQUFhQSxDQUFDO0lBQzVCSSxNQUFNO0lBQ05DLFFBQVE7UUFBQztRQUFZO1FBQVU7UUFBZ0I7UUFBVztLQUFvQjtBQUNsRjtBQUNPLE1BQU1DLDBCQUEwQixDQUFDQyxnQkFBZ0JDLFVBQVUsQ0FBQyxDQUFDO0lBQ2hFLE9BQU9MLE1BQU1NLEdBQUcsQ0FBQ0YsZ0JBQWdCLElBQU1OLHVFQUFlQSxDQUFDQyw2Q0FBT0EsRUFBRTtZQUM1REssZ0JBQWdCQTtZQUNoQkcsUUFBUUYsUUFBUUUsTUFBTTtRQUMxQjtBQUNKLEVBQUU7QUFDRlgsMkVBQXVCQSxDQUFDWSxHQUFHLEdBQUdiLHlFQUFvQkEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbG91ZHNoaWZ0Ly4vbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL25lc3RlZC1jbGllbnRzL2Rpc3QtZXMvc3VibW9kdWxlcy9zdHMvZW5kcG9pbnQvZW5kcG9pbnRSZXNvbHZlci5qcz80N2M4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGF3c0VuZHBvaW50RnVuY3Rpb25zIH0gZnJvbSBcIkBhd3Mtc2RrL3V0aWwtZW5kcG9pbnRzXCI7XG5pbXBvcnQgeyBjdXN0b21FbmRwb2ludEZ1bmN0aW9ucywgRW5kcG9pbnRDYWNoZSwgcmVzb2x2ZUVuZHBvaW50IH0gZnJvbSBcIkBzbWl0aHkvdXRpbC1lbmRwb2ludHNcIjtcbmltcG9ydCB7IHJ1bGVTZXQgfSBmcm9tIFwiLi9ydWxlc2V0XCI7XG5jb25zdCBjYWNoZSA9IG5ldyBFbmRwb2ludENhY2hlKHtcbiAgICBzaXplOiA1MCxcbiAgICBwYXJhbXM6IFtcIkVuZHBvaW50XCIsIFwiUmVnaW9uXCIsIFwiVXNlRHVhbFN0YWNrXCIsIFwiVXNlRklQU1wiLCBcIlVzZUdsb2JhbEVuZHBvaW50XCJdLFxufSk7XG5leHBvcnQgY29uc3QgZGVmYXVsdEVuZHBvaW50UmVzb2x2ZXIgPSAoZW5kcG9pbnRQYXJhbXMsIGNvbnRleHQgPSB7fSkgPT4ge1xuICAgIHJldHVybiBjYWNoZS5nZXQoZW5kcG9pbnRQYXJhbXMsICgpID0+IHJlc29sdmVFbmRwb2ludChydWxlU2V0LCB7XG4gICAgICAgIGVuZHBvaW50UGFyYW1zOiBlbmRwb2ludFBhcmFtcyxcbiAgICAgICAgbG9nZ2VyOiBjb250ZXh0LmxvZ2dlcixcbiAgICB9KSk7XG59O1xuY3VzdG9tRW5kcG9pbnRGdW5jdGlvbnMuYXdzID0gYXdzRW5kcG9pbnRGdW5jdGlvbnM7XG4iXSwibmFtZXMiOlsiYXdzRW5kcG9pbnRGdW5jdGlvbnMiLCJjdXN0b21FbmRwb2ludEZ1bmN0aW9ucyIsIkVuZHBvaW50Q2FjaGUiLCJyZXNvbHZlRW5kcG9pbnQiLCJydWxlU2V0IiwiY2FjaGUiLCJzaXplIiwicGFyYW1zIiwiZGVmYXVsdEVuZHBvaW50UmVzb2x2ZXIiLCJlbmRwb2ludFBhcmFtcyIsImNvbnRleHQiLCJnZXQiLCJsb2dnZXIiLCJhd3MiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/endpoint/endpointResolver.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/endpoint/ruleset.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/endpoint/ruleset.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ruleSet: () => (/* binding */ ruleSet)\n/* harmony export */ });\nconst F = \"required\", G = \"type\", H = \"fn\", I = \"argv\", J = \"ref\";\nconst a = false, b = true, c = \"booleanEquals\", d = \"stringEquals\", e = \"sigv4\", f = \"sts\", g = \"us-east-1\", h = \"endpoint\", i = \"https://sts.{Region}.{PartitionResult#dnsSuffix}\", j = \"tree\", k = \"error\", l = \"getAttr\", m = {\n    [F]: false,\n    [G]: \"String\"\n}, n = {\n    [F]: true,\n    \"default\": false,\n    [G]: \"Boolean\"\n}, o = {\n    [J]: \"Endpoint\"\n}, p = {\n    [H]: \"isSet\",\n    [I]: [\n        {\n            [J]: \"Region\"\n        }\n    ]\n}, q = {\n    [J]: \"Region\"\n}, r = {\n    [H]: \"aws.partition\",\n    [I]: [\n        q\n    ],\n    \"assign\": \"PartitionResult\"\n}, s = {\n    [J]: \"UseFIPS\"\n}, t = {\n    [J]: \"UseDualStack\"\n}, u = {\n    \"url\": \"https://sts.amazonaws.com\",\n    \"properties\": {\n        \"authSchemes\": [\n            {\n                \"name\": e,\n                \"signingName\": f,\n                \"signingRegion\": g\n            }\n        ]\n    },\n    \"headers\": {}\n}, v = {}, w = {\n    \"conditions\": [\n        {\n            [H]: d,\n            [I]: [\n                q,\n                \"aws-global\"\n            ]\n        }\n    ],\n    [h]: u,\n    [G]: h\n}, x = {\n    [H]: c,\n    [I]: [\n        s,\n        true\n    ]\n}, y = {\n    [H]: c,\n    [I]: [\n        t,\n        true\n    ]\n}, z = {\n    [H]: l,\n    [I]: [\n        {\n            [J]: \"PartitionResult\"\n        },\n        \"supportsFIPS\"\n    ]\n}, A = {\n    [J]: \"PartitionResult\"\n}, B = {\n    [H]: c,\n    [I]: [\n        true,\n        {\n            [H]: l,\n            [I]: [\n                A,\n                \"supportsDualStack\"\n            ]\n        }\n    ]\n}, C = [\n    {\n        [H]: \"isSet\",\n        [I]: [\n            o\n        ]\n    }\n], D = [\n    x\n], E = [\n    y\n];\nconst _data = {\n    version: \"1.0\",\n    parameters: {\n        Region: m,\n        UseDualStack: n,\n        UseFIPS: n,\n        Endpoint: m,\n        UseGlobalEndpoint: n\n    },\n    rules: [\n        {\n            conditions: [\n                {\n                    [H]: c,\n                    [I]: [\n                        {\n                            [J]: \"UseGlobalEndpoint\"\n                        },\n                        b\n                    ]\n                },\n                {\n                    [H]: \"not\",\n                    [I]: C\n                },\n                p,\n                r,\n                {\n                    [H]: c,\n                    [I]: [\n                        s,\n                        a\n                    ]\n                },\n                {\n                    [H]: c,\n                    [I]: [\n                        t,\n                        a\n                    ]\n                }\n            ],\n            rules: [\n                {\n                    conditions: [\n                        {\n                            [H]: d,\n                            [I]: [\n                                q,\n                                \"ap-northeast-1\"\n                            ]\n                        }\n                    ],\n                    endpoint: u,\n                    [G]: h\n                },\n                {\n                    conditions: [\n                        {\n                            [H]: d,\n                            [I]: [\n                                q,\n                                \"ap-south-1\"\n                            ]\n                        }\n                    ],\n                    endpoint: u,\n                    [G]: h\n                },\n                {\n                    conditions: [\n                        {\n                            [H]: d,\n                            [I]: [\n                                q,\n                                \"ap-southeast-1\"\n                            ]\n                        }\n                    ],\n                    endpoint: u,\n                    [G]: h\n                },\n                {\n                    conditions: [\n                        {\n                            [H]: d,\n                            [I]: [\n                                q,\n                                \"ap-southeast-2\"\n                            ]\n                        }\n                    ],\n                    endpoint: u,\n                    [G]: h\n                },\n                w,\n                {\n                    conditions: [\n                        {\n                            [H]: d,\n                            [I]: [\n                                q,\n                                \"ca-central-1\"\n                            ]\n                        }\n                    ],\n                    endpoint: u,\n                    [G]: h\n                },\n                {\n                    conditions: [\n                        {\n                            [H]: d,\n                            [I]: [\n                                q,\n                                \"eu-central-1\"\n                            ]\n                        }\n                    ],\n                    endpoint: u,\n                    [G]: h\n                },\n                {\n                    conditions: [\n                        {\n                            [H]: d,\n                            [I]: [\n                                q,\n                                \"eu-north-1\"\n                            ]\n                        }\n                    ],\n                    endpoint: u,\n                    [G]: h\n                },\n                {\n                    conditions: [\n                        {\n                            [H]: d,\n                            [I]: [\n                                q,\n                                \"eu-west-1\"\n                            ]\n                        }\n                    ],\n                    endpoint: u,\n                    [G]: h\n                },\n                {\n                    conditions: [\n                        {\n                            [H]: d,\n                            [I]: [\n                                q,\n                                \"eu-west-2\"\n                            ]\n                        }\n                    ],\n                    endpoint: u,\n                    [G]: h\n                },\n                {\n                    conditions: [\n                        {\n                            [H]: d,\n                            [I]: [\n                                q,\n                                \"eu-west-3\"\n                            ]\n                        }\n                    ],\n                    endpoint: u,\n                    [G]: h\n                },\n                {\n                    conditions: [\n                        {\n                            [H]: d,\n                            [I]: [\n                                q,\n                                \"sa-east-1\"\n                            ]\n                        }\n                    ],\n                    endpoint: u,\n                    [G]: h\n                },\n                {\n                    conditions: [\n                        {\n                            [H]: d,\n                            [I]: [\n                                q,\n                                g\n                            ]\n                        }\n                    ],\n                    endpoint: u,\n                    [G]: h\n                },\n                {\n                    conditions: [\n                        {\n                            [H]: d,\n                            [I]: [\n                                q,\n                                \"us-east-2\"\n                            ]\n                        }\n                    ],\n                    endpoint: u,\n                    [G]: h\n                },\n                {\n                    conditions: [\n                        {\n                            [H]: d,\n                            [I]: [\n                                q,\n                                \"us-west-1\"\n                            ]\n                        }\n                    ],\n                    endpoint: u,\n                    [G]: h\n                },\n                {\n                    conditions: [\n                        {\n                            [H]: d,\n                            [I]: [\n                                q,\n                                \"us-west-2\"\n                            ]\n                        }\n                    ],\n                    endpoint: u,\n                    [G]: h\n                },\n                {\n                    endpoint: {\n                        url: i,\n                        properties: {\n                            authSchemes: [\n                                {\n                                    name: e,\n                                    signingName: f,\n                                    signingRegion: \"{Region}\"\n                                }\n                            ]\n                        },\n                        headers: v\n                    },\n                    [G]: h\n                }\n            ],\n            [G]: j\n        },\n        {\n            conditions: C,\n            rules: [\n                {\n                    conditions: D,\n                    error: \"Invalid Configuration: FIPS and custom endpoint are not supported\",\n                    [G]: k\n                },\n                {\n                    conditions: E,\n                    error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\",\n                    [G]: k\n                },\n                {\n                    endpoint: {\n                        url: o,\n                        properties: v,\n                        headers: v\n                    },\n                    [G]: h\n                }\n            ],\n            [G]: j\n        },\n        {\n            conditions: [\n                p\n            ],\n            rules: [\n                {\n                    conditions: [\n                        r\n                    ],\n                    rules: [\n                        {\n                            conditions: [\n                                x,\n                                y\n                            ],\n                            rules: [\n                                {\n                                    conditions: [\n                                        {\n                                            [H]: c,\n                                            [I]: [\n                                                b,\n                                                z\n                                            ]\n                                        },\n                                        B\n                                    ],\n                                    rules: [\n                                        {\n                                            endpoint: {\n                                                url: \"https://sts-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\",\n                                                properties: v,\n                                                headers: v\n                                            },\n                                            [G]: h\n                                        }\n                                    ],\n                                    [G]: j\n                                },\n                                {\n                                    error: \"FIPS and DualStack are enabled, but this partition does not support one or both\",\n                                    [G]: k\n                                }\n                            ],\n                            [G]: j\n                        },\n                        {\n                            conditions: D,\n                            rules: [\n                                {\n                                    conditions: [\n                                        {\n                                            [H]: c,\n                                            [I]: [\n                                                z,\n                                                b\n                                            ]\n                                        }\n                                    ],\n                                    rules: [\n                                        {\n                                            conditions: [\n                                                {\n                                                    [H]: d,\n                                                    [I]: [\n                                                        {\n                                                            [H]: l,\n                                                            [I]: [\n                                                                A,\n                                                                \"name\"\n                                                            ]\n                                                        },\n                                                        \"aws-us-gov\"\n                                                    ]\n                                                }\n                                            ],\n                                            endpoint: {\n                                                url: \"https://sts.{Region}.amazonaws.com\",\n                                                properties: v,\n                                                headers: v\n                                            },\n                                            [G]: h\n                                        },\n                                        {\n                                            endpoint: {\n                                                url: \"https://sts-fips.{Region}.{PartitionResult#dnsSuffix}\",\n                                                properties: v,\n                                                headers: v\n                                            },\n                                            [G]: h\n                                        }\n                                    ],\n                                    [G]: j\n                                },\n                                {\n                                    error: \"FIPS is enabled but this partition does not support FIPS\",\n                                    [G]: k\n                                }\n                            ],\n                            [G]: j\n                        },\n                        {\n                            conditions: E,\n                            rules: [\n                                {\n                                    conditions: [\n                                        B\n                                    ],\n                                    rules: [\n                                        {\n                                            endpoint: {\n                                                url: \"https://sts.{Region}.{PartitionResult#dualStackDnsSuffix}\",\n                                                properties: v,\n                                                headers: v\n                                            },\n                                            [G]: h\n                                        }\n                                    ],\n                                    [G]: j\n                                },\n                                {\n                                    error: \"DualStack is enabled but this partition does not support DualStack\",\n                                    [G]: k\n                                }\n                            ],\n                            [G]: j\n                        },\n                        w,\n                        {\n                            endpoint: {\n                                url: i,\n                                properties: v,\n                                headers: v\n                            },\n                            [G]: h\n                        }\n                    ],\n                    [G]: j\n                }\n            ],\n            [G]: j\n        },\n        {\n            error: \"Invalid Configuration: Missing Region\",\n            [G]: k\n        }\n    ]\n};\nconst ruleSet = _data;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/endpoint/ruleset.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/index.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   $Command: () => (/* reexport safe */ _commands__WEBPACK_IMPORTED_MODULE_2__.$Command),\n/* harmony export */   AssumeRoleCommand: () => (/* reexport safe */ _commands__WEBPACK_IMPORTED_MODULE_2__.AssumeRoleCommand),\n/* harmony export */   AssumeRoleResponseFilterSensitiveLog: () => (/* reexport safe */ _models__WEBPACK_IMPORTED_MODULE_3__.AssumeRoleResponseFilterSensitiveLog),\n/* harmony export */   AssumeRoleWithWebIdentityCommand: () => (/* reexport safe */ _commands__WEBPACK_IMPORTED_MODULE_2__.AssumeRoleWithWebIdentityCommand),\n/* harmony export */   AssumeRoleWithWebIdentityRequestFilterSensitiveLog: () => (/* reexport safe */ _models__WEBPACK_IMPORTED_MODULE_3__.AssumeRoleWithWebIdentityRequestFilterSensitiveLog),\n/* harmony export */   AssumeRoleWithWebIdentityResponseFilterSensitiveLog: () => (/* reexport safe */ _models__WEBPACK_IMPORTED_MODULE_3__.AssumeRoleWithWebIdentityResponseFilterSensitiveLog),\n/* harmony export */   CredentialsFilterSensitiveLog: () => (/* reexport safe */ _models__WEBPACK_IMPORTED_MODULE_3__.CredentialsFilterSensitiveLog),\n/* harmony export */   ExpiredTokenException: () => (/* reexport safe */ _models__WEBPACK_IMPORTED_MODULE_3__.ExpiredTokenException),\n/* harmony export */   IDPCommunicationErrorException: () => (/* reexport safe */ _models__WEBPACK_IMPORTED_MODULE_3__.IDPCommunicationErrorException),\n/* harmony export */   IDPRejectedClaimException: () => (/* reexport safe */ _models__WEBPACK_IMPORTED_MODULE_3__.IDPRejectedClaimException),\n/* harmony export */   InvalidIdentityTokenException: () => (/* reexport safe */ _models__WEBPACK_IMPORTED_MODULE_3__.InvalidIdentityTokenException),\n/* harmony export */   MalformedPolicyDocumentException: () => (/* reexport safe */ _models__WEBPACK_IMPORTED_MODULE_3__.MalformedPolicyDocumentException),\n/* harmony export */   PackedPolicyTooLargeException: () => (/* reexport safe */ _models__WEBPACK_IMPORTED_MODULE_3__.PackedPolicyTooLargeException),\n/* harmony export */   RegionDisabledException: () => (/* reexport safe */ _models__WEBPACK_IMPORTED_MODULE_3__.RegionDisabledException),\n/* harmony export */   STS: () => (/* reexport safe */ _STS__WEBPACK_IMPORTED_MODULE_1__.STS),\n/* harmony export */   STSClient: () => (/* reexport safe */ _STSClient__WEBPACK_IMPORTED_MODULE_0__.STSClient),\n/* harmony export */   STSServiceException: () => (/* reexport safe */ _models_STSServiceException__WEBPACK_IMPORTED_MODULE_5__.STSServiceException),\n/* harmony export */   __Client: () => (/* reexport safe */ _STSClient__WEBPACK_IMPORTED_MODULE_0__.__Client),\n/* harmony export */   decorateDefaultCredentialProvider: () => (/* reexport safe */ _defaultRoleAssumers__WEBPACK_IMPORTED_MODULE_4__.decorateDefaultCredentialProvider),\n/* harmony export */   getDefaultRoleAssumer: () => (/* reexport safe */ _defaultRoleAssumers__WEBPACK_IMPORTED_MODULE_4__.getDefaultRoleAssumer),\n/* harmony export */   getDefaultRoleAssumerWithWebIdentity: () => (/* reexport safe */ _defaultRoleAssumers__WEBPACK_IMPORTED_MODULE_4__.getDefaultRoleAssumerWithWebIdentity)\n/* harmony export */ });\n/* harmony import */ var _STSClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./STSClient */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/STSClient.js\");\n/* harmony import */ var _STS__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./STS */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/STS.js\");\n/* harmony import */ var _commands__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./commands */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/commands/index.js\");\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./models */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/models/index.js\");\n/* harmony import */ var _defaultRoleAssumers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./defaultRoleAssumers */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/defaultRoleAssumers.js\");\n/* harmony import */ var _models_STSServiceException__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./models/STSServiceException */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/models/STSServiceException.js\");\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3N0cy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBNEI7QUFDTjtBQUNLO0FBQ0Y7QUFDYTtBQUM2QiIsInNvdXJjZXMiOlsid2VicGFjazovL2Nsb3Vkc2hpZnQvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3N0cy9pbmRleC5qcz84NjRiIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL1NUU0NsaWVudFwiO1xuZXhwb3J0ICogZnJvbSBcIi4vU1RTXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9jb21tYW5kc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vbW9kZWxzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9kZWZhdWx0Um9sZUFzc3VtZXJzXCI7XG5leHBvcnQgeyBTVFNTZXJ2aWNlRXhjZXB0aW9uIH0gZnJvbSBcIi4vbW9kZWxzL1NUU1NlcnZpY2VFeGNlcHRpb25cIjtcbiJdLCJuYW1lcyI6WyJTVFNTZXJ2aWNlRXhjZXB0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/models/STSServiceException.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/models/STSServiceException.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   STSServiceException: () => (/* binding */ STSServiceException),\n/* harmony export */   __ServiceException: () => (/* reexport safe */ _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.ServiceException)\n/* harmony export */ });\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/./node_modules/@smithy/smithy-client/dist-cjs/index.js\");\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__);\n\n\nclass STSServiceException extends _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.ServiceException {\n    constructor(options){\n        super(options);\n        Object.setPrototypeOf(this, STSServiceException.prototype);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3N0cy9tb2RlbHMvU1RTU2VydmljZUV4Y2VwdGlvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWdGO0FBQ2xEO0FBQ3ZCLE1BQU1FLDRCQUE0QkQsbUVBQWtCQTtJQUN2REUsWUFBWUMsT0FBTyxDQUFFO1FBQ2pCLEtBQUssQ0FBQ0E7UUFDTkMsT0FBT0MsY0FBYyxDQUFDLElBQUksRUFBRUosb0JBQW9CSyxTQUFTO0lBQzdEO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbG91ZHNoaWZ0Ly4vbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL25lc3RlZC1jbGllbnRzL2Rpc3QtZXMvc3VibW9kdWxlcy9zdHMvbW9kZWxzL1NUU1NlcnZpY2VFeGNlcHRpb24uanM/OWIxMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTZXJ2aWNlRXhjZXB0aW9uIGFzIF9fU2VydmljZUV4Y2VwdGlvbiwgfSBmcm9tIFwiQHNtaXRoeS9zbWl0aHktY2xpZW50XCI7XG5leHBvcnQgeyBfX1NlcnZpY2VFeGNlcHRpb24gfTtcbmV4cG9ydCBjbGFzcyBTVFNTZXJ2aWNlRXhjZXB0aW9uIGV4dGVuZHMgX19TZXJ2aWNlRXhjZXB0aW9uIHtcbiAgICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgICAgIHN1cGVyKG9wdGlvbnMpO1xuICAgICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgU1RTU2VydmljZUV4Y2VwdGlvbi5wcm90b3R5cGUpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6WyJTZXJ2aWNlRXhjZXB0aW9uIiwiX19TZXJ2aWNlRXhjZXB0aW9uIiwiU1RTU2VydmljZUV4Y2VwdGlvbiIsImNvbnN0cnVjdG9yIiwib3B0aW9ucyIsIk9iamVjdCIsInNldFByb3RvdHlwZU9mIiwicHJvdG90eXBlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/models/STSServiceException.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/models/index.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/models/index.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AssumeRoleResponseFilterSensitiveLog: () => (/* reexport safe */ _models_0__WEBPACK_IMPORTED_MODULE_0__.AssumeRoleResponseFilterSensitiveLog),\n/* harmony export */   AssumeRoleWithWebIdentityRequestFilterSensitiveLog: () => (/* reexport safe */ _models_0__WEBPACK_IMPORTED_MODULE_0__.AssumeRoleWithWebIdentityRequestFilterSensitiveLog),\n/* harmony export */   AssumeRoleWithWebIdentityResponseFilterSensitiveLog: () => (/* reexport safe */ _models_0__WEBPACK_IMPORTED_MODULE_0__.AssumeRoleWithWebIdentityResponseFilterSensitiveLog),\n/* harmony export */   CredentialsFilterSensitiveLog: () => (/* reexport safe */ _models_0__WEBPACK_IMPORTED_MODULE_0__.CredentialsFilterSensitiveLog),\n/* harmony export */   ExpiredTokenException: () => (/* reexport safe */ _models_0__WEBPACK_IMPORTED_MODULE_0__.ExpiredTokenException),\n/* harmony export */   IDPCommunicationErrorException: () => (/* reexport safe */ _models_0__WEBPACK_IMPORTED_MODULE_0__.IDPCommunicationErrorException),\n/* harmony export */   IDPRejectedClaimException: () => (/* reexport safe */ _models_0__WEBPACK_IMPORTED_MODULE_0__.IDPRejectedClaimException),\n/* harmony export */   InvalidIdentityTokenException: () => (/* reexport safe */ _models_0__WEBPACK_IMPORTED_MODULE_0__.InvalidIdentityTokenException),\n/* harmony export */   MalformedPolicyDocumentException: () => (/* reexport safe */ _models_0__WEBPACK_IMPORTED_MODULE_0__.MalformedPolicyDocumentException),\n/* harmony export */   PackedPolicyTooLargeException: () => (/* reexport safe */ _models_0__WEBPACK_IMPORTED_MODULE_0__.PackedPolicyTooLargeException),\n/* harmony export */   RegionDisabledException: () => (/* reexport safe */ _models_0__WEBPACK_IMPORTED_MODULE_0__.RegionDisabledException)\n/* harmony export */ });\n/* harmony import */ var _models_0__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./models_0 */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/models/models_0.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3N0cy9tb2RlbHMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQTJCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xvdWRzaGlmdC8uL25vZGVfbW9kdWxlcy9AYXdzLXNkay9uZXN0ZWQtY2xpZW50cy9kaXN0LWVzL3N1Ym1vZHVsZXMvc3RzL21vZGVscy9pbmRleC5qcz8xOTM2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL21vZGVsc18wXCI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/models/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/models/models_0.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/models/models_0.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AssumeRoleResponseFilterSensitiveLog: () => (/* binding */ AssumeRoleResponseFilterSensitiveLog),\n/* harmony export */   AssumeRoleWithWebIdentityRequestFilterSensitiveLog: () => (/* binding */ AssumeRoleWithWebIdentityRequestFilterSensitiveLog),\n/* harmony export */   AssumeRoleWithWebIdentityResponseFilterSensitiveLog: () => (/* binding */ AssumeRoleWithWebIdentityResponseFilterSensitiveLog),\n/* harmony export */   CredentialsFilterSensitiveLog: () => (/* binding */ CredentialsFilterSensitiveLog),\n/* harmony export */   ExpiredTokenException: () => (/* binding */ ExpiredTokenException),\n/* harmony export */   IDPCommunicationErrorException: () => (/* binding */ IDPCommunicationErrorException),\n/* harmony export */   IDPRejectedClaimException: () => (/* binding */ IDPRejectedClaimException),\n/* harmony export */   InvalidIdentityTokenException: () => (/* binding */ InvalidIdentityTokenException),\n/* harmony export */   MalformedPolicyDocumentException: () => (/* binding */ MalformedPolicyDocumentException),\n/* harmony export */   PackedPolicyTooLargeException: () => (/* binding */ PackedPolicyTooLargeException),\n/* harmony export */   RegionDisabledException: () => (/* binding */ RegionDisabledException)\n/* harmony export */ });\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/./node_modules/@smithy/smithy-client/dist-cjs/index.js\");\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _STSServiceException__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./STSServiceException */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/models/STSServiceException.js\");\n\n\nconst CredentialsFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.SecretAccessKey && {\n            SecretAccessKey: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        }\n    });\nconst AssumeRoleResponseFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.Credentials && {\n            Credentials: CredentialsFilterSensitiveLog(obj.Credentials)\n        }\n    });\nclass ExpiredTokenException extends _STSServiceException__WEBPACK_IMPORTED_MODULE_1__.STSServiceException {\n    constructor(opts){\n        super({\n            name: \"ExpiredTokenException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"ExpiredTokenException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ExpiredTokenException.prototype);\n    }\n}\nclass MalformedPolicyDocumentException extends _STSServiceException__WEBPACK_IMPORTED_MODULE_1__.STSServiceException {\n    constructor(opts){\n        super({\n            name: \"MalformedPolicyDocumentException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"MalformedPolicyDocumentException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, MalformedPolicyDocumentException.prototype);\n    }\n}\nclass PackedPolicyTooLargeException extends _STSServiceException__WEBPACK_IMPORTED_MODULE_1__.STSServiceException {\n    constructor(opts){\n        super({\n            name: \"PackedPolicyTooLargeException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"PackedPolicyTooLargeException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, PackedPolicyTooLargeException.prototype);\n    }\n}\nclass RegionDisabledException extends _STSServiceException__WEBPACK_IMPORTED_MODULE_1__.STSServiceException {\n    constructor(opts){\n        super({\n            name: \"RegionDisabledException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"RegionDisabledException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, RegionDisabledException.prototype);\n    }\n}\nclass IDPRejectedClaimException extends _STSServiceException__WEBPACK_IMPORTED_MODULE_1__.STSServiceException {\n    constructor(opts){\n        super({\n            name: \"IDPRejectedClaimException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"IDPRejectedClaimException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, IDPRejectedClaimException.prototype);\n    }\n}\nclass InvalidIdentityTokenException extends _STSServiceException__WEBPACK_IMPORTED_MODULE_1__.STSServiceException {\n    constructor(opts){\n        super({\n            name: \"InvalidIdentityTokenException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidIdentityTokenException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidIdentityTokenException.prototype);\n    }\n}\nconst AssumeRoleWithWebIdentityRequestFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.WebIdentityToken && {\n            WebIdentityToken: _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING\n        }\n    });\nconst AssumeRoleWithWebIdentityResponseFilterSensitiveLog = (obj)=>({\n        ...obj,\n        ...obj.Credentials && {\n            Credentials: CredentialsFilterSensitiveLog(obj.Credentials)\n        }\n    });\nclass IDPCommunicationErrorException extends _STSServiceException__WEBPACK_IMPORTED_MODULE_1__.STSServiceException {\n    constructor(opts){\n        super({\n            name: \"IDPCommunicationErrorException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"IDPCommunicationErrorException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, IDPCommunicationErrorException.prototype);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3N0cy9tb2RlbHMvbW9kZWxzXzAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBeUQ7QUFDc0I7QUFDeEUsTUFBTUcsZ0NBQWdDLENBQUNDLE1BQVM7UUFDbkQsR0FBR0EsR0FBRztRQUNOLEdBQUlBLElBQUlDLGVBQWUsSUFBSTtZQUFFQSxpQkFBaUJMLG1FQUFnQkE7UUFBQyxDQUFDO0lBQ3BFLEdBQUc7QUFDSSxNQUFNTSx1Q0FBdUMsQ0FBQ0YsTUFBUztRQUMxRCxHQUFHQSxHQUFHO1FBQ04sR0FBSUEsSUFBSUcsV0FBVyxJQUFJO1lBQUVBLGFBQWFKLDhCQUE4QkMsSUFBSUcsV0FBVztRQUFFLENBQUM7SUFDMUYsR0FBRztBQUNJLE1BQU1DLDhCQUE4Qk4scUVBQWVBO0lBR3RETyxZQUFZQyxJQUFJLENBQUU7UUFDZCxLQUFLLENBQUM7WUFDRkMsTUFBTTtZQUNOQyxRQUFRO1lBQ1IsR0FBR0YsSUFBSTtRQUNYO2FBUEpDLE9BQU87YUFDUEMsU0FBUztRQU9MQyxPQUFPQyxjQUFjLENBQUMsSUFBSSxFQUFFTixzQkFBc0JPLFNBQVM7SUFDL0Q7QUFDSjtBQUNPLE1BQU1DLHlDQUF5Q2QscUVBQWVBO0lBR2pFTyxZQUFZQyxJQUFJLENBQUU7UUFDZCxLQUFLLENBQUM7WUFDRkMsTUFBTTtZQUNOQyxRQUFRO1lBQ1IsR0FBR0YsSUFBSTtRQUNYO2FBUEpDLE9BQU87YUFDUEMsU0FBUztRQU9MQyxPQUFPQyxjQUFjLENBQUMsSUFBSSxFQUFFRSxpQ0FBaUNELFNBQVM7SUFDMUU7QUFDSjtBQUNPLE1BQU1FLHNDQUFzQ2YscUVBQWVBO0lBRzlETyxZQUFZQyxJQUFJLENBQUU7UUFDZCxLQUFLLENBQUM7WUFDRkMsTUFBTTtZQUNOQyxRQUFRO1lBQ1IsR0FBR0YsSUFBSTtRQUNYO2FBUEpDLE9BQU87YUFDUEMsU0FBUztRQU9MQyxPQUFPQyxjQUFjLENBQUMsSUFBSSxFQUFFRyw4QkFBOEJGLFNBQVM7SUFDdkU7QUFDSjtBQUNPLE1BQU1HLGdDQUFnQ2hCLHFFQUFlQTtJQUd4RE8sWUFBWUMsSUFBSSxDQUFFO1FBQ2QsS0FBSyxDQUFDO1lBQ0ZDLE1BQU07WUFDTkMsUUFBUTtZQUNSLEdBQUdGLElBQUk7UUFDWDthQVBKQyxPQUFPO2FBQ1BDLFNBQVM7UUFPTEMsT0FBT0MsY0FBYyxDQUFDLElBQUksRUFBRUksd0JBQXdCSCxTQUFTO0lBQ2pFO0FBQ0o7QUFDTyxNQUFNSSxrQ0FBa0NqQixxRUFBZUE7SUFHMURPLFlBQVlDLElBQUksQ0FBRTtRQUNkLEtBQUssQ0FBQztZQUNGQyxNQUFNO1lBQ05DLFFBQVE7WUFDUixHQUFHRixJQUFJO1FBQ1g7YUFQSkMsT0FBTzthQUNQQyxTQUFTO1FBT0xDLE9BQU9DLGNBQWMsQ0FBQyxJQUFJLEVBQUVLLDBCQUEwQkosU0FBUztJQUNuRTtBQUNKO0FBQ08sTUFBTUssc0NBQXNDbEIscUVBQWVBO0lBRzlETyxZQUFZQyxJQUFJLENBQUU7UUFDZCxLQUFLLENBQUM7WUFDRkMsTUFBTTtZQUNOQyxRQUFRO1lBQ1IsR0FBR0YsSUFBSTtRQUNYO2FBUEpDLE9BQU87YUFDUEMsU0FBUztRQU9MQyxPQUFPQyxjQUFjLENBQUMsSUFBSSxFQUFFTSw4QkFBOEJMLFNBQVM7SUFDdkU7QUFDSjtBQUNPLE1BQU1NLHFEQUFxRCxDQUFDakIsTUFBUztRQUN4RSxHQUFHQSxHQUFHO1FBQ04sR0FBSUEsSUFBSWtCLGdCQUFnQixJQUFJO1lBQUVBLGtCQUFrQnRCLG1FQUFnQkE7UUFBQyxDQUFDO0lBQ3RFLEdBQUc7QUFDSSxNQUFNdUIsc0RBQXNELENBQUNuQixNQUFTO1FBQ3pFLEdBQUdBLEdBQUc7UUFDTixHQUFJQSxJQUFJRyxXQUFXLElBQUk7WUFBRUEsYUFBYUosOEJBQThCQyxJQUFJRyxXQUFXO1FBQUUsQ0FBQztJQUMxRixHQUFHO0FBQ0ksTUFBTWlCLHVDQUF1Q3RCLHFFQUFlQTtJQUcvRE8sWUFBWUMsSUFBSSxDQUFFO1FBQ2QsS0FBSyxDQUFDO1lBQ0ZDLE1BQU07WUFDTkMsUUFBUTtZQUNSLEdBQUdGLElBQUk7UUFDWDthQVBKQyxPQUFPO2FBQ1BDLFNBQVM7UUFPTEMsT0FBT0MsY0FBYyxDQUFDLElBQUksRUFBRVUsK0JBQStCVCxTQUFTO0lBQ3hFO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbG91ZHNoaWZ0Ly4vbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL25lc3RlZC1jbGllbnRzL2Rpc3QtZXMvc3VibW9kdWxlcy9zdHMvbW9kZWxzL21vZGVsc18wLmpzPzEzN2UiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU0VOU0lUSVZFX1NUUklORyB9IGZyb20gXCJAc21pdGh5L3NtaXRoeS1jbGllbnRcIjtcbmltcG9ydCB7IFNUU1NlcnZpY2VFeGNlcHRpb24gYXMgX19CYXNlRXhjZXB0aW9uIH0gZnJvbSBcIi4vU1RTU2VydmljZUV4Y2VwdGlvblwiO1xuZXhwb3J0IGNvbnN0IENyZWRlbnRpYWxzRmlsdGVyU2Vuc2l0aXZlTG9nID0gKG9iaikgPT4gKHtcbiAgICAuLi5vYmosXG4gICAgLi4uKG9iai5TZWNyZXRBY2Nlc3NLZXkgJiYgeyBTZWNyZXRBY2Nlc3NLZXk6IFNFTlNJVElWRV9TVFJJTkcgfSksXG59KTtcbmV4cG9ydCBjb25zdCBBc3N1bWVSb2xlUmVzcG9uc2VGaWx0ZXJTZW5zaXRpdmVMb2cgPSAob2JqKSA9PiAoe1xuICAgIC4uLm9iaixcbiAgICAuLi4ob2JqLkNyZWRlbnRpYWxzICYmIHsgQ3JlZGVudGlhbHM6IENyZWRlbnRpYWxzRmlsdGVyU2Vuc2l0aXZlTG9nKG9iai5DcmVkZW50aWFscykgfSksXG59KTtcbmV4cG9ydCBjbGFzcyBFeHBpcmVkVG9rZW5FeGNlcHRpb24gZXh0ZW5kcyBfX0Jhc2VFeGNlcHRpb24ge1xuICAgIG5hbWUgPSBcIkV4cGlyZWRUb2tlbkV4Y2VwdGlvblwiO1xuICAgICRmYXVsdCA9IFwiY2xpZW50XCI7XG4gICAgY29uc3RydWN0b3Iob3B0cykge1xuICAgICAgICBzdXBlcih7XG4gICAgICAgICAgICBuYW1lOiBcIkV4cGlyZWRUb2tlbkV4Y2VwdGlvblwiLFxuICAgICAgICAgICAgJGZhdWx0OiBcImNsaWVudFwiLFxuICAgICAgICAgICAgLi4ub3B0cyxcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBFeHBpcmVkVG9rZW5FeGNlcHRpb24ucHJvdG90eXBlKTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgTWFsZm9ybWVkUG9saWN5RG9jdW1lbnRFeGNlcHRpb24gZXh0ZW5kcyBfX0Jhc2VFeGNlcHRpb24ge1xuICAgIG5hbWUgPSBcIk1hbGZvcm1lZFBvbGljeURvY3VtZW50RXhjZXB0aW9uXCI7XG4gICAgJGZhdWx0ID0gXCJjbGllbnRcIjtcbiAgICBjb25zdHJ1Y3RvcihvcHRzKSB7XG4gICAgICAgIHN1cGVyKHtcbiAgICAgICAgICAgIG5hbWU6IFwiTWFsZm9ybWVkUG9saWN5RG9jdW1lbnRFeGNlcHRpb25cIixcbiAgICAgICAgICAgICRmYXVsdDogXCJjbGllbnRcIixcbiAgICAgICAgICAgIC4uLm9wdHMsXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgTWFsZm9ybWVkUG9saWN5RG9jdW1lbnRFeGNlcHRpb24ucHJvdG90eXBlKTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgUGFja2VkUG9saWN5VG9vTGFyZ2VFeGNlcHRpb24gZXh0ZW5kcyBfX0Jhc2VFeGNlcHRpb24ge1xuICAgIG5hbWUgPSBcIlBhY2tlZFBvbGljeVRvb0xhcmdlRXhjZXB0aW9uXCI7XG4gICAgJGZhdWx0ID0gXCJjbGllbnRcIjtcbiAgICBjb25zdHJ1Y3RvcihvcHRzKSB7XG4gICAgICAgIHN1cGVyKHtcbiAgICAgICAgICAgIG5hbWU6IFwiUGFja2VkUG9saWN5VG9vTGFyZ2VFeGNlcHRpb25cIixcbiAgICAgICAgICAgICRmYXVsdDogXCJjbGllbnRcIixcbiAgICAgICAgICAgIC4uLm9wdHMsXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgUGFja2VkUG9saWN5VG9vTGFyZ2VFeGNlcHRpb24ucHJvdG90eXBlKTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgUmVnaW9uRGlzYWJsZWRFeGNlcHRpb24gZXh0ZW5kcyBfX0Jhc2VFeGNlcHRpb24ge1xuICAgIG5hbWUgPSBcIlJlZ2lvbkRpc2FibGVkRXhjZXB0aW9uXCI7XG4gICAgJGZhdWx0ID0gXCJjbGllbnRcIjtcbiAgICBjb25zdHJ1Y3RvcihvcHRzKSB7XG4gICAgICAgIHN1cGVyKHtcbiAgICAgICAgICAgIG5hbWU6IFwiUmVnaW9uRGlzYWJsZWRFeGNlcHRpb25cIixcbiAgICAgICAgICAgICRmYXVsdDogXCJjbGllbnRcIixcbiAgICAgICAgICAgIC4uLm9wdHMsXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgUmVnaW9uRGlzYWJsZWRFeGNlcHRpb24ucHJvdG90eXBlKTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgSURQUmVqZWN0ZWRDbGFpbUV4Y2VwdGlvbiBleHRlbmRzIF9fQmFzZUV4Y2VwdGlvbiB7XG4gICAgbmFtZSA9IFwiSURQUmVqZWN0ZWRDbGFpbUV4Y2VwdGlvblwiO1xuICAgICRmYXVsdCA9IFwiY2xpZW50XCI7XG4gICAgY29uc3RydWN0b3Iob3B0cykge1xuICAgICAgICBzdXBlcih7XG4gICAgICAgICAgICBuYW1lOiBcIklEUFJlamVjdGVkQ2xhaW1FeGNlcHRpb25cIixcbiAgICAgICAgICAgICRmYXVsdDogXCJjbGllbnRcIixcbiAgICAgICAgICAgIC4uLm9wdHMsXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgSURQUmVqZWN0ZWRDbGFpbUV4Y2VwdGlvbi5wcm90b3R5cGUpO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBJbnZhbGlkSWRlbnRpdHlUb2tlbkV4Y2VwdGlvbiBleHRlbmRzIF9fQmFzZUV4Y2VwdGlvbiB7XG4gICAgbmFtZSA9IFwiSW52YWxpZElkZW50aXR5VG9rZW5FeGNlcHRpb25cIjtcbiAgICAkZmF1bHQgPSBcImNsaWVudFwiO1xuICAgIGNvbnN0cnVjdG9yKG9wdHMpIHtcbiAgICAgICAgc3VwZXIoe1xuICAgICAgICAgICAgbmFtZTogXCJJbnZhbGlkSWRlbnRpdHlUb2tlbkV4Y2VwdGlvblwiLFxuICAgICAgICAgICAgJGZhdWx0OiBcImNsaWVudFwiLFxuICAgICAgICAgICAgLi4ub3B0cyxcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBJbnZhbGlkSWRlbnRpdHlUb2tlbkV4Y2VwdGlvbi5wcm90b3R5cGUpO1xuICAgIH1cbn1cbmV4cG9ydCBjb25zdCBBc3N1bWVSb2xlV2l0aFdlYklkZW50aXR5UmVxdWVzdEZpbHRlclNlbnNpdGl2ZUxvZyA9IChvYmopID0+ICh7XG4gICAgLi4ub2JqLFxuICAgIC4uLihvYmouV2ViSWRlbnRpdHlUb2tlbiAmJiB7IFdlYklkZW50aXR5VG9rZW46IFNFTlNJVElWRV9TVFJJTkcgfSksXG59KTtcbmV4cG9ydCBjb25zdCBBc3N1bWVSb2xlV2l0aFdlYklkZW50aXR5UmVzcG9uc2VGaWx0ZXJTZW5zaXRpdmVMb2cgPSAob2JqKSA9PiAoe1xuICAgIC4uLm9iaixcbiAgICAuLi4ob2JqLkNyZWRlbnRpYWxzICYmIHsgQ3JlZGVudGlhbHM6IENyZWRlbnRpYWxzRmlsdGVyU2Vuc2l0aXZlTG9nKG9iai5DcmVkZW50aWFscykgfSksXG59KTtcbmV4cG9ydCBjbGFzcyBJRFBDb21tdW5pY2F0aW9uRXJyb3JFeGNlcHRpb24gZXh0ZW5kcyBfX0Jhc2VFeGNlcHRpb24ge1xuICAgIG5hbWUgPSBcIklEUENvbW11bmljYXRpb25FcnJvckV4Y2VwdGlvblwiO1xuICAgICRmYXVsdCA9IFwiY2xpZW50XCI7XG4gICAgY29uc3RydWN0b3Iob3B0cykge1xuICAgICAgICBzdXBlcih7XG4gICAgICAgICAgICBuYW1lOiBcIklEUENvbW11bmljYXRpb25FcnJvckV4Y2VwdGlvblwiLFxuICAgICAgICAgICAgJGZhdWx0OiBcImNsaWVudFwiLFxuICAgICAgICAgICAgLi4ub3B0cyxcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBJRFBDb21tdW5pY2F0aW9uRXJyb3JFeGNlcHRpb24ucHJvdG90eXBlKTtcbiAgICB9XG59XG4iXSwibmFtZXMiOlsiU0VOU0lUSVZFX1NUUklORyIsIlNUU1NlcnZpY2VFeGNlcHRpb24iLCJfX0Jhc2VFeGNlcHRpb24iLCJDcmVkZW50aWFsc0ZpbHRlclNlbnNpdGl2ZUxvZyIsIm9iaiIsIlNlY3JldEFjY2Vzc0tleSIsIkFzc3VtZVJvbGVSZXNwb25zZUZpbHRlclNlbnNpdGl2ZUxvZyIsIkNyZWRlbnRpYWxzIiwiRXhwaXJlZFRva2VuRXhjZXB0aW9uIiwiY29uc3RydWN0b3IiLCJvcHRzIiwibmFtZSIsIiRmYXVsdCIsIk9iamVjdCIsInNldFByb3RvdHlwZU9mIiwicHJvdG90eXBlIiwiTWFsZm9ybWVkUG9saWN5RG9jdW1lbnRFeGNlcHRpb24iLCJQYWNrZWRQb2xpY3lUb29MYXJnZUV4Y2VwdGlvbiIsIlJlZ2lvbkRpc2FibGVkRXhjZXB0aW9uIiwiSURQUmVqZWN0ZWRDbGFpbUV4Y2VwdGlvbiIsIkludmFsaWRJZGVudGl0eVRva2VuRXhjZXB0aW9uIiwiQXNzdW1lUm9sZVdpdGhXZWJJZGVudGl0eVJlcXVlc3RGaWx0ZXJTZW5zaXRpdmVMb2ciLCJXZWJJZGVudGl0eVRva2VuIiwiQXNzdW1lUm9sZVdpdGhXZWJJZGVudGl0eVJlc3BvbnNlRmlsdGVyU2Vuc2l0aXZlTG9nIiwiSURQQ29tbXVuaWNhdGlvbkVycm9yRXhjZXB0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/models/models_0.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/protocols/Aws_query.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/protocols/Aws_query.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   de_AssumeRoleCommand: () => (/* binding */ de_AssumeRoleCommand),\n/* harmony export */   de_AssumeRoleWithWebIdentityCommand: () => (/* binding */ de_AssumeRoleWithWebIdentityCommand),\n/* harmony export */   se_AssumeRoleCommand: () => (/* binding */ se_AssumeRoleCommand),\n/* harmony export */   se_AssumeRoleWithWebIdentityCommand: () => (/* binding */ se_AssumeRoleWithWebIdentityCommand)\n/* harmony export */ });\n/* harmony import */ var _aws_sdk_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @aws-sdk/core */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/protocols/xml/parseXmlBody.js\");\n/* harmony import */ var _smithy_protocol_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @smithy/protocol-http */ \"(rsc)/./node_modules/@smithy/protocol-http/dist-cjs/index.js\");\n/* harmony import */ var _smithy_protocol_http__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_smithy_protocol_http__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/./node_modules/@smithy/smithy-client/dist-cjs/index.js\");\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _models_models_0__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../models/models_0 */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/models/models_0.js\");\n/* harmony import */ var _models_STSServiceException__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../models/STSServiceException */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/models/STSServiceException.js\");\n\n\n\n\n\nconst se_AssumeRoleCommand = async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_AssumeRoleRequest(input, context),\n        [_A]: _AR,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_AssumeRoleWithWebIdentityCommand = async (input, context)=>{\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_AssumeRoleWithWebIdentityRequest(input, context),\n        [_A]: _ARWWI,\n        [_V]: _\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst de_AssumeRoleCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0,_aws_sdk_core__WEBPACK_IMPORTED_MODULE_4__.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_AssumeRoleResponse(data.AssumeRoleResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_AssumeRoleWithWebIdentityCommand = async (output, context)=>{\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await (0,_aws_sdk_core__WEBPACK_IMPORTED_MODULE_4__.parseXmlBody)(output.body, context);\n    let contents = {};\n    contents = de_AssumeRoleWithWebIdentityResponse(data.AssumeRoleWithWebIdentityResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents\n    };\n    return response;\n};\nconst de_CommandError = async (output, context)=>{\n    const parsedOutput = {\n        ...output,\n        body: await (0,_aws_sdk_core__WEBPACK_IMPORTED_MODULE_4__.parseXmlErrorBody)(output.body, context)\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch(errorCode){\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.sts#ExpiredTokenException\":\n            throw await de_ExpiredTokenExceptionRes(parsedOutput, context);\n        case \"MalformedPolicyDocument\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            throw await de_MalformedPolicyDocumentExceptionRes(parsedOutput, context);\n        case \"PackedPolicyTooLarge\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            throw await de_PackedPolicyTooLargeExceptionRes(parsedOutput, context);\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await de_RegionDisabledExceptionRes(parsedOutput, context);\n        case \"IDPCommunicationError\":\n        case \"com.amazonaws.sts#IDPCommunicationErrorException\":\n            throw await de_IDPCommunicationErrorExceptionRes(parsedOutput, context);\n        case \"IDPRejectedClaim\":\n        case \"com.amazonaws.sts#IDPRejectedClaimException\":\n            throw await de_IDPRejectedClaimExceptionRes(parsedOutput, context);\n        case \"InvalidIdentityToken\":\n        case \"com.amazonaws.sts#InvalidIdentityTokenException\":\n            throw await de_InvalidIdentityTokenExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode\n            });\n    }\n};\nconst de_ExpiredTokenExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = de_ExpiredTokenException(body.Error, context);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.ExpiredTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_IDPCommunicationErrorExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = de_IDPCommunicationErrorException(body.Error, context);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.IDPCommunicationErrorException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_IDPRejectedClaimExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = de_IDPRejectedClaimException(body.Error, context);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.IDPRejectedClaimException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_InvalidIdentityTokenExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = de_InvalidIdentityTokenException(body.Error, context);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.InvalidIdentityTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_MalformedPolicyDocumentExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = de_MalformedPolicyDocumentException(body.Error, context);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.MalformedPolicyDocumentException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_PackedPolicyTooLargeExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = de_PackedPolicyTooLargeException(body.Error, context);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.PackedPolicyTooLargeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst de_RegionDisabledExceptionRes = async (parsedOutput, context)=>{\n    const body = parsedOutput.body;\n    const deserialized = de_RegionDisabledException(body.Error, context);\n    const exception = new _models_models_0__WEBPACK_IMPORTED_MODULE_2__.RegionDisabledException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized\n    });\n    return (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.decorateServiceException)(exception, body);\n};\nconst se_AssumeRoleRequest = (input, context)=>{\n    const entries = {};\n    if (input[_RA] != null) {\n        entries[_RA] = input[_RA];\n    }\n    if (input[_RSN] != null) {\n        entries[_RSN] = input[_RSN];\n    }\n    if (input[_PA] != null) {\n        const memberEntries = se_policyDescriptorListType(input[_PA], context);\n        if (input[_PA]?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_DS] != null) {\n        entries[_DS] = input[_DS];\n    }\n    if (input[_T] != null) {\n        const memberEntries = se_tagListType(input[_T], context);\n        if (input[_T]?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_TTK] != null) {\n        const memberEntries = se_tagKeyListType(input[_TTK], context);\n        if (input[_TTK]?.length === 0) {\n            entries.TransitiveTagKeys = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `TransitiveTagKeys.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_EI] != null) {\n        entries[_EI] = input[_EI];\n    }\n    if (input[_SN] != null) {\n        entries[_SN] = input[_SN];\n    }\n    if (input[_TC] != null) {\n        entries[_TC] = input[_TC];\n    }\n    if (input[_SI] != null) {\n        entries[_SI] = input[_SI];\n    }\n    if (input[_PC] != null) {\n        const memberEntries = se_ProvidedContextsListType(input[_PC], context);\n        if (input[_PC]?.length === 0) {\n            entries.ProvidedContexts = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `ProvidedContexts.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_AssumeRoleWithWebIdentityRequest = (input, context)=>{\n    const entries = {};\n    if (input[_RA] != null) {\n        entries[_RA] = input[_RA];\n    }\n    if (input[_RSN] != null) {\n        entries[_RSN] = input[_RSN];\n    }\n    if (input[_WIT] != null) {\n        entries[_WIT] = input[_WIT];\n    }\n    if (input[_PI] != null) {\n        entries[_PI] = input[_PI];\n    }\n    if (input[_PA] != null) {\n        const memberEntries = se_policyDescriptorListType(input[_PA], context);\n        if (input[_PA]?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_DS] != null) {\n        entries[_DS] = input[_DS];\n    }\n    return entries;\n};\nconst se_policyDescriptorListType = (input, context)=>{\n    const entries = {};\n    let counter = 1;\n    for (const entry of input){\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_PolicyDescriptorType(entry, context);\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst se_PolicyDescriptorType = (input, context)=>{\n    const entries = {};\n    if (input[_a] != null) {\n        entries[_a] = input[_a];\n    }\n    return entries;\n};\nconst se_ProvidedContext = (input, context)=>{\n    const entries = {};\n    if (input[_PAr] != null) {\n        entries[_PAr] = input[_PAr];\n    }\n    if (input[_CA] != null) {\n        entries[_CA] = input[_CA];\n    }\n    return entries;\n};\nconst se_ProvidedContextsListType = (input, context)=>{\n    const entries = {};\n    let counter = 1;\n    for (const entry of input){\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_ProvidedContext(entry, context);\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst se_Tag = (input, context)=>{\n    const entries = {};\n    if (input[_K] != null) {\n        entries[_K] = input[_K];\n    }\n    if (input[_Va] != null) {\n        entries[_Va] = input[_Va];\n    }\n    return entries;\n};\nconst se_tagKeyListType = (input, context)=>{\n    const entries = {};\n    let counter = 1;\n    for (const entry of input){\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst se_tagListType = (input, context)=>{\n    const entries = {};\n    let counter = 1;\n    for (const entry of input){\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_Tag(entry, context);\n        Object.entries(memberEntries).forEach(([key, value])=>{\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst de_AssumedRoleUser = (output, context)=>{\n    const contents = {};\n    if (output[_ARI] != null) {\n        contents[_ARI] = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString)(output[_ARI]);\n    }\n    if (output[_Ar] != null) {\n        contents[_Ar] = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString)(output[_Ar]);\n    }\n    return contents;\n};\nconst de_AssumeRoleResponse = (output, context)=>{\n    const contents = {};\n    if (output[_C] != null) {\n        contents[_C] = de_Credentials(output[_C], context);\n    }\n    if (output[_ARU] != null) {\n        contents[_ARU] = de_AssumedRoleUser(output[_ARU], context);\n    }\n    if (output[_PPS] != null) {\n        contents[_PPS] = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.strictParseInt32)(output[_PPS]);\n    }\n    if (output[_SI] != null) {\n        contents[_SI] = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString)(output[_SI]);\n    }\n    return contents;\n};\nconst de_AssumeRoleWithWebIdentityResponse = (output, context)=>{\n    const contents = {};\n    if (output[_C] != null) {\n        contents[_C] = de_Credentials(output[_C], context);\n    }\n    if (output[_SFWIT] != null) {\n        contents[_SFWIT] = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString)(output[_SFWIT]);\n    }\n    if (output[_ARU] != null) {\n        contents[_ARU] = de_AssumedRoleUser(output[_ARU], context);\n    }\n    if (output[_PPS] != null) {\n        contents[_PPS] = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.strictParseInt32)(output[_PPS]);\n    }\n    if (output[_Pr] != null) {\n        contents[_Pr] = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString)(output[_Pr]);\n    }\n    if (output[_Au] != null) {\n        contents[_Au] = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString)(output[_Au]);\n    }\n    if (output[_SI] != null) {\n        contents[_SI] = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString)(output[_SI]);\n    }\n    return contents;\n};\nconst de_Credentials = (output, context)=>{\n    const contents = {};\n    if (output[_AKI] != null) {\n        contents[_AKI] = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString)(output[_AKI]);\n    }\n    if (output[_SAK] != null) {\n        contents[_SAK] = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString)(output[_SAK]);\n    }\n    if (output[_ST] != null) {\n        contents[_ST] = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString)(output[_ST]);\n    }\n    if (output[_E] != null) {\n        contents[_E] = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectNonNull)((0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.parseRfc3339DateTimeWithOffset)(output[_E]));\n    }\n    return contents;\n};\nconst de_ExpiredTokenException = (output, context)=>{\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString)(output[_m]);\n    }\n    return contents;\n};\nconst de_IDPCommunicationErrorException = (output, context)=>{\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString)(output[_m]);\n    }\n    return contents;\n};\nconst de_IDPRejectedClaimException = (output, context)=>{\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString)(output[_m]);\n    }\n    return contents;\n};\nconst de_InvalidIdentityTokenException = (output, context)=>{\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString)(output[_m]);\n    }\n    return contents;\n};\nconst de_MalformedPolicyDocumentException = (output, context)=>{\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString)(output[_m]);\n    }\n    return contents;\n};\nconst de_PackedPolicyTooLargeException = (output, context)=>{\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString)(output[_m]);\n    }\n    return contents;\n};\nconst de_RegionDisabledException = (output, context)=>{\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.expectString)(output[_m]);\n    }\n    return contents;\n};\nconst deserializeMetadata = (output)=>({\n        httpStatusCode: output.statusCode,\n        requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n        extendedRequestId: output.headers[\"x-amz-id-2\"],\n        cfId: output.headers[\"x-amz-cf-id\"]\n    });\nconst collectBodyString = (streamBody, context)=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.collectBody)(streamBody, context).then((body)=>context.utf8Encoder(body));\nconst throwDefaultError = (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.withBaseException)(_models_STSServiceException__WEBPACK_IMPORTED_MODULE_3__.STSServiceException);\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body)=>{\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n        headers\n    };\n    if (resolvedHostname !== undefined) {\n        contents.hostname = resolvedHostname;\n    }\n    if (body !== undefined) {\n        contents.body = body;\n    }\n    return new _smithy_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest(contents);\n};\nconst SHARED_HEADERS = {\n    \"content-type\": \"application/x-www-form-urlencoded\"\n};\nconst _ = \"2011-06-15\";\nconst _A = \"Action\";\nconst _AKI = \"AccessKeyId\";\nconst _AR = \"AssumeRole\";\nconst _ARI = \"AssumedRoleId\";\nconst _ARU = \"AssumedRoleUser\";\nconst _ARWWI = \"AssumeRoleWithWebIdentity\";\nconst _Ar = \"Arn\";\nconst _Au = \"Audience\";\nconst _C = \"Credentials\";\nconst _CA = \"ContextAssertion\";\nconst _DS = \"DurationSeconds\";\nconst _E = \"Expiration\";\nconst _EI = \"ExternalId\";\nconst _K = \"Key\";\nconst _P = \"Policy\";\nconst _PA = \"PolicyArns\";\nconst _PAr = \"ProviderArn\";\nconst _PC = \"ProvidedContexts\";\nconst _PI = \"ProviderId\";\nconst _PPS = \"PackedPolicySize\";\nconst _Pr = \"Provider\";\nconst _RA = \"RoleArn\";\nconst _RSN = \"RoleSessionName\";\nconst _SAK = \"SecretAccessKey\";\nconst _SFWIT = \"SubjectFromWebIdentityToken\";\nconst _SI = \"SourceIdentity\";\nconst _SN = \"SerialNumber\";\nconst _ST = \"SessionToken\";\nconst _T = \"Tags\";\nconst _TC = \"TokenCode\";\nconst _TTK = \"TransitiveTagKeys\";\nconst _V = \"Version\";\nconst _Va = \"Value\";\nconst _WIT = \"WebIdentityToken\";\nconst _a = \"arn\";\nconst _m = \"message\";\nconst buildFormUrlencodedString = (formEntries)=>Object.entries(formEntries).map(([key, value])=>(0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(key) + \"=\" + (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(value)).join(\"&\");\nconst loadQueryErrorCode = (output, data)=>{\n    if (data.Error?.Code !== undefined) {\n        return data.Error.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/protocols/Aws_query.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/runtimeConfig.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/runtimeConfig.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRuntimeConfig: () => (/* binding */ getRuntimeConfig)\n/* harmony export */ });\n/* harmony import */ var _package_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../package.json */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/package.json\");\n/* harmony import */ var _aws_sdk_core__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @aws-sdk/core */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/client/emitWarningIfUnsupportedVersion.js\");\n/* harmony import */ var _aws_sdk_core__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @aws-sdk/core */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/AwsSdkSigV4Signer.js\");\n/* harmony import */ var _aws_sdk_util_user_agent_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/util-user-agent-node */ \"(rsc)/./node_modules/@aws-sdk/util-user-agent-node/dist-cjs/index.js\");\n/* harmony import */ var _aws_sdk_util_user_agent_node__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_aws_sdk_util_user_agent_node__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _smithy_config_resolver__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @smithy/config-resolver */ \"(rsc)/./node_modules/@smithy/config-resolver/dist-cjs/index.js\");\n/* harmony import */ var _smithy_config_resolver__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_smithy_config_resolver__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _smithy_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @smithy/core */ \"(rsc)/./node_modules/@smithy/core/dist-es/index.js\");\n/* harmony import */ var _smithy_hash_node__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @smithy/hash-node */ \"(rsc)/./node_modules/@smithy/hash-node/dist-cjs/index.js\");\n/* harmony import */ var _smithy_hash_node__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_smithy_hash_node__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _smithy_middleware_retry__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @smithy/middleware-retry */ \"(rsc)/./node_modules/@smithy/middleware-retry/dist-cjs/index.js\");\n/* harmony import */ var _smithy_middleware_retry__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_smithy_middleware_retry__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _smithy_node_config_provider__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @smithy/node-config-provider */ \"(rsc)/./node_modules/@smithy/node-config-provider/dist-cjs/index.js\");\n/* harmony import */ var _smithy_node_config_provider__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_smithy_node_config_provider__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _smithy_node_http_handler__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @smithy/node-http-handler */ \"(rsc)/./node_modules/@smithy/node-http-handler/dist-cjs/index.js\");\n/* harmony import */ var _smithy_node_http_handler__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_smithy_node_http_handler__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _smithy_util_body_length_node__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @smithy/util-body-length-node */ \"(rsc)/./node_modules/@smithy/util-body-length-node/dist-cjs/index.js\");\n/* harmony import */ var _smithy_util_body_length_node__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_smithy_util_body_length_node__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _smithy_util_retry__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @smithy/util-retry */ \"(rsc)/./node_modules/@smithy/util-retry/dist-cjs/index.js\");\n/* harmony import */ var _smithy_util_retry__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_smithy_util_retry__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _runtimeConfig_shared__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./runtimeConfig.shared */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/runtimeConfig.shared.js\");\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/./node_modules/@smithy/smithy-client/dist-cjs/index.js\");\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var _smithy_util_defaults_mode_node__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @smithy/util-defaults-mode-node */ \"(rsc)/./node_modules/@smithy/util-defaults-mode-node/dist-cjs/index.js\");\n/* harmony import */ var _smithy_util_defaults_mode_node__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_smithy_util_defaults_mode_node__WEBPACK_IMPORTED_MODULE_12__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst getRuntimeConfig = (config)=>{\n    (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_11__.emitWarningIfUnsupportedVersion)(process.version);\n    const defaultsMode = (0,_smithy_util_defaults_mode_node__WEBPACK_IMPORTED_MODULE_12__.resolveDefaultsModeConfig)(config);\n    const defaultConfigProvider = ()=>defaultsMode().then(_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_11__.loadConfigsForDefaultMode);\n    const clientSharedValues = (0,_runtimeConfig_shared__WEBPACK_IMPORTED_MODULE_10__.getRuntimeConfig)(config);\n    (0,_aws_sdk_core__WEBPACK_IMPORTED_MODULE_13__.emitWarningIfUnsupportedVersion)(process.version);\n    const profileConfig = {\n        profile: config?.profile\n    };\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? _smithy_util_body_length_node__WEBPACK_IMPORTED_MODULE_8__.calculateBodyLength,\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ?? (0,_aws_sdk_util_user_agent_node__WEBPACK_IMPORTED_MODULE_1__.createDefaultUserAgentProvider)({\n            serviceId: clientSharedValues.serviceId,\n            clientVersion: _package_json__WEBPACK_IMPORTED_MODULE_0__.version\n        }),\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc)=>ipc.getIdentityProvider(\"aws.auth#sigv4\") || (async (idProps)=>await config.credentialDefaultProvider(idProps?.__config || {})()),\n                signer: new _aws_sdk_core__WEBPACK_IMPORTED_MODULE_14__.AwsSdkSigV4Signer()\n            },\n            {\n                schemeId: \"smithy.api#noAuth\",\n                identityProvider: (ipc)=>ipc.getIdentityProvider(\"smithy.api#noAuth\") || (async ()=>({})),\n                signer: new _smithy_core__WEBPACK_IMPORTED_MODULE_3__.NoAuthSigner()\n            }\n        ],\n        maxAttempts: config?.maxAttempts ?? (0,_smithy_node_config_provider__WEBPACK_IMPORTED_MODULE_6__.loadConfig)(_smithy_middleware_retry__WEBPACK_IMPORTED_MODULE_5__.NODE_MAX_ATTEMPT_CONFIG_OPTIONS, config),\n        region: config?.region ?? (0,_smithy_node_config_provider__WEBPACK_IMPORTED_MODULE_6__.loadConfig)(_smithy_config_resolver__WEBPACK_IMPORTED_MODULE_2__.NODE_REGION_CONFIG_OPTIONS, {\n            ..._smithy_config_resolver__WEBPACK_IMPORTED_MODULE_2__.NODE_REGION_CONFIG_FILE_OPTIONS,\n            ...profileConfig\n        }),\n        requestHandler: _smithy_node_http_handler__WEBPACK_IMPORTED_MODULE_7__.NodeHttpHandler.create(config?.requestHandler ?? defaultConfigProvider),\n        retryMode: config?.retryMode ?? (0,_smithy_node_config_provider__WEBPACK_IMPORTED_MODULE_6__.loadConfig)({\n            ..._smithy_middleware_retry__WEBPACK_IMPORTED_MODULE_5__.NODE_RETRY_MODE_CONFIG_OPTIONS,\n            default: async ()=>(await defaultConfigProvider()).retryMode || _smithy_util_retry__WEBPACK_IMPORTED_MODULE_9__.DEFAULT_RETRY_MODE\n        }, config),\n        sha256: config?.sha256 ?? _smithy_hash_node__WEBPACK_IMPORTED_MODULE_4__.Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? _smithy_node_http_handler__WEBPACK_IMPORTED_MODULE_7__.streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? (0,_smithy_node_config_provider__WEBPACK_IMPORTED_MODULE_6__.loadConfig)(_smithy_config_resolver__WEBPACK_IMPORTED_MODULE_2__.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, profileConfig),\n        useFipsEndpoint: config?.useFipsEndpoint ?? (0,_smithy_node_config_provider__WEBPACK_IMPORTED_MODULE_6__.loadConfig)(_smithy_config_resolver__WEBPACK_IMPORTED_MODULE_2__.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, profileConfig),\n        userAgentAppId: config?.userAgentAppId ?? (0,_smithy_node_config_provider__WEBPACK_IMPORTED_MODULE_6__.loadConfig)(_aws_sdk_util_user_agent_node__WEBPACK_IMPORTED_MODULE_1__.NODE_APP_ID_CONFIG_OPTIONS, profileConfig)\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/runtimeConfig.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/runtimeConfig.shared.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/runtimeConfig.shared.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRuntimeConfig: () => (/* binding */ getRuntimeConfig)\n/* harmony export */ });\n/* harmony import */ var _aws_sdk_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @aws-sdk/core */ \"(rsc)/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/AwsSdkSigV4Signer.js\");\n/* harmony import */ var _smithy_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @smithy/core */ \"(rsc)/./node_modules/@smithy/core/dist-es/index.js\");\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/./node_modules/@smithy/smithy-client/dist-cjs/index.js\");\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _smithy_url_parser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @smithy/url-parser */ \"(rsc)/./node_modules/@smithy/url-parser/dist-cjs/index.js\");\n/* harmony import */ var _smithy_url_parser__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_smithy_url_parser__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _smithy_util_base64__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @smithy/util-base64 */ \"(rsc)/./node_modules/@smithy/util-base64/dist-cjs/index.js\");\n/* harmony import */ var _smithy_util_base64__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_smithy_util_base64__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _smithy_util_utf8__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @smithy/util-utf8 */ \"(rsc)/./node_modules/@smithy/util-utf8/dist-cjs/index.js\");\n/* harmony import */ var _smithy_util_utf8__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_smithy_util_utf8__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _auth_httpAuthSchemeProvider__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./auth/httpAuthSchemeProvider */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/auth/httpAuthSchemeProvider.js\");\n/* harmony import */ var _endpoint_endpointResolver__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./endpoint/endpointResolver */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/endpoint/endpointResolver.js\");\n\n\n\n\n\n\n\n\nconst getRuntimeConfig = (config)=>{\n    return {\n        apiVersion: \"2011-06-15\",\n        base64Decoder: config?.base64Decoder ?? _smithy_util_base64__WEBPACK_IMPORTED_MODULE_3__.fromBase64,\n        base64Encoder: config?.base64Encoder ?? _smithy_util_base64__WEBPACK_IMPORTED_MODULE_3__.toBase64,\n        disableHostPrefix: config?.disableHostPrefix ?? false,\n        endpointProvider: config?.endpointProvider ?? _endpoint_endpointResolver__WEBPACK_IMPORTED_MODULE_6__.defaultEndpointResolver,\n        extensions: config?.extensions ?? [],\n        httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? _auth_httpAuthSchemeProvider__WEBPACK_IMPORTED_MODULE_5__.defaultSTSHttpAuthSchemeProvider,\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc)=>ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n                signer: new _aws_sdk_core__WEBPACK_IMPORTED_MODULE_7__.AwsSdkSigV4Signer()\n            },\n            {\n                schemeId: \"smithy.api#noAuth\",\n                identityProvider: (ipc)=>ipc.getIdentityProvider(\"smithy.api#noAuth\") || (async ()=>({})),\n                signer: new _smithy_core__WEBPACK_IMPORTED_MODULE_0__.NoAuthSigner()\n            }\n        ],\n        logger: config?.logger ?? new _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_1__.NoOpLogger(),\n        serviceId: config?.serviceId ?? \"STS\",\n        urlParser: config?.urlParser ?? _smithy_url_parser__WEBPACK_IMPORTED_MODULE_2__.parseUrl,\n        utf8Decoder: config?.utf8Decoder ?? _smithy_util_utf8__WEBPACK_IMPORTED_MODULE_4__.fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? _smithy_util_utf8__WEBPACK_IMPORTED_MODULE_4__.toUtf8\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3N0cy9ydW50aW1lQ29uZmlnLnNoYXJlZC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQWtEO0FBQ047QUFDTztBQUNMO0FBQ2E7QUFDTjtBQUM0QjtBQUNYO0FBQy9ELE1BQU1VLG1CQUFtQixDQUFDQztJQUM3QixPQUFPO1FBQ0hDLFlBQVk7UUFDWkMsZUFBZUYsUUFBUUUsaUJBQWlCVCwyREFBVUE7UUFDbERVLGVBQWVILFFBQVFHLGlCQUFpQlQseURBQVFBO1FBQ2hEVSxtQkFBbUJKLFFBQVFJLHFCQUFxQjtRQUNoREMsa0JBQWtCTCxRQUFRSyxvQkFBb0JQLCtFQUF1QkE7UUFDckVRLFlBQVlOLFFBQVFNLGNBQWMsRUFBRTtRQUNwQ0Msd0JBQXdCUCxRQUFRTywwQkFBMEJWLDBGQUFnQ0E7UUFDMUZXLGlCQUFpQlIsUUFBUVEsbUJBQW1CO1lBQ3hDO2dCQUNJQyxVQUFVO2dCQUNWQyxrQkFBa0IsQ0FBQ0MsTUFBUUEsSUFBSUMsbUJBQW1CLENBQUM7Z0JBQ25EQyxRQUFRLElBQUl4Qiw0REFBaUJBO1lBQ2pDO1lBQ0E7Z0JBQ0lvQixVQUFVO2dCQUNWQyxrQkFBa0IsQ0FBQ0MsTUFBUUEsSUFBSUMsbUJBQW1CLENBQUMsd0JBQXlCLFdBQWEsRUFBQyxFQUFDO2dCQUMzRkMsUUFBUSxJQUFJdkIsc0RBQVlBO1lBQzVCO1NBQ0g7UUFDRHdCLFFBQVFkLFFBQVFjLFVBQVUsSUFBSXZCLDZEQUFVQTtRQUN4Q3dCLFdBQVdmLFFBQVFlLGFBQWE7UUFDaENDLFdBQVdoQixRQUFRZ0IsYUFBYXhCLHdEQUFRQTtRQUN4Q3lCLGFBQWFqQixRQUFRaUIsZUFBZXRCLHVEQUFRQTtRQUM1Q3VCLGFBQWFsQixRQUFRa0IsZUFBZXRCLHFEQUFNQTtJQUM5QztBQUNKLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbG91ZHNoaWZ0Ly4vbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL25lc3RlZC1jbGllbnRzL2Rpc3QtZXMvc3VibW9kdWxlcy9zdHMvcnVudGltZUNvbmZpZy5zaGFyZWQuanM/Y2ZkYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBd3NTZGtTaWdWNFNpZ25lciB9IGZyb20gXCJAYXdzLXNkay9jb3JlXCI7XG5pbXBvcnQgeyBOb0F1dGhTaWduZXIgfSBmcm9tIFwiQHNtaXRoeS9jb3JlXCI7XG5pbXBvcnQgeyBOb09wTG9nZ2VyIH0gZnJvbSBcIkBzbWl0aHkvc21pdGh5LWNsaWVudFwiO1xuaW1wb3J0IHsgcGFyc2VVcmwgfSBmcm9tIFwiQHNtaXRoeS91cmwtcGFyc2VyXCI7XG5pbXBvcnQgeyBmcm9tQmFzZTY0LCB0b0Jhc2U2NCB9IGZyb20gXCJAc21pdGh5L3V0aWwtYmFzZTY0XCI7XG5pbXBvcnQgeyBmcm9tVXRmOCwgdG9VdGY4IH0gZnJvbSBcIkBzbWl0aHkvdXRpbC11dGY4XCI7XG5pbXBvcnQgeyBkZWZhdWx0U1RTSHR0cEF1dGhTY2hlbWVQcm92aWRlciB9IGZyb20gXCIuL2F1dGgvaHR0cEF1dGhTY2hlbWVQcm92aWRlclwiO1xuaW1wb3J0IHsgZGVmYXVsdEVuZHBvaW50UmVzb2x2ZXIgfSBmcm9tIFwiLi9lbmRwb2ludC9lbmRwb2ludFJlc29sdmVyXCI7XG5leHBvcnQgY29uc3QgZ2V0UnVudGltZUNvbmZpZyA9IChjb25maWcpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICBhcGlWZXJzaW9uOiBcIjIwMTEtMDYtMTVcIixcbiAgICAgICAgYmFzZTY0RGVjb2RlcjogY29uZmlnPy5iYXNlNjREZWNvZGVyID8/IGZyb21CYXNlNjQsXG4gICAgICAgIGJhc2U2NEVuY29kZXI6IGNvbmZpZz8uYmFzZTY0RW5jb2RlciA/PyB0b0Jhc2U2NCxcbiAgICAgICAgZGlzYWJsZUhvc3RQcmVmaXg6IGNvbmZpZz8uZGlzYWJsZUhvc3RQcmVmaXggPz8gZmFsc2UsXG4gICAgICAgIGVuZHBvaW50UHJvdmlkZXI6IGNvbmZpZz8uZW5kcG9pbnRQcm92aWRlciA/PyBkZWZhdWx0RW5kcG9pbnRSZXNvbHZlcixcbiAgICAgICAgZXh0ZW5zaW9uczogY29uZmlnPy5leHRlbnNpb25zID8/IFtdLFxuICAgICAgICBodHRwQXV0aFNjaGVtZVByb3ZpZGVyOiBjb25maWc/Lmh0dHBBdXRoU2NoZW1lUHJvdmlkZXIgPz8gZGVmYXVsdFNUU0h0dHBBdXRoU2NoZW1lUHJvdmlkZXIsXG4gICAgICAgIGh0dHBBdXRoU2NoZW1lczogY29uZmlnPy5odHRwQXV0aFNjaGVtZXMgPz8gW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNjaGVtZUlkOiBcImF3cy5hdXRoI3NpZ3Y0XCIsXG4gICAgICAgICAgICAgICAgaWRlbnRpdHlQcm92aWRlcjogKGlwYykgPT4gaXBjLmdldElkZW50aXR5UHJvdmlkZXIoXCJhd3MuYXV0aCNzaWd2NFwiKSxcbiAgICAgICAgICAgICAgICBzaWduZXI6IG5ldyBBd3NTZGtTaWdWNFNpZ25lcigpLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzY2hlbWVJZDogXCJzbWl0aHkuYXBpI25vQXV0aFwiLFxuICAgICAgICAgICAgICAgIGlkZW50aXR5UHJvdmlkZXI6IChpcGMpID0+IGlwYy5nZXRJZGVudGl0eVByb3ZpZGVyKFwic21pdGh5LmFwaSNub0F1dGhcIikgfHwgKGFzeW5jICgpID0+ICh7fSkpLFxuICAgICAgICAgICAgICAgIHNpZ25lcjogbmV3IE5vQXV0aFNpZ25lcigpLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgXSxcbiAgICAgICAgbG9nZ2VyOiBjb25maWc/LmxvZ2dlciA/PyBuZXcgTm9PcExvZ2dlcigpLFxuICAgICAgICBzZXJ2aWNlSWQ6IGNvbmZpZz8uc2VydmljZUlkID8/IFwiU1RTXCIsXG4gICAgICAgIHVybFBhcnNlcjogY29uZmlnPy51cmxQYXJzZXIgPz8gcGFyc2VVcmwsXG4gICAgICAgIHV0ZjhEZWNvZGVyOiBjb25maWc/LnV0ZjhEZWNvZGVyID8/IGZyb21VdGY4LFxuICAgICAgICB1dGY4RW5jb2RlcjogY29uZmlnPy51dGY4RW5jb2RlciA/PyB0b1V0ZjgsXG4gICAgfTtcbn07XG4iXSwibmFtZXMiOlsiQXdzU2RrU2lnVjRTaWduZXIiLCJOb0F1dGhTaWduZXIiLCJOb09wTG9nZ2VyIiwicGFyc2VVcmwiLCJmcm9tQmFzZTY0IiwidG9CYXNlNjQiLCJmcm9tVXRmOCIsInRvVXRmOCIsImRlZmF1bHRTVFNIdHRwQXV0aFNjaGVtZVByb3ZpZGVyIiwiZGVmYXVsdEVuZHBvaW50UmVzb2x2ZXIiLCJnZXRSdW50aW1lQ29uZmlnIiwiY29uZmlnIiwiYXBpVmVyc2lvbiIsImJhc2U2NERlY29kZXIiLCJiYXNlNjRFbmNvZGVyIiwiZGlzYWJsZUhvc3RQcmVmaXgiLCJlbmRwb2ludFByb3ZpZGVyIiwiZXh0ZW5zaW9ucyIsImh0dHBBdXRoU2NoZW1lUHJvdmlkZXIiLCJodHRwQXV0aFNjaGVtZXMiLCJzY2hlbWVJZCIsImlkZW50aXR5UHJvdmlkZXIiLCJpcGMiLCJnZXRJZGVudGl0eVByb3ZpZGVyIiwic2lnbmVyIiwibG9nZ2VyIiwic2VydmljZUlkIiwidXJsUGFyc2VyIiwidXRmOERlY29kZXIiLCJ1dGY4RW5jb2RlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/runtimeConfig.shared.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/runtimeExtensions.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/runtimeExtensions.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   resolveRuntimeExtensions: () => (/* binding */ resolveRuntimeExtensions)\n/* harmony export */ });\n/* harmony import */ var _aws_sdk_region_config_resolver__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/region-config-resolver */ \"(rsc)/./node_modules/@aws-sdk/region-config-resolver/dist-cjs/index.js\");\n/* harmony import */ var _aws_sdk_region_config_resolver__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_aws_sdk_region_config_resolver__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _smithy_protocol_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @smithy/protocol-http */ \"(rsc)/./node_modules/@smithy/protocol-http/dist-cjs/index.js\");\n/* harmony import */ var _smithy_protocol_http__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_smithy_protocol_http__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @smithy/smithy-client */ \"(rsc)/./node_modules/@smithy/smithy-client/dist-cjs/index.js\");\n/* harmony import */ var _smithy_smithy_client__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _auth_httpAuthExtensionConfiguration__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./auth/httpAuthExtensionConfiguration */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/auth/httpAuthExtensionConfiguration.js\");\n\n\n\n\nconst resolveRuntimeExtensions = (runtimeConfig, extensions)=>{\n    const extensionConfiguration = Object.assign((0,_aws_sdk_region_config_resolver__WEBPACK_IMPORTED_MODULE_0__.getAwsRegionExtensionConfiguration)(runtimeConfig), (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_2__.getDefaultExtensionConfiguration)(runtimeConfig), (0,_smithy_protocol_http__WEBPACK_IMPORTED_MODULE_1__.getHttpHandlerExtensionConfiguration)(runtimeConfig), (0,_auth_httpAuthExtensionConfiguration__WEBPACK_IMPORTED_MODULE_3__.getHttpAuthExtensionConfiguration)(runtimeConfig));\n    extensions.forEach((extension)=>extension.configure(extensionConfiguration));\n    return Object.assign(runtimeConfig, (0,_aws_sdk_region_config_resolver__WEBPACK_IMPORTED_MODULE_0__.resolveAwsRegionExtensionConfiguration)(extensionConfiguration), (0,_smithy_smithy_client__WEBPACK_IMPORTED_MODULE_2__.resolveDefaultRuntimeConfig)(extensionConfiguration), (0,_smithy_protocol_http__WEBPACK_IMPORTED_MODULE_1__.resolveHttpHandlerRuntimeConfig)(extensionConfiguration), (0,_auth_httpAuthExtensionConfiguration__WEBPACK_IMPORTED_MODULE_3__.resolveHttpAuthRuntimeConfig)(extensionConfiguration));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF3cy1zZGsvbmVzdGVkLWNsaWVudHMvZGlzdC1lcy9zdWJtb2R1bGVzL3N0cy9ydW50aW1lRXh0ZW5zaW9ucy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUE4SDtBQUNoQjtBQUNSO0FBQ2tCO0FBQ2pILE1BQU1RLDJCQUEyQixDQUFDQyxlQUFlQztJQUNwRCxNQUFNQyx5QkFBeUJDLE9BQU9DLE1BQU0sQ0FBQ2IsbUdBQWtDQSxDQUFDUyxnQkFBZ0JMLHVGQUFnQ0EsQ0FBQ0ssZ0JBQWdCUCwyRkFBb0NBLENBQUNPLGdCQUFnQkgsdUdBQWlDQSxDQUFDRztJQUN4T0MsV0FBV0ksT0FBTyxDQUFDLENBQUNDLFlBQWNBLFVBQVVDLFNBQVMsQ0FBQ0w7SUFDdEQsT0FBT0MsT0FBT0MsTUFBTSxDQUFDSixlQUFlUix1R0FBc0NBLENBQUNVLHlCQUF5Qk4sa0ZBQTJCQSxDQUFDTSx5QkFBeUJSLHNGQUErQkEsQ0FBQ1EseUJBQXlCSixrR0FBNEJBLENBQUNJO0FBQ25QLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbG91ZHNoaWZ0Ly4vbm9kZV9tb2R1bGVzL0Bhd3Mtc2RrL25lc3RlZC1jbGllbnRzL2Rpc3QtZXMvc3VibW9kdWxlcy9zdHMvcnVudGltZUV4dGVuc2lvbnMuanM/YWFhYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRBd3NSZWdpb25FeHRlbnNpb25Db25maWd1cmF0aW9uLCByZXNvbHZlQXdzUmVnaW9uRXh0ZW5zaW9uQ29uZmlndXJhdGlvbiwgfSBmcm9tIFwiQGF3cy1zZGsvcmVnaW9uLWNvbmZpZy1yZXNvbHZlclwiO1xuaW1wb3J0IHsgZ2V0SHR0cEhhbmRsZXJFeHRlbnNpb25Db25maWd1cmF0aW9uLCByZXNvbHZlSHR0cEhhbmRsZXJSdW50aW1lQ29uZmlnIH0gZnJvbSBcIkBzbWl0aHkvcHJvdG9jb2wtaHR0cFwiO1xuaW1wb3J0IHsgZ2V0RGVmYXVsdEV4dGVuc2lvbkNvbmZpZ3VyYXRpb24sIHJlc29sdmVEZWZhdWx0UnVudGltZUNvbmZpZyB9IGZyb20gXCJAc21pdGh5L3NtaXRoeS1jbGllbnRcIjtcbmltcG9ydCB7IGdldEh0dHBBdXRoRXh0ZW5zaW9uQ29uZmlndXJhdGlvbiwgcmVzb2x2ZUh0dHBBdXRoUnVudGltZUNvbmZpZyB9IGZyb20gXCIuL2F1dGgvaHR0cEF1dGhFeHRlbnNpb25Db25maWd1cmF0aW9uXCI7XG5leHBvcnQgY29uc3QgcmVzb2x2ZVJ1bnRpbWVFeHRlbnNpb25zID0gKHJ1bnRpbWVDb25maWcsIGV4dGVuc2lvbnMpID0+IHtcbiAgICBjb25zdCBleHRlbnNpb25Db25maWd1cmF0aW9uID0gT2JqZWN0LmFzc2lnbihnZXRBd3NSZWdpb25FeHRlbnNpb25Db25maWd1cmF0aW9uKHJ1bnRpbWVDb25maWcpLCBnZXREZWZhdWx0RXh0ZW5zaW9uQ29uZmlndXJhdGlvbihydW50aW1lQ29uZmlnKSwgZ2V0SHR0cEhhbmRsZXJFeHRlbnNpb25Db25maWd1cmF0aW9uKHJ1bnRpbWVDb25maWcpLCBnZXRIdHRwQXV0aEV4dGVuc2lvbkNvbmZpZ3VyYXRpb24ocnVudGltZUNvbmZpZykpO1xuICAgIGV4dGVuc2lvbnMuZm9yRWFjaCgoZXh0ZW5zaW9uKSA9PiBleHRlbnNpb24uY29uZmlndXJlKGV4dGVuc2lvbkNvbmZpZ3VyYXRpb24pKTtcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihydW50aW1lQ29uZmlnLCByZXNvbHZlQXdzUmVnaW9uRXh0ZW5zaW9uQ29uZmlndXJhdGlvbihleHRlbnNpb25Db25maWd1cmF0aW9uKSwgcmVzb2x2ZURlZmF1bHRSdW50aW1lQ29uZmlnKGV4dGVuc2lvbkNvbmZpZ3VyYXRpb24pLCByZXNvbHZlSHR0cEhhbmRsZXJSdW50aW1lQ29uZmlnKGV4dGVuc2lvbkNvbmZpZ3VyYXRpb24pLCByZXNvbHZlSHR0cEF1dGhSdW50aW1lQ29uZmlnKGV4dGVuc2lvbkNvbmZpZ3VyYXRpb24pKTtcbn07XG4iXSwibmFtZXMiOlsiZ2V0QXdzUmVnaW9uRXh0ZW5zaW9uQ29uZmlndXJhdGlvbiIsInJlc29sdmVBd3NSZWdpb25FeHRlbnNpb25Db25maWd1cmF0aW9uIiwiZ2V0SHR0cEhhbmRsZXJFeHRlbnNpb25Db25maWd1cmF0aW9uIiwicmVzb2x2ZUh0dHBIYW5kbGVyUnVudGltZUNvbmZpZyIsImdldERlZmF1bHRFeHRlbnNpb25Db25maWd1cmF0aW9uIiwicmVzb2x2ZURlZmF1bHRSdW50aW1lQ29uZmlnIiwiZ2V0SHR0cEF1dGhFeHRlbnNpb25Db25maWd1cmF0aW9uIiwicmVzb2x2ZUh0dHBBdXRoUnVudGltZUNvbmZpZyIsInJlc29sdmVSdW50aW1lRXh0ZW5zaW9ucyIsInJ1bnRpbWVDb25maWciLCJleHRlbnNpb25zIiwiZXh0ZW5zaW9uQ29uZmlndXJhdGlvbiIsIk9iamVjdCIsImFzc2lnbiIsImZvckVhY2giLCJleHRlbnNpb24iLCJjb25maWd1cmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/runtimeExtensions.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/region-config-resolver/dist-cjs/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/@aws-sdk/region-config-resolver/dist-cjs/index.js ***!
  \************************************************************************/
/***/ ((module) => {

eval("\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value)=>__defProp(target, \"name\", {\n        value,\n        configurable: true\n    });\nvar __export = (target, all)=>{\n    for(var name in all)__defProp(target, name, {\n        get: all[name],\n        enumerable: true\n    });\n};\nvar __copyProps = (to, from, except, desc)=>{\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n            get: ()=>from[key],\n            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n    }\n    return to;\n};\nvar __toCommonJS = (mod)=>__copyProps(__defProp({}, \"__esModule\", {\n        value: true\n    }), mod);\n// src/index.ts\nvar index_exports = {};\n__export(index_exports, {\n    NODE_REGION_CONFIG_FILE_OPTIONS: ()=>NODE_REGION_CONFIG_FILE_OPTIONS,\n    NODE_REGION_CONFIG_OPTIONS: ()=>NODE_REGION_CONFIG_OPTIONS,\n    REGION_ENV_NAME: ()=>REGION_ENV_NAME,\n    REGION_INI_NAME: ()=>REGION_INI_NAME,\n    getAwsRegionExtensionConfiguration: ()=>getAwsRegionExtensionConfiguration,\n    resolveAwsRegionExtensionConfiguration: ()=>resolveAwsRegionExtensionConfiguration,\n    resolveRegionConfig: ()=>resolveRegionConfig\n});\nmodule.exports = __toCommonJS(index_exports);\n// src/extensions/index.ts\nvar getAwsRegionExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig)=>{\n    return {\n        setRegion (region) {\n            runtimeConfig.region = region;\n        },\n        region () {\n            return runtimeConfig.region;\n        }\n    };\n}, \"getAwsRegionExtensionConfiguration\");\nvar resolveAwsRegionExtensionConfiguration = /* @__PURE__ */ __name((awsRegionExtensionConfiguration)=>{\n    return {\n        region: awsRegionExtensionConfiguration.region()\n    };\n}, \"resolveAwsRegionExtensionConfiguration\");\n// src/regionConfig/config.ts\nvar REGION_ENV_NAME = \"AWS_REGION\";\nvar REGION_INI_NAME = \"region\";\nvar NODE_REGION_CONFIG_OPTIONS = {\n    environmentVariableSelector: /* @__PURE__ */ __name((env)=>env[REGION_ENV_NAME], \"environmentVariableSelector\"),\n    configFileSelector: /* @__PURE__ */ __name((profile)=>profile[REGION_INI_NAME], \"configFileSelector\"),\n    default: /* @__PURE__ */ __name(()=>{\n        throw new Error(\"Region is missing\");\n    }, \"default\")\n};\nvar NODE_REGION_CONFIG_FILE_OPTIONS = {\n    preferredFile: \"credentials\"\n};\n// src/regionConfig/isFipsRegion.ts\nvar isFipsRegion = /* @__PURE__ */ __name((region)=>typeof region === \"string\" && (region.startsWith(\"fips-\") || region.endsWith(\"-fips\")), \"isFipsRegion\");\n// src/regionConfig/getRealRegion.ts\nvar getRealRegion = /* @__PURE__ */ __name((region)=>isFipsRegion(region) ? [\n        \"fips-aws-global\",\n        \"aws-fips\"\n    ].includes(region) ? \"us-east-1\" : region.replace(/fips-(dkr-|prod-)?|-fips/, \"\") : region, \"getRealRegion\");\n// src/regionConfig/resolveRegionConfig.ts\nvar resolveRegionConfig = /* @__PURE__ */ __name((input)=>{\n    const { region, useFipsEndpoint } = input;\n    if (!region) {\n        throw new Error(\"Region is missing\");\n    }\n    return Object.assign(input, {\n        region: /* @__PURE__ */ __name(async ()=>{\n            if (typeof region === \"string\") {\n                return getRealRegion(region);\n            }\n            const providedRegion = await region();\n            return getRealRegion(providedRegion);\n        }, \"region\"),\n        useFipsEndpoint: /* @__PURE__ */ __name(async ()=>{\n            const providedRegion = typeof region === \"string\" ? region : await region();\n            if (isFipsRegion(providedRegion)) {\n                return true;\n            }\n            return typeof useFipsEndpoint !== \"function\" ? Promise.resolve(!!useFipsEndpoint) : useFipsEndpoint();\n        }, \"useFipsEndpoint\")\n    });\n}, \"resolveRegionConfig\");\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/region-config-resolver/dist-cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/token-providers/dist-cjs/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@aws-sdk/token-providers/dist-cjs/index.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value)=>__defProp(target, \"name\", {\n        value,\n        configurable: true\n    });\nvar __export = (target, all)=>{\n    for(var name in all)__defProp(target, name, {\n        get: all[name],\n        enumerable: true\n    });\n};\nvar __copyProps = (to, from, except, desc)=>{\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n            get: ()=>from[key],\n            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n    }\n    return to;\n};\nvar __toESM = (mod, isNodeMode, target)=>(target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(// If the importer is in node compatibility mode or this is not an ESM\n    // file that has been converted to a CommonJS file using a Babel-\n    // compatible transform (i.e. \"__esModule\" has not been set), then set\n    // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n    isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n        value: mod,\n        enumerable: true\n    }) : target, mod));\nvar __toCommonJS = (mod)=>__copyProps(__defProp({}, \"__esModule\", {\n        value: true\n    }), mod);\n// src/index.ts\nvar index_exports = {};\n__export(index_exports, {\n    fromSso: ()=>fromSso,\n    fromStatic: ()=>fromStatic,\n    nodeProvider: ()=>nodeProvider\n});\nmodule.exports = __toCommonJS(index_exports);\n// src/fromSso.ts\n// src/constants.ts\nvar EXPIRE_WINDOW_MS = 5 * 60 * 1e3;\nvar REFRESH_MESSAGE = `To refresh this SSO session run 'aws sso login' with the corresponding profile.`;\n// src/getSsoOidcClient.ts\nvar getSsoOidcClient = /* @__PURE__ */ __name(async (ssoRegion, init = {})=>{\n    const { SSOOIDCClient } = await Promise.resolve().then(()=>__toESM(__webpack_require__(/*! @aws-sdk/nested-clients/sso-oidc */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/index.js\")));\n    const ssoOidcClient = new SSOOIDCClient(Object.assign({}, init.clientConfig ?? {}, {\n        region: ssoRegion ?? init.clientConfig?.region,\n        logger: init.clientConfig?.logger ?? init.parentClientConfig?.logger\n    }));\n    return ssoOidcClient;\n}, \"getSsoOidcClient\");\n// src/getNewSsoOidcToken.ts\nvar getNewSsoOidcToken = /* @__PURE__ */ __name(async (ssoToken, ssoRegion, init = {})=>{\n    const { CreateTokenCommand } = await Promise.resolve().then(()=>__toESM(__webpack_require__(/*! @aws-sdk/nested-clients/sso-oidc */ \"(rsc)/./node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/index.js\")));\n    const ssoOidcClient = await getSsoOidcClient(ssoRegion, init);\n    return ssoOidcClient.send(new CreateTokenCommand({\n        clientId: ssoToken.clientId,\n        clientSecret: ssoToken.clientSecret,\n        refreshToken: ssoToken.refreshToken,\n        grantType: \"refresh_token\"\n    }));\n}, \"getNewSsoOidcToken\");\n// src/validateTokenExpiry.ts\nvar import_property_provider = __webpack_require__(/*! @smithy/property-provider */ \"(rsc)/./node_modules/@smithy/property-provider/dist-cjs/index.js\");\nvar validateTokenExpiry = /* @__PURE__ */ __name((token)=>{\n    if (token.expiration && token.expiration.getTime() < Date.now()) {\n        throw new import_property_provider.TokenProviderError(`Token is expired. ${REFRESH_MESSAGE}`, false);\n    }\n}, \"validateTokenExpiry\");\n// src/validateTokenKey.ts\nvar validateTokenKey = /* @__PURE__ */ __name((key, value, forRefresh = false)=>{\n    if (typeof value === \"undefined\") {\n        throw new import_property_provider.TokenProviderError(`Value not present for '${key}' in SSO Token${forRefresh ? \". Cannot refresh\" : \"\"}. ${REFRESH_MESSAGE}`, false);\n    }\n}, \"validateTokenKey\");\n// src/writeSSOTokenToFile.ts\nvar import_shared_ini_file_loader = __webpack_require__(/*! @smithy/shared-ini-file-loader */ \"(rsc)/./node_modules/@smithy/shared-ini-file-loader/dist-cjs/index.js\");\nvar import_fs = __webpack_require__(/*! fs */ \"fs\");\nvar { writeFile } = import_fs.promises;\nvar writeSSOTokenToFile = /* @__PURE__ */ __name((id, ssoToken)=>{\n    const tokenFilepath = (0, import_shared_ini_file_loader.getSSOTokenFilepath)(id);\n    const tokenString = JSON.stringify(ssoToken, null, 2);\n    return writeFile(tokenFilepath, tokenString);\n}, \"writeSSOTokenToFile\");\n// src/fromSso.ts\nvar lastRefreshAttemptTime = /* @__PURE__ */ new Date(0);\nvar fromSso = /* @__PURE__ */ __name((_init = {})=>async ({ callerClientConfig } = {})=>{\n        const init = {\n            ..._init,\n            parentClientConfig: {\n                ...callerClientConfig,\n                ..._init.parentClientConfig\n            }\n        };\n        init.logger?.debug(\"@aws-sdk/token-providers - fromSso\");\n        const profiles = await (0, import_shared_ini_file_loader.parseKnownFiles)(init);\n        const profileName = (0, import_shared_ini_file_loader.getProfileName)({\n            profile: init.profile ?? callerClientConfig?.profile\n        });\n        const profile = profiles[profileName];\n        if (!profile) {\n            throw new import_property_provider.TokenProviderError(`Profile '${profileName}' could not be found in shared credentials file.`, false);\n        } else if (!profile[\"sso_session\"]) {\n            throw new import_property_provider.TokenProviderError(`Profile '${profileName}' is missing required property 'sso_session'.`);\n        }\n        const ssoSessionName = profile[\"sso_session\"];\n        const ssoSessions = await (0, import_shared_ini_file_loader.loadSsoSessionData)(init);\n        const ssoSession = ssoSessions[ssoSessionName];\n        if (!ssoSession) {\n            throw new import_property_provider.TokenProviderError(`Sso session '${ssoSessionName}' could not be found in shared credentials file.`, false);\n        }\n        for (const ssoSessionRequiredKey of [\n            \"sso_start_url\",\n            \"sso_region\"\n        ]){\n            if (!ssoSession[ssoSessionRequiredKey]) {\n                throw new import_property_provider.TokenProviderError(`Sso session '${ssoSessionName}' is missing required property '${ssoSessionRequiredKey}'.`, false);\n            }\n        }\n        const ssoStartUrl = ssoSession[\"sso_start_url\"];\n        const ssoRegion = ssoSession[\"sso_region\"];\n        let ssoToken;\n        try {\n            ssoToken = await (0, import_shared_ini_file_loader.getSSOTokenFromFile)(ssoSessionName);\n        } catch (e) {\n            throw new import_property_provider.TokenProviderError(`The SSO session token associated with profile=${profileName} was not found or is invalid. ${REFRESH_MESSAGE}`, false);\n        }\n        validateTokenKey(\"accessToken\", ssoToken.accessToken);\n        validateTokenKey(\"expiresAt\", ssoToken.expiresAt);\n        const { accessToken, expiresAt } = ssoToken;\n        const existingToken = {\n            token: accessToken,\n            expiration: new Date(expiresAt)\n        };\n        if (existingToken.expiration.getTime() - Date.now() > EXPIRE_WINDOW_MS) {\n            return existingToken;\n        }\n        if (Date.now() - lastRefreshAttemptTime.getTime() < 30 * 1e3) {\n            validateTokenExpiry(existingToken);\n            return existingToken;\n        }\n        validateTokenKey(\"clientId\", ssoToken.clientId, true);\n        validateTokenKey(\"clientSecret\", ssoToken.clientSecret, true);\n        validateTokenKey(\"refreshToken\", ssoToken.refreshToken, true);\n        try {\n            lastRefreshAttemptTime.setTime(Date.now());\n            const newSsoOidcToken = await getNewSsoOidcToken(ssoToken, ssoRegion, init);\n            validateTokenKey(\"accessToken\", newSsoOidcToken.accessToken);\n            validateTokenKey(\"expiresIn\", newSsoOidcToken.expiresIn);\n            const newTokenExpiration = new Date(Date.now() + newSsoOidcToken.expiresIn * 1e3);\n            try {\n                await writeSSOTokenToFile(ssoSessionName, {\n                    ...ssoToken,\n                    accessToken: newSsoOidcToken.accessToken,\n                    expiresAt: newTokenExpiration.toISOString(),\n                    refreshToken: newSsoOidcToken.refreshToken\n                });\n            } catch (error) {}\n            return {\n                token: newSsoOidcToken.accessToken,\n                expiration: newTokenExpiration\n            };\n        } catch (error) {\n            validateTokenExpiry(existingToken);\n            return existingToken;\n        }\n    }, \"fromSso\");\n// src/fromStatic.ts\nvar fromStatic = /* @__PURE__ */ __name(({ token, logger })=>async ()=>{\n        logger?.debug(\"@aws-sdk/token-providers - fromStatic\");\n        if (!token || !token.token) {\n            throw new import_property_provider.TokenProviderError(`Please pass a valid token to fromStatic`, false);\n        }\n        return token;\n    }, \"fromStatic\");\n// src/nodeProvider.ts\nvar nodeProvider = /* @__PURE__ */ __name((init = {})=>(0, import_property_provider.memoize)((0, import_property_provider.chain)(fromSso(init), async ()=>{\n        throw new import_property_provider.TokenProviderError(\"Could not load token from any providers\", false);\n    }), (token)=>token.expiration !== void 0 && token.expiration.getTime() - Date.now() < 3e5, (token)=>token.expiration !== void 0), \"nodeProvider\");\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/token-providers/dist-cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/util-endpoints/dist-cjs/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@aws-sdk/util-endpoints/dist-cjs/index.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value)=>__defProp(target, \"name\", {\n        value,\n        configurable: true\n    });\nvar __export = (target, all)=>{\n    for(var name in all)__defProp(target, name, {\n        get: all[name],\n        enumerable: true\n    });\n};\nvar __copyProps = (to, from, except, desc)=>{\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n            get: ()=>from[key],\n            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n    }\n    return to;\n};\nvar __toCommonJS = (mod)=>__copyProps(__defProp({}, \"__esModule\", {\n        value: true\n    }), mod);\n// src/index.ts\nvar index_exports = {};\n__export(index_exports, {\n    ConditionObject: ()=>import_util_endpoints.ConditionObject,\n    DeprecatedObject: ()=>import_util_endpoints.DeprecatedObject,\n    EndpointError: ()=>import_util_endpoints.EndpointError,\n    EndpointObject: ()=>import_util_endpoints.EndpointObject,\n    EndpointObjectHeaders: ()=>import_util_endpoints.EndpointObjectHeaders,\n    EndpointObjectProperties: ()=>import_util_endpoints.EndpointObjectProperties,\n    EndpointParams: ()=>import_util_endpoints.EndpointParams,\n    EndpointResolverOptions: ()=>import_util_endpoints.EndpointResolverOptions,\n    EndpointRuleObject: ()=>import_util_endpoints.EndpointRuleObject,\n    ErrorRuleObject: ()=>import_util_endpoints.ErrorRuleObject,\n    EvaluateOptions: ()=>import_util_endpoints.EvaluateOptions,\n    Expression: ()=>import_util_endpoints.Expression,\n    FunctionArgv: ()=>import_util_endpoints.FunctionArgv,\n    FunctionObject: ()=>import_util_endpoints.FunctionObject,\n    FunctionReturn: ()=>import_util_endpoints.FunctionReturn,\n    ParameterObject: ()=>import_util_endpoints.ParameterObject,\n    ReferenceObject: ()=>import_util_endpoints.ReferenceObject,\n    ReferenceRecord: ()=>import_util_endpoints.ReferenceRecord,\n    RuleSetObject: ()=>import_util_endpoints.RuleSetObject,\n    RuleSetRules: ()=>import_util_endpoints.RuleSetRules,\n    TreeRuleObject: ()=>import_util_endpoints.TreeRuleObject,\n    awsEndpointFunctions: ()=>awsEndpointFunctions,\n    getUserAgentPrefix: ()=>getUserAgentPrefix,\n    isIpAddress: ()=>import_util_endpoints.isIpAddress,\n    partition: ()=>partition,\n    resolveEndpoint: ()=>import_util_endpoints.resolveEndpoint,\n    setPartitionInfo: ()=>setPartitionInfo,\n    useDefaultPartitionInfo: ()=>useDefaultPartitionInfo\n});\nmodule.exports = __toCommonJS(index_exports);\n// src/aws.ts\n// src/lib/aws/isVirtualHostableS3Bucket.ts\n// src/lib/isIpAddress.ts\nvar import_util_endpoints = __webpack_require__(/*! @smithy/util-endpoints */ \"(rsc)/./node_modules/@smithy/util-endpoints/dist-cjs/index.js\");\n// src/lib/aws/isVirtualHostableS3Bucket.ts\nvar isVirtualHostableS3Bucket = /* @__PURE__ */ __name((value, allowSubDomains = false)=>{\n    if (allowSubDomains) {\n        for (const label of value.split(\".\")){\n            if (!isVirtualHostableS3Bucket(label)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    if (!(0, import_util_endpoints.isValidHostLabel)(value)) {\n        return false;\n    }\n    if (value.length < 3 || value.length > 63) {\n        return false;\n    }\n    if (value !== value.toLowerCase()) {\n        return false;\n    }\n    if ((0, import_util_endpoints.isIpAddress)(value)) {\n        return false;\n    }\n    return true;\n}, \"isVirtualHostableS3Bucket\");\n// src/lib/aws/parseArn.ts\nvar ARN_DELIMITER = \":\";\nvar RESOURCE_DELIMITER = \"/\";\nvar parseArn = /* @__PURE__ */ __name((value)=>{\n    const segments = value.split(ARN_DELIMITER);\n    if (segments.length < 6) return null;\n    const [arn, partition2, service, region, accountId, ...resourcePath] = segments;\n    if (arn !== \"arn\" || partition2 === \"\" || service === \"\" || resourcePath.join(ARN_DELIMITER) === \"\") return null;\n    const resourceId = resourcePath.map((resource)=>resource.split(RESOURCE_DELIMITER)).flat();\n    return {\n        partition: partition2,\n        service,\n        region,\n        accountId,\n        resourceId\n    };\n}, \"parseArn\");\n// src/lib/aws/partitions.json\nvar partitions_default = {\n    partitions: [\n        {\n            id: \"aws\",\n            outputs: {\n                dnsSuffix: \"amazonaws.com\",\n                dualStackDnsSuffix: \"api.aws\",\n                implicitGlobalRegion: \"us-east-1\",\n                name: \"aws\",\n                supportsDualStack: true,\n                supportsFIPS: true\n            },\n            regionRegex: \"^(us|eu|ap|sa|ca|me|af|il|mx)\\\\-\\\\w+\\\\-\\\\d+$\",\n            regions: {\n                \"af-south-1\": {\n                    description: \"Africa (Cape Town)\"\n                },\n                \"ap-east-1\": {\n                    description: \"Asia Pacific (Hong Kong)\"\n                },\n                \"ap-northeast-1\": {\n                    description: \"Asia Pacific (Tokyo)\"\n                },\n                \"ap-northeast-2\": {\n                    description: \"Asia Pacific (Seoul)\"\n                },\n                \"ap-northeast-3\": {\n                    description: \"Asia Pacific (Osaka)\"\n                },\n                \"ap-south-1\": {\n                    description: \"Asia Pacific (Mumbai)\"\n                },\n                \"ap-south-2\": {\n                    description: \"Asia Pacific (Hyderabad)\"\n                },\n                \"ap-southeast-1\": {\n                    description: \"Asia Pacific (Singapore)\"\n                },\n                \"ap-southeast-2\": {\n                    description: \"Asia Pacific (Sydney)\"\n                },\n                \"ap-southeast-3\": {\n                    description: \"Asia Pacific (Jakarta)\"\n                },\n                \"ap-southeast-4\": {\n                    description: \"Asia Pacific (Melbourne)\"\n                },\n                \"ap-southeast-5\": {\n                    description: \"Asia Pacific (Malaysia)\"\n                },\n                \"ap-southeast-7\": {\n                    description: \"Asia Pacific (Thailand)\"\n                },\n                \"aws-global\": {\n                    description: \"AWS Standard global region\"\n                },\n                \"ca-central-1\": {\n                    description: \"Canada (Central)\"\n                },\n                \"ca-west-1\": {\n                    description: \"Canada West (Calgary)\"\n                },\n                \"eu-central-1\": {\n                    description: \"Europe (Frankfurt)\"\n                },\n                \"eu-central-2\": {\n                    description: \"Europe (Zurich)\"\n                },\n                \"eu-north-1\": {\n                    description: \"Europe (Stockholm)\"\n                },\n                \"eu-south-1\": {\n                    description: \"Europe (Milan)\"\n                },\n                \"eu-south-2\": {\n                    description: \"Europe (Spain)\"\n                },\n                \"eu-west-1\": {\n                    description: \"Europe (Ireland)\"\n                },\n                \"eu-west-2\": {\n                    description: \"Europe (London)\"\n                },\n                \"eu-west-3\": {\n                    description: \"Europe (Paris)\"\n                },\n                \"il-central-1\": {\n                    description: \"Israel (Tel Aviv)\"\n                },\n                \"me-central-1\": {\n                    description: \"Middle East (UAE)\"\n                },\n                \"me-south-1\": {\n                    description: \"Middle East (Bahrain)\"\n                },\n                \"mx-central-1\": {\n                    description: \"Mexico (Central)\"\n                },\n                \"sa-east-1\": {\n                    description: \"South America (Sao Paulo)\"\n                },\n                \"us-east-1\": {\n                    description: \"US East (N. Virginia)\"\n                },\n                \"us-east-2\": {\n                    description: \"US East (Ohio)\"\n                },\n                \"us-west-1\": {\n                    description: \"US West (N. California)\"\n                },\n                \"us-west-2\": {\n                    description: \"US West (Oregon)\"\n                }\n            }\n        },\n        {\n            id: \"aws-cn\",\n            outputs: {\n                dnsSuffix: \"amazonaws.com.cn\",\n                dualStackDnsSuffix: \"api.amazonwebservices.com.cn\",\n                implicitGlobalRegion: \"cn-northwest-1\",\n                name: \"aws-cn\",\n                supportsDualStack: true,\n                supportsFIPS: true\n            },\n            regionRegex: \"^cn\\\\-\\\\w+\\\\-\\\\d+$\",\n            regions: {\n                \"aws-cn-global\": {\n                    description: \"AWS China global region\"\n                },\n                \"cn-north-1\": {\n                    description: \"China (Beijing)\"\n                },\n                \"cn-northwest-1\": {\n                    description: \"China (Ningxia)\"\n                }\n            }\n        },\n        {\n            id: \"aws-us-gov\",\n            outputs: {\n                dnsSuffix: \"amazonaws.com\",\n                dualStackDnsSuffix: \"api.aws\",\n                implicitGlobalRegion: \"us-gov-west-1\",\n                name: \"aws-us-gov\",\n                supportsDualStack: true,\n                supportsFIPS: true\n            },\n            regionRegex: \"^us\\\\-gov\\\\-\\\\w+\\\\-\\\\d+$\",\n            regions: {\n                \"aws-us-gov-global\": {\n                    description: \"AWS GovCloud (US) global region\"\n                },\n                \"us-gov-east-1\": {\n                    description: \"AWS GovCloud (US-East)\"\n                },\n                \"us-gov-west-1\": {\n                    description: \"AWS GovCloud (US-West)\"\n                }\n            }\n        },\n        {\n            id: \"aws-iso\",\n            outputs: {\n                dnsSuffix: \"c2s.ic.gov\",\n                dualStackDnsSuffix: \"c2s.ic.gov\",\n                implicitGlobalRegion: \"us-iso-east-1\",\n                name: \"aws-iso\",\n                supportsDualStack: false,\n                supportsFIPS: true\n            },\n            regionRegex: \"^us\\\\-iso\\\\-\\\\w+\\\\-\\\\d+$\",\n            regions: {\n                \"aws-iso-global\": {\n                    description: \"AWS ISO (US) global region\"\n                },\n                \"us-iso-east-1\": {\n                    description: \"US ISO East\"\n                },\n                \"us-iso-west-1\": {\n                    description: \"US ISO WEST\"\n                }\n            }\n        },\n        {\n            id: \"aws-iso-b\",\n            outputs: {\n                dnsSuffix: \"sc2s.sgov.gov\",\n                dualStackDnsSuffix: \"sc2s.sgov.gov\",\n                implicitGlobalRegion: \"us-isob-east-1\",\n                name: \"aws-iso-b\",\n                supportsDualStack: false,\n                supportsFIPS: true\n            },\n            regionRegex: \"^us\\\\-isob\\\\-\\\\w+\\\\-\\\\d+$\",\n            regions: {\n                \"aws-iso-b-global\": {\n                    description: \"AWS ISOB (US) global region\"\n                },\n                \"us-isob-east-1\": {\n                    description: \"US ISOB East (Ohio)\"\n                }\n            }\n        },\n        {\n            id: \"aws-iso-e\",\n            outputs: {\n                dnsSuffix: \"cloud.adc-e.uk\",\n                dualStackDnsSuffix: \"cloud.adc-e.uk\",\n                implicitGlobalRegion: \"eu-isoe-west-1\",\n                name: \"aws-iso-e\",\n                supportsDualStack: false,\n                supportsFIPS: true\n            },\n            regionRegex: \"^eu\\\\-isoe\\\\-\\\\w+\\\\-\\\\d+$\",\n            regions: {\n                \"aws-iso-e-global\": {\n                    description: \"AWS ISOE (Europe) global region\"\n                },\n                \"eu-isoe-west-1\": {\n                    description: \"EU ISOE West\"\n                }\n            }\n        },\n        {\n            id: \"aws-iso-f\",\n            outputs: {\n                dnsSuffix: \"csp.hci.ic.gov\",\n                dualStackDnsSuffix: \"csp.hci.ic.gov\",\n                implicitGlobalRegion: \"us-isof-south-1\",\n                name: \"aws-iso-f\",\n                supportsDualStack: false,\n                supportsFIPS: true\n            },\n            regionRegex: \"^us\\\\-isof\\\\-\\\\w+\\\\-\\\\d+$\",\n            regions: {\n                \"aws-iso-f-global\": {\n                    description: \"AWS ISOF global region\"\n                },\n                \"us-isof-east-1\": {\n                    description: \"US ISOF EAST\"\n                },\n                \"us-isof-south-1\": {\n                    description: \"US ISOF SOUTH\"\n                }\n            }\n        },\n        {\n            id: \"aws-eusc\",\n            outputs: {\n                dnsSuffix: \"amazonaws.eu\",\n                dualStackDnsSuffix: \"amazonaws.eu\",\n                implicitGlobalRegion: \"eusc-de-east-1\",\n                name: \"aws-eusc\",\n                supportsDualStack: false,\n                supportsFIPS: true\n            },\n            regionRegex: \"^eusc\\\\-(de)\\\\-\\\\w+\\\\-\\\\d+$\",\n            regions: {\n                \"eusc-de-east-1\": {\n                    description: \"EU (Germany)\"\n                }\n            }\n        }\n    ],\n    version: \"1.1\"\n};\n// src/lib/aws/partition.ts\nvar selectedPartitionsInfo = partitions_default;\nvar selectedUserAgentPrefix = \"\";\nvar partition = /* @__PURE__ */ __name((value)=>{\n    const { partitions } = selectedPartitionsInfo;\n    for (const partition2 of partitions){\n        const { regions, outputs } = partition2;\n        for (const [region, regionData] of Object.entries(regions)){\n            if (region === value) {\n                return {\n                    ...outputs,\n                    ...regionData\n                };\n            }\n        }\n    }\n    for (const partition2 of partitions){\n        const { regionRegex, outputs } = partition2;\n        if (new RegExp(regionRegex).test(value)) {\n            return {\n                ...outputs\n            };\n        }\n    }\n    const DEFAULT_PARTITION = partitions.find((partition2)=>partition2.id === \"aws\");\n    if (!DEFAULT_PARTITION) {\n        throw new Error(\"Provided region was not found in the partition array or regex, and default partition with id 'aws' doesn't exist.\");\n    }\n    return {\n        ...DEFAULT_PARTITION.outputs\n    };\n}, \"partition\");\nvar setPartitionInfo = /* @__PURE__ */ __name((partitionsInfo, userAgentPrefix = \"\")=>{\n    selectedPartitionsInfo = partitionsInfo;\n    selectedUserAgentPrefix = userAgentPrefix;\n}, \"setPartitionInfo\");\nvar useDefaultPartitionInfo = /* @__PURE__ */ __name(()=>{\n    setPartitionInfo(partitions_default, \"\");\n}, \"useDefaultPartitionInfo\");\nvar getUserAgentPrefix = /* @__PURE__ */ __name(()=>selectedUserAgentPrefix, \"getUserAgentPrefix\");\n// src/aws.ts\nvar awsEndpointFunctions = {\n    isVirtualHostableS3Bucket,\n    parseArn,\n    partition\n};\nimport_util_endpoints.customEndpointFunctions.aws = awsEndpointFunctions;\n// src/resolveEndpoint.ts\n// src/types/EndpointError.ts\n// src/types/EndpointRuleObject.ts\n// src/types/ErrorRuleObject.ts\n// src/types/RuleSetObject.ts\n// src/types/TreeRuleObject.ts\n// src/types/shared.ts\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/util-endpoints/dist-cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/util-user-agent-node/dist-cjs/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@aws-sdk/util-user-agent-node/dist-cjs/index.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value)=>__defProp(target, \"name\", {\n        value,\n        configurable: true\n    });\nvar __export = (target, all)=>{\n    for(var name in all)__defProp(target, name, {\n        get: all[name],\n        enumerable: true\n    });\n};\nvar __copyProps = (to, from, except, desc)=>{\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n            get: ()=>from[key],\n            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n    }\n    return to;\n};\nvar __toCommonJS = (mod)=>__copyProps(__defProp({}, \"__esModule\", {\n        value: true\n    }), mod);\n// src/index.ts\nvar index_exports = {};\n__export(index_exports, {\n    NODE_APP_ID_CONFIG_OPTIONS: ()=>NODE_APP_ID_CONFIG_OPTIONS,\n    UA_APP_ID_ENV_NAME: ()=>UA_APP_ID_ENV_NAME,\n    UA_APP_ID_INI_NAME: ()=>UA_APP_ID_INI_NAME,\n    createDefaultUserAgentProvider: ()=>createDefaultUserAgentProvider,\n    crtAvailability: ()=>crtAvailability,\n    defaultUserAgent: ()=>defaultUserAgent\n});\nmodule.exports = __toCommonJS(index_exports);\n// src/defaultUserAgent.ts\nvar import_os = __webpack_require__(/*! os */ \"os\");\nvar import_process = __webpack_require__(/*! process */ \"process\");\n// src/crt-availability.ts\nvar crtAvailability = {\n    isCrtAvailable: false\n};\n// src/is-crt-available.ts\nvar isCrtAvailable = /* @__PURE__ */ __name(()=>{\n    if (crtAvailability.isCrtAvailable) {\n        return [\n            \"md/crt-avail\"\n        ];\n    }\n    return null;\n}, \"isCrtAvailable\");\n// src/defaultUserAgent.ts\nvar createDefaultUserAgentProvider = /* @__PURE__ */ __name(({ serviceId, clientVersion })=>{\n    return async (config)=>{\n        const sections = [\n            // sdk-metadata\n            [\n                \"aws-sdk-js\",\n                clientVersion\n            ],\n            // ua-metadata\n            [\n                \"ua\",\n                \"2.1\"\n            ],\n            // os-metadata\n            [\n                `os/${(0, import_os.platform)()}`,\n                (0, import_os.release)()\n            ],\n            // language-metadata\n            // ECMAScript edition doesn't matter in JS, so no version needed.\n            [\n                \"lang/js\"\n            ],\n            [\n                \"md/nodejs\",\n                `${import_process.versions.node}`\n            ]\n        ];\n        const crtAvailable = isCrtAvailable();\n        if (crtAvailable) {\n            sections.push(crtAvailable);\n        }\n        if (serviceId) {\n            sections.push([\n                `api/${serviceId}`,\n                clientVersion\n            ]);\n        }\n        if (import_process.env.AWS_EXECUTION_ENV) {\n            sections.push([\n                `exec-env/${import_process.env.AWS_EXECUTION_ENV}`\n            ]);\n        }\n        const appId = await config?.userAgentAppId?.();\n        const resolvedUserAgent = appId ? [\n            ...sections,\n            [\n                `app/${appId}`\n            ]\n        ] : [\n            ...sections\n        ];\n        return resolvedUserAgent;\n    };\n}, \"createDefaultUserAgentProvider\");\nvar defaultUserAgent = createDefaultUserAgentProvider;\n// src/nodeAppIdConfigOptions.ts\nvar import_middleware_user_agent = __webpack_require__(/*! @aws-sdk/middleware-user-agent */ \"(rsc)/./node_modules/@aws-sdk/middleware-user-agent/dist-cjs/index.js\");\nvar UA_APP_ID_ENV_NAME = \"AWS_SDK_UA_APP_ID\";\nvar UA_APP_ID_INI_NAME = \"sdk_ua_app_id\";\nvar UA_APP_ID_INI_NAME_DEPRECATED = \"sdk-ua-app-id\";\nvar NODE_APP_ID_CONFIG_OPTIONS = {\n    environmentVariableSelector: /* @__PURE__ */ __name((env2)=>env2[UA_APP_ID_ENV_NAME], \"environmentVariableSelector\"),\n    configFileSelector: /* @__PURE__ */ __name((profile)=>profile[UA_APP_ID_INI_NAME] ?? profile[UA_APP_ID_INI_NAME_DEPRECATED], \"configFileSelector\"),\n    default: import_middleware_user_agent.DEFAULT_UA_APP_ID\n};\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@aws-sdk/util-user-agent-node/dist-cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/client-iam/package.json":
/*!*******************************************************!*\
  !*** ./node_modules/@aws-sdk/client-iam/package.json ***!
  \*******************************************************/
/***/ ((module) => {

module.exports = JSON.parse('{"name":"@aws-sdk/client-iam","description":"AWS SDK for JavaScript Iam Client for Node.js, Browser and React Native","version":"3.797.0","scripts":{"build":"concurrently \'yarn:build:cjs\' \'yarn:build:es\' \'yarn:build:types\'","build:cjs":"node ../../scripts/compilation/inline client-iam","build:es":"tsc -p tsconfig.es.json","build:include:deps":"lerna run --scope $npm_package_name --include-dependencies build","build:types":"tsc -p tsconfig.types.json","build:types:downlevel":"downlevel-dts dist-types dist-types/ts3.4","clean":"rimraf ./dist-* && rimraf *.tsbuildinfo","extract:docs":"api-extractor run --local","generate:client":"node ../../scripts/generate-clients/single-service --solo iam"},"main":"./dist-cjs/index.js","types":"./dist-types/index.d.ts","module":"./dist-es/index.js","sideEffects":false,"dependencies":{"@aws-crypto/sha256-browser":"5.2.0","@aws-crypto/sha256-js":"5.2.0","@aws-sdk/core":"3.796.0","@aws-sdk/credential-provider-node":"3.797.0","@aws-sdk/middleware-host-header":"3.775.0","@aws-sdk/middleware-logger":"3.775.0","@aws-sdk/middleware-recursion-detection":"3.775.0","@aws-sdk/middleware-user-agent":"3.796.0","@aws-sdk/region-config-resolver":"3.775.0","@aws-sdk/types":"3.775.0","@aws-sdk/util-endpoints":"3.787.0","@aws-sdk/util-user-agent-browser":"3.775.0","@aws-sdk/util-user-agent-node":"3.796.0","@smithy/config-resolver":"^4.1.0","@smithy/core":"^3.2.0","@smithy/fetch-http-handler":"^5.0.2","@smithy/hash-node":"^4.0.2","@smithy/invalid-dependency":"^4.0.2","@smithy/middleware-content-length":"^4.0.2","@smithy/middleware-endpoint":"^4.1.0","@smithy/middleware-retry":"^4.1.0","@smithy/middleware-serde":"^4.0.3","@smithy/middleware-stack":"^4.0.2","@smithy/node-config-provider":"^4.0.2","@smithy/node-http-handler":"^4.0.4","@smithy/protocol-http":"^5.1.0","@smithy/smithy-client":"^4.2.0","@smithy/types":"^4.2.0","@smithy/url-parser":"^4.0.2","@smithy/util-base64":"^4.0.0","@smithy/util-body-length-browser":"^4.0.0","@smithy/util-body-length-node":"^4.0.0","@smithy/util-defaults-mode-browser":"^4.0.8","@smithy/util-defaults-mode-node":"^4.0.8","@smithy/util-endpoints":"^3.0.2","@smithy/util-middleware":"^4.0.2","@smithy/util-retry":"^4.0.2","@smithy/util-utf8":"^4.0.0","@smithy/util-waiter":"^4.0.3","tslib":"^2.6.2"},"devDependencies":{"@tsconfig/node18":"18.2.4","@types/node":"^18.19.69","concurrently":"7.0.0","downlevel-dts":"0.10.1","rimraf":"3.0.2","typescript":"~5.2.2"},"engines":{"node":">=18.0.0"},"typesVersions":{"<4.0":{"dist-types/*":["dist-types/ts3.4/*"]}},"files":["dist-*/**"],"author":{"name":"AWS SDK for JavaScript Team","url":"https://aws.amazon.com/javascript/"},"license":"Apache-2.0","browser":{"./dist-es/runtimeConfig":"./dist-es/runtimeConfig.browser"},"react-native":{"./dist-es/runtimeConfig":"./dist-es/runtimeConfig.native"},"homepage":"https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-iam","repository":{"type":"git","url":"https://github.com/aws/aws-sdk-js-v3.git","directory":"clients/client-iam"}}');

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/client-secrets-manager/package.json":
/*!*******************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-secrets-manager/package.json ***!
  \*******************************************************************/
/***/ ((module) => {

module.exports = JSON.parse('{"name":"@aws-sdk/client-secrets-manager","description":"AWS SDK for JavaScript Secrets Manager Client for Node.js, Browser and React Native","version":"3.797.0","scripts":{"build":"concurrently \'yarn:build:cjs\' \'yarn:build:es\' \'yarn:build:types\'","build:cjs":"node ../../scripts/compilation/inline client-secrets-manager","build:es":"tsc -p tsconfig.es.json","build:include:deps":"lerna run --scope $npm_package_name --include-dependencies build","build:types":"tsc -p tsconfig.types.json","build:types:downlevel":"downlevel-dts dist-types dist-types/ts3.4","clean":"rimraf ./dist-* && rimraf *.tsbuildinfo","extract:docs":"api-extractor run --local","generate:client":"node ../../scripts/generate-clients/single-service --solo secrets-manager"},"main":"./dist-cjs/index.js","types":"./dist-types/index.d.ts","module":"./dist-es/index.js","sideEffects":false,"dependencies":{"@aws-crypto/sha256-browser":"5.2.0","@aws-crypto/sha256-js":"5.2.0","@aws-sdk/core":"3.796.0","@aws-sdk/credential-provider-node":"3.797.0","@aws-sdk/middleware-host-header":"3.775.0","@aws-sdk/middleware-logger":"3.775.0","@aws-sdk/middleware-recursion-detection":"3.775.0","@aws-sdk/middleware-user-agent":"3.796.0","@aws-sdk/region-config-resolver":"3.775.0","@aws-sdk/types":"3.775.0","@aws-sdk/util-endpoints":"3.787.0","@aws-sdk/util-user-agent-browser":"3.775.0","@aws-sdk/util-user-agent-node":"3.796.0","@smithy/config-resolver":"^4.1.0","@smithy/core":"^3.2.0","@smithy/fetch-http-handler":"^5.0.2","@smithy/hash-node":"^4.0.2","@smithy/invalid-dependency":"^4.0.2","@smithy/middleware-content-length":"^4.0.2","@smithy/middleware-endpoint":"^4.1.0","@smithy/middleware-retry":"^4.1.0","@smithy/middleware-serde":"^4.0.3","@smithy/middleware-stack":"^4.0.2","@smithy/node-config-provider":"^4.0.2","@smithy/node-http-handler":"^4.0.4","@smithy/protocol-http":"^5.1.0","@smithy/smithy-client":"^4.2.0","@smithy/types":"^4.2.0","@smithy/url-parser":"^4.0.2","@smithy/util-base64":"^4.0.0","@smithy/util-body-length-browser":"^4.0.0","@smithy/util-body-length-node":"^4.0.0","@smithy/util-defaults-mode-browser":"^4.0.8","@smithy/util-defaults-mode-node":"^4.0.8","@smithy/util-endpoints":"^3.0.2","@smithy/util-middleware":"^4.0.2","@smithy/util-retry":"^4.0.2","@smithy/util-utf8":"^4.0.0","@types/uuid":"^9.0.1","tslib":"^2.6.2","uuid":"^9.0.1"},"devDependencies":{"@tsconfig/node18":"18.2.4","@types/node":"^18.19.69","concurrently":"7.0.0","downlevel-dts":"0.10.1","rimraf":"3.0.2","typescript":"~5.2.2"},"engines":{"node":">=18.0.0"},"typesVersions":{"<4.0":{"dist-types/*":["dist-types/ts3.4/*"]}},"files":["dist-*/**"],"author":{"name":"AWS SDK for JavaScript Team","url":"https://aws.amazon.com/javascript/"},"license":"Apache-2.0","browser":{"./dist-es/runtimeConfig":"./dist-es/runtimeConfig.browser"},"react-native":{"./dist-es/runtimeConfig":"./dist-es/runtimeConfig.native"},"homepage":"https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-secrets-manager","repository":{"type":"git","url":"https://github.com/aws/aws-sdk-js-v3.git","directory":"clients/client-secrets-manager"}}');

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/client-sso/package.json":
/*!*******************************************************!*\
  !*** ./node_modules/@aws-sdk/client-sso/package.json ***!
  \*******************************************************/
/***/ ((module) => {

module.exports = JSON.parse('{"name":"@aws-sdk/client-sso","description":"AWS SDK for JavaScript Sso Client for Node.js, Browser and React Native","version":"3.797.0","scripts":{"build":"concurrently \'yarn:build:cjs\' \'yarn:build:es\' \'yarn:build:types\'","build:cjs":"node ../../scripts/compilation/inline client-sso","build:es":"tsc -p tsconfig.es.json","build:include:deps":"lerna run --scope $npm_package_name --include-dependencies build","build:types":"tsc -p tsconfig.types.json","build:types:downlevel":"downlevel-dts dist-types dist-types/ts3.4","clean":"rimraf ./dist-* && rimraf *.tsbuildinfo","extract:docs":"api-extractor run --local","generate:client":"node ../../scripts/generate-clients/single-service --solo sso"},"main":"./dist-cjs/index.js","types":"./dist-types/index.d.ts","module":"./dist-es/index.js","sideEffects":false,"dependencies":{"@aws-crypto/sha256-browser":"5.2.0","@aws-crypto/sha256-js":"5.2.0","@aws-sdk/core":"3.796.0","@aws-sdk/middleware-host-header":"3.775.0","@aws-sdk/middleware-logger":"3.775.0","@aws-sdk/middleware-recursion-detection":"3.775.0","@aws-sdk/middleware-user-agent":"3.796.0","@aws-sdk/region-config-resolver":"3.775.0","@aws-sdk/types":"3.775.0","@aws-sdk/util-endpoints":"3.787.0","@aws-sdk/util-user-agent-browser":"3.775.0","@aws-sdk/util-user-agent-node":"3.796.0","@smithy/config-resolver":"^4.1.0","@smithy/core":"^3.2.0","@smithy/fetch-http-handler":"^5.0.2","@smithy/hash-node":"^4.0.2","@smithy/invalid-dependency":"^4.0.2","@smithy/middleware-content-length":"^4.0.2","@smithy/middleware-endpoint":"^4.1.0","@smithy/middleware-retry":"^4.1.0","@smithy/middleware-serde":"^4.0.3","@smithy/middleware-stack":"^4.0.2","@smithy/node-config-provider":"^4.0.2","@smithy/node-http-handler":"^4.0.4","@smithy/protocol-http":"^5.1.0","@smithy/smithy-client":"^4.2.0","@smithy/types":"^4.2.0","@smithy/url-parser":"^4.0.2","@smithy/util-base64":"^4.0.0","@smithy/util-body-length-browser":"^4.0.0","@smithy/util-body-length-node":"^4.0.0","@smithy/util-defaults-mode-browser":"^4.0.8","@smithy/util-defaults-mode-node":"^4.0.8","@smithy/util-endpoints":"^3.0.2","@smithy/util-middleware":"^4.0.2","@smithy/util-retry":"^4.0.2","@smithy/util-utf8":"^4.0.0","tslib":"^2.6.2"},"devDependencies":{"@tsconfig/node18":"18.2.4","@types/node":"^18.19.69","concurrently":"7.0.0","downlevel-dts":"0.10.1","rimraf":"3.0.2","typescript":"~5.2.2"},"engines":{"node":">=18.0.0"},"typesVersions":{"<4.0":{"dist-types/*":["dist-types/ts3.4/*"]}},"files":["dist-*/**"],"author":{"name":"AWS SDK for JavaScript Team","url":"https://aws.amazon.com/javascript/"},"license":"Apache-2.0","browser":{"./dist-es/runtimeConfig":"./dist-es/runtimeConfig.browser"},"react-native":{"./dist-es/runtimeConfig":"./dist-es/runtimeConfig.native"},"homepage":"https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-sso","repository":{"type":"git","url":"https://github.com/aws/aws-sdk-js-v3.git","directory":"clients/client-sso"}}');

/***/ }),

/***/ "(rsc)/./node_modules/@aws-sdk/nested-clients/package.json":
/*!***********************************************************!*\
  !*** ./node_modules/@aws-sdk/nested-clients/package.json ***!
  \***********************************************************/
/***/ ((module) => {

module.exports = JSON.parse('{"name":"@aws-sdk/nested-clients","version":"3.797.0","description":"Nested clients for AWS SDK packages.","main":"./dist-cjs/index.js","module":"./dist-es/index.js","types":"./dist-types/index.d.ts","scripts":{"build":"yarn lint && concurrently \'yarn:build:cjs\' \'yarn:build:es\' \'yarn:build:types\'","build:cjs":"node ../../scripts/compilation/inline nested-clients","build:es":"tsc -p tsconfig.es.json","build:include:deps":"lerna run --scope $npm_package_name --include-dependencies build","build:types":"tsc -p tsconfig.types.json","build:types:downlevel":"downlevel-dts dist-types dist-types/ts3.4","clean":"rimraf ./dist-* && rimraf *.tsbuildinfo","lint":"node ../../scripts/validation/submodules-linter.js --pkg nested-clients","test":"yarn g:vitest run","test:watch":"yarn g:vitest watch"},"engines":{"node":">=18.0.0"},"author":{"name":"AWS SDK for JavaScript Team","url":"https://aws.amazon.com/javascript/"},"license":"Apache-2.0","dependencies":{"@aws-crypto/sha256-browser":"5.2.0","@aws-crypto/sha256-js":"5.2.0","@aws-sdk/core":"3.796.0","@aws-sdk/middleware-host-header":"3.775.0","@aws-sdk/middleware-logger":"3.775.0","@aws-sdk/middleware-recursion-detection":"3.775.0","@aws-sdk/middleware-user-agent":"3.796.0","@aws-sdk/region-config-resolver":"3.775.0","@aws-sdk/types":"3.775.0","@aws-sdk/util-endpoints":"3.787.0","@aws-sdk/util-user-agent-browser":"3.775.0","@aws-sdk/util-user-agent-node":"3.796.0","@smithy/config-resolver":"^4.1.0","@smithy/core":"^3.2.0","@smithy/fetch-http-handler":"^5.0.2","@smithy/hash-node":"^4.0.2","@smithy/invalid-dependency":"^4.0.2","@smithy/middleware-content-length":"^4.0.2","@smithy/middleware-endpoint":"^4.1.0","@smithy/middleware-retry":"^4.1.0","@smithy/middleware-serde":"^4.0.3","@smithy/middleware-stack":"^4.0.2","@smithy/node-config-provider":"^4.0.2","@smithy/node-http-handler":"^4.0.4","@smithy/protocol-http":"^5.1.0","@smithy/smithy-client":"^4.2.0","@smithy/types":"^4.2.0","@smithy/url-parser":"^4.0.2","@smithy/util-base64":"^4.0.0","@smithy/util-body-length-browser":"^4.0.0","@smithy/util-body-length-node":"^4.0.0","@smithy/util-defaults-mode-browser":"^4.0.8","@smithy/util-defaults-mode-node":"^4.0.8","@smithy/util-endpoints":"^3.0.2","@smithy/util-middleware":"^4.0.2","@smithy/util-retry":"^4.0.2","@smithy/util-utf8":"^4.0.0","tslib":"^2.6.2"},"devDependencies":{"concurrently":"7.0.0","downlevel-dts":"0.10.1","rimraf":"3.0.2","typescript":"~5.2.2"},"typesVersions":{"<4.0":{"dist-types/*":["dist-types/ts3.4/*"]}},"files":["./sso-oidc.d.ts","./sso-oidc.js","./sts.d.ts","./sts.js","dist-*/**"],"browser":{"./dist-es/submodules/sso-oidc/runtimeConfig":"./dist-es/submodules/sso-oidc/runtimeConfig.browser","./dist-es/submodules/sts/runtimeConfig":"./dist-es/submodules/sts/runtimeConfig.browser"},"react-native":{},"homepage":"https://github.com/aws/aws-sdk-js-v3/tree/main/packages/nested-clients","repository":{"type":"git","url":"https://github.com/aws/aws-sdk-js-v3.git","directory":"packages/nested-clients"},"exports":{"./sso-oidc":{"types":"./dist-types/submodules/sso-oidc/index.d.ts","module":"./dist-es/submodules/sso-oidc/index.js","node":"./dist-cjs/submodules/sso-oidc/index.js","import":"./dist-es/submodules/sso-oidc/index.js","require":"./dist-cjs/submodules/sso-oidc/index.js"},"./sts":{"types":"./dist-types/submodules/sts/index.d.ts","module":"./dist-es/submodules/sts/index.js","node":"./dist-cjs/submodules/sts/index.js","import":"./dist-es/submodules/sts/index.js","require":"./dist-cjs/submodules/sts/index.js"}}}');

/***/ })

};
;