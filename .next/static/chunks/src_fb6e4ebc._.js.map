{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/hooks/useAwsCredentials.ts"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from 'react';\n\nexport interface AwsCredential {\n  id: string;\n  name: string;\n  accountId?: string;\n  accessKeyId: string;\n  secretAccessKey: string;\n  region: string;\n}\n\nexport interface UseAwsCredentialsResult {\n  credentials: AwsCredential[];\n  selectedCredential: AwsCredential | null;\n  selectCredential: (id: string) => void;\n  addCredential: (credential: Omit<AwsCredential, 'id'>) => Promise<void>;\n  updateCredential: (id: string, data: Partial<Omit<AwsCredential, 'id'>>) => Promise<void>;\n  deleteCredential: (id: string) => Promise<void>;\n  loading: boolean;\n  isLoading: boolean; // Alias for loading - needed for compatibility\n  error: string | null;\n  refresh: () => Promise<void>;\n}\n\nexport function useAwsCredentials(): UseAwsCredentialsResult {\n  const [credentials, setCredentials] = useState<AwsCredential[]>([]);\n  const [selectedCredentialId, setSelectedCredentialId] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Function to fetch credentials from the API\n  const fetchCredentials = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch('/api/aws/credentials');\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch credentials: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      setCredentials(data);\n      \n      // If we have credentials but none selected, select the first one\n      if (data.length > 0 && !selectedCredentialId) {\n        setSelectedCredentialId(data[0].id);\n        // Save to localStorage\n        localStorage.setItem('selectedAwsCredentialId', data[0].id);\n      }\n      \n      return data;\n    } catch (err) {\n      setError(`Error fetching credentials: ${err instanceof Error ? err.message : String(err)}`);\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to select a credential\n  const selectCredential = (id: string) => {\n    setSelectedCredentialId(id);\n    localStorage.setItem('selectedAwsCredentialId', id);\n  };\n\n  // Function to add a new credential\n  const addCredential = async (credential: Omit<AwsCredential, 'id'>) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch('/api/aws/credentials', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(credential),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to add credential: ${response.status}`);\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      setError(`Error adding credential: ${err instanceof Error ? err.message : String(err)}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to update an existing credential\n  const updateCredential = async (id: string, data: Partial<Omit<AwsCredential, 'id'>>) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch(`/api/aws/credentials/${id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to update credential: ${response.status}`);\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      setError(`Error updating credential: ${err instanceof Error ? err.message : String(err)}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to delete a credential\n  const deleteCredential = async (id: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch(`/api/aws/credentials/${id}`, {\n        method: 'DELETE',\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to delete credential: ${response.status}`);\n      }\n      \n      // If we delete the selected credential, select another one\n      if (id === selectedCredentialId) {\n        const remainingCredentials = credentials.filter(c => c.id !== id);\n        if (remainingCredentials.length > 0) {\n          selectCredential(remainingCredentials[0].id);\n        } else {\n          setSelectedCredentialId(null);\n          localStorage.removeItem('selectedAwsCredentialId');\n        }\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      setError(`Error deleting credential: ${err instanceof Error ? err.message : String(err)}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Load credentials on mount\n  useEffect(() => {\n    // Try to restore selected credential from localStorage\n    const savedCredentialId = localStorage.getItem('selectedAwsCredentialId');\n    if (savedCredentialId) {\n      setSelectedCredentialId(savedCredentialId);\n    }\n    \n    fetchCredentials();\n  }, []);\n\n  // Find the selected credential object\n  const selectedCredential = credentials.find(c => c.id === selectedCredentialId) || null;\n\n  return {\n    credentials,\n    selectedCredential,\n    selectCredential,\n    addCredential,\n    updateCredential,\n    deleteCredential,\n    loading,\n    isLoading: loading, // Alias for loading\n    error,\n    refresh: fetchCredentials,\n  };\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/components/aws/CredentialSelector.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useAwsCredentials } from \"@/hooks/useAwsCredentials\";\r\nimport { useRouter } from \"next/navigation\";\r\n\r\nexport default function CredentialSelector() {\r\n  const { credentials, selectedCredential, selectCredential, loading } = useAwsCredentials();\r\n  const router = useRouter();\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"bg-white rounded-lg shadow-sm p-4 mb-6 flex items-center space-x-2\">\r\n        <span className=\"text-gray-700\">Carregando credenciais...</span>\r\n        <div className=\"animate-spin rounded-full h-4 w-4 border-t-2 border-b-2 border-indigo-500\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (credentials.length === 0) {\r\n    return (\r\n      <div className=\"bg-white rounded-lg shadow-sm p-4 mb-6\">\r\n        <div className=\"flex justify-between items-center\">\r\n          <span className=\"text-gray-700\">Nenhuma credencial AWS encontrada</span>\r\n          <button\r\n            onClick={() => router.push(\"/dashboard/credentials\")}\r\n            className=\"px-3 py-1 text-sm text-white bg-indigo-600 rounded-md hover:bg-indigo-700\"\r\n          >\r\n            Adicionar Credencial\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-sm p-4 mb-6\">\r\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\r\n        <label htmlFor=\"credential-selector\" className=\"block text-sm font-medium text-gray-700 mb-2 sm:mb-0\">\r\n          Selecionar Credencial AWS:\r\n        </label>\r\n        <div className=\"flex-1 sm:ml-4 max-w-md\">\r\n          <select\r\n            id=\"credential-selector\"\r\n            value={selectedCredential?.id || \"\"}\r\n            onChange={(e) => selectCredential(e.target.value)}\r\n            className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\r\n          >\r\n            <option value=\"\" disabled>\r\n              Selecione uma credencial\r\n            </option>\r\n            {credentials.map((cred) => (\r\n              <option key={cred.id} value={cred.id}>\r\n                {cred.name} ({cred.region})\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKe,SAAS;;IACtB,MAAM,EAAE,WAAW,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,oIAAA,CAAA,oBAAiB,AAAD;IACvF,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,IAAI,SAAS;QACX,qBACE,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAK,WAAU;8BAAgB;;;;;;8BAChC,6LAAC;oBAAI,WAAU;;;;;;;;;;;;IAGrB;IAEA,IAAI,YAAY,MAAM,KAAK,GAAG;QAC5B,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAK,WAAU;kCAAgB;;;;;;kCAChC,6LAAC;wBACC,SAAS,IAAM,OAAO,IAAI,CAAC;wBAC3B,WAAU;kCACX;;;;;;;;;;;;;;;;;IAMT;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAM,SAAQ;oBAAsB,WAAU;8BAAuD;;;;;;8BAGtG,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBACC,IAAG;wBACH,OAAO,oBAAoB,MAAM;wBACjC,UAAU,CAAC,IAAM,iBAAiB,EAAE,MAAM,CAAC,KAAK;wBAChD,WAAU;;0CAEV,6LAAC;gCAAO,OAAM;gCAAG,QAAQ;0CAAC;;;;;;4BAGzB,YAAY,GAAG,CAAC,CAAC,qBAChB,6LAAC;oCAAqB,OAAO,KAAK,EAAE;;wCACjC,KAAK,IAAI;wCAAC;wCAAG,KAAK,MAAM;wCAAC;;mCADf,KAAK,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;AASlC;GAvDwB;;QACiD,oIAAA,CAAA,oBAAiB;QACzE,qIAAA,CAAA,YAAS;;;KAFF","debugId":null}},
    {"offset": {"line": 322, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/app/dashboard/security/vulnerabilities/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { useAwsCredentials } from \"@/hooks/useAwsCredentials\";\r\nimport { motion } from \"framer-motion\";\r\nimport CredentialSelector from \"@/components/aws/CredentialSelector\";\r\nimport { Check, AlertTriangle, AlertCircle, Info, Shield, Server, Database, RefreshCw, XCircle } from \"lucide-react\";\r\n\r\ninterface VulnerabilityScan {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  severity: \"critical\" | \"high\" | \"medium\" | \"low\";\r\n  resourceType: string;\r\n  resourceId: string;\r\n  detectedAt: string;\r\n  status: \"open\" | \"fixed\" | \"suppressed\";\r\n  cvss: number; // Common Vulnerability Scoring System\r\n  cve?: string; // CVE identifier if available\r\n  remediation: string;\r\n}\r\n\r\nexport default function VulnerabilitiesPage() {\r\n  const { selectedCredential } = useAwsCredentials();\r\n  const [vulnerabilities, setVulnerabilities] = useState<VulnerabilityScan[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [backgroundLoading, setBackgroundLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [scanning, setScanning] = useState(false);\r\n  const [scanProgress, setScanProgress] = useState(0);\r\n  const [filterSeverity, setFilterSeverity] = useState<string | null>(null);\r\n  const [filterStatus, setFilterStatus] = useState<string | null>(null);\r\n  const [filterResourceType, setFilterResourceType] = useState<string | null>(null);\r\n  const [lastCredentialId, setLastCredentialId] = useState<string | null>(null);\r\n  const [lastUpdated, setLastUpdated] = useState<Date | null>(null);\r\n  const [apiError, setApiError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (!selectedCredential) {\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Verificar se já temos dados no localStorage\r\n      const vulnerabilitiesCache = localStorage.getItem('vulnerabilitiesData');\r\n      const cachedCredentialId = localStorage.getItem('vulnerabilitiesLastCredentialId');\r\n      const cachedTimestamp = localStorage.getItem('vulnerabilitiesLastUpdateTime');\r\n\r\n      if (vulnerabilitiesCache && cachedCredentialId === selectedCredential.id) {\r\n        // Usar dados do cache\r\n        const parsedData = JSON.parse(vulnerabilitiesCache);\r\n        setVulnerabilities(parsedData);\r\n        setLoading(false);\r\n        \r\n        if (cachedTimestamp) {\r\n          setLastUpdated(new Date(parseInt(cachedTimestamp)));\r\n        }\r\n        \r\n        // Verificar se é hora de atualizar em background\r\n        if (cachedTimestamp) {\r\n          const timeSinceLastUpdate = Date.now() - parseInt(cachedTimestamp);\r\n          const fiveMinutesInMs = 5 * 60 * 1000;\r\n          \r\n          if (timeSinceLastUpdate > fiveMinutesInMs) {\r\n            // Atualiza em background se passou mais de 5 minutos\r\n            fetchVulnerabilitiesInBackground();\r\n          }\r\n        }\r\n      } else {\r\n        // Se não tem cache ou a credencial mudou, buscar novos dados\r\n        fetchVulnerabilities();\r\n      }\r\n      \r\n      setLastCredentialId(selectedCredential.id);\r\n    } catch (error) {\r\n      console.error(\"Erro ao restaurar cache:\", error);\r\n      fetchVulnerabilities();\r\n    }\r\n  }, [selectedCredential]);\r\n\r\n  // Função para atualizar dados em background\r\n  const fetchVulnerabilitiesInBackground = async () => {\r\n    if (!selectedCredential) return;\r\n    \r\n    try {\r\n      setBackgroundLoading(true);\r\n      setApiError(null);\r\n      \r\n      // Usar API real para buscar vulnerabilidades\r\n      console.log(`Atualizando vulnerabilidades em segundo plano para credencial: ${selectedCredential.id}`);\r\n      const response = await fetch(`/api/aws/security/vulnerabilities?credentialId=${selectedCredential.id}`);\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Erro ao buscar vulnerabilidades');\r\n      }\r\n      \r\n      const data = await response.json();\r\n      const realVulnerabilities = data.vulnerabilities.map((vuln: any) => ({\r\n        ...vuln,\r\n        // Garantir que status seja 'open' se não foi definido pela API\r\n        status: vuln.status || 'open'\r\n      }));\r\n      \r\n      // Log para verificar os tipos de vulnerabilidades recebidos\r\n      console.log(`Total de vulnerabilidades recebidas em segundo plano: ${realVulnerabilities.length}`);\r\n      const countByType = realVulnerabilities.reduce((acc: Record<string, number>, vuln: VulnerabilityScan) => {\r\n        acc[vuln.resourceType] = (acc[vuln.resourceType] || 0) + 1;\r\n        return acc;\r\n      }, {});\r\n      console.log('Distribuição de vulnerabilidades por tipo (background):', countByType);\r\n      \r\n      setVulnerabilities(realVulnerabilities);\r\n      \r\n      const currentTime = new Date();\r\n      setLastUpdated(currentTime);\r\n      \r\n      // Salvar no cache\r\n      localStorage.setItem('vulnerabilitiesData', JSON.stringify(realVulnerabilities));\r\n      localStorage.setItem('vulnerabilitiesLastCredentialId', selectedCredential.id);\r\n      localStorage.setItem('vulnerabilitiesLastUpdateTime', currentTime.getTime().toString());\r\n      \r\n      console.log(\"Atualização em background de vulnerabilidades concluída\");\r\n    } catch (err) {\r\n      console.error(\"Erro na atualização em background:\", err);\r\n      if (err instanceof Error) {\r\n        setApiError(err.message);\r\n      }\r\n    } finally {\r\n      setBackgroundLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchVulnerabilities = async () => {\r\n    if (!selectedCredential) {\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setError(null);\r\n    setApiError(null);\r\n    \r\n    let scanTimer: NodeJS.Timeout | null = null;\r\n    \r\n    try {\r\n      // Simular um scan progressivo para UX melhor\r\n      setScanning(true);\r\n      setScanProgress(0);\r\n      \r\n      scanTimer = setInterval(() => {\r\n        setScanProgress(prev => {\r\n          if (prev >= 95) {\r\n            if (scanTimer) clearInterval(scanTimer);\r\n            return 95;\r\n          }\r\n          return prev + Math.floor(Math.random() * 5) + 1;\r\n        });\r\n      }, 300);\r\n      \r\n      // Usar API real para buscar vulnerabilidades\r\n      console.log(`Buscando vulnerabilidades para credencial: ${selectedCredential.id}`);\r\n      const response = await fetch(`/api/aws/security/vulnerabilities?credentialId=${selectedCredential.id}`);\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        if (scanTimer) clearInterval(scanTimer);\r\n        throw new Error(errorData.error || 'Erro ao buscar vulnerabilidades');\r\n      }\r\n      \r\n      const data = await response.json();\r\n      const realVulnerabilities = data.vulnerabilities.map((vuln: any) => ({\r\n        ...vuln,\r\n        // Garantir que status seja 'open' se não foi definido pela API\r\n        status: vuln.status || 'open'\r\n      }));\r\n      \r\n      // Log para verificar os tipos de vulnerabilidades recebidos\r\n      console.log(`Total de vulnerabilidades recebidas: ${realVulnerabilities.length}`);\r\n      const countByType = realVulnerabilities.reduce((acc: Record<string, number>, vuln: VulnerabilityScan) => {\r\n        acc[vuln.resourceType] = (acc[vuln.resourceType] || 0) + 1;\r\n        return acc;\r\n      }, {});\r\n      console.log('Distribuição de vulnerabilidades por tipo:', countByType);\r\n      \r\n      // Atrasar um pouco para UX melhor se o resultado for muito rápido\r\n      setTimeout(() => {\r\n        setVulnerabilities(realVulnerabilities);\r\n        setScanning(false);\r\n        setScanProgress(100);\r\n        setLoading(false);\r\n        \r\n        const currentTime = new Date();\r\n        setLastUpdated(currentTime);\r\n        \r\n        // Salvar no cache\r\n        localStorage.setItem('vulnerabilitiesData', JSON.stringify(realVulnerabilities));\r\n        localStorage.setItem('vulnerabilitiesLastCredentialId', selectedCredential.id);\r\n        localStorage.setItem('vulnerabilitiesLastUpdateTime', currentTime.getTime().toString());\r\n      }, realVulnerabilities.length > 0 ? 500 : 1500);\r\n      \r\n      if (scanTimer) clearInterval(scanTimer);\r\n    } catch (err) {\r\n      console.error(\"Erro ao buscar vulnerabilidades:\", err);\r\n      if (err instanceof Error) {\r\n        setError(err.message);\r\n        setApiError(err.message);\r\n      } else {\r\n        setError(\"Erro ao buscar vulnerabilidades\");\r\n      }\r\n      setScanning(false);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const runNewScan = () => {\r\n    fetchVulnerabilities();\r\n  };\r\n  \r\n  const determineVulnerabilitySource = (vuln: VulnerabilityScan): string => {\r\n    if (vuln.id.startsWith('aws-inspector-')) {\r\n      return 'AWS Inspector';\r\n    } else if (vuln.id.startsWith('sg-vuln-')) {\r\n      return 'Análise de Grupo de Segurança';\r\n    } else if (vuln.id.startsWith('ec2-vuln-')) {\r\n      return 'Análise de Instância EC2';\r\n    } else if (vuln.id.startsWith('vol-vuln-')) {\r\n      return 'Análise de Volume EBS';\r\n    } else if (vuln.id.startsWith('iam-vuln-')) {\r\n      return 'Análise de IAM';\r\n    } else if (vuln.id.startsWith('acl-vuln-')) {\r\n      return 'Análise de Network ACL';\r\n    } else if (vuln.id.startsWith('cve-')) {\r\n      return 'Banco de Dados CVE';\r\n    } else {\r\n      return 'Análise de Segurança AWS';\r\n    }\r\n  };\r\n\r\n  // Contadores para resumo\r\n  const criticalCount = vulnerabilities.filter(v => v.severity === \"critical\").length;\r\n  const highCount = vulnerabilities.filter(v => v.severity === \"high\").length;\r\n  const mediumCount = vulnerabilities.filter(v => v.severity === \"medium\").length;\r\n  const lowCount = vulnerabilities.filter(v => v.severity === \"low\").length;\r\n  const openCount = vulnerabilities.filter(v => v.status === \"open\").length;\r\n  const fixedCount = vulnerabilities.filter(v => v.status === \"fixed\").length;\r\n  const suppressedCount = vulnerabilities.filter(v => v.status === \"suppressed\").length;\r\n\r\n  // Filtrar vulnerabilidades\r\n  const filteredVulnerabilities = vulnerabilities.filter(vuln => {\r\n    if (filterSeverity && vuln.severity !== filterSeverity) return false;\r\n    if (filterStatus && vuln.status !== filterStatus) return false;\r\n    if (filterResourceType && vuln.resourceType !== filterResourceType) return false;\r\n    return true;\r\n  });\r\n\r\n  // Helper para cores\r\n  const getSeverityColor = (severity: string) => {\r\n    switch (severity) {\r\n      case \"critical\": return \"bg-red-100 text-red-800\";\r\n      case \"high\": return \"bg-orange-100 text-orange-800\";\r\n      case \"medium\": return \"bg-yellow-100 text-yellow-800\";\r\n      case \"low\": return \"bg-blue-100 text-blue-800\";\r\n      default: return \"bg-gray-100 text-gray-800\";\r\n    }\r\n  };\r\n  \r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case \"open\": return \"bg-red-100 text-red-800\";\r\n      case \"fixed\": return \"bg-green-100 text-green-800\";\r\n      case \"suppressed\": return \"bg-purple-100 text-purple-800\";\r\n      default: return \"bg-gray-100 text-gray-800\";\r\n    }\r\n  };\r\n\r\n  const getSeverityIcon = (severity: string) => {\r\n    switch (severity) {\r\n      case \"critical\": return <AlertCircle className=\"h-4 w-4 text-red-600\" />;\r\n      case \"high\": return <AlertTriangle className=\"h-4 w-4 text-orange-600\" />;\r\n      case \"medium\": return <AlertTriangle className=\"h-4 w-4 text-yellow-600\" />;\r\n      case \"low\": return <Info className=\"h-4 w-4 text-blue-600\" />;\r\n      default: return <Info className=\"h-4 w-4 text-gray-600\" />;\r\n    }\r\n  };\r\n\r\n  // Obter recursos únicos para o filtro de recursos\r\n  const uniqueResourceTypes = Array.from(new Set(vulnerabilities.map(v => v.resourceType)));\r\n\r\n  return (\r\n    <div>\r\n      <motion.div\r\n        className=\"mb-6\"\r\n        initial={{ opacity: 0, y: -20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.3 }}\r\n      >\r\n        <div className=\"flex items-center gap-2 mb-2\">\r\n          <Shield className=\"h-6 w-6 text-indigo-600\" />\r\n          <h1 className=\"text-3xl font-bold text-gray-900\">Análise de Vulnerabilidades</h1>\r\n        </div>\r\n        <p className=\"mt-2 text-gray-600\">\r\n          Identifique e corrija vulnerabilidades nos seus recursos AWS para melhorar a segurança.\r\n        </p>\r\n      </motion.div>\r\n\r\n      <CredentialSelector />\r\n\r\n      {/* Header com informações de última atualização */}\r\n      {lastUpdated && (\r\n        <div className=\"flex justify-end items-center mb-4 text-sm text-gray-500\">\r\n          <span>Última atualização: {lastUpdated.toLocaleString()}</span>\r\n          {backgroundLoading && (\r\n            <span className=\"ml-3 inline-flex items-center\">\r\n              <RefreshCw className=\"animate-spin h-3 w-3 mr-1\" />\r\n              Atualizando...\r\n            </span>\r\n          )}\r\n        </div>\r\n      )}\r\n      \r\n      {/* Mensagem de erro da API quando ocorre em segundo plano */}\r\n      {apiError && (\r\n        <div className=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-md\">\r\n          <div className=\"flex items-center text-red-700\">\r\n            <XCircle className=\"h-4 w-4 mr-2\" /> \r\n            <span className=\"text-sm font-medium\">Erro ao verificar vulnerabilidades: {apiError}</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {!selectedCredential ? (\r\n        <motion.div\r\n          className=\"bg-white rounded-lg shadow-md p-6 text-center\"\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.3 }}\r\n        >\r\n          <p className=\"text-gray-500 mb-4\">Selecione uma credencial AWS para começar a análise de vulnerabilidades.</p>\r\n        </motion.div>\r\n      ) : (\r\n        <>\r\n          {/* Painel de controle e resumo */}\r\n          <motion.div\r\n            className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\"\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.3 }}\r\n          >\r\n            {/* Cartão de severidade */}\r\n            <div className=\"bg-white rounded-lg shadow-md p-4\">\r\n              <h3 className=\"text-lg font-medium text-gray-900 mb-3\">Por Severidade</h3>\r\n              <div className=\"space-y-2\">\r\n                <div className=\"flex justify-between\">\r\n                  <span className=\"text-sm text-gray-500\">Crítica</span>\r\n                  <span className=\"text-sm font-medium text-red-600\">{criticalCount}</span>\r\n                </div>\r\n                <div className=\"flex justify-between\">\r\n                  <span className=\"text-sm text-gray-500\">Alta</span>\r\n                  <span className=\"text-sm font-medium text-orange-600\">{highCount}</span>\r\n                </div>\r\n                <div className=\"flex justify-between\">\r\n                  <span className=\"text-sm text-gray-500\">Média</span>\r\n                  <span className=\"text-sm font-medium text-yellow-600\">{mediumCount}</span>\r\n                </div>\r\n                <div className=\"flex justify-between\">\r\n                  <span className=\"text-sm text-gray-500\">Baixa</span>\r\n                  <span className=\"text-sm font-medium text-blue-600\">{lowCount}</span>\r\n                </div>\r\n                <div className=\"flex justify-between pt-2 border-t border-gray-200\">\r\n                  <span className=\"text-sm text-gray-500\">Total</span>\r\n                  <span className=\"text-sm font-medium\">{vulnerabilities.length}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Cartão de status */}\r\n            <div className=\"bg-white rounded-lg shadow-md p-4\">\r\n              <div className=\"flex justify-between items-center mb-3\">\r\n                <h3 className=\"text-lg font-medium text-gray-900\">Status</h3>\r\n                {backgroundLoading && (\r\n                  <div className=\"flex items-center text-xs text-gray-500\">\r\n                    <div className=\"animate-spin h-3 w-3 border-t-2 border-b-2 border-indigo-500 mr-1\"></div>\r\n                    Atualizando...\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"space-y-2\">\r\n                <div className=\"flex justify-between\">\r\n                  <span className=\"text-sm text-gray-500\">Em Aberto</span>\r\n                  <span className=\"text-sm font-medium text-red-600\">{openCount}</span>\r\n                </div>\r\n                <div className=\"flex justify-between\">\r\n                  <span className=\"text-sm text-gray-500\">Corrigidas</span>\r\n                  <span className=\"text-sm font-medium text-green-600\">{fixedCount}</span>\r\n                </div>\r\n                <div className=\"flex justify-between\">\r\n                  <span className=\"text-sm text-gray-500\">Suprimidas</span>\r\n                  <span className=\"text-sm font-medium text-purple-600\">{suppressedCount}</span>\r\n                </div>\r\n                <div className=\"flex justify-between pt-2 border-t border-gray-200\">\r\n                  <span className=\"text-sm text-gray-500\">Total</span>\r\n                  <span className=\"text-sm font-medium\">{vulnerabilities.length}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Cartão de ações */}\r\n            <div className=\"bg-white rounded-lg shadow-md p-4\">\r\n              <h3 className=\"text-lg font-medium text-gray-900 mb-3\">Ações</h3>\r\n              <div className=\"space-y-3\">\r\n                <button\r\n                  onClick={runNewScan}\r\n                  disabled={scanning}\r\n                  className=\"w-full flex items-center justify-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\r\n                >\r\n                  {scanning ? (\r\n                    <>\r\n                      <RefreshCw className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" />\r\n                      Escaneando... {scanProgress}%\r\n                    </>\r\n                  ) : (\r\n                    \"Iniciar Nova Verificação\"\r\n                  )}\r\n                </button>\r\n                <button\r\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                >\r\n                  Exportar Relatório\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </motion.div>\r\n          \r\n          {/* Filtros e lista de vulnerabilidades */}\r\n          <motion.div\r\n            className=\"bg-white rounded-lg shadow-md overflow-hidden\"\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.3, delay: 0.1 }}\r\n          >\r\n            {/* Filtros */}\r\n            <div className=\"border-b border-gray-200 bg-gray-50 p-4 flex flex-wrap gap-4\">\r\n              <div>\r\n                <label htmlFor=\"filter-severity\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Severidade\r\n                </label>\r\n                <select\r\n                  id=\"filter-severity\"\r\n                  value={filterSeverity || \"\"}\r\n                  onChange={(e) => setFilterSeverity(e.target.value || null)}\r\n                  className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\r\n                >\r\n                  <option value=\"\">Todas</option>\r\n                  <option value=\"critical\">Crítica</option>\r\n                  <option value=\"high\">Alta</option>\r\n                  <option value=\"medium\">Média</option>\r\n                  <option value=\"low\">Baixa</option>\r\n                </select>\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"filter-status\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Status\r\n                </label>\r\n                <select\r\n                  id=\"filter-status\"\r\n                  value={filterStatus || \"\"}\r\n                  onChange={(e) => setFilterStatus(e.target.value || null)}\r\n                  className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\r\n                >\r\n                  <option value=\"\">Todos</option>\r\n                  <option value=\"open\">Em Aberto</option>\r\n                  <option value=\"fixed\">Corrigidas</option>\r\n                  <option value=\"suppressed\">Suprimidas</option>\r\n                </select>\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"filter-resource\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Tipo de Recurso\r\n                </label>\r\n                <select\r\n                  id=\"filter-resource\"\r\n                  value={filterResourceType || \"\"}\r\n                  onChange={(e) => setFilterResourceType(e.target.value || null)}\r\n                  className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\r\n                >\r\n                  <option value=\"\">Todos</option>\r\n                  {uniqueResourceTypes.map(type => (\r\n                    <option key={type} value={type}>{type}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Lista de vulnerabilidades */}\r\n            <div className=\"divide-y divide-gray-200\">\r\n              {loading ? (\r\n                <div className=\"p-6 text-center\">\r\n                  <div className=\"animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-indigo-500 mx-auto mb-4\"></div>\r\n                  <p className=\"text-gray-500\">Carregando vulnerabilidades...</p>\r\n                </div>\r\n              ) : error ? (\r\n                <div className=\"p-6 text-center\">\r\n                  <div className=\"p-4 bg-red-50 rounded-md\">\r\n                    <p className=\"text-red-700\">{error}</p>\r\n                  </div>\r\n                </div>\r\n              ) : filteredVulnerabilities.length === 0 ? (\r\n                <div className=\"p-6 text-center\">\r\n                  <p className=\"text-gray-500\">Nenhuma vulnerabilidade encontrada com os filtros atuais.</p>\r\n                </div>\r\n              ) : (\r\n                filteredVulnerabilities.map((vuln) => (\r\n                  <div key={vuln.id} className=\"p-4 hover:bg-gray-50\">\r\n                    <div className=\"flex items-start\">\r\n                      {/* Indicador de severidade */}\r\n                      <div className=\"mt-1 mr-4\">\r\n                        {getSeverityIcon(vuln.severity)}\r\n                      </div>\r\n                      \r\n                      {/* Conteúdo principal */}\r\n                      <div className=\"flex-1\">\r\n                        <div className=\"flex justify-between mb-2\">\r\n                          <h4 className=\"text-base font-medium text-gray-900\">{vuln.title}</h4>\r\n                          <div className=\"flex space-x-2\">\r\n                            <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${getSeverityColor(vuln.severity)}`}>\r\n                              {vuln.severity === 'critical' ? 'Crítica' : \r\n                               vuln.severity === 'high' ? 'Alta' : \r\n                               vuln.severity === 'medium' ? 'Média' : 'Baixa'}\r\n                            </span>\r\n                            <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusColor(vuln.status)}`}>\r\n                              {vuln.status === 'open' ? 'Em Aberto' : \r\n                               vuln.status === 'fixed' ? 'Corrigida' : 'Suprimida'}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                        \r\n                        <p className=\"text-sm text-gray-500 mb-2\">{vuln.description}</p>\r\n                        \r\n                        <div className=\"flex flex-wrap gap-x-4 mb-2 text-xs text-gray-500\">\r\n                          <div>\r\n                            <span className=\"font-medium\">Recurso:</span> {vuln.resourceType} ({vuln.resourceId})\r\n                          </div>\r\n                          <div>\r\n                            <span className=\"font-medium\">Detectado:</span> {new Date(vuln.detectedAt).toLocaleString()}\r\n                          </div>\r\n                          {vuln.cve && (\r\n                            <div>\r\n                              <span className=\"font-medium\">CVE:</span> {vuln.cve}\r\n                            </div>\r\n                          )}\r\n                          <div>\r\n                            <span className=\"font-medium\">CVSS:</span> {vuln.cvss.toFixed(1)}\r\n                          </div>\r\n                          <div>\r\n                            <span className=\"font-medium\">Fonte:</span> {determineVulnerabilitySource(vuln)}\r\n                          </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"mt-3 p-3 bg-blue-50 rounded-md\">\r\n                          <h5 className=\"text-xs font-medium text-blue-800 mb-1\">Recomendação:</h5>\r\n                          <p className=\"text-sm text-blue-700\">{vuln.remediation}</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              )}\r\n            </div>\r\n          </motion.div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}}]
}