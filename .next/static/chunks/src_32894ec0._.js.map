{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/hooks/useAlerts.ts"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useCallback, useEffect } from \"react\";\r\n\r\ninterface Alert {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  resourceId: string;\r\n  resourceType: string;\r\n  severity: string;\r\n  status: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\ninterface AlertFilters {\r\n  status?: string;\r\n  severity?: string;\r\n  resourceType?: string;\r\n}\r\n\r\ninterface UseAlertsResult {\r\n  alerts: Alert[];\r\n  loading: boolean;\r\n  error: string | null;\r\n  filters: AlertFilters;\r\n  setFilters: (filters: AlertFilters) => void;\r\n  fetchAlerts: () => Promise<void>;\r\n  dismissAlert: (id: string) => Promise<boolean>;\r\n  resolveAlert: (id: string) => Promise<boolean>;\r\n}\r\n\r\nexport function useAlerts(): UseAlertsResult {\r\n  const [alerts, setAlerts] = useState<Alert[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [filters, setFilters] = useState<AlertFilters>({});\r\n\r\n  const fetchAlerts = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      let url = \"/api/alerts\";\r\n      const params = new URLSearchParams();\r\n      \r\n      if (filters.status) {\r\n        params.append(\"status\", filters.status);\r\n      }\r\n      if (filters.severity) {\r\n        params.append(\"severity\", filters.severity);\r\n      }\r\n      if (filters.resourceType) {\r\n        params.append(\"resourceType\", filters.resourceType);\r\n      }\r\n      \r\n      if (params.toString()) {\r\n        url += `?${params.toString()}`;\r\n      }\r\n      \r\n      const response = await fetch(url);\r\n      \r\n      if (!response.ok) {\r\n        const { error } = await response.json();\r\n        throw new Error(error || \"Erro ao buscar alertas\");\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setAlerts(data.alerts || []);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : \"Erro ao buscar alertas\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [filters]);\r\n\r\n  const updateAlertStatus = useCallback(async (id: string, action: \"dismiss\" | \"resolve\") => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await fetch(\"/api/alerts\", {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          id,\r\n          action,\r\n        }),\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const { error } = await response.json();\r\n        throw new Error(error || `Erro ao ${action === \"dismiss\" ? \"arquivar\" : \"resolver\"} alerta`);\r\n      }\r\n      \r\n      // Atualizar lista de alertas\r\n      await fetchAlerts();\r\n      return true;\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : `Erro ao ${action === \"dismiss\" ? \"arquivar\" : \"resolver\"} alerta`);\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [fetchAlerts]);\r\n\r\n  const dismissAlert = useCallback((id: string) => {\r\n    return updateAlertStatus(id, \"dismiss\");\r\n  }, [updateAlertStatus]);\r\n\r\n  const resolveAlert = useCallback((id: string) => {\r\n    return updateAlertStatus(id, \"resolve\");\r\n  }, [updateAlertStatus]);\r\n\r\n  // Buscar alertas ao montar o componente ou quando os filtros mudarem\r\n  useEffect(() => {\r\n    fetchAlerts();\r\n  }, [fetchAlerts]);\r\n\r\n  return {\r\n    alerts,\r\n    loading,\r\n    error,\r\n    filters,\r\n    setFilters,\r\n    fetchAlerts,\r\n    dismissAlert,\r\n    resolveAlert,\r\n  };\r\n} "],"names":[],"mappings":";;;AAEA;;AAFA;;AAiCO,SAAS;;IACd,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW,EAAE;IAChD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAChD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAgB,CAAC;IAEtD,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;8CAAE;YAC9B,IAAI;gBACF,WAAW;gBACX,SAAS;gBAET,IAAI,MAAM;gBACV,MAAM,SAAS,IAAI;gBAEnB,IAAI,QAAQ,MAAM,EAAE;oBAClB,OAAO,MAAM,CAAC,UAAU,QAAQ,MAAM;gBACxC;gBACA,IAAI,QAAQ,QAAQ,EAAE;oBACpB,OAAO,MAAM,CAAC,YAAY,QAAQ,QAAQ;gBAC5C;gBACA,IAAI,QAAQ,YAAY,EAAE;oBACxB,OAAO,MAAM,CAAC,gBAAgB,QAAQ,YAAY;gBACpD;gBAEA,IAAI,OAAO,QAAQ,IAAI;oBACrB,OAAO,CAAC,CAAC,EAAE,OAAO,QAAQ,IAAI;gBAChC;gBAEA,MAAM,WAAW,MAAM,MAAM;gBAE7B,IAAI,CAAC,SAAS,EAAE,EAAE;oBAChB,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI;oBACrC,MAAM,IAAI,MAAM,SAAS;gBAC3B;gBAEA,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,UAAU,KAAK,MAAM,IAAI,EAAE;YAC7B,EAAE,OAAO,KAAK;gBACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;YAChD,SAAU;gBACR,WAAW;YACb;QACF;6CAAG;QAAC;KAAQ;IAEZ,MAAM,oBAAoB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;oDAAE,OAAO,IAAY;YACvD,IAAI;gBACF,WAAW;gBACX,SAAS;gBAET,MAAM,WAAW,MAAM,MAAM,eAAe;oBAC1C,QAAQ;oBACR,SAAS;wBACP,gBAAgB;oBAClB;oBACA,MAAM,KAAK,SAAS,CAAC;wBACnB;wBACA;oBACF;gBACF;gBAEA,IAAI,CAAC,SAAS,EAAE,EAAE;oBAChB,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI;oBACrC,MAAM,IAAI,MAAM,SAAS,CAAC,QAAQ,EAAE,WAAW,YAAY,aAAa,WAAW,OAAO,CAAC;gBAC7F;gBAEA,6BAA6B;gBAC7B,MAAM;gBACN,OAAO;YACT,EAAE,OAAO,KAAK;gBACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG,CAAC,QAAQ,EAAE,WAAW,YAAY,aAAa,WAAW,OAAO,CAAC;gBAChH,OAAO;YACT,SAAU;gBACR,WAAW;YACb;QACF;mDAAG;QAAC;KAAY;IAEhB,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;+CAAE,CAAC;YAChC,OAAO,kBAAkB,IAAI;QAC/B;8CAAG;QAAC;KAAkB;IAEtB,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;+CAAE,CAAC;YAChC,OAAO,kBAAkB,IAAI;QAC/B;8CAAG;QAAC;KAAkB;IAEtB,qEAAqE;IACrE,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+BAAE;YACR;QACF;8BAAG;QAAC;KAAY;IAEhB,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IACF;AACF;GAnGgB","debugId":null}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/hooks/useAwsCredentials.ts"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from 'react';\n\nexport interface AwsCredential {\n  id: string;\n  name: string;\n  accountId?: string;\n  accessKeyId: string;\n  secretAccessKey: string;\n  region: string;\n}\n\nexport interface UseAwsCredentialsResult {\n  credentials: AwsCredential[];\n  selectedCredential: AwsCredential | null;\n  selectCredential: (id: string) => void;\n  addCredential: (credential: Omit<AwsCredential, 'id'>) => Promise<void>;\n  updateCredential: (id: string, data: Partial<Omit<AwsCredential, 'id'>>) => Promise<void>;\n  deleteCredential: (id: string) => Promise<void>;\n  loading: boolean;\n  isLoading: boolean; // Alias for loading - needed for compatibility\n  error: string | null;\n  refresh: () => Promise<void>;\n}\n\nexport function useAwsCredentials(): UseAwsCredentialsResult {\n  const [credentials, setCredentials] = useState<AwsCredential[]>([]);\n  const [selectedCredentialId, setSelectedCredentialId] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Function to fetch credentials from the API\n  const fetchCredentials = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch('/api/aws/credentials');\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch credentials: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      setCredentials(data);\n      \n      // If we have credentials but none selected, select the first one\n      if (data.length > 0 && !selectedCredentialId) {\n        setSelectedCredentialId(data[0].id);\n        // Save to localStorage\n        localStorage.setItem('selectedAwsCredentialId', data[0].id);\n      }\n      \n      return data;\n    } catch (err) {\n      setError(`Error fetching credentials: ${err instanceof Error ? err.message : String(err)}`);\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to select a credential\n  const selectCredential = (id: string) => {\n    setSelectedCredentialId(id);\n    localStorage.setItem('selectedAwsCredentialId', id);\n  };\n\n  // Function to add a new credential\n  const addCredential = async (credential: Omit<AwsCredential, 'id'>) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch('/api/aws/credentials', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(credential),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to add credential: ${response.status}`);\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      setError(`Error adding credential: ${err instanceof Error ? err.message : String(err)}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to update an existing credential\n  const updateCredential = async (id: string, data: Partial<Omit<AwsCredential, 'id'>>) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch(`/api/aws/credentials/${id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to update credential: ${response.status}`);\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      setError(`Error updating credential: ${err instanceof Error ? err.message : String(err)}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to delete a credential\n  const deleteCredential = async (id: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch(`/api/aws/credentials/${id}`, {\n        method: 'DELETE',\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to delete credential: ${response.status}`);\n      }\n      \n      // If we delete the selected credential, select another one\n      if (id === selectedCredentialId) {\n        const remainingCredentials = credentials.filter(c => c.id !== id);\n        if (remainingCredentials.length > 0) {\n          selectCredential(remainingCredentials[0].id);\n        } else {\n          setSelectedCredentialId(null);\n          localStorage.removeItem('selectedAwsCredentialId');\n        }\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      setError(`Error deleting credential: ${err instanceof Error ? err.message : String(err)}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Load credentials on mount\n  useEffect(() => {\n    // Try to restore selected credential from localStorage\n    const savedCredentialId = localStorage.getItem('selectedAwsCredentialId');\n    if (savedCredentialId) {\n      setSelectedCredentialId(savedCredentialId);\n    }\n    \n    fetchCredentials();\n  }, []);\n\n  // Find the selected credential object\n  const selectedCredential = credentials.find(c => c.id === selectedCredentialId) || null;\n\n  return {\n    credentials,\n    selectedCredential,\n    selectCredential,\n    addCredential,\n    updateCredential,\n    deleteCredential,\n    loading,\n    isLoading: loading, // Alias for loading\n    error,\n    refresh: fetchCredentials,\n  };\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 284, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/app/dashboard/security/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useAlerts } from \"@/hooks/useAlerts\";\nimport { motion } from \"framer-motion\";\nimport { useState, useEffect } from \"react\";\nimport { useAwsCredentials } from \"@/hooks/useAwsCredentials\";\nimport { \n  Bell, AlertTriangle, AlertCircle, Info, \n  CheckCircle, XCircle, Archive, Shield, \n  Search, Filter, RefreshCw, Trash2, \n  User, Key, Lock, Database, Server,\n  BarChart as BarChartIcon, PieChart as PieChartIcon,\n  ChevronRight, ChevronDown\n} from \"lucide-react\";\nimport Link from \"next/link\";\nimport { useSearchParams } from \"next/navigation\";\nimport { \n  ResponsiveContainer, \n  PieChart, \n  Pie, \n  Cell, \n  BarChart, \n  Bar, \n  XAxis, \n  YAxis, \n  Tooltip, \n  Legend, \n  CartesianGrid,\n  LineChart,\n  Line,\n  AreaChart,\n  Area\n} from \"recharts\";\nimport CredentialSelector from \"@/components/aws/CredentialSelector\";\n\nexport default function SecurityPage() {\n  const { selectedCredential } = useAwsCredentials();\n  const { \n    alerts, \n    loading, \n    error, \n    filters, \n    setFilters, \n    dismissAlert, \n    resolveAlert,\n    fetchAlerts\n  } = useAlerts();\n  \n  const searchParams = useSearchParams();\n  const categoryParam = searchParams.get('category');\n\n  const [cleanupLoading, setCleanupLoading] = useState(false);\n  const [cleanupMessage, setCleanupMessage] = useState<string | null>(null);\n  const [showFilters, setShowFilters] = useState(false);\n  const [actionLoading, setActionLoading] = useState<string | null>(null);\n  const [iamScanLoading, setIamScanLoading] = useState(false);\n  const [iamScanMessage, setIamScanMessage] = useState<string | null>(null);\n  const [activeCategory, setActiveCategory] = useState<string>('all'); // 'all', 'iam', 'ec2', etc.\n  const [timeRange, setTimeRange] = useState<'7d' | '30d' | '90d'>('7d');\n  const [viewMode, setViewMode] = useState<'dashboard' | 'list'>('dashboard');\n  const [expandedSections, setExpandedSections] = useState<string[]>([]);\n\n  // Set initial category from URL parameter\n  useEffect(() => {\n    if (categoryParam) {\n      setActiveCategory(categoryParam);\n    }\n  }, [categoryParam]);\n\n  const handleDismiss = async (id: string) => {\n    setActionLoading(id);\n    await dismissAlert(id);\n    setActionLoading(null);\n  };\n\n  const handleResolve = async (id: string) => {\n    setActionLoading(id);\n    await resolveAlert(id);\n    setActionLoading(null);\n  };\n\n  const handleRefresh = async () => {\n    await fetchAlerts();\n  };\n\n  const handleScanIAMThreats = async () => {\n    if (!selectedCredential) {\n      setIamScanMessage(\"Selecione uma credencial AWS para realizar a verificação\");\n      return;\n    }\n\n    try {\n      setIamScanLoading(true);\n      setIamScanMessage(null);\n      \n      const response = await fetch('/api/alerts/iam', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          credentialId: selectedCredential.id\n        })\n      });\n      \n      if (!response.ok) {\n        const data = await response.json();\n        throw new Error(data.error || 'Erro ao verificar ameaças do IAM');\n      }\n      \n      const result = await response.json();\n      setIamScanMessage(result.message);\n      \n      // Recarregar alertas\n      await fetchAlerts();\n      \n      // Ativar a categoria IAM\n      setActiveCategory('iam');\n    } catch (error) {\n      setIamScanMessage(`Erro: ${error instanceof Error ? error.message : 'Erro desconhecido'}`);\n    } finally {\n      setIamScanLoading(false);\n    }\n  };\n\n  const handleCleanupDuplicates = async () => {\n    if (window.confirm(\"Deseja remover todos os alertas duplicados? Esta ação não pode ser desfeita.\")) {\n      try {\n        setCleanupLoading(true);\n        setCleanupMessage(null);\n        \n        const response = await fetch('/api/alerts/cleanup', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        \n        if (!response.ok) {\n          const data = await response.json();\n          throw new Error(data.error || 'Erro ao limpar alertas duplicados');\n        }\n        \n        const result = await response.json();\n        setCleanupMessage(result.message);\n        \n        // Recarregar alertas em vez de recarregar a página inteira\n        await fetchAlerts();\n      } catch (error) {\n        setCleanupMessage(`Erro: ${error instanceof Error ? error.message : 'Erro desconhecido'}`);\n      } finally {\n        setCleanupLoading(false);\n      }\n    }\n  };\n  \n  const filteredAlerts = alerts.filter(alert => {\n    // Filtrar por categoria\n    if (activeCategory === 'iam') {\n      return ['IAMUser', 'IAMAccessKey', 'SecretManagerSecret', 'IAMPolicy'].includes(alert.resourceType);\n    } else if (activeCategory === 'ec2') {\n      return ['EC2Instance', 'SecurityGroup', 'Volume'].includes(alert.resourceType);\n    } else if (activeCategory === 's3') {\n      return alert.resourceType === 'S3Bucket';\n    } else if (activeCategory === 'rds') {\n      return alert.resourceType === 'RDSInstance';\n    }\n    \n    // 'all' retorna todos os alertas\n    return true;\n  });\n\n  const getSeverityIcon = (severity: string) => {\n    switch (severity) {\n      case 'CRITICAL':\n        return <AlertCircle className=\"h-5 w-5 text-red-500\" />;\n      case 'HIGH':\n        return <AlertTriangle className=\"h-5 w-5 text-orange-500\" />;\n      case 'MEDIUM':\n        return <AlertTriangle className=\"h-5 w-5 text-yellow-500\" />;\n      case 'LOW':\n        return <Info className=\"h-5 w-5 text-blue-500\" />;\n      default:\n        return <Info className=\"h-5 w-5 text-gray-500\" />;\n    }\n  };\n\n  const getSeverityText = (severity: string): string => {\n    const severityMap: Record<string, string> = {\n      CRITICAL: 'Crítico',\n      HIGH: 'Alto',\n      MEDIUM: 'Médio',\n      LOW: 'Baixo',\n      INFO: 'Informativo',\n    };\n    return severityMap[severity] || severity;\n  };\n\n  const getSeverityColor = (severity: string) => {\n    switch (severity) {\n      case 'CRITICAL': return 'bg-red-50 text-red-800 border-red-200';\n      case 'HIGH': return 'bg-orange-50 text-orange-800 border-orange-200';\n      case 'MEDIUM': return 'bg-yellow-50 text-yellow-800 border-yellow-200';\n      case 'LOW': return 'bg-blue-50 text-blue-800 border-blue-200';\n      default: return 'bg-gray-50 text-gray-800 border-gray-200';\n    }\n  };\n\n  const getSeverityBorderColor = (severity: string): string => {\n    switch (severity) {\n      case 'CRITICAL': return 'border-l-red-500';\n      case 'HIGH': return 'border-l-orange-500';\n      case 'MEDIUM': return 'border-l-yellow-500';\n      case 'LOW': return 'border-l-blue-500';\n      default: return 'border-l-gray-300';\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'active': return 'bg-red-100 text-red-800';\n      case 'dismissed': return 'bg-gray-100 text-gray-800';\n      case 'resolved': return 'bg-green-100 text-green-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const getStatusText = (status: string) => {\n    switch (status) {\n      case 'active': return 'Ativo';\n      case 'dismissed': return 'Arquivado';\n      case 'resolved': return 'Resolvido';\n      default: return 'Desconhecido';\n    }\n  };\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'active': return <Bell className=\"h-4 w-4\" />;\n      case 'dismissed': return <Archive className=\"h-4 w-4\" />;\n      case 'resolved': return <CheckCircle className=\"h-4 w-4\" />;\n      default: return <Info className=\"h-4 w-4\" />;\n    }\n  };\n  \n  const getResourceTypeIcon = (resourceType: string) => {\n    switch (resourceType) {\n      case 'IAMUser':\n        return <User className=\"h-4 w-4 text-orange-500\" />;\n      case 'IAMAccessKey':\n        return <Key className=\"h-4 w-4 text-orange-500\" />;\n      case 'SecretManagerSecret':\n        return <Lock className=\"h-4 w-4 text-purple-500\" />;\n      case 'IAMPolicy':\n        return <Shield className=\"h-4 w-4 text-orange-500\" />;\n      case 'EC2Instance':\n        return <Server className=\"h-4 w-4 text-blue-500\" />;\n      case 'SecurityGroup':\n        return <Shield className=\"h-4 w-4 text-blue-500\" />;\n      case 'Volume':\n        return <Database className=\"h-4 w-4 text-blue-500\" />;\n      case 'S3Bucket':\n        return <Database className=\"h-4 w-4 text-yellow-500\" />;\n      case 'RDSInstance':\n        return <Database className=\"h-4 w-4 text-green-500\" />;\n      default:\n        return <Info className=\"h-4 w-4 text-gray-500\" />;\n    }\n  };\n  \n  const getResourceTypeText = (resourceType: string): string => {\n    const resourceMap: Record<string, string> = {\n      'IAMUser': 'Usuário IAM',\n      'IAMAccessKey': 'Chave de Acesso',\n      'SecretManagerSecret': 'Secret',\n      'IAMPolicy': 'Política IAM',\n      'EC2Instance': 'Instância EC2',\n      'SecurityGroup': 'Grupo de Segurança',\n      'Volume': 'Volume EBS',\n      'S3Bucket': 'Bucket S3',\n      'RDSInstance': 'Instância RDS',\n    };\n    return resourceMap[resourceType] || resourceType;\n  };\n\n  // Estatísticas\n  const activeCount = filteredAlerts.filter(a => a.status === 'active').length;\n  const criticalCount = filteredAlerts.filter(a => a.severity === 'CRITICAL' && a.status === 'active').length;\n  const highCount = filteredAlerts.filter(a => a.severity === 'HIGH' && a.status === 'active').length;\n  const mediumCount = filteredAlerts.filter(a => a.severity === 'MEDIUM' && a.status === 'active').length;\n  const lowCount = filteredAlerts.filter(a => a.severity === 'LOW' && a.status === 'active').length;\n  \n  // Estatísticas por tipo\n  const iamAlertCount = alerts.filter(a => \n    ['IAMUser', 'IAMAccessKey', 'SecretManagerSecret', 'IAMPolicy'].includes(a.resourceType) && \n    a.status === 'active'\n  ).length;\n  \n  const ec2AlertCount = alerts.filter(a => \n    ['EC2Instance', 'SecurityGroup', 'Volume'].includes(a.resourceType) && \n    a.status === 'active'\n  ).length;\n  \n  const s3AlertCount = alerts.filter(a => \n    a.resourceType === 'S3Bucket' && \n    a.status === 'active'\n  ).length;\n  \n  const rdsAlertCount = alerts.filter(a => \n    a.resourceType === 'RDSInstance' && \n    a.status === 'active'\n  ).length;\n\n  // Data for charts\n  const severityData = [\n    { name: 'Crítico', value: criticalCount, color: '#EF4444' },\n    { name: 'Alto', value: highCount, color: '#F97316' },\n    { name: 'Médio', value: mediumCount, color: '#EAB308' },\n    { name: 'Baixo', value: lowCount, color: '#3B82F6' },\n  ];\n\n  const serviceData = [\n    { name: 'IAM', value: iamAlertCount, color: '#F97316' },\n    { name: 'EC2', value: ec2AlertCount, color: '#3B82F6' },\n    { name: 'S3', value: s3AlertCount, color: '#EAB308' },\n    { name: 'RDS', value: rdsAlertCount, color: '#10B981' },\n  ];\n\n  // Group alerts by date for trend chart\n  const getAlertsByDate = () => {\n    const dates = new Map();\n    const now = new Date();\n    const days = timeRange === '7d' ? 7 : timeRange === '30d' ? 30 : 90;\n    \n    // Initialize all dates in the range with zero counts\n    for (let i = 0; i < days; i++) {\n      const date = new Date(now);\n      date.setDate(date.getDate() - i);\n      const dateStr = date.toISOString().split('T')[0];\n      dates.set(dateStr, { date: dateStr, critical: 0, high: 0, medium: 0, low: 0, total: 0 });\n    }\n    \n    // Count alerts by date and severity\n    alerts.forEach(alert => {\n      const date = new Date(alert.createdAt).toISOString().split('T')[0];\n      if (dates.has(date)) {\n        const entry = dates.get(date);\n        entry.total++;\n        \n        if (alert.severity === 'CRITICAL') entry.critical++;\n        else if (alert.severity === 'HIGH') entry.high++;\n        else if (alert.severity === 'MEDIUM') entry.medium++;\n        else if (alert.severity === 'LOW') entry.low++;\n      }\n    });\n    \n    // Convert to array and sort by date\n    return Array.from(dates.values())\n      .sort((a, b) => a.date.localeCompare(b.date));\n  };\n\n  // Get alerts by resource type\n  const getAlertsByResourceType = () => {\n    const counts = new Map();\n    \n    alerts.filter(a => a.status === 'active').forEach(alert => {\n      const type = getResourceTypeText(alert.resourceType);\n      counts.set(type, (counts.get(type) || 0) + 1);\n    });\n    \n    return Array.from(counts.entries())\n      .map(([name, value]) => ({ name, value }))\n      .sort((a, b) => b.value - a.value);\n  };\n\n  const trendData = getAlertsByDate();\n  const resourceTypeData = getAlertsByResourceType();\n\n  interface SectionHeaderProps {\n    title: string;\n    count: number;\n    icon: React.ReactNode;\n    isExpanded: boolean;\n    onClick: () => void;\n  }\n  \n  function SectionHeader({ title, count, icon, isExpanded, onClick }: SectionHeaderProps) {\n    return (\n      <button\n        className=\"w-full px-6 py-4 flex items-center justify-between hover:bg-gray-50 transition-colors\"\n        onClick={onClick}\n      >\n        <div className=\"flex items-center\">\n          {icon}\n          <h2 className=\"ml-2 text-base font-medium text-gray-900\">{title}</h2>\n          {count > 0 && (\n            <span className=\"ml-2 px-2 py-0.5 bg-red-100 text-red-800 text-xs rounded-full\">\n              {count}\n            </span>\n          )}\n        </div>\n        <svg\n          className={`h-5 w-5 text-gray-500 transform transition-transform ${isExpanded ? 'rotate-180' : ''}`}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 20 20\"\n          fill=\"currentColor\"\n        >\n          <path fillRule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n        </svg>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto py-6\">\n      <div className=\"flex flex-col lg:flex-row justify-between items-start lg:items-center mb-6\">\n        <motion.div\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.3 }}\n        >\n          <h1 className=\"text-3xl font-bold flex items-center gap-2\">\n            <Shield className=\"h-8 w-8 text-indigo-600\" /> \n            Segurança\n          </h1>\n          <p className=\"text-gray-600 mt-1\">\n            Gerencie e resolva problemas de segurança na sua infraestrutura AWS\n          </p>\n        </motion.div>\n        \n        <div className=\"flex flex-wrap gap-2 mt-4 lg:mt-0\">\n          <div className=\"flex rounded-md overflow-hidden border border-gray-200\">\n            <button\n              onClick={() => setViewMode('dashboard')}\n              className={`px-3 py-2 flex items-center gap-1 text-sm ${\n                viewMode === 'dashboard' \n                  ? 'bg-indigo-50 text-indigo-700' \n                  : 'bg-white text-gray-600 hover:bg-gray-50'\n              }`}\n            >\n              <PieChartIcon className=\"h-4 w-4\" />\n              Dashboard\n            </button>\n            <button\n              onClick={() => setViewMode('list')}\n              className={`px-3 py-2 flex items-center gap-1 text-sm ${\n                viewMode === 'list' \n                  ? 'bg-indigo-50 text-indigo-700' \n                  : 'bg-white text-gray-600 hover:bg-gray-50'\n              }`}\n            >\n              <Bell className=\"h-4 w-4\" />\n              Alertas\n            </button>\n          </div>\n          \n          <button\n            onClick={handleRefresh}\n            className=\"px-3 py-2 flex items-center gap-2 bg-indigo-50 text-indigo-700 rounded hover:bg-indigo-100 transition-colors\"\n            disabled={loading}\n          >\n            <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\n            Atualizar\n          </button>\n          \n          <button\n            onClick={handleScanIAMThreats}\n            className=\"px-3 py-2 flex items-center gap-2 bg-amber-50 text-amber-700 rounded hover:bg-amber-100 transition-colors\"\n            disabled={iamScanLoading}\n          >\n            {iamScanLoading ? (\n              <>\n                <RefreshCw className=\"h-4 w-4 animate-spin\" />\n                Verificando...\n              </>\n            ) : (\n              <>\n                <Shield className=\"h-4 w-4\" />\n                Verificar IAM\n              </>\n            )}\n          </button>\n          \n          <button \n            onClick={() => setShowFilters(!showFilters)}\n            className={`px-3 py-2 flex items-center gap-2 rounded transition-colors ${\n              showFilters \n                ? 'bg-blue-100 text-blue-700' \n                : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n            }`}\n          >\n            <Filter className=\"h-4 w-4\" />\n            Filtros\n          </button>\n        </div>\n      </div>\n\n      {/* Mensagens de status */}\n      {cleanupMessage && (\n        <div className=\"mb-4 p-3 bg-green-50 text-green-800 rounded flex items-center\">\n          <CheckCircle className=\"h-5 w-5 mr-2 text-green-500\" />\n          {cleanupMessage}\n        </div>\n      )}\n      \n      {iamScanMessage && (\n        <div className=\"mb-4 p-3 bg-blue-50 text-blue-800 rounded flex items-center\">\n          <Info className=\"h-5 w-5 mr-2 text-blue-500\" />\n          {iamScanMessage}\n        </div>\n      )}\n\n      {/* Filtros */}\n      {showFilters && (\n        <motion.div \n          className=\"bg-white shadow rounded p-4 mb-6\"\n          initial={{ opacity: 0, height: 0 }}\n          animate={{ opacity: 1, height: 'auto' }}\n          transition={{ duration: 0.3 }}\n        >\n          <h2 className=\"text-lg font-medium mb-3\">Filtrar Alertas</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            <div>\n              <p className=\"text-sm font-medium mb-2\">Por Categoria</p>\n              <div className=\"flex flex-wrap gap-2\">\n                <button \n                  onClick={() => setActiveCategory('all')}\n                  className={`px-3 py-1 text-sm rounded-full ${activeCategory === 'all' ? 'bg-indigo-100 text-indigo-800 font-medium' : 'bg-gray-100 hover:bg-gray-200'}`}\n                >\n                  Todos\n                </button>\n                <button \n                  onClick={() => setActiveCategory('iam')}\n                  className={`px-3 py-1 text-sm rounded-full flex items-center gap-1 ${activeCategory === 'iam' ? 'bg-orange-100 text-orange-800 font-medium' : 'bg-gray-100 hover:bg-gray-200'}`}\n                >\n                  <User className=\"h-3 w-3\" /> IAM ({iamAlertCount})\n                </button>\n                <button \n                  onClick={() => setActiveCategory('ec2')}\n                  className={`px-3 py-1 text-sm rounded-full flex items-center gap-1 ${activeCategory === 'ec2' ? 'bg-blue-100 text-blue-800 font-medium' : 'bg-gray-100 hover:bg-gray-200'}`}\n                >\n                  <Server className=\"h-3 w-3\" /> EC2 ({ec2AlertCount})\n                </button>\n                <button \n                  onClick={() => setActiveCategory('s3')}\n                  className={`px-3 py-1 text-sm rounded-full flex items-center gap-1 ${activeCategory === 's3' ? 'bg-yellow-100 text-yellow-800 font-medium' : 'bg-gray-100 hover:bg-gray-200'}`}\n                >\n                  <Database className=\"h-3 w-3\" /> S3 ({s3AlertCount})\n                </button>\n                <button \n                  onClick={() => setActiveCategory('rds')}\n                  className={`px-3 py-1 text-sm rounded-full flex items-center gap-1 ${activeCategory === 'rds' ? 'bg-green-100 text-green-800 font-medium' : 'bg-gray-100 hover:bg-gray-200'}`}\n                >\n                  <Database className=\"h-3 w-3\" /> RDS ({rdsAlertCount})\n                </button>\n              </div>\n            </div>\n\n            <div>\n              <p className=\"text-sm font-medium mb-2\">Período de Tempo</p>\n              <div className=\"flex flex-wrap gap-2\">\n                <button \n                  onClick={() => setTimeRange('7d')}\n                  className={`px-3 py-1 text-sm rounded-full ${timeRange === '7d' ? 'bg-indigo-100 text-indigo-800 font-medium' : 'bg-gray-100 hover:bg-gray-200'}`}\n                >\n                  7 dias\n                </button>\n                <button \n                  onClick={() => setTimeRange('30d')}\n                  className={`px-3 py-1 text-sm rounded-full ${timeRange === '30d' ? 'bg-indigo-100 text-indigo-800 font-medium' : 'bg-gray-100 hover:bg-gray-200'}`}\n                >\n                  30 dias\n                </button>\n                <button \n                  onClick={() => setTimeRange('90d')}\n                  className={`px-3 py-1 text-sm rounded-full ${timeRange === '90d' ? 'bg-indigo-100 text-indigo-800 font-medium' : 'bg-gray-100 hover:bg-gray-200'}`}\n                >\n                  90 dias\n                </button>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"mt-4 flex justify-end\">\n            <button \n              onClick={() => {\n                setActiveCategory('all');\n                setTimeRange('7d');\n                setShowFilters(false);\n              }}\n              className=\"px-3 py-1 text-sm text-gray-600 hover:text-gray-800\"\n            >\n              Limpar Filtros\n            </button>\n          </div>\n        </motion.div>\n      )}\n\n      {/* Dashboard View */}\n      {viewMode === 'dashboard' ? (\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6\">\n          {/* Security Summary Cards */}\n          <div className=\"bg-white shadow rounded p-6\">\n            <h2 className=\"text-xl font-semibold flex items-center gap-2 mb-4\">\n              <AlertTriangle className=\"h-5 w-5 text-gray-600\" />\n              Resumo de Severidade\n            </h2>\n            <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-4 mb-4\">\n              <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n                <h3 className=\"text-sm font-medium text-gray-900 flex items-center justify-between\">\n                  Crítica\n                  <AlertCircle className=\"h-5 w-5 text-red-500\" />\n                </h3>\n                <p className=\"text-2xl font-bold text-red-800\">{criticalCount}</p>\n              </div>\n              <div className=\"bg-orange-50 border border-orange-200 rounded-lg p-4\">\n                <h3 className=\"text-sm font-medium text-gray-900 flex items-center justify-between\">\n                  Alta\n                  <AlertTriangle className=\"h-5 w-5 text-orange-500\" />\n                </h3>\n                <p className=\"text-2xl font-bold text-orange-800\">{highCount}</p>\n              </div>\n              <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n                <h3 className=\"text-sm font-medium text-gray-900 flex items-center justify-between\">\n                  Média\n                  <AlertTriangle className=\"h-5 w-5 text-yellow-500\" />\n                </h3>\n                <p className=\"text-2xl font-bold text-yellow-800\">{mediumCount}</p>\n              </div>\n              <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                <h3 className=\"text-sm font-medium text-gray-900 flex items-center justify-between\">\n                  Baixa\n                  <Info className=\"h-5 w-5 text-blue-500\" />\n                </h3>\n                <p className=\"text-2xl font-bold text-blue-800\">{lowCount}</p>\n              </div>\n            </div>\n            \n            {/* Severity Pie Chart */}\n            <div className=\"h-64\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <PieChart>\n                  <Pie\n                    data={severityData}\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    labelLine={false}\n                    outerRadius={80}\n                    fill=\"#8884d8\"\n                    dataKey=\"value\"\n                    label={({ name, value }) => value > 0 ? `${name}: ${value}` : ''}\n                  >\n                    {severityData.map((entry, index) => (\n                      <Cell key={`cell-${index}`} fill={entry.color} />\n                    ))}\n                  </Pie>\n                  <Tooltip formatter={(value) => [`${value} alertas`, 'Quantidade']} />\n                  <Legend />\n                </PieChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n          \n          {/* Service Distribution */}\n          <div className=\"bg-white shadow rounded p-6\">\n            <h2 className=\"text-xl font-semibold flex items-center gap-2 mb-4\">\n              <Database className=\"h-5 w-5 text-gray-600\" />\n              Distribuição por Serviço\n            </h2>\n            \n            <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-4 mb-4\">\n              <div className=\"bg-orange-50 border border-orange-200 rounded-lg p-4\">\n                <h3 className=\"text-sm font-medium text-gray-900 flex items-center justify-between\">\n                  IAM\n                  <User className=\"h-5 w-5 text-orange-500\" />\n                </h3>\n                <p className=\"text-2xl font-bold text-orange-800\">{iamAlertCount}</p>\n              </div>\n              <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                <h3 className=\"text-sm font-medium text-gray-900 flex items-center justify-between\">\n                  EC2\n                  <Server className=\"h-5 w-5 text-blue-500\" />\n                </h3>\n                <p className=\"text-2xl font-bold text-blue-800\">{ec2AlertCount}</p>\n              </div>\n              <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n                <h3 className=\"text-sm font-medium text-gray-900 flex items-center justify-between\">\n                  S3\n                  <Database className=\"h-5 w-5 text-yellow-500\" />\n                </h3>\n                <p className=\"text-2xl font-bold text-yellow-800\">{s3AlertCount}</p>\n              </div>\n              <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\n                <h3 className=\"text-sm font-medium text-gray-900 flex items-center justify-between\">\n                  RDS\n                  <Database className=\"h-5 w-5 text-green-500\" />\n                </h3>\n                <p className=\"text-2xl font-bold text-green-800\">{rdsAlertCount}</p>\n              </div>\n            </div>\n            \n            {/* Service Pie Chart */}\n            <div className=\"h-64\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <PieChart>\n                  <Pie\n                    data={serviceData}\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    labelLine={false}\n                    outerRadius={80}\n                    fill=\"#8884d8\"\n                    dataKey=\"value\"\n                    label={({ name, value }) => value > 0 ? `${name}: ${value}` : ''}\n                  >\n                    {serviceData.map((entry, index) => (\n                      <Cell key={`cell-${index}`} fill={entry.color} />\n                    ))}\n                  </Pie>\n                  <Tooltip formatter={(value) => [`${value} alertas`, 'Quantidade']} />\n                  <Legend />\n                </PieChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n          \n          {/* Trend Chart */}\n          <div className=\"bg-white shadow rounded p-6 lg:col-span-2\">\n            <h2 className=\"text-xl font-semibold flex items-center gap-2 mb-4\">\n              <BarChartIcon className=\"h-5 w-5 text-gray-600\" />\n              Tendência de Alertas (Últimos {timeRange === '7d' ? '7 dias' : timeRange === '30d' ? '30 dias' : '90 dias'})\n            </h2>\n            <div className=\"h-80\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <AreaChart data={trendData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"date\" tickFormatter={(value) => new Date(value).toLocaleDateString()} />\n                  <YAxis />\n                  <Tooltip \n                    formatter={(value, name) => {\n                      const nameMap: Record<string, string> = {\n                        critical: 'Crítico',\n                        high: 'Alto',\n                        medium: 'Médio',\n                        low: 'Baixo',\n                        total: 'Total'\n                      };\n                      return [value, nameMap[name as string] || name];\n                    }}\n                    labelFormatter={(value) => new Date(value).toLocaleDateString()}\n                  />\n                  <Legend formatter={(value) => {\n                    const nameMap: Record<string, string> = {\n                      critical: 'Crítico',\n                      high: 'Alto',\n                      medium: 'Médio',\n                      low: 'Baixo',\n                      total: 'Total'\n                    };\n                    return nameMap[value as string] || value;\n                  }} />\n                  <Area type=\"monotone\" dataKey=\"critical\" stackId=\"1\" stroke=\"#EF4444\" fill=\"#FEE2E2\" />\n                  <Area type=\"monotone\" dataKey=\"high\" stackId=\"1\" stroke=\"#F97316\" fill=\"#FFEDD5\" />\n                  <Area type=\"monotone\" dataKey=\"medium\" stackId=\"1\" stroke=\"#EAB308\" fill=\"#FEF9C3\" />\n                  <Area type=\"monotone\" dataKey=\"low\" stackId=\"1\" stroke=\"#3B82F6\" fill=\"#DBEAFE\" />\n                </AreaChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n          \n          {/* Resource Type Distribution */}\n          <div className=\"bg-white shadow rounded p-6 lg:col-span-2\">\n            <h2 className=\"text-xl font-semibold flex items-center gap-2 mb-4\">\n              <Shield className=\"h-5 w-5 text-gray-600\" />\n              Distribuição por Tipo de Recurso\n            </h2>\n            <div className=\"h-80\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <BarChart data={resourceTypeData} layout=\"vertical\">\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis type=\"number\" />\n                  <YAxis dataKey=\"name\" type=\"category\" width={150} />\n                  <Tooltip formatter={(value) => [`${value} alertas`, 'Quantidade']} />\n                  <Legend />\n                  <Bar dataKey=\"value\" name=\"Alertas Ativos\" fill=\"#6366F1\" />\n                </BarChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n        </div>\n      ) : null}\n\n      {/* Lista de alertas */}\n      {viewMode === 'list' && (\n        <div className=\"bg-white shadow rounded p-4\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <h2 className=\"text-xl font-semibold flex items-center gap-2\">\n              <Bell className=\"h-5 w-5 text-gray-600\" />\n              Alertas de Segurança\n            </h2>\n            <div className=\"flex items-center gap-2\">\n              <div className=\"flex items-center mr-4\">\n                <input \n                  type=\"text\" \n                  placeholder=\"Buscar alertas...\" \n                  className=\"px-3 py-1 border rounded text-sm focus:outline-none focus:ring-1 focus:ring-indigo-500\"\n                />\n                <button className=\"p-1 bg-indigo-50 text-indigo-700 rounded-r border border-l-0\">\n                  <Search className=\"h-4 w-4\" />\n                </button>\n              </div>\n              \n              <button \n                onClick={handleCleanupDuplicates}\n                className=\"px-3 py-1 text-sm flex items-center gap-1 text-gray-700 bg-gray-100 rounded hover:bg-gray-200\"\n                disabled={cleanupLoading}\n              >\n                {cleanupLoading ? (\n                  <RefreshCw className=\"h-3 w-3 animate-spin\" />\n                ) : (\n                  <Trash2 className=\"h-3 w-3\" />\n                )} \n                Limpar Duplicados\n              </button>\n            </div>\n          </div>\n\n          {/* Loading State */}\n          {loading && (\n            <div className=\"flex justify-center items-center py-12\">\n              <RefreshCw className=\"h-8 w-8 text-indigo-500 animate-spin\" />\n              <span className=\"ml-2 text-gray-700\">Carregando alertas de segurança...</span>\n            </div>\n          )}\n          \n          {/* Error State */}\n          {error && (\n            <div className=\"bg-red-50 border border-red-200 text-red-800 px-4 py-3 rounded-md mb-6\">\n              <p className=\"flex items-center\">\n                <AlertCircle className=\"h-5 w-5 text-red-500 mr-2\" />\n                {error}\n              </p>\n            </div>\n          )}\n\n          {/* No Results State */}\n          {!loading && !error && filteredAlerts.length === 0 && (\n            <div className=\"bg-white rounded-lg p-8 text-center\">\n              <Shield className=\"mx-auto h-12 w-12 text-gray-400 mb-4\" />\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Nenhum alerta encontrado</h3>\n              <p className=\"text-gray-500 mb-4\">\n                {activeCategory === \"all\" \n                  ? \"Não há alertas de segurança para exibir no momento.\" \n                  : `Não há alertas de segurança para ${\n                      activeCategory === 'iam' \n                        ? 'IAM & Secrets' \n                        : activeCategory === 'ec2' \n                          ? 'EC2 & Rede' \n                          : activeCategory === 's3' \n                            ? 'S3 Storage' \n                            : 'RDS'\n                    } no momento.`}\n              </p>\n              {activeCategory === \"iam\" && (\n                <button\n                  onClick={handleScanIAMThreats}\n                  disabled={!selectedCredential || iamScanLoading}\n                  className=\"mt-2 px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors\"\n                >\n                  {iamScanLoading ? \"Verificando IAM...\" : \"Verificar Segurança IAM\"}\n                </button>\n              )}\n            </div>\n          )}\n\n          {/* Alerts by Service */}\n          {!loading && !error && filteredAlerts.length > 0 && (\n            <div className=\"space-y-6\">\n              {/* Group alerts by service type for organized display */}\n              {Object.entries(\n                filteredAlerts.reduce((acc, alert) => {\n                  let service = \"other\";\n                  \n                  if ([\"IAMUser\", \"IAMAccessKey\", \"IAMPolicy\", \"SecretManagerSecret\"].includes(alert.resourceType)) {\n                    service = \"iam\";\n                  } else if ([\"EC2Instance\", \"SecurityGroup\", \"Volume\"].includes(alert.resourceType)) {\n                    service = \"ec2\";\n                  } else if (alert.resourceType === \"S3Bucket\") {\n                    service = \"s3\";\n                  } else if (alert.resourceType === \"RDSInstance\") {\n                    service = \"rds\";\n                  } else if (alert.resourceType === \"DynamoDB\") {\n                    service = \"dynamodb\";\n                  } else if (alert.resourceType === \"Lambda\") {\n                    service = \"lambda\";\n                  }\n                  \n                  if (!acc[service]) acc[service] = [];\n                  acc[service].push(alert);\n                  return acc;\n                }, {} as Record<string, any[]>)\n              ).map(([service, serviceAlerts]) => (\n                <motion.div \n                  key={service}\n                  initial={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                  className=\"bg-white rounded-lg shadow-sm overflow-hidden border border-gray-200\"\n                >\n                  <div \n                    className=\"px-4 py-3 flex items-center justify-between cursor-pointer\"\n                    onClick={() => {\n                      const newExpandedSections = expandedSections || [];\n                      if (newExpandedSections.includes(service)) {\n                        setExpandedSections(newExpandedSections.filter(s => s !== service));\n                      } else {\n                        setExpandedSections([...newExpandedSections, service]);\n                      }\n                    }}\n                  >\n                    <div className=\"flex items-center\">\n                      {service === \"iam\" ? <User className=\"h-5 w-5 text-orange-500\" /> : \n                       service === \"ec2\" ? <Server className=\"h-5 w-5 text-blue-500\" /> : \n                       service === \"s3\" ? <Database className=\"h-5 w-5 text-yellow-500\" /> : \n                       service === \"rds\" ? <Database className=\"h-5 w-5 text-green-500\" /> : \n                       service === \"dynamodb\" ? <Database className=\"h-5 w-5 text-purple-500\" /> : \n                       service === \"lambda\" ? <Key className=\"h-5 w-5 text-pink-500\" /> : \n                       <Shield className=\"h-5 w-5 text-gray-500\" />}\n                      <h3 className=\"text-lg font-medium ml-2\">\n                        {service === \"iam\" ? \"IAM & Secrets\" : \n                         service === \"ec2\" ? \"EC2 & Rede\" : \n                         service === \"s3\" ? \"S3 Storage\" : \n                         service === \"rds\" ? \"RDS Database\" : \n                         service === \"dynamodb\" ? \"DynamoDB\" : \n                         service === \"lambda\" ? \"Lambda\" : \n                         \"Outros\"} \n                        <span className=\"ml-2 text-sm font-normal text-gray-500\">\n                          {serviceAlerts.length} {serviceAlerts.length === 1 ? \"alerta\" : \"alertas\"}\n                        </span>\n                      </h3>\n                    </div>\n                    {expandedSections && expandedSections.includes(service) ? (\n                      <ChevronDown className=\"h-5 w-5 text-gray-500\" />\n                    ) : (\n                      <ChevronRight className=\"h-5 w-5 text-gray-500\" />\n                    )}\n                  </div>\n                  \n                  {expandedSections && expandedSections.includes(service) && (\n                    <div className=\"border-t border-gray-200\">\n                      <ul className=\"divide-y divide-gray-200\">\n                        {serviceAlerts.map(alert => (\n                          <li key={alert.id} className=\"px-4 py-3\">\n                            <div className=\"flex items-start\">\n                              <div className=\"flex-shrink-0 mt-1\">\n                                {getSeverityIcon(alert.severity)}\n                              </div>\n                              <div className=\"ml-3 flex-1\">\n                                <div className=\"flex flex-wrap justify-between items-start gap-2\">\n                                  <h4 className=\"text-sm font-medium text-gray-900\">{alert.title}</h4>\n                                  <div className=\"flex flex-wrap gap-2\">\n                                    <span className={`px-2 py-0.5 rounded-full text-xs font-medium ${getSeverityColor(alert.severity)}`}>\n                                      {alert.severity}\n                                    </span>\n                                    <span className=\"px-2 py-0.5 bg-gray-100 text-gray-800 rounded-full text-xs\">\n                                      {alert.status === \"active\" ? \"Ativo\" : alert.status === \"resolved\" ? \"Resolvido\" : \"Arquivado\"}\n                                    </span>\n                                  </div>\n                                </div>\n                                <p className=\"mt-1 text-sm text-gray-600\">{alert.description}</p>\n                                <div className=\"mt-2 flex items-center text-xs text-gray-500\">\n                                  <span className=\"mr-2\">Recurso: {alert.resourceType}</span>\n                                  <span className=\"mr-2\">ID: {alert.resourceId}</span>\n                                  <span>Detectado: {new Date(alert.createdAt).toLocaleString()}</span>\n                                </div>\n                                \n                                {alert.status === \"active\" && (\n                                  <div className=\"mt-3 flex gap-2\">\n                                    <button\n                                      onClick={() => handleResolve(alert.id)}\n                                      disabled={actionLoading === alert.id}\n                                      className=\"px-2 py-1 bg-green-100 text-green-800 rounded-md text-xs flex items-center hover:bg-green-200\"\n                                    >\n                                      <CheckCircle className=\"h-3 w-3 mr-1\" />\n                                      {actionLoading === alert.id ? \"...\" : \"Resolver\"}\n                                    </button>\n                                    <button\n                                      onClick={() => handleDismiss(alert.id)}\n                                      disabled={actionLoading === alert.id}\n                                      className=\"px-2 py-1 bg-gray-100 text-gray-800 rounded-md text-xs flex items-center hover:bg-gray-200\"\n                                    >\n                                      <XCircle className=\"h-3 w-3 mr-1\" />\n                                      {actionLoading === alert.id ? \"...\" : \"Arquivar\"}\n                                    </button>\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n                  )}\n                </motion.div>\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}}]
}