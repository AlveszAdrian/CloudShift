{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/hooks/useAwsCredentials.ts"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from 'react';\n\nexport interface AwsCredential {\n  id: string;\n  name: string;\n  accountId?: string;\n  accessKeyId: string;\n  secretAccessKey: string;\n  region: string;\n}\n\nexport interface UseAwsCredentialsResult {\n  credentials: AwsCredential[];\n  selectedCredential: AwsCredential | null;\n  selectCredential: (id: string) => void;\n  addCredential: (credential: Omit<AwsCredential, 'id'>) => Promise<void>;\n  updateCredential: (id: string, data: Partial<Omit<AwsCredential, 'id'>>) => Promise<void>;\n  deleteCredential: (id: string) => Promise<void>;\n  loading: boolean;\n  isLoading: boolean; // Alias for loading - needed for compatibility\n  error: string | null;\n  refresh: () => Promise<void>;\n}\n\nexport function useAwsCredentials(): UseAwsCredentialsResult {\n  const [credentials, setCredentials] = useState<AwsCredential[]>([]);\n  const [selectedCredentialId, setSelectedCredentialId] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Function to fetch credentials from the API\n  const fetchCredentials = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch('/api/aws/credentials');\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch credentials: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      setCredentials(data);\n      \n      // If we have credentials but none selected, select the first one\n      if (data.length > 0 && !selectedCredentialId) {\n        setSelectedCredentialId(data[0].id);\n        // Save to localStorage\n        localStorage.setItem('selectedAwsCredentialId', data[0].id);\n      }\n      \n      return data;\n    } catch (err) {\n      setError(`Error fetching credentials: ${err instanceof Error ? err.message : String(err)}`);\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to select a credential\n  const selectCredential = (id: string) => {\n    setSelectedCredentialId(id);\n    localStorage.setItem('selectedAwsCredentialId', id);\n  };\n\n  // Function to add a new credential\n  const addCredential = async (credential: Omit<AwsCredential, 'id'>) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch('/api/aws/credentials', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(credential),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to add credential: ${response.status}`);\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      setError(`Error adding credential: ${err instanceof Error ? err.message : String(err)}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to update an existing credential\n  const updateCredential = async (id: string, data: Partial<Omit<AwsCredential, 'id'>>) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch(`/api/aws/credentials/${id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to update credential: ${response.status}`);\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      setError(`Error updating credential: ${err instanceof Error ? err.message : String(err)}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to delete a credential\n  const deleteCredential = async (id: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch(`/api/aws/credentials/${id}`, {\n        method: 'DELETE',\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to delete credential: ${response.status}`);\n      }\n      \n      // If we delete the selected credential, select another one\n      if (id === selectedCredentialId) {\n        const remainingCredentials = credentials.filter(c => c.id !== id);\n        if (remainingCredentials.length > 0) {\n          selectCredential(remainingCredentials[0].id);\n        } else {\n          setSelectedCredentialId(null);\n          localStorage.removeItem('selectedAwsCredentialId');\n        }\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      setError(`Error deleting credential: ${err instanceof Error ? err.message : String(err)}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Load credentials on mount\n  useEffect(() => {\n    // Try to restore selected credential from localStorage\n    const savedCredentialId = localStorage.getItem('selectedAwsCredentialId');\n    if (savedCredentialId) {\n      setSelectedCredentialId(savedCredentialId);\n    }\n    \n    fetchCredentials();\n  }, []);\n\n  // Find the selected credential object\n  const selectedCredential = credentials.find(c => c.id === selectedCredentialId) || null;\n\n  return {\n    credentials,\n    selectedCredential,\n    selectCredential,\n    addCredential,\n    updateCredential,\n    deleteCredential,\n    loading,\n    isLoading: loading, // Alias for loading\n    error,\n    refresh: fetchCredentials,\n  };\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/hooks/useAlerts.ts"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useCallback, useEffect } from \"react\";\r\nimport { useAwsCredentials } from \"./useAwsCredentials\";\r\n\r\ninterface Alert {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  resourceId: string;\r\n  resourceType: string;\r\n  severity: string;\r\n  status: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  credentialId?: string;\r\n  credential?: {\r\n    name: string;\r\n  };\r\n}\r\n\r\ninterface AlertFilters {\r\n  status?: string;\r\n  severity?: string;\r\n  resourceType?: string;\r\n  credentialId?: string;\r\n}\r\n\r\ninterface UseAlertsResult {\r\n  alerts: Alert[];\r\n  loading: boolean;\r\n  error: string | null;\r\n  filters: AlertFilters;\r\n  setFilters: (filters: AlertFilters) => void;\r\n  fetchAlerts: () => Promise<void>;\r\n  dismissAlert: (id: string) => Promise<boolean>;\r\n  resolveAlert: (id: string) => Promise<boolean>;\r\n}\r\n\r\nexport function useAlerts(): UseAlertsResult {\r\n  const { selectedCredential } = useAwsCredentials();\r\n  const [alerts, setAlerts] = useState<Alert[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [filters, setFilters] = useState<AlertFilters>({});\r\n\r\n  const fetchAlerts = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      let url = \"/api/alerts\";\r\n      const params = new URLSearchParams();\r\n      \r\n      if (filters.status) {\r\n        params.append(\"status\", filters.status);\r\n      }\r\n      if (filters.severity) {\r\n        params.append(\"severity\", filters.severity);\r\n      }\r\n      if (filters.resourceType) {\r\n        params.append(\"resourceType\", filters.resourceType);\r\n      }\r\n      // Use the selected credential or a specific credentialId from filters\r\n      const credentialId = filters.credentialId || selectedCredential?.id;\r\n      if (credentialId) {\r\n        params.append(\"credentialId\", credentialId);\r\n      }\r\n      \r\n      if (params.toString()) {\r\n        url += `?${params.toString()}`;\r\n      }\r\n      \r\n      console.log('Buscando alertas em:', url);\r\n      const response = await fetch(url);\r\n      \r\n      if (!response.ok) {\r\n        const { error } = await response.json();\r\n        throw new Error(error || \"Erro ao buscar alertas\");\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log('Alertas recebidos:', data.alerts?.length || 0);\r\n      setAlerts(data.alerts || []);\r\n    } catch (err) {\r\n      console.error('Erro ao buscar alertas:', err);\r\n      setError(err instanceof Error ? err.message : \"Erro ao buscar alertas\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [filters, selectedCredential]);\r\n\r\n  const updateAlertStatus = useCallback(async (id: string, action: \"dismiss\" | \"resolve\") => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await fetch(\"/api/alerts\", {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          id,\r\n          action,\r\n        }),\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const { error } = await response.json();\r\n        throw new Error(error || `Erro ao ${action === \"dismiss\" ? \"arquivar\" : \"resolver\"} alerta`);\r\n      }\r\n      \r\n      // Atualizar lista de alertas\r\n      await fetchAlerts();\r\n      return true;\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : `Erro ao ${action === \"dismiss\" ? \"arquivar\" : \"resolver\"} alerta`);\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [fetchAlerts]);\r\n\r\n  const dismissAlert = useCallback((id: string) => {\r\n    return updateAlertStatus(id, \"dismiss\");\r\n  }, [updateAlertStatus]);\r\n\r\n  const resolveAlert = useCallback((id: string) => {\r\n    return updateAlertStatus(id, \"resolve\");\r\n  }, [updateAlertStatus]);\r\n\r\n  // Buscar alertas ao montar o componente ou quando os filtros ou a credencial selecionada mudarem\r\n  useEffect(() => {\r\n    fetchAlerts();\r\n  }, [fetchAlerts, selectedCredential]);\r\n\r\n  return {\r\n    alerts,\r\n    loading,\r\n    error,\r\n    filters,\r\n    setFilters,\r\n    fetchAlerts,\r\n    dismissAlert,\r\n    resolveAlert,\r\n  };\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 301, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/components/aws/CredentialSelector.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useAwsCredentials } from \"@/hooks/useAwsCredentials\";\r\nimport { useRouter } from \"next/navigation\";\r\n\r\nexport default function CredentialSelector() {\r\n  const { credentials, selectedCredential, selectCredential, loading } = useAwsCredentials();\r\n  const router = useRouter();\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"bg-white rounded-lg shadow-sm p-4 mb-6 flex items-center space-x-2\">\r\n        <span className=\"text-gray-700\">Carregando credenciais...</span>\r\n        <div className=\"animate-spin rounded-full h-4 w-4 border-t-2 border-b-2 border-indigo-500\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (credentials.length === 0) {\r\n    return (\r\n      <div className=\"bg-white rounded-lg shadow-sm p-4 mb-6\">\r\n        <div className=\"flex justify-between items-center\">\r\n          <span className=\"text-gray-700\">Nenhuma credencial AWS encontrada</span>\r\n          <button\r\n            onClick={() => router.push(\"/dashboard/credentials\")}\r\n            className=\"px-3 py-1 text-sm text-white bg-indigo-600 rounded-md hover:bg-indigo-700\"\r\n          >\r\n            Adicionar Credencial\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-sm p-4 mb-6\">\r\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\r\n        <label htmlFor=\"credential-selector\" className=\"block text-sm font-medium text-gray-700 mb-2 sm:mb-0\">\r\n          Selecionar Credencial AWS:\r\n        </label>\r\n        <div className=\"flex-1 sm:ml-4 max-w-md\">\r\n          <select\r\n            id=\"credential-selector\"\r\n            value={selectedCredential?.id || \"\"}\r\n            onChange={(e) => selectCredential(e.target.value)}\r\n            className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\r\n          >\r\n            <option value=\"\" disabled>\r\n              Selecione uma credencial\r\n            </option>\r\n            {credentials.map((cred) => (\r\n              <option key={cred.id} value={cred.id}>\r\n                {cred.name} ({cred.region})\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKe,SAAS;;IACtB,MAAM,EAAE,WAAW,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,oIAAA,CAAA,oBAAiB,AAAD;IACvF,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,IAAI,SAAS;QACX,qBACE,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAK,WAAU;8BAAgB;;;;;;8BAChC,6LAAC;oBAAI,WAAU;;;;;;;;;;;;IAGrB;IAEA,IAAI,YAAY,MAAM,KAAK,GAAG;QAC5B,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAK,WAAU;kCAAgB;;;;;;kCAChC,6LAAC;wBACC,SAAS,IAAM,OAAO,IAAI,CAAC;wBAC3B,WAAU;kCACX;;;;;;;;;;;;;;;;;IAMT;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAM,SAAQ;oBAAsB,WAAU;8BAAuD;;;;;;8BAGtG,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBACC,IAAG;wBACH,OAAO,oBAAoB,MAAM;wBACjC,UAAU,CAAC,IAAM,iBAAiB,EAAE,MAAM,CAAC,KAAK;wBAChD,WAAU;;0CAEV,6LAAC;gCAAO,OAAM;gCAAG,QAAQ;0CAAC;;;;;;4BAGzB,YAAY,GAAG,CAAC,CAAC,qBAChB,6LAAC;oCAAqB,OAAO,KAAK,EAAE;;wCACjC,KAAK,IAAI;wCAAC;wCAAG,KAAK,MAAM;wCAAC;;mCADf,KAAK,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;AASlC;GAvDwB;;QACiD,oIAAA,CAAA,oBAAiB;QACzE,qIAAA,CAAA,YAAS;;;KAFF","debugId":null}},
    {"offset": {"line": 462, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/app/dashboard/security/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React from 'react';\nimport { useAlerts } from \"@/hooks/useAlerts\";\nimport { motion } from \"framer-motion\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport { useAwsCredentials } from \"@/hooks/useAwsCredentials\";\nimport { \n  Bell, AlertTriangle, AlertCircle, Info, \n  CheckCircle, XCircle, Archive, Shield, \n  Search, Filter, RefreshCw, Trash2, \n  User, Key, Lock, Database, Server,\n  BarChart as BarChartIcon, PieChart as PieChartIcon,\n  ChevronRight, ChevronDown, Eraser,\n  Check, Slash, Clock, HardDrive, Cloud,\n  FileText, Users, Settings, AlertOctagon,\n  X, ExternalLink, Loader2\n} from \"lucide-react\";\nimport Link from \"next/link\";\nimport { useSearchParams } from \"next/navigation\";\nimport { \n  ResponsiveContainer, \n  PieChart, \n  Pie, \n  Cell, \n  BarChart, \n  Bar, \n  XAxis, \n  YAxis, \n  Tooltip, \n  Legend, \n  CartesianGrid,\n  LineChart,\n  Line,\n  AreaChart,\n  Area\n} from \"recharts\";\nimport CredentialSelector from \"@/components/aws/CredentialSelector\";\n\nexport default function SecurityPage() {\n  const { selectedCredential } = useAwsCredentials();\n  const { \n    alerts, \n    loading, \n    error, \n    filters, \n    setFilters, \n    dismissAlert, \n    resolveAlert,\n    fetchAlerts\n  } = useAlerts();\n  \n  const searchParams = useSearchParams();\n  const categoryParam = searchParams.get('category');\n\n  const [cleanupLoading, setCleanupLoading] = useState(false);\n  const [cleanupMessage, setCleanupMessage] = useState<string | null>(null);\n  const [showCleanupMessage, setShowCleanupMessage] = useState(false);\n  const [showFilters, setShowFilters] = useState(false);\n  const [actionLoading, setActionLoading] = useState<string | null>(null);\n  const [iamScanLoading, setIamScanLoading] = useState(false);\n  const [ec2CleanupLoading, setEc2CleanupLoading] = useState(false);\n  const [iamScanMessage, setIamScanMessage] = useState<string | null>(null);\n  const [showIamScanMessage, setShowIamScanMessage] = useState(false);\n  const [activeCategory, setActiveCategory] = useState<string>('all'); // 'all', 'iam', 'ec2', etc.\n  const [timeRange, setTimeRange] = useState<number>(7);\n  const [viewMode, setViewMode] = useState<'dashboard' | 'list'>('dashboard');\n  const [expandedSections, setExpandedSections] = useState<string[]>([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [severityFilters, setSeverityFilters] = useState<Record<string, boolean>>({\n    'CRITICAL': true,\n    'HIGH': true,\n    'MEDIUM': true,\n    'LOW': true,\n    'INFO': true\n  });\n  const [statusFilters, setStatusFilters] = useState<Record<string, boolean>>({\n    'OPEN': true,\n    'IN_PROGRESS': true,\n    'RESOLVED': true,\n    'DISMISSED': false\n  });\n  \n  // Estado para controlar o modal de detalhes do alerta\n  const [selectedAlert, setSelectedAlert] = useState<any | null>(null);\n  const [showModal, setShowModal] = useState(false);\n\n  // Função para fechar o modal\n  const closeModal = () => {\n    setShowModal(false);\n    setSelectedAlert(null);\n  };\n\n  // Função para abrir o modal com o alerta selecionado\n  const openAlertDetails = (alert: any) => {\n    setSelectedAlert(alert);\n    setShowModal(true);\n  };\n\n  // Set initial category from URL parameter\n  useEffect(() => {\n    if (categoryParam) {\n      setActiveCategory(categoryParam);\n    }\n  }, [categoryParam]);\n\n  // Effect to show notification messages when they're set\n  useEffect(() => {\n    if (cleanupMessage) setShowCleanupMessage(true);\n    if (iamScanMessage) setShowIamScanMessage(true);\n  }, [cleanupMessage, iamScanMessage]);\n\n  // Effect to load alerts when component mounts\n  useEffect(() => {\n    fetchAlerts();\n  }, [fetchAlerts]);\n\n  const activeAlerts = alerts.filter(a => a.status === 'active' || a.status === 'OPEN');\n  const criticalAlerts = activeAlerts.filter(a => a.severity === 'CRITICAL');\n  const highAlerts = activeAlerts.filter(a => a.severity === 'HIGH');\n  const mediumAlerts = activeAlerts.filter(a => a.severity === 'MEDIUM');\n  const lowAlerts = activeAlerts.filter(a => a.severity === 'LOW');\n\n  // Filter alerts based on category, search term, severity, and status\n  const filteredAlerts = alerts.filter(alert => {\n    // Filter by category\n    if (activeCategory !== 'all' && getAlertCategory(alert.resourceType) !== activeCategory) {\n      return false;\n    }\n    \n    // Filter by search term\n    if (searchTerm && !alert.title.toLowerCase().includes(searchTerm.toLowerCase()) && \n        !alert.description.toLowerCase().includes(searchTerm.toLowerCase()) &&\n        !alert.resourceId.toLowerCase().includes(searchTerm.toLowerCase()) &&\n        !alert.resourceType.toLowerCase().includes(searchTerm.toLowerCase())) {\n      return false;\n    }\n    \n    // Filter by severity\n    if (!severityFilters[alert.severity as keyof typeof severityFilters]) {\n      return false;\n    }\n    \n    // Filter by status (normalize 'active' to 'OPEN' for consistency)\n    const normalizedStatus = alert.status === 'active' ? 'OPEN' : alert.status;\n    \n    if (!statusFilters[normalizedStatus as keyof typeof statusFilters]) {\n      return false;\n    }\n    \n    return true;\n  });\n\n  const handleDismiss = async (id: string) => {\n    setActionLoading(id);\n    await dismissAlert(id);\n    setActionLoading(null);\n  };\n\n  const handleResolve = async (id: string) => {\n    setActionLoading(id);\n    await resolveAlert(id);\n    setActionLoading(null);\n  };\n\n  const handleRefresh = async () => {\n    await fetchAlerts();\n  };\n\n  const handleScanIAMThreats = async () => {\n    if (!selectedCredential) {\n      setIamScanMessage(\"Selecione uma credencial AWS para realizar a verificação\");\n      setShowIamScanMessage(true);\n      return;\n    }\n\n    try {\n      setIamScanLoading(true);\n      setIamScanMessage(null);\n      \n      const response = await fetch('/api/alerts/iam', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          credentialId: selectedCredential.id\n        })\n      });\n      \n      if (!response.ok) {\n        const data = await response.json();\n        throw new Error(data.error || 'Erro ao verificar ameaças do IAM');\n      }\n      \n      const result = await response.json();\n      setIamScanMessage(result.message);\n      setShowIamScanMessage(true);\n      \n      // Recarregar alertas\n      await fetchAlerts();\n      \n      // Ativar a categoria IAM\n      setActiveCategory('iam');\n    } catch (error) {\n      setIamScanMessage(`Erro: ${error instanceof Error ? error.message : 'Erro desconhecido'}`);\n      setShowIamScanMessage(true);\n    } finally {\n      setIamScanLoading(false);\n    }\n  };\n\n  const handleCleanupDuplicates = async () => {\n    if (window.confirm(\"Deseja remover todos os alertas duplicados? Esta ação não pode ser desfeita.\")) {\n      try {\n        setCleanupLoading(true);\n        setCleanupMessage(null);\n        \n        const response = await fetch('/api/alerts/cleanup', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        \n        if (!response.ok) {\n          const data = await response.json();\n          throw new Error(data.error || 'Erro ao limpar alertas duplicados');\n        }\n        \n        const result = await response.json();\n        setCleanupMessage(result.message);\n        setShowCleanupMessage(true);\n        \n        // Recarregar alertas em vez de recarregar a página inteira\n        await fetchAlerts();\n      } catch (error) {\n        setCleanupMessage(`Erro: ${error instanceof Error ? error.message : 'Erro desconhecido'}`);\n        setShowCleanupMessage(true);\n      } finally {\n        setCleanupLoading(false);\n      }\n    }\n  };\n  \n  // Função para limpar alertas de EC2\n  const handleCleanupEC2Alerts = async () => {\n    const confirmCleanup = window.confirm(\"Esta ação removerá todos os alertas de EC2 da plataforma. Deseja continuar?\");\n    \n    if (!confirmCleanup) return;\n    \n    setEc2CleanupLoading(true);\n    setCleanupMessage(null);\n    \n    try {\n      const response = await fetch(\"/api/alerts/ec2/cleanup\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      \n      if (response.ok) {\n        const result = await response.json();\n        setCleanupMessage(result.message);\n        setShowCleanupMessage(true);\n        handleRefresh();\n      } else {\n        const errorData = await response.json();\n        setCleanupMessage(`Erro ao limpar alertas de EC2: ${errorData.error || \"Erro desconhecido\"}`);\n        setShowCleanupMessage(true);\n      }\n    } catch (error: any) {\n      console.error(\"Erro ao limpar alertas de EC2:\", error);\n      setCleanupMessage(\"Erro ao limpar alertas de EC2: \" + (error.message || \"Erro desconhecido\"));\n      setShowCleanupMessage(true);\n    } finally {\n      setEc2CleanupLoading(false);\n    }\n  };\n  \n  // Função para determinar a categoria de um alerta com base no tipo de recurso\n  const getAlertCategory = (resourceType: string): string => {\n    if (resourceType.startsWith('IAM') || resourceType === 'SecretManagerSecret') {\n      return 'iam';\n    } else if (resourceType.startsWith('EC2') || resourceType === 'SecurityGroup' || \n              resourceType === 'Volume' || resourceType === 'VPC' || \n              resourceType.includes('Gateway') || resourceType === 'Subnet' || \n              resourceType === 'RouteTable' || resourceType === 'NetworkInterface' || \n              resourceType === 'ElasticIP' || resourceType === 'NetworkACL' ||\n              resourceType.includes('ACL')) {\n      return 'ec2';\n    } else if (resourceType.startsWith('S3') || resourceType.includes('Bucket')) {\n      return 's3';\n    } else if (resourceType.startsWith('RDS') || resourceType.startsWith('DB') || \n               resourceType.includes('Database')) {\n      return 'rds';\n    } else if (resourceType.startsWith('DynamoDB') || resourceType.includes('DynamoDB')) {\n      return 'dynamodb';\n    } else if (resourceType.startsWith('Lambda')) {\n      return 'lambda';\n    }\n    \n    // Log tipos desconhecidos para depuração\n    console.log('Tipo de recurso não categorizado:', resourceType);\n    return 'other';\n  };\n\n  // Função para formatar o tipo de recurso para exibição\n  const formatResourceType = (resourceType: string): string => {\n    // Identificar o prefixo do serviço\n    let prefix = '';\n    let name = resourceType;\n    \n    if (resourceType.startsWith('IAM')) {\n      prefix = 'IAM';\n      name = resourceType.substring(3);\n    } else if (resourceType.startsWith('EC2')) {\n      prefix = 'EC2';\n      name = resourceType.substring(3);\n    } else if (resourceType.startsWith('S3')) {\n      prefix = 'S3';\n      name = resourceType.substring(2);\n    } else if (resourceType.startsWith('RDS')) {\n      prefix = 'RDS';\n      name = resourceType.substring(3);\n    } else if (resourceType.startsWith('DB')) {\n      prefix = 'DB';\n      name = resourceType.substring(2);\n    } else if (resourceType.startsWith('DynamoDB')) {\n      prefix = 'DynamoDB';\n      name = resourceType.substring(8);\n    } else if (resourceType.startsWith('Lambda')) {\n      prefix = 'Lambda';\n      name = resourceType.substring(6);\n    }\n    \n    // Se o nome começar com letra maiúscula e não tiver espaço, \n    // adiciona um espaço antes de cada letra maiúscula (exceto a primeira)\n    if (name.length > 0 && /^[A-Z]/.test(name) && !name.includes(' ')) {\n      name = name.replace(/([A-Z])/g, ' $1').trim();\n    }\n    \n    return prefix ? `${prefix}-${name}` : resourceType;\n  };\n\n  // Função para formatar o tipo de recurso para texto legível\n  const getResourceTypeText = (resourceType: string): string => {\n    switch (resourceType) {\n      case 'IAMUser': return 'Usuário IAM';\n      case 'IAMRole': return 'Role IAM';\n      case 'IAMPolicy': return 'Política IAM';\n      case 'SecretManagerSecret': return 'Secrets Manager';\n      case 'EC2Instance': return 'Instância EC2';\n      case 'SecurityGroup': return 'Grupo de Segurança';\n      case 'VPC': return 'VPC';\n      case 'S3Bucket': return 'Bucket S3';\n      case 'RDSInstance': return 'Instância RDS';\n      case 'DynamoDBTable': return 'Tabela DynamoDB';\n      case 'LambdaFunction': return 'Função Lambda';\n      default: return formatResourceType(resourceType);\n    }\n  };\n\n  // Helper functions for severity and status\n  type SeverityType = 'CRITICAL' | 'HIGH' | 'MEDIUM' | 'LOW' | 'INFO';\n  type StatusType = 'OPEN' | 'IN_PROGRESS' | 'RESOLVED' | 'DISMISSED';\n\n  const getSeverityLabel = (severity: SeverityType) => {\n    const labels = {\n      'CRITICAL': 'Crítico',\n      'HIGH': 'Alto',\n      'MEDIUM': 'Médio',\n      'LOW': 'Baixo',\n      'INFO': 'Informativo'\n    };\n    return labels[severity];\n  };\n\n  const getStatusLabel = (status: StatusType) => {\n    const labels = {\n      'OPEN': 'Aberto',\n      'IN_PROGRESS': 'Em Progresso',\n      'RESOLVED': 'Resolvido',\n      'DISMISSED': 'Ignorado'\n    };\n    return labels[status];\n  };\n\n  const getSeverityIcon = (severity: SeverityType, options = {}) => {\n    switch (severity) {\n      case 'CRITICAL':\n        return <AlertCircle className=\"text-red-600\" {...options} />;\n      case 'HIGH':\n        return <AlertTriangle className=\"text-orange-500\" {...options} />;\n      case 'MEDIUM':\n        return <AlertTriangle className=\"text-yellow-500\" {...options} />;\n      case 'LOW':\n        return <Info className=\"text-blue-500\" {...options} />;\n      case 'INFO':\n        return <Info className=\"text-gray-500\" {...options} />;\n      default:\n        return <Info className=\"text-gray-500\" {...options} />;\n    }\n  };\n\n  const getStatusIcon = (status: StatusType, options = {}) => {\n    switch (status) {\n      case 'OPEN':\n        return <AlertCircle className=\"text-red-500\" {...options} />;\n      case 'IN_PROGRESS':\n        return <Clock className=\"text-orange-500\" {...options} />;\n      case 'RESOLVED':\n        return <Check className=\"text-green-500\" {...options} />;\n      case 'DISMISSED':\n        return <Slash className=\"text-gray-500\" {...options} />;\n      default:\n        return <Info className=\"text-gray-500\" {...options} />;\n    }\n  };\n\n  const getSeverityFilterClass = (severity: keyof typeof severityFilters) => {\n    const classes = {\n      'CRITICAL': 'bg-red-100 text-red-800',\n      'HIGH': 'bg-orange-100 text-orange-800',\n      'MEDIUM': 'bg-yellow-100 text-yellow-800',\n      'LOW': 'bg-blue-100 text-blue-800',\n      'INFO': 'bg-gray-100 text-gray-800'\n    };\n    return classes[severity as keyof typeof classes] || 'bg-gray-100 text-gray-800';\n  };\n\n  const getStatusFilterClass = (status: keyof typeof statusFilters) => {\n    return statusFilters[status] \n      ? 'bg-green-100 text-green-800 border-green-300' \n      : 'bg-gray-100 text-gray-500 border-gray-300';\n  };\n\n  const toggleSeverityFilter = (severity: keyof typeof severityFilters) => {\n    setSeverityFilters(prev => ({\n      ...prev,\n      [severity]: !prev[severity]\n    }));\n  };\n\n  const toggleStatusFilter = (status: keyof typeof statusFilters) => {\n    setStatusFilters(prev => ({\n      ...prev,\n      [status]: !prev[status]\n    }));\n  };\n\n  const resetFilters = () => {\n    setActiveCategory('all');\n    setTimeRange(7);\n    setSeverityFilters({\n      'CRITICAL': true,\n      'HIGH': true,\n      'MEDIUM': true,\n      'LOW': true,\n      'INFO': true\n    });\n    setStatusFilters({\n      'OPEN': true,\n      'IN_PROGRESS': true,\n      'RESOLVED': true,\n      'DISMISSED': false\n    });\n    setSearchTerm('');\n    setShowFilters(false);\n  };\n  \n  const getResourceTypeIcon = (resourceType: string) => {\n    switch (resourceType) {\n      case 'IAMUser':\n        return <User className=\"w-5 h-5\" />;\n      case 'IAMAccessKey':\n        return <Key className=\"w-5 h-5\" />;\n      case 'IAMPolicy':\n        return <FileText className=\"w-5 h-5\" />;\n      case 'SecretManagerSecret':\n        return <Lock className=\"w-5 h-5\" />;\n      case 'EC2Instance':\n        return <Server className=\"w-5 h-5\" />;\n      case 'SecurityGroup':\n        return <Shield className=\"w-5 h-5\" />;\n      case 'Volume':\n        return <HardDrive className=\"w-5 h-5\" />;\n      case 'S3Bucket':\n        return <Cloud className=\"w-5 h-5\" />;\n      case 'RDSInstance':\n        return <Database className=\"w-5 h-5\" />;\n      case 'IAMRole':\n        return <Users className=\"w-5 h-5\" />;\n      default:\n        return <Info className=\"w-5 h-5\" />;\n    }\n  };\n  \n  // Estatísticas\n  const activeCount = filteredAlerts.filter(a => a.status === 'active').length;\n  const criticalCount = filteredAlerts.filter(a => a.severity === 'CRITICAL' && a.status === 'active').length;\n  const highCount = filteredAlerts.filter(a => a.severity === 'HIGH' && a.status === 'active').length;\n  const mediumCount = filteredAlerts.filter(a => a.severity === 'MEDIUM' && a.status === 'active').length;\n  const lowCount = filteredAlerts.filter(a => a.severity === 'LOW' && a.status === 'active').length;\n  \n  // Estatísticas por tipo\n  const iamAlertCount = alerts.filter(a => \n    getAlertCategory(a.resourceType) === 'iam' && \n    a.status === 'active'\n  ).length;\n  \n  const ec2AlertCount = alerts.filter(a => \n    getAlertCategory(a.resourceType) === 'ec2' && \n    a.status === 'active'\n  ).length;\n  \n  const s3AlertCount = alerts.filter(a => \n    getAlertCategory(a.resourceType) === 's3' && \n    a.status === 'active'\n  ).length;\n  \n  const rdsAlertCount = alerts.filter(a => \n    getAlertCategory(a.resourceType) === 'rds' && \n    a.status === 'active'\n  ).length;\n\n  // Data for charts\n  const severityData = [\n    { name: 'Crítico', value: criticalCount, color: '#EF4444' },\n    { name: 'Alto', value: highCount, color: '#F97316' },\n    { name: 'Médio', value: mediumCount, color: '#EAB308' },\n    { name: 'Baixo', value: lowCount, color: '#3B82F6' },\n  ];\n\n  const serviceData = [\n    { name: 'IAM', value: iamAlertCount, color: '#F97316' },\n    { name: 'EC2', value: ec2AlertCount, color: '#3B82F6' },\n    { name: 'S3', value: s3AlertCount, color: '#EAB308' },\n    { name: 'RDS', value: rdsAlertCount, color: '#10B981' },\n  ];\n\n  // Group alerts by date for trend chart\n  const getAlertsByDate = () => {\n    const dates = new Map();\n    const now = new Date();\n    const days = timeRange === 7 ? 7 : timeRange === 30 ? 30 : 90;\n    \n    // Initialize all dates in the range with zero counts\n    for (let i = 0; i < days; i++) {\n      const date = new Date(now);\n      date.setDate(date.getDate() - i);\n      const dateStr = date.toISOString().split('T')[0];\n      dates.set(dateStr, { date: dateStr, critical: 0, high: 0, medium: 0, low: 0, total: 0 });\n    }\n    \n    // Count alerts by date and severity\n    alerts.forEach(alert => {\n      const date = new Date(alert.createdAt).toISOString().split('T')[0];\n      if (dates.has(date)) {\n        const entry = dates.get(date);\n        entry.total++;\n        \n        if (alert.severity === 'CRITICAL') entry.critical++;\n        else if (alert.severity === 'HIGH') entry.high++;\n        else if (alert.severity === 'MEDIUM') entry.medium++;\n        else if (alert.severity === 'LOW') entry.low++;\n      }\n    });\n    \n    // Convert to array and sort by date\n    return Array.from(dates.values())\n      .sort((a, b) => a.date.localeCompare(b.date));\n  };\n\n  // Get alerts by resource type\n  const getAlertsByResourceType = () => {\n    const counts = new Map();\n    \n    alerts.filter(a => a.status === 'active').forEach(alert => {\n      const type = getResourceTypeText(alert.resourceType);\n      counts.set(type, (counts.get(type) || 0) + 1);\n    });\n    \n    return Array.from(counts.entries())\n      .map(([name, value]) => ({ name, value }))\n      .sort((a, b) => b.value - a.value);\n  };\n\n  const trendData = getAlertsByDate();\n  const resourceTypeData = getAlertsByResourceType();\n\n  interface SectionHeaderProps {\n    title: string;\n    count: number;\n    icon: React.ReactNode;\n    isExpanded: boolean;\n    onClick: () => void;\n  }\n  \n  function SectionHeader({ title, count, icon, isExpanded, onClick }: SectionHeaderProps) {\n    return (\n      <button\n        className=\"w-full px-6 py-4 flex items-center justify-between hover:bg-gray-50 transition-colors\"\n        onClick={onClick}\n      >\n        <div className=\"flex items-center\">\n          {icon}\n          <h2 className=\"ml-2 text-base font-medium text-gray-900\">{title}</h2>\n          {count > 0 && (\n            <span className=\"ml-2 px-2 py-0.5 bg-red-100 text-red-800 text-xs rounded-full\">\n              {count}\n            </span>\n          )}\n        </div>\n        <svg\n          className={`h-5 w-5 text-gray-500 transform transition-transform ${isExpanded ? 'rotate-180' : ''}`}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 20 20\"\n          fill=\"currentColor\"\n        >\n          <path fillRule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n        </svg>\n      </button>\n    );\n  }\n\n  const getSeverityColor = (severity: string) => {\n    const colors: Record<string, string> = {\n      'CRITICAL': 'text-red-600',\n      'HIGH': 'text-orange-500',\n      'MEDIUM': 'text-yellow-500',\n      'LOW': 'text-blue-500',\n      'INFO': 'text-gray-500'\n    };\n    return colors[severity] || 'text-gray-500';\n  };\n\n  const getSeverityBorderColor = (severity: string): string => {\n    const colors: Record<string, string> = {\n      'CRITICAL': 'border-red-600',\n      'HIGH': 'border-orange-500',\n      'MEDIUM': 'border-yellow-500',\n      'LOW': 'border-blue-500',\n      'INFO': 'border-gray-500'\n    };\n    return colors[severity] || 'border-gray-500';\n  };\n\n  const getSeverityText = (severity: string): string => {\n    return getSeverityLabel(severity as SeverityType);\n  };\n\n  // Função para limpar todos os alertas\n  const handleCleanupAllAlerts = async () => {\n    const confirmCleanup = window.confirm(\"Esta ação removerá todos os alertas da plataforma. Deseja continuar?\");\n    \n    if (!confirmCleanup) return;\n    \n    setAllAlertsCleanupLoading(true);\n    \n    try {\n      const response = await fetch(\"/api/alerts/cleanup-all\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      \n      if (response.ok) {\n        setCleanupMessage(\"Todos os alertas foram removidos com sucesso.\");\n        setShowCleanupMessage(true);\n        handleRefresh();\n      } else {\n        const errorData = await response.json();\n        setCleanupMessage(`Erro ao limpar alertas: ${errorData.message || \"Erro desconhecido\"}`);\n        setShowCleanupMessage(true);\n      }\n    } catch (error: any) {\n      console.error(\"Erro ao limpar alertas:\", error);\n      setCleanupMessage(\"Erro ao limpar alertas: \" + (error.message || \"Erro desconhecido\"));\n      setShowCleanupMessage(true);\n    } finally {\n      setAllAlertsCleanupLoading(false);\n    }\n  };\n\n  // Declaração do estado de carregamento para limpeza de todos os alertas\n  const [allAlertsCleanupLoading, setAllAlertsCleanupLoading] = useState(false);\n\n  // Basic minimal UI for now\n  return (\n    <>\n      <div className=\"container mx-auto py-6\">\n        <div className=\"flex flex-col lg:flex-row justify-between items-start lg:items-center mb-6 gap-4\">\n          <motion.div\n            initial={{ opacity: 0, y: -20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.3 }}\n          >\n            <h1 className=\"text-3xl font-bold flex items-center gap-2 text-gray-900\">\n              <Shield className=\"h-8 w-8 text-indigo-600\" /> \n              Segurança\n            </h1>\n            <p className=\"text-gray-600 mt-1\">\n              Gerencie e resolva problemas de segurança na sua infraestrutura AWS\n            </p>\n          </motion.div>\n          \n          <div className=\"flex flex-col w-full lg:w-auto\">\n            <CredentialSelector />\n            \n            <div className=\"flex flex-wrap gap-2 mt-4 justify-end\">\n              <button\n                onClick={handleRefresh}\n                className=\"px-4 py-2 flex items-center gap-2 bg-white text-indigo-700 border border-indigo-300 rounded-lg shadow-sm hover:bg-indigo-50 transition-colors\"\n                disabled={loading}\n              >\n                <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\n                Atualizar\n              </button>\n              \n              <button \n                onClick={() => setShowFilters(!showFilters)}\n                className={`px-4 py-2 flex items-center gap-2 rounded-lg shadow-sm border transition-colors ${\n                  showFilters \n                    ? 'bg-blue-50 text-blue-700 border-blue-300' \n                    : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-50'\n                }`}\n              >\n                <Filter className=\"h-4 w-4\" />\n                Filtros\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Tab Navigation */}\n        <div className=\"border-b border-gray-200 mb-6\">\n          <nav className=\"flex -mb-px space-x-8 overflow-x-auto scrollbar-hide\">\n            <button\n              onClick={() => setActiveCategory(\"all\")}\n              className={`whitespace-nowrap px-1 py-4 text-sm font-medium border-b-2 ${\n                activeCategory === \"all\" \n                  ? \"border-indigo-500 text-indigo-600\"\n                  : \"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300\"\n              }`}\n            >\n              <span className=\"flex items-center\">\n                <Shield className=\"mr-2 h-5 w-5\" />\n                Todos os Serviços\n              </span>\n            </button>\n            <button\n              onClick={() => setActiveCategory(\"iam\")}\n              className={`whitespace-nowrap px-1 py-4 text-sm font-medium border-b-2 ${\n                activeCategory === \"iam\" \n                  ? \"border-orange-500 text-orange-600\"\n                  : \"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300\"\n              }`}\n            >\n              <span className=\"flex items-center\">\n                <User className=\"mr-2 h-5 w-5\" />\n                IAM & Secrets\n                {iamScanLoading && <RefreshCw className=\"ml-2 h-4 w-4 animate-spin\" />}\n              </span>\n            </button>\n            <button\n              onClick={() => setActiveCategory(\"ec2\")}\n              className={`whitespace-nowrap px-1 py-4 text-sm font-medium border-b-2 ${\n                activeCategory === \"ec2\" \n                  ? \"border-blue-500 text-blue-600\"\n                  : \"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300\"\n              }`}\n            >\n              <span className=\"flex items-center\">\n                <Server className=\"mr-2 h-5 w-5\" />\n                EC2 & Rede\n              </span>\n            </button>\n            <button\n              onClick={() => setActiveCategory(\"s3\")}\n              className={`whitespace-nowrap px-1 py-4 text-sm font-medium border-b-2 ${\n                activeCategory === \"s3\" \n                  ? \"border-yellow-500 text-yellow-600\"\n                  : \"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300\"\n              }`}\n            >\n              <span className=\"flex items-center\">\n                <Database className=\"mr-2 h-5 w-5\" />\n                S3 Storage\n              </span>\n            </button>\n            <button\n              onClick={() => setActiveCategory(\"rds\")}\n              className={`whitespace-nowrap px-1 py-4 text-sm font-medium border-b-2 ${\n                activeCategory === \"rds\" \n                  ? \"border-green-500 text-green-600\"\n                  : \"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300\"\n              }`}\n            >\n              <span className=\"flex items-center\">\n                <Database className=\"mr-2 h-5 w-5\" />\n                RDS\n              </span>\n            </button>\n          </nav>\n        </div>\n\n        {/* Status messages */}\n        {showCleanupMessage && cleanupMessage && (\n          <div className=\"mb-4 p-3 bg-green-50 text-green-800 rounded-lg border border-green-200 shadow-sm flex items-center justify-between\">\n            <div className=\"flex items-center\">\n              <CheckCircle className=\"h-5 w-5 mr-2 text-green-500\" />\n              {cleanupMessage}\n            </div>\n            <button \n              onClick={() => setShowCleanupMessage(false)} \n              className=\"p-1 rounded-full hover:bg-green-100\"\n              aria-label=\"Fechar notificação\"\n            >\n              <X className=\"h-4 w-4 text-green-700\" />\n            </button>\n          </div>\n        )}\n        \n        {showIamScanMessage && iamScanMessage && (\n          <div className=\"mb-4 p-3 bg-blue-50 text-blue-800 rounded-lg border border-blue-200 shadow-sm flex items-center justify-between\">\n            <div className=\"flex items-center\">\n              <Info className=\"h-5 w-5 mr-2 text-blue-500\" />\n              {iamScanMessage}\n            </div>\n            <button \n              onClick={() => setShowIamScanMessage(false)} \n              className=\"p-1 rounded-full hover:bg-blue-100\"\n              aria-label=\"Fechar notificação\"\n            >\n              <X className=\"h-4 w-4 text-blue-700\" />\n            </button>\n          </div>\n        )}\n\n        {/* IAM scan button */}\n        {activeCategory === \"iam\" && (\n          <div className=\"mb-4\">\n            <button\n              onClick={handleScanIAMThreats}\n              className=\"px-4 py-2 flex items-center gap-2 w-full bg-orange-100 text-orange-700 border border-orange-300 rounded-lg shadow-sm hover:bg-orange-200 transition-colors\"\n              disabled={iamScanLoading}\n            >\n              {iamScanLoading ? (\n                <>\n                  <RefreshCw className=\"h-5 w-5 animate-spin\" />\n                  <span>Verificando Problemas no IAM...</span>\n                </>\n              ) : (\n                <>\n                  <User className=\"h-5 w-5\" />\n                  <span>Verificar Segurança de IAM e Segredos</span>\n                </>\n              )}\n            </button>\n          </div>\n        )}\n\n        {/* EC2 cleanup button */}\n        {activeCategory === \"ec2\" && (\n          <div className=\"mb-4\">\n            <button\n              onClick={handleCleanupEC2Alerts}\n              className=\"px-4 py-2 flex items-center gap-2 w-full bg-blue-100 text-blue-700 border border-blue-300 rounded-lg shadow-sm hover:bg-blue-200 transition-colors\"\n              disabled={ec2CleanupLoading}\n            >\n              {ec2CleanupLoading ? (\n                <>\n                  <RefreshCw className=\"h-5 w-5 animate-spin\" />\n                  <span>Removendo Alertas de EC2...</span>\n                </>\n              ) : (\n                <>\n                  <Eraser className=\"h-5 w-5\" />\n                  <span>Limpar Alertas de EC2</span>\n                </>\n              )}\n            </button>\n          </div>\n        )}\n\n        {/* Main content */}\n        <div className=\"bg-white p-6 rounded-lg shadow\">\n          {loading ? (\n            <div className=\"flex justify-center items-center py-12\">\n              <RefreshCw className=\"h-8 w-8 text-indigo-500 animate-spin\" />\n              <span className=\"ml-2 text-gray-700\">Carregando alertas de segurança...</span>\n            </div>\n          ) : error ? (\n            <div className=\"bg-red-50 border border-red-200 text-red-800 px-4 py-3 rounded-md mb-6\">\n              <p className=\"flex items-center\">\n                <AlertCircle className=\"h-5 w-5 text-red-500 mr-2\" />\n                {error}\n              </p>\n            </div>\n          ) : alerts.length === 0 ? (\n            <div className=\"bg-white rounded-lg p-8 text-center\">\n              <Shield className=\"mx-auto h-12 w-12 text-gray-400 mb-4\" />\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Nenhum alerta encontrado</h3>\n              <p className=\"text-gray-500 mb-4\">\n                {activeCategory === \"all\" \n                  ? \"Não há alertas de segurança para exibir no momento.\" \n                  : `Não há alertas de segurança para ${\n                      activeCategory === 'iam' \n                        ? 'IAM & Secrets' \n                        : activeCategory === 'ec2' \n                          ? 'EC2 & Rede' \n                          : activeCategory === 's3' \n                            ? 'S3 Storage' \n                          : 'RDS'\n                    } no momento.`}\n              </p>\n            </div>\n          ) : (\n            <div>\n              <div className=\"flex justify-between items-center mb-6\">\n                <h2 className=\"text-xl font-semibold text-gray-900 flex items-center gap-2\">\n                  <Shield className=\"h-5 w-5 text-indigo-600\" />\n                  Visão Geral de Segurança\n                </h2>\n                <div className=\"flex items-center\">\n                  <div className=\"relative mr-2\">\n                    <input \n                      type=\"text\" \n                      placeholder=\"Buscar alertas...\" \n                      value={searchTerm}\n                      onChange={(e) => setSearchTerm(e.target.value)}\n                      className=\"px-3 py-1 border rounded text-sm focus:outline-none focus:ring-1 focus:ring-indigo-500\"\n                    />\n                    <Search className=\"absolute right-2 top-1.5 h-4 w-4 text-gray-400\" />\n                  </div>\n                  <button\n                    onClick={handleCleanupDuplicates}\n                    className=\"px-4 py-2 flex items-center gap-2 bg-white text-gray-700 border border-gray-300 rounded-lg shadow-sm hover:bg-gray-50 transition-colors\"\n                    disabled={cleanupLoading}\n                  >\n                    {cleanupLoading ? (\n                      <>\n                        <RefreshCw className=\"h-4 w-4 animate-spin\" />\n                        Limpando...\n                      </>\n                    ) : (\n                      <>\n                        <Eraser className=\"h-4 w-4\" />\n                        Limpar Duplicados\n                      </>\n                    )}\n                  </button>\n                </div>\n              </div>\n              \n              {/* Dashboard Overview Section */}\n              <div className=\"mb-8\">\n                {/* Alert Charts */}\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n                  {/* Severity Distribution Chart */}\n                  <div className=\"bg-white rounded-lg border border-gray-200 shadow-sm p-4\">\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Alertas por Severidade</h3>\n                    <div className=\"h-64\">\n                      <ResponsiveContainer width=\"100%\" height=\"100%\">\n                        <BarChart\n                          data={[\n                            { name: 'Crítico', value: alerts.filter(a => a.severity === 'CRITICAL' && (a.status === 'active' || a.status === 'OPEN')).length, color: '#EF4444' },\n                            { name: 'Alto', value: alerts.filter(a => a.severity === 'HIGH' && (a.status === 'active' || a.status === 'OPEN')).length, color: '#F97316' },\n                            { name: 'Médio', value: alerts.filter(a => a.severity === 'MEDIUM' && (a.status === 'active' || a.status === 'OPEN')).length, color: '#EAB308' },\n                            { name: 'Baixo', value: alerts.filter(a => a.severity === 'LOW' && (a.status === 'active' || a.status === 'OPEN')).length, color: '#3B82F6' },\n                          ]}\n                          margin={{ top: 10, right: 10, left: 10, bottom: 20 }}\n                        >\n                          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} opacity={0.3} />\n                          <XAxis dataKey=\"name\" tick={{ fontSize: 12 }} />\n                          <YAxis tick={{ fontSize: 12 }} allowDecimals={false} />\n                          <Tooltip />\n                          <Bar dataKey=\"value\" radius={[4, 4, 0, 0]}>\n                            {[\n                              { name: 'Crítico', value: alerts.filter(a => a.severity === 'CRITICAL' && (a.status === 'active' || a.status === 'OPEN')).length, color: '#EF4444' },\n                              { name: 'Alto', value: alerts.filter(a => a.severity === 'HIGH' && (a.status === 'active' || a.status === 'OPEN')).length, color: '#F97316' },\n                              { name: 'Médio', value: alerts.filter(a => a.severity === 'MEDIUM' && (a.status === 'active' || a.status === 'OPEN')).length, color: '#EAB308' },\n                              { name: 'Baixo', value: alerts.filter(a => a.severity === 'LOW' && (a.status === 'active' || a.status === 'OPEN')).length, color: '#3B82F6' },\n                            ].map((entry, index) => (\n                              <Cell key={`cell-${index}`} fill={entry.color} />\n                            ))}\n                          </Bar>\n                        </BarChart>\n                      </ResponsiveContainer>\n                    </div>\n                  </div>\n\n                  {/* Resource Type Distribution Chart */}\n                  <div className=\"bg-white rounded-lg border border-gray-200 shadow-sm p-4\">\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Alertas por Serviço</h3>\n                    <div className=\"h-64\">\n                      <ResponsiveContainer width=\"100%\" height=\"100%\">\n                        <PieChart>\n                          <Tooltip />\n                          <Legend />\n                          <Pie\n                            data={[\n                              { name: 'IAM', value: alerts.filter(a => getAlertCategory(a.resourceType) === 'iam' && (a.status === 'active' || a.status === 'OPEN')).length, color: '#F97316' },\n                              { name: 'EC2', value: alerts.filter(a => getAlertCategory(a.resourceType) === 'ec2' && (a.status === 'active' || a.status === 'OPEN')).length, color: '#3B82F6' },\n                              { name: 'S3', value: alerts.filter(a => getAlertCategory(a.resourceType) === 's3' && (a.status === 'active' || a.status === 'OPEN')).length, color: '#EAB308' },\n                              { name: 'RDS', value: alerts.filter(a => getAlertCategory(a.resourceType) === 'rds' && (a.status === 'active' || a.status === 'OPEN')).length, color: '#22C55E' },\n                              { name: 'Outros', value: alerts.filter(a => !['iam', 'ec2', 's3', 'rds'].includes(getAlertCategory(a.resourceType)) && (a.status === 'active' || a.status === 'OPEN')).length, color: '#A1A1AA' },\n                            ]}\n                            dataKey=\"value\"\n                            nameKey=\"name\"\n                            cx=\"50%\"\n                            cy=\"50%\"\n                            outerRadius={80}\n                            label\n                          >\n                            {[\n                              { name: 'IAM', value: alerts.filter(a => getAlertCategory(a.resourceType) === 'iam' && (a.status === 'active' || a.status === 'OPEN')).length, color: '#F97316' },\n                              { name: 'EC2', value: alerts.filter(a => getAlertCategory(a.resourceType) === 'ec2' && (a.status === 'active' || a.status === 'OPEN')).length, color: '#3B82F6' },\n                              { name: 'S3', value: alerts.filter(a => getAlertCategory(a.resourceType) === 's3' && (a.status === 'active' || a.status === 'OPEN')).length, color: '#EAB308' },\n                              { name: 'RDS', value: alerts.filter(a => getAlertCategory(a.resourceType) === 'rds' && (a.status === 'active' || a.status === 'OPEN')).length, color: '#22C55E' },\n                              { name: 'Outros', value: alerts.filter(a => !['iam', 'ec2', 's3', 'rds'].includes(getAlertCategory(a.resourceType)) && (a.status === 'active' || a.status === 'OPEN')).length, color: '#A1A1AA' },\n                            ].map((entry, index) => (\n                              <Cell key={`cell-${index}`} fill={entry.color} />\n                            ))}\n                          </Pie>\n                        </PieChart>\n                      </ResponsiveContainer>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Alert Summary Boxes */}\n                <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-4 mb-6\">\n                  <div className=\"bg-red-50 rounded-lg p-4 border border-red-200\">\n                    <div className=\"flex items-center\">\n                      <AlertCircle className=\"h-8 w-8 text-red-500 mr-3\" />\n                      <div>\n                        <p className=\"text-sm text-red-800\">Críticos</p>\n                        <p className=\"text-3xl font-bold text-red-900\">{alerts.filter(a => a.severity === 'CRITICAL' && (a.status === 'active' || a.status === 'OPEN')).length}</p>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"bg-orange-50 rounded-lg p-4 border border-orange-200\">\n                    <div className=\"flex items-center\">\n                      <AlertTriangle className=\"h-8 w-8 text-orange-500 mr-3\" />\n                      <div>\n                        <p className=\"text-sm text-orange-800\">Altos</p>\n                        <p className=\"text-3xl font-bold text-orange-900\">{alerts.filter(a => a.severity === 'HIGH' && (a.status === 'active' || a.status === 'OPEN')).length}</p>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"bg-yellow-50 rounded-lg p-4 border border-yellow-200\">\n                    <div className=\"flex items-center\">\n                      <AlertTriangle className=\"h-8 w-8 text-yellow-500 mr-3\" />\n                      <div>\n                        <p className=\"text-sm text-yellow-800\">Médios</p>\n                        <p className=\"text-3xl font-bold text-yellow-900\">{alerts.filter(a => a.severity === 'MEDIUM' && (a.status === 'active' || a.status === 'OPEN')).length}</p>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"bg-blue-50 rounded-lg p-4 border border-blue-200\">\n                    <div className=\"flex items-center\">\n                      <Info className=\"h-8 w-8 text-blue-500 mr-3\" />\n                      <div>\n                        <p className=\"text-sm text-blue-800\">Baixos</p>\n                        <p className=\"text-3xl font-bold text-blue-900\">{alerts.filter(a => a.severity === 'LOW' && (a.status === 'active' || a.status === 'OPEN')).length}</p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              {/* Alert List Section */}\n              <div className=\"mt-6\">\n                <h2 className=\"text-xl font-semibold mb-4 flex items-center gap-2 text-gray-900\">\n                  <Bell className=\"h-5 w-5 text-indigo-600\" />\n                  Lista de Alertas\n                </h2>\n                \n                {/* Alerts by Service */}\n                <div className=\"space-y-4\">\n                  {Object.entries(\n                    filteredAlerts.reduce((acc, alert) => {\n                      let service = getAlertCategory(alert.resourceType);\n                      \n                      if (!acc[service]) acc[service] = [];\n                      acc[service].push(alert);\n                      return acc;\n                    }, {} as Record<string, any[]>)\n                  ).map(([service, serviceAlerts]) => (\n                    <motion.div \n                      key={service}\n                      initial={{ opacity: 0 }}\n                      animate={{ opacity: 1 }}\n                      className=\"bg-white rounded-lg shadow-sm overflow-hidden border border-gray-200\"\n                    >\n                      <div \n                        className=\"px-4 py-3 flex items-center justify-between cursor-pointer\"\n                        onClick={() => {\n                          const newExpandedSections = expandedSections || [];\n                          if (newExpandedSections.includes(service)) {\n                            setExpandedSections(newExpandedSections.filter(s => s !== service));\n                          } else {\n                            setExpandedSections([...newExpandedSections, service]);\n                          }\n                        }}\n                      >\n                        <div className=\"flex items-center\">\n                          {service === \"iam\" ? <User className=\"h-5 w-5 text-orange-500\" /> : \n                           service === \"ec2\" ? <Server className=\"h-5 w-5 text-blue-500\" /> : \n                           service === \"s3\" ? <Database className=\"h-5 w-5 text-yellow-500\" /> : \n                           service === \"rds\" ? <Database className=\"h-5 w-5 text-green-500\" /> : \n                           service === \"dynamodb\" ? <Database className=\"h-5 w-5 text-purple-500\" /> : \n                           service === \"lambda\" ? <Key className=\"h-5 w-5 text-pink-500\" /> : \n                           <Shield className=\"h-5 w-5 text-gray-500\" />}\n                          <h3 className=\"text-lg font-medium ml-2 text-gray-900\">\n                            {service === \"iam\" ? \"IAM & Secrets\" : \n                             service === \"ec2\" ? \"EC2 & Rede\" : \n                             service === \"s3\" ? \"S3 Storage\" : \n                             service === \"rds\" ? \"RDS Database\" : \n                             service === \"dynamodb\" ? \"DynamoDB\" : \n                             service === \"lambda\" ? \"Lambda\" : \n                             \"Outros\"} \n                            <span className=\"ml-2 text-sm font-normal text-gray-500\">\n                              {serviceAlerts.length} {serviceAlerts.length === 1 ? \"alerta\" : \"alertas\"}\n                            </span>\n                          </h3>\n                        </div>\n                        {expandedSections && expandedSections.includes(service) ? (\n                          <ChevronDown className=\"h-5 w-5 text-gray-500\" />\n                        ) : (\n                          <ChevronRight className=\"h-5 w-5 text-gray-500\" />\n                        )}\n                      </div>\n                      \n                      {expandedSections && expandedSections.includes(service) && (\n                        <div className=\"border-t border-gray-200\">\n                          <ul className=\"divide-y divide-gray-200\">\n                            {serviceAlerts.map(alert => (\n                              <li key={alert.id} className=\"px-4 py-3\">\n                                <div className=\"flex items-start\">\n                                  <div className=\"flex-shrink-0 mt-1\">\n                                    {getSeverityIcon(alert.severity as SeverityType)}\n                                  </div>\n                                  <div className=\"ml-3 flex-1\">\n                                    <div className=\"flex flex-wrap justify-between items-start gap-2\">\n                                      <h4 \n                                        className=\"text-sm font-medium text-gray-900 cursor-pointer hover:text-indigo-600\"\n                                        onClick={(e) => {\n                                          e.stopPropagation();\n                                          openAlertDetails(alert);\n                                        }}\n                                      >\n                                        {alert.title}\n                                      </h4>\n                                      <div className=\"flex flex-wrap gap-2\">\n                                        <span className={`px-2 py-0.5 rounded-full text-xs font-medium ${getSeverityColor(alert.severity)}`}>\n                                          {getSeverityLabel(alert.severity as SeverityType)}\n                                        </span>\n                                        <span className=\"px-2 py-0.5 bg-gray-100 text-gray-800 rounded-full text-xs\">\n                                          {alert.status === \"active\" || alert.status === \"OPEN\" ? \"Ativo\" : alert.status === \"resolved\" || alert.status === \"RESOLVED\" ? \"Resolvido\" : \"Arquivado\"}\n                                        </span>\n                                      </div>\n                                    </div>\n                                    <p className=\"mt-1 text-sm text-gray-600\">{alert.description}</p>\n                                    <div className=\"mt-2 flex flex-wrap items-center text-xs text-gray-500\">\n                                      <span className=\"mr-2\">Recurso: {formatResourceType(alert.resourceType)}</span>\n                                      <span className=\"mr-2\">ID: {alert.resourceId}</span>\n                                      {alert.credential?.name && (\n                                        <span className=\"mr-2 bg-indigo-50 text-indigo-700 px-1.5 py-0.5 rounded\">\n                                          Conta: {alert.credential.name}\n                                        </span>\n                                      )}\n                                      <span>Detectado: {new Date(alert.createdAt).toLocaleString()}</span>\n                                    </div>\n                                    \n                                    {(alert.status === \"active\" || alert.status === \"OPEN\") && (\n                                      <div className=\"mt-3 flex gap-2\">\n                                        <button\n                                          onClick={() => handleResolve(alert.id)}\n                                          disabled={actionLoading === alert.id}\n                                          className=\"px-2 py-1 bg-green-100 text-green-800 rounded-md text-xs flex items-center hover:bg-green-200\"\n                                        >\n                                          <CheckCircle className=\"h-3 w-3 mr-1\" />\n                                          {actionLoading === alert.id ? \"...\" : \"Resolver\"}\n                                        </button>\n                                        <button\n                                          onClick={() => handleDismiss(alert.id)}\n                                          disabled={actionLoading === alert.id}\n                                          className=\"px-2 py-1 bg-gray-100 text-gray-800 rounded-md text-xs flex items-center hover:bg-gray-200\"\n                                        >\n                                          <Archive className=\"h-3 w-3 mr-1\" />\n                                          {actionLoading === alert.id ? \"...\" : \"Arquivar\"}\n                                        </button>\n                                      </div>\n                                    )}\n                                  </div>\n                                </div>\n                              </li>\n                            ))}\n                          </ul>\n                        </div>\n                      )}\n                    </motion.div>\n                  ))}\n                </div>\n                \n                {/* Empty state for filtered results */}\n                {filteredAlerts.length === 0 && (\n                  <div className=\"bg-white rounded-lg p-8 text-center border border-gray-200 mt-4\">\n                    <Shield className=\"mx-auto h-12 w-12 text-gray-400 mb-4\" />\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Nenhum alerta encontrado</h3>\n                    <p className=\"text-gray-500\">Tente ajustar seus filtros para ver mais resultados.</p>\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Alert Details Modal */}\n      {showModal && selectedAlert && (\n        <div className=\"fixed inset-0 z-50 overflow-auto bg-black bg-opacity-50 flex items-center justify-center p-4\">\n          <motion.div \n            className=\"bg-white rounded-lg shadow-xl max-w-4xl w-full max-h-[90vh] overflow-hidden flex flex-col\"\n            initial={{ opacity: 0, scale: 0.9 }}\n            animate={{ opacity: 1, scale: 1 }}\n            transition={{ duration: 0.2 }}\n          >\n            {/* Modal Header */}\n            <div className={`px-6 py-4 border-b flex items-center justify-between ${\n              selectedAlert.severity === 'CRITICAL' ? 'bg-red-50 border-red-200' :\n              selectedAlert.severity === 'HIGH' ? 'bg-orange-50 border-orange-200' :\n              selectedAlert.severity === 'MEDIUM' ? 'bg-yellow-50 border-yellow-200' :\n              'bg-blue-50 border-blue-200'\n            }`}>\n              <div className=\"flex items-center\">\n                {getSeverityIcon(selectedAlert.severity as SeverityType, { className: 'h-5 w-5 mr-2' })}\n                <h3 className=\"text-lg font-medium text-gray-900\">Detalhes do Alerta</h3>\n              </div>\n              <button \n                onClick={closeModal}\n                className=\"text-gray-500 hover:text-gray-700\"\n              >\n                <X className=\"h-5 w-5\" />\n              </button>\n            </div>\n            \n            {/* Modal Content */}\n            <div className=\"p-6 overflow-auto flex-1\">\n              <div className=\"flex flex-col md:flex-row gap-6\">\n                {/* Left Column - Alert Info */}\n                <div className=\"flex-1\">\n                  <div className=\"mb-4\">\n                    <h4 className=\"text-sm text-gray-500 mb-1\">Título</h4>\n                    <p className=\"text-lg font-medium text-gray-900\">{selectedAlert.title}</p>\n                  </div>\n                  \n                  <div className=\"mb-4\">\n                    <h4 className=\"text-sm text-gray-500 mb-1\">Descrição</h4>\n                    <p className=\"text-base text-gray-700\">{selectedAlert.description}</p>\n                  </div>\n                  \n                  <div className=\"mb-4\">\n                    <h4 className=\"text-sm text-gray-500 mb-1\">Severidade</h4>\n                    <div className=\"flex items-center\">\n                      {getSeverityIcon(selectedAlert.severity as SeverityType, { className: 'h-4 w-4 mr-1' })}\n                      <span className={`${getSeverityColor(selectedAlert.severity)} text-sm font-medium`}>\n                        {getSeverityLabel(selectedAlert.severity as SeverityType)}\n                      </span>\n                    </div>\n                  </div>\n                  \n                  <div className=\"mb-4\">\n                    <h4 className=\"text-sm text-gray-500 mb-1\">Status</h4>\n                    <div className=\"flex items-center\">\n                      {getStatusIcon(selectedAlert.status as StatusType, { className: 'h-4 w-4 mr-1' })}\n                      <span className=\"text-sm font-medium\">\n                        {getStatusLabel(selectedAlert.status as StatusType)}\n                      </span>\n                    </div>\n                  </div>\n                  \n                  <div className=\"mb-4\">\n                    <h4 className=\"text-sm text-gray-500 mb-1\">Recurso Afetado</h4>\n                    <div className=\"flex flex-col\">\n                      <span className=\"text-sm font-medium text-gray-700\">\n                        {formatResourceType(selectedAlert.resourceType)}\n                      </span>\n                      <span className=\"text-sm text-gray-500 mt-1\">\n                        ID: {selectedAlert.resourceId}\n                      </span>\n                    </div>\n                  </div>\n                  \n                  <div className=\"mb-4\">\n                    <h4 className=\"text-sm text-gray-500 mb-1\">Data de Detecção</h4>\n                    <span className=\"text-sm text-gray-700\">\n                      {new Date(selectedAlert.createdAt).toLocaleString()}\n                    </span>\n                  </div>\n                </div>\n                \n                {/* Right Column - Mitigation Info */}\n                <div className=\"flex-1 bg-gray-50 p-4 rounded-lg border border-gray-200\">\n                  <h4 className=\"text-md font-medium text-gray-900 mb-3\">Recomendações de Mitigação</h4>\n                  \n                  <div className=\"mb-4\">\n                    <p className=\"text-sm text-gray-700 mb-3\">\n                      {selectedAlert.severity === 'CRITICAL' || selectedAlert.severity === 'HIGH' ? \n                        'Esta vulnerabilidade representa um alto risco e deve ser corrigida com prioridade.' : \n                        'Recomendamos que esta vulnerabilidade seja corrigida em seu próximo ciclo de manutenção.'}\n                    </p>\n                    \n                    <h5 className=\"text-sm font-medium text-gray-900 mb-2\">Passos Recomendados:</h5>\n                    <ul className=\"list-disc pl-5 space-y-2 text-sm text-gray-700\">\n                      {selectedAlert.resourceType.includes('IAM') && (\n                        <>\n                          <li>Revise as permissões do usuário ou role IAM</li>\n                          <li>Implemente o princípio de privilégio mínimo</li>\n                          <li>Ative a autenticação multifator (MFA)</li>\n                          <li>Configure políticas de senha robustas</li>\n                        </>\n                      )}\n                      \n                      {selectedAlert.resourceType.includes('EC2') && (\n                        <>\n                          <li>Atualize o sistema operacional e aplicações</li>\n                          <li>Revise as regras do grupo de segurança</li>\n                          <li>Limite o acesso à instância a endereços IP confiáveis</li>\n                          <li>Verifique os logs de sistema em busca de atividades suspeitas</li>\n                        </>\n                      )}\n                      \n                      {selectedAlert.resourceType.includes('S3') && (\n                        <>\n                          <li>Revise as políticas de acesso ao bucket</li>\n                          <li>Desative o acesso público se não for necessário</li>\n                          <li>Ative a criptografia de dados em repouso</li>\n                          <li>Configure o registro de acesso ao bucket</li>\n                        </>\n                      )}\n                      \n                      {selectedAlert.resourceType.includes('RDS') && (\n                        <>\n                          <li>Aplique patches de segurança pendentes</li>\n                          <li>Revise os grupos de segurança da instância</li>\n                          <li>Ative a criptografia para dados sensíveis</li>\n                          <li>Configure backups automáticos</li>\n                        </>\n                      )}\n                      \n                      {!selectedAlert.resourceType.includes('IAM') && \n                       !selectedAlert.resourceType.includes('EC2') && \n                       !selectedAlert.resourceType.includes('S3') && \n                       !selectedAlert.resourceType.includes('RDS') && (\n                        <>\n                          <li>Revise as configurações de segurança do recurso</li>\n                          <li>Aplique as melhores práticas recomendadas pela AWS</li>\n                          <li>Atualize para a versão mais recente do serviço</li>\n                          <li>Configure monitoramento e logs adequados</li>\n                        </>\n                      )}\n                    </ul>\n                  </div>\n                  \n                  <div className=\"mb-4\">\n                    <h5 className=\"text-sm font-medium text-gray-900 mb-2\">Recursos Adicionais:</h5>\n                    <div className=\"space-y-2\">\n                      <a \n                        href=\"https://docs.aws.amazon.com/security\" \n                        target=\"_blank\" \n                        rel=\"noopener noreferrer\"\n                        className=\"text-sm text-indigo-600 hover:text-indigo-800 flex items-center\"\n                      >\n                        <ExternalLink className=\"h-3 w-3 mr-1\" />\n                        Documentação de Segurança da AWS\n                      </a>\n                      <a \n                        href=\"https://aws.amazon.com/security/security-learning\" \n                        target=\"_blank\" \n                        rel=\"noopener noreferrer\"\n                        className=\"text-sm text-indigo-600 hover:text-indigo-800 flex items-center\"\n                      >\n                        <ExternalLink className=\"h-3 w-3 mr-1\" />\n                        Centro de Aprendizado de Segurança da AWS\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            {/* Modal Footer */}\n            <div className=\"px-6 py-4 border-t border-gray-200 flex justify-end gap-2\">\n              {selectedAlert.status === 'active' || selectedAlert.status === 'OPEN' ? (\n                <>\n                  <button\n                    onClick={() => {\n                      handleResolve(selectedAlert.id);\n                      closeModal();\n                    }}\n                    className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700\"\n                  >\n                    Marcar como Resolvido\n                  </button>\n                  <button\n                    onClick={() => {\n                      handleDismiss(selectedAlert.id);\n                      closeModal();\n                    }}\n                    className=\"px-4 py-2 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300\"\n                  >\n                    Arquivar Alerta\n                  </button>\n                </>\n              ) : (\n                <button\n                  onClick={closeModal}\n                  className=\"px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700\"\n                >\n                  Fechar\n                </button>\n              )}\n            </div>\n          </motion.div>\n        </div>\n      )}\n    </>\n  );\n} \n\n\n\n\n\n"],"names":[],"mappings":"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","debugId":null}}]
}