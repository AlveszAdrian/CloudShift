{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/hooks/useAwsCredentials.ts"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from 'react';\n\nexport interface AwsCredential {\n  id: string;\n  name: string;\n  accountId?: string;\n  accessKeyId: string;\n  secretAccessKey: string;\n  region: string;\n}\n\nexport interface UseAwsCredentialsResult {\n  credentials: AwsCredential[];\n  selectedCredential: AwsCredential | null;\n  selectCredential: (id: string) => void;\n  addCredential: (credential: Omit<AwsCredential, 'id'>) => Promise<void>;\n  updateCredential: (id: string, data: Partial<Omit<AwsCredential, 'id'>>) => Promise<void>;\n  deleteCredential: (id: string) => Promise<void>;\n  loading: boolean;\n  isLoading: boolean; // Alias for loading - needed for compatibility\n  error: string | null;\n  refresh: () => Promise<void>;\n}\n\nexport function useAwsCredentials(): UseAwsCredentialsResult {\n  const [credentials, setCredentials] = useState<AwsCredential[]>([]);\n  const [selectedCredentialId, setSelectedCredentialId] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Function to fetch credentials from the API\n  const fetchCredentials = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch('/api/aws/credentials');\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch credentials: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      setCredentials(data);\n      \n      // If we have credentials but none selected, select the first one\n      if (data.length > 0 && !selectedCredentialId) {\n        setSelectedCredentialId(data[0].id);\n        // Save to localStorage\n        localStorage.setItem('selectedAwsCredentialId', data[0].id);\n      }\n      \n      return data;\n    } catch (err) {\n      setError(`Error fetching credentials: ${err instanceof Error ? err.message : String(err)}`);\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to select a credential\n  const selectCredential = (id: string) => {\n    setSelectedCredentialId(id);\n    localStorage.setItem('selectedAwsCredentialId', id);\n  };\n\n  // Function to add a new credential\n  const addCredential = async (credential: Omit<AwsCredential, 'id'>) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch('/api/aws/credentials', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(credential),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to add credential: ${response.status}`);\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      setError(`Error adding credential: ${err instanceof Error ? err.message : String(err)}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to update an existing credential\n  const updateCredential = async (id: string, data: Partial<Omit<AwsCredential, 'id'>>) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch(`/api/aws/credentials/${id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to update credential: ${response.status}`);\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      setError(`Error updating credential: ${err instanceof Error ? err.message : String(err)}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to delete a credential\n  const deleteCredential = async (id: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch(`/api/aws/credentials/${id}`, {\n        method: 'DELETE',\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to delete credential: ${response.status}`);\n      }\n      \n      // If we delete the selected credential, select another one\n      if (id === selectedCredentialId) {\n        const remainingCredentials = credentials.filter(c => c.id !== id);\n        if (remainingCredentials.length > 0) {\n          selectCredential(remainingCredentials[0].id);\n        } else {\n          setSelectedCredentialId(null);\n          localStorage.removeItem('selectedAwsCredentialId');\n        }\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      setError(`Error deleting credential: ${err instanceof Error ? err.message : String(err)}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Load credentials on mount\n  useEffect(() => {\n    // Try to restore selected credential from localStorage\n    const savedCredentialId = localStorage.getItem('selectedAwsCredentialId');\n    if (savedCredentialId) {\n      setSelectedCredentialId(savedCredentialId);\n    }\n    \n    fetchCredentials();\n  }, []);\n\n  // Find the selected credential object\n  const selectedCredential = credentials.find(c => c.id === selectedCredentialId) || null;\n\n  return {\n    credentials,\n    selectedCredential,\n    selectCredential,\n    addCredential,\n    updateCredential,\n    deleteCredential,\n    loading,\n    isLoading: loading, // Alias for loading\n    error,\n    refresh: fetchCredentials,\n  };\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/components/aws/AwsCredentialForm.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, FormEvent } from \"react\";\r\nimport { useAwsCredentials, AwsCredential } from \"@/hooks/useAwsCredentials\";\r\nimport { motion } from \"framer-motion\";\r\nimport { TrashIcon } from \"@heroicons/react/24/outline\";\r\n\r\nconst AWS_REGIONS = [\r\n  { value: \"us-east-1\", label: \"US East (N. Virginia)\" },\r\n  { value: \"us-east-2\", label: \"US East (Ohio)\" },\r\n  { value: \"us-west-1\", label: \"US West (N. California)\" },\r\n  { value: \"us-west-2\", label: \"US West (Oregon)\" },\r\n  { value: \"af-south-1\", label: \"Africa (Cape Town)\" },\r\n  { value: \"ap-east-1\", label: \"Asia Pacific (Hong Kong)\" },\r\n  { value: \"ap-south-1\", label: \"Asia Pacific (Mumbai)\" },\r\n  { value: \"ap-northeast-1\", label: \"Asia Pacific (Tokyo)\" },\r\n  { value: \"ap-northeast-2\", label: \"Asia Pacific (Seoul)\" },\r\n  { value: \"ap-northeast-3\", label: \"Asia Pacific (Osaka)\" },\r\n  { value: \"ap-southeast-1\", label: \"Asia Pacific (Singapore)\" },\r\n  { value: \"ap-southeast-2\", label: \"Asia Pacific (Sydney)\" },\r\n  { value: \"ca-central-1\", label: \"Canada (Central)\" },\r\n  { value: \"eu-central-1\", label: \"Europe (Frankfurt)\" },\r\n  { value: \"eu-west-1\", label: \"Europe (Ireland)\" },\r\n  { value: \"eu-west-2\", label: \"Europe (London)\" },\r\n  { value: \"eu-west-3\", label: \"Europe (Paris)\" },\r\n  { value: \"eu-north-1\", label: \"Europe (Stockholm)\" },\r\n  { value: \"eu-south-1\", label: \"Europe (Milan)\" },\r\n  { value: \"me-south-1\", label: \"Middle East (Bahrain)\" },\r\n  { value: \"sa-east-1\", label: \"South America (São Paulo)\" },\r\n];\r\n\r\nexport default function AwsCredentialForm() {\r\n  const { addCredential, deleteCredential, credentials, loading, error } = useAwsCredentials();\r\n  const [name, setName] = useState(\"\");\r\n  const [accessKeyId, setAccessKeyId] = useState(\"\");\r\n  const [secretKey, setSecretKey] = useState(\"\");\r\n  const [region, setRegion] = useState(\"us-east-1\");\r\n  const [success, setSuccess] = useState(false);\r\n  const [deleteMessage, setDeleteMessage] = useState(\"\");\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [credentialToDelete, setCredentialToDelete] = useState<AwsCredential | null>(null);\r\n\r\n  const handleSubmit = async (e: FormEvent) => {\r\n    e.preventDefault();\r\n    setSuccess(false);\r\n    \r\n    try {\r\n      await addCredential({\r\n        name,\r\n        accessKeyId,\r\n        secretAccessKey: secretKey,\r\n        region\r\n      });\r\n      \r\n      setSuccess(true);\r\n      // Limpar o formulário\r\n      setName(\"\");\r\n      setAccessKeyId(\"\");\r\n      setSecretKey(\"\");\r\n      setRegion(\"us-east-1\");\r\n      \r\n      // Limpar a mensagem de sucesso após 3 segundos\r\n      setTimeout(() => {\r\n        setSuccess(false);\r\n      }, 3000);\r\n    } catch (error) {\r\n      console.error(\"Erro ao adicionar credencial:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = (credential: AwsCredential) => {\r\n    setCredentialToDelete(credential);\r\n    setShowDeleteModal(true);\r\n  };\r\n\r\n  const handleConfirmDelete = async () => {\r\n    if (!credentialToDelete) return;\r\n\r\n    try {\r\n      await deleteCredential(credentialToDelete.id);\r\n      setDeleteMessage(\"Credencial removida com sucesso!\");\r\n      setShowDeleteModal(false);\r\n      \r\n      // Limpar a mensagem após 3 segundos\r\n      setTimeout(() => {\r\n        setDeleteMessage(\"\");\r\n      }, 3000);\r\n    } catch (error) {\r\n      console.error(\"Erro ao excluir credencial:\", error);\r\n      setDeleteMessage(\"Erro ao excluir credencial. Tente novamente.\");\r\n      setShowDeleteModal(false);\r\n      \r\n      // Limpar a mensagem de erro após 3 segundos\r\n      setTimeout(() => {\r\n        setDeleteMessage(\"\");\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <motion.div \r\n        className=\"bg-white rounded-lg shadow-md p-6 mb-6\"\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.3 }}\r\n      >\r\n        <h2 className=\"text-xl font-semibold text-gray-800 mb-4\">\r\n          Credenciais Cadastradas\r\n        </h2>\r\n        \r\n        {deleteMessage && (\r\n          <div className=\"p-3 mb-4 text-sm text-green-700 bg-green-100 rounded-md border border-green-200\">\r\n            {deleteMessage}\r\n          </div>\r\n        )}\r\n        \r\n        {credentials.length === 0 ? (\r\n          <div className=\"p-4 bg-gray-50 rounded-md text-gray-600 text-center\">\r\n            Nenhuma credencial cadastrada. Adicione uma nova credencial utilizando o formulário.\r\n          </div>\r\n        ) : (\r\n          <div className=\"space-y-3\">\r\n            {credentials.map((credential) => (\r\n              <div \r\n                key={credential.id} \r\n                className=\"border border-gray-300 rounded-lg p-3 flex justify-between items-center bg-gray-50 hover:bg-gray-100\"\r\n              >\r\n                <div>\r\n                  <div className=\"font-medium text-gray-900\">{credential.name}</div>\r\n                  <div className=\"text-sm text-gray-600\">Região: {credential.region}</div>\r\n                </div>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => handleDeleteClick(credential)}\r\n                  className=\"p-2 text-red-600 hover:text-red-800 hover:bg-red-50 rounded-md transition-colors\"\r\n                  title=\"Excluir credencial\"\r\n                >\r\n                  <TrashIcon className=\"h-5 w-5\" />\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </motion.div>\r\n      \r\n      <motion.div \r\n        className=\"bg-white rounded-lg shadow-md p-6\"\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.3 }}\r\n      >\r\n        <h2 className=\"text-xl font-semibold text-gray-800 mb-6\">\r\n          Adicionar Credencial AWS\r\n        </h2>\r\n        \r\n        {error && (\r\n          <div className=\"p-3 mb-4 text-sm text-red-700 bg-red-100 rounded-md\">\r\n            {error}\r\n          </div>\r\n        )}\r\n        \r\n        {success && (\r\n          <div className=\"p-3 mb-4 text-sm text-green-700 bg-green-100 rounded-md\">\r\n            Credencial adicionada com sucesso!\r\n          </div>\r\n        )}\r\n        \r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <div>\r\n            <label htmlFor=\"name\" className=\"block text-sm font-bold text-gray-800 mb-1\">\r\n              Nome da Credencial\r\n            </label>\r\n            <input\r\n              id=\"name\"\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              required\r\n              className=\"block w-full rounded-md border border-gray-400 bg-white text-gray-800 p-2 shadow-sm focus:border-indigo-600 focus:ring-indigo-600 sm:text-sm\"\r\n              placeholder=\"Minha Conta AWS\"\r\n            />\r\n          </div>\r\n          \r\n          <div>\r\n            <label htmlFor=\"accessKeyId\" className=\"block text-sm font-bold text-gray-800 mb-1\">\r\n              Access Key ID\r\n            </label>\r\n            <input\r\n              id=\"accessKeyId\"\r\n              type=\"text\"\r\n              value={accessKeyId}\r\n              onChange={(e) => setAccessKeyId(e.target.value)}\r\n              required\r\n              className=\"block w-full rounded-md border border-gray-400 bg-white text-gray-800 p-2 shadow-sm focus:border-indigo-600 focus:ring-indigo-600 sm:text-sm\"\r\n              placeholder=\"AKIAIOSFODNN7EXAMPLE\"\r\n            />\r\n          </div>\r\n          \r\n          <div>\r\n            <label htmlFor=\"secretKey\" className=\"block text-sm font-bold text-gray-800 mb-1\">\r\n              Secret Access Key\r\n            </label>\r\n            <input\r\n              id=\"secretKey\"\r\n              type=\"password\"\r\n              value={secretKey}\r\n              onChange={(e) => setSecretKey(e.target.value)}\r\n              required\r\n              className=\"block w-full rounded-md border border-gray-400 bg-white text-gray-800 p-2 shadow-sm focus:border-indigo-600 focus:ring-indigo-600 sm:text-sm\"\r\n              placeholder=\"wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\"\r\n            />\r\n          </div>\r\n          \r\n          <div>\r\n            <label htmlFor=\"region\" className=\"block text-sm font-bold text-gray-800 mb-1\">\r\n              Região\r\n            </label>\r\n            <select\r\n              id=\"region\"\r\n              value={region}\r\n              onChange={(e) => setRegion(e.target.value)}\r\n              required\r\n              className=\"block w-full rounded-md border border-gray-400 bg-white text-gray-800 p-2 shadow-sm focus:border-indigo-600 focus:ring-indigo-600 sm:text-sm\"\r\n            >\r\n              {AWS_REGIONS.map((option) => (\r\n                <option key={option.value} value={option.value} className=\"text-gray-800 bg-white\">\r\n                  {option.label}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          \r\n          <div className=\"pt-4\">\r\n            <button\r\n              type=\"submit\"\r\n              disabled={loading}\r\n              className=\"w-full flex justify-center py-3 px-4 border border-indigo-700 rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-70 disabled:bg-indigo-400 disabled:cursor-not-allowed\"\r\n            >\r\n              {loading ? \"Adicionando...\" : \"Adicionar Credencial\"}\r\n            </button>\r\n          </div>\r\n        </form>\r\n        \r\n        <div className=\"mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-md\">\r\n          <h3 className=\"text-sm font-medium text-yellow-800\">Dica de segurança</h3>\r\n          <p className=\"mt-1 text-sm text-yellow-700\">\r\n            Por segurança, recomendamos criar credenciais IAM específicas para esta aplicação\r\n            com permissões limitadas às funcionalidades necessárias (EC2, S3, CloudWatch, etc).\r\n          </p>\r\n        </div>\r\n      </motion.div>\r\n      \r\n      {/* Modal de confirmação de exclusão */}\r\n      {showDeleteModal && credentialToDelete && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white rounded-lg shadow-lg border border-gray-300 p-6 max-w-md w-full\">\r\n            <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\r\n              Confirmar exclusão\r\n            </h3>\r\n            <p className=\"text-sm text-gray-700 mb-4\">\r\n              Tem certeza que deseja excluir a credencial <span className=\"font-bold\">{credentialToDelete.name}</span>? \r\n              Esta ação não pode ser desfeita e todos os recursos associados perderão acesso.\r\n            </p>\r\n            <div className=\"flex justify-end space-x-3\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"px-4 py-2 text-sm font-medium text-gray-800 bg-white border border-gray-400 rounded-md hover:bg-gray-100\"\r\n                onClick={() => setShowDeleteModal(false)}\r\n              >\r\n                Cancelar\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"px-4 py-2 text-sm font-medium text-white bg-red-600 border border-red-700 rounded-md hover:bg-red-700\"\r\n                onClick={handleConfirmDelete}\r\n              >\r\n                Excluir\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 741, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/components/dashboard/AwsConnectionStatus.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { useAwsCredentials } from \"@/hooks/useAwsCredentials\";\r\n\r\nexport default function AwsConnectionStatus() {\r\n  const { selectedCredential } = useAwsCredentials();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [diagnosticData, setDiagnosticData] = useState<any>(null);\r\n  const [errorMessage, setErrorMessage] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchDiagnostics() {\r\n      if (!selectedCredential) {\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      setIsLoading(true);\r\n      setErrorMessage(null);\r\n\r\n      try {\r\n        const response = await fetch(\"/api/aws/debug\");\r\n        if (!response.ok) {\r\n          throw new Error(`Erro ao verificar status da conexão: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        setDiagnosticData(data);\r\n      } catch (error) {\r\n        console.error(\"Erro ao buscar diagnóstico:\", error);\r\n        setErrorMessage(error instanceof Error ? error.message : \"Erro desconhecido\");\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n\r\n    fetchDiagnostics();\r\n  }, [selectedCredential]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"bg-white rounded-lg shadow-md p-4 mt-4\">\r\n        <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Status da Conexão AWS</h3>\r\n        <div className=\"flex items-center justify-center py-4\">\r\n          <div className=\"animate-spin rounded-full h-6 w-6 border-t-2 border-b-2 border-indigo-500\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (errorMessage) {\r\n    return (\r\n      <div className=\"bg-white rounded-lg shadow-md p-4 mt-4\">\r\n        <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Status da Conexão AWS</h3>\r\n        <div className=\"bg-red-50 p-3 rounded-md text-red-700\">\r\n          <p>{errorMessage}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!diagnosticData) {\r\n    return (\r\n      <div className=\"bg-white rounded-lg shadow-md p-4 mt-4\">\r\n        <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Status da Conexão AWS</h3>\r\n        <p className=\"text-gray-500\">Selecione uma credencial para verificar o status.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Encontrar a credencial selecionada nos dados de diagnóstico\r\n  const credInfo = selectedCredential \r\n    ? diagnosticData.credentials.find((c: any) => c.id === selectedCredential.id)\r\n    : diagnosticData.credentials[0];\r\n\r\n  if (!credInfo) {\r\n    return (\r\n      <div className=\"bg-white rounded-lg shadow-md p-4 mt-4\">\r\n        <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Status da Conexão AWS</h3>\r\n        <p className=\"text-gray-500\">Informações de diagnóstico não disponíveis para esta credencial.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'success': return 'bg-green-100 text-green-800';\r\n      case 'error': return 'bg-red-100 text-red-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-md p-4 mt-4\">\r\n      <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Status da Conexão AWS</h3>\r\n      \r\n      <div className=\"mb-4\">\r\n        <p className=\"text-sm text-gray-600\">\r\n          Credencial: <span className=\"font-medium\">{credInfo.name}</span>\r\n        </p>\r\n        <p className=\"text-sm text-gray-600\">\r\n          Região: <span className=\"font-medium\">{credInfo.region}</span>\r\n        </p>\r\n      </div>\r\n      \r\n      <div className=\"space-y-2\">\r\n        <div className={`p-2 rounded-md ${getStatusColor(credInfo.tests.ec2.status)}`}>\r\n          <p className=\"text-sm font-medium\">EC2: {credInfo.tests.ec2.message}</p>\r\n          {credInfo.tests.ec2.code && (\r\n            <p className=\"text-xs\">{credInfo.tests.ec2.code}</p>\r\n          )}\r\n        </div>\r\n        \r\n        <div className={`p-2 rounded-md ${getStatusColor(credInfo.tests.s3.status)}`}>\r\n          <p className=\"text-sm font-medium\">S3: {credInfo.tests.s3.message}</p>\r\n          {credInfo.tests.s3.code && (\r\n            <p className=\"text-xs\">{credInfo.tests.s3.code}</p>\r\n          )}\r\n        </div>\r\n        \r\n        <div className={`p-2 rounded-md ${getStatusColor(credInfo.tests.guardduty.status)}`}>\r\n          <p className=\"text-sm font-medium\">GuardDuty: {credInfo.tests.guardduty.message}</p>\r\n          {credInfo.tests.guardduty.code && (\r\n            <p className=\"text-xs\">{credInfo.tests.guardduty.code}</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n      \r\n      {diagnosticData.recommendation && (\r\n        <div className=\"mt-4 p-3 bg-yellow-50 rounded-md\">\r\n          <p className=\"text-sm text-yellow-800\">{diagnosticData.recommendation}</p>\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"mt-4 text-xs text-gray-500\">\r\n        <p>SDK v{diagnosticData.system.aws_sdk_version} | {new Date(diagnosticData.system.timestamp).toLocaleString()}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1125, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/app/dashboard/credentials/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useAwsCredentials } from \"@/hooks/useAwsCredentials\";\r\nimport AwsCredentialForm from \"@/components/aws/AwsCredentialForm\";\r\nimport AwsConnectionStatus from \"@/components/dashboard/AwsConnectionStatus\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nexport default function CredentialsPage() {\r\n  const { credentials, loading, error } = useAwsCredentials();\r\n\r\n  return (\r\n    <div>\r\n      <motion.div\r\n        className=\"mb-6\"\r\n        initial={{ opacity: 0, y: -20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.3 }}\r\n      >\r\n        <h1 className=\"text-3xl font-bold text-gray-900\">Credenciais AWS</h1>\r\n        <p className=\"mt-2 text-gray-600\">\r\n          Gerencie suas credenciais AWS para monitorar seus recursos.\r\n        </p>\r\n      </motion.div>\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n        <div className=\"space-y-6\">\r\n          <motion.div \r\n            className=\"bg-white rounded-lg shadow-md p-6\"\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.3 }}\r\n          >\r\n            <h2 className=\"text-xl font-semibold text-gray-800 mb-6\">\r\n              Credenciais Cadastradas\r\n            </h2>\r\n            \r\n            {error && (\r\n              <div className=\"p-3 mb-4 text-sm text-red-700 bg-red-100 rounded-md\">\r\n                {error}\r\n              </div>\r\n            )}\r\n            \r\n            {loading ? (\r\n              <div className=\"flex justify-center py-8\">\r\n                <div className=\"animate-spin rounded-full h-6 w-6 border-t-2 border-b-2 border-indigo-500\"></div>\r\n              </div>\r\n            ) : credentials.length === 0 ? (\r\n              <div className=\"py-8 text-center text-gray-500\">\r\n                Você ainda não adicionou nenhuma credencial AWS.\r\n              </div>\r\n            ) : (\r\n              <div className=\"space-y-4\">\r\n                {credentials.map((credential) => (\r\n                  <div\r\n                    key={credential.id}\r\n                    className=\"border rounded-lg p-4 hover:bg-gray-50 transition-colors\"\r\n                  >\r\n                    <div className=\"flex justify-between items-center\">\r\n                      <div>\r\n                        <h3 className=\"font-medium text-gray-800\">{credential.name}</h3>\r\n                        <p className=\"text-sm text-gray-500\">Região: {credential.region}</p>\r\n                        <p className=\"text-xs text-gray-400\">\r\n                          Adicionada em: {new Date(credential.createdAt).toLocaleDateString()}\r\n                        </p>\r\n                      </div>\r\n                      \r\n                      <span className=\"inline-flex px-2 py-1 text-xs font-medium bg-green-100 text-green-800 rounded-md\">\r\n                        Ativa\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </motion.div>\r\n          \r\n          {credentials.length > 0 && (\r\n            <AwsConnectionStatus />\r\n          )}\r\n        </div>\r\n        \r\n        <AwsCredentialForm />\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;;;AALA;;;;;AAOe,SAAS;;IACtB,MAAM,EAAE,WAAW,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,oIAAA,CAAA,oBAAiB,AAAD;IAExD,qBACE,6LAAC;;0BACC,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;gBACT,WAAU;gBACV,SAAS;oBAAE,SAAS;oBAAG,GAAG,CAAC;gBAAG;gBAC9B,SAAS;oBAAE,SAAS;oBAAG,GAAG;gBAAE;gBAC5B,YAAY;oBAAE,UAAU;gBAAI;;kCAE5B,6LAAC;wBAAG,WAAU;kCAAmC;;;;;;kCACjD,6LAAC;wBAAE,WAAU;kCAAqB;;;;;;;;;;;;0BAKpC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;gCACT,WAAU;gCACV,SAAS;oCAAE,SAAS;oCAAG,GAAG;gCAAG;gCAC7B,SAAS;oCAAE,SAAS;oCAAG,GAAG;gCAAE;gCAC5B,YAAY;oCAAE,UAAU;gCAAI;;kDAE5B,6LAAC;wCAAG,WAAU;kDAA2C;;;;;;oCAIxD,uBACC,6LAAC;wCAAI,WAAU;kDACZ;;;;;;oCAIJ,wBACC,6LAAC;wCAAI,WAAU;kDACb,cAAA,6LAAC;4CAAI,WAAU;;;;;;;;;;+CAEf,YAAY,MAAM,KAAK,kBACzB,6LAAC;wCAAI,WAAU;kDAAiC;;;;;6DAIhD,6LAAC;wCAAI,WAAU;kDACZ,YAAY,GAAG,CAAC,CAAC,2BAChB,6LAAC;gDAEC,WAAU;0DAEV,cAAA,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;;8EACC,6LAAC;oEAAG,WAAU;8EAA6B,WAAW,IAAI;;;;;;8EAC1D,6LAAC;oEAAE,WAAU;;wEAAwB;wEAAS,WAAW,MAAM;;;;;;;8EAC/D,6LAAC;oEAAE,WAAU;;wEAAwB;wEACnB,IAAI,KAAK,WAAW,SAAS,EAAE,kBAAkB;;;;;;;;;;;;;sEAIrE,6LAAC;4DAAK,WAAU;sEAAmF;;;;;;;;;;;;+CAZhG,WAAW,EAAE;;;;;;;;;;;;;;;;4BAsB3B,YAAY,MAAM,GAAG,mBACpB,6LAAC,yJAAA,CAAA,UAAmB;;;;;;;;;;;kCAIxB,6LAAC,iJAAA,CAAA,UAAiB;;;;;;;;;;;;;;;;;AAI1B;GA9EwB;;QACkB,oIAAA,CAAA,oBAAiB;;;KADnC","debugId":null}}]
}