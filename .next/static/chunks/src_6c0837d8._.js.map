{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/hooks/useAwsCredentials.ts"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from 'react';\n\nexport interface AwsCredential {\n  id: string;\n  name: string;\n  accountId?: string;\n  accessKeyId: string;\n  secretAccessKey: string;\n  region: string;\n}\n\nexport interface UseAwsCredentialsResult {\n  credentials: AwsCredential[];\n  selectedCredential: AwsCredential | null;\n  selectCredential: (id: string) => void;\n  addCredential: (credential: Omit<AwsCredential, 'id'>) => Promise<void>;\n  updateCredential: (id: string, data: Partial<Omit<AwsCredential, 'id'>>) => Promise<void>;\n  deleteCredential: (id: string) => Promise<void>;\n  loading: boolean;\n  isLoading: boolean; // Alias for loading - needed for compatibility\n  error: string | null;\n  refresh: () => Promise<void>;\n}\n\nexport function useAwsCredentials(): UseAwsCredentialsResult {\n  const [credentials, setCredentials] = useState<AwsCredential[]>([]);\n  const [selectedCredentialId, setSelectedCredentialId] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Function to fetch credentials from the API\n  const fetchCredentials = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch('/api/aws/credentials');\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch credentials: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      setCredentials(data);\n      \n      // If we have credentials but none selected, select the first one\n      if (data.length > 0 && !selectedCredentialId) {\n        setSelectedCredentialId(data[0].id);\n        // Save to localStorage\n        localStorage.setItem('selectedAwsCredentialId', data[0].id);\n      }\n      \n      return data;\n    } catch (err) {\n      setError(`Error fetching credentials: ${err instanceof Error ? err.message : String(err)}`);\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to select a credential\n  const selectCredential = (id: string) => {\n    setSelectedCredentialId(id);\n    localStorage.setItem('selectedAwsCredentialId', id);\n  };\n\n  // Function to add a new credential\n  const addCredential = async (credential: Omit<AwsCredential, 'id'>) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch('/api/aws/credentials', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(credential),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to add credential: ${response.status}`);\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      setError(`Error adding credential: ${err instanceof Error ? err.message : String(err)}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to update an existing credential\n  const updateCredential = async (id: string, data: Partial<Omit<AwsCredential, 'id'>>) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch(`/api/aws/credentials/${id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to update credential: ${response.status}`);\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      setError(`Error updating credential: ${err instanceof Error ? err.message : String(err)}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to delete a credential\n  const deleteCredential = async (id: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch(`/api/aws/credentials/${id}`, {\n        method: 'DELETE',\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to delete credential: ${response.status}`);\n      }\n      \n      // If we delete the selected credential, select another one\n      if (id === selectedCredentialId) {\n        const remainingCredentials = credentials.filter(c => c.id !== id);\n        if (remainingCredentials.length > 0) {\n          selectCredential(remainingCredentials[0].id);\n        } else {\n          setSelectedCredentialId(null);\n          localStorage.removeItem('selectedAwsCredentialId');\n        }\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      setError(`Error deleting credential: ${err instanceof Error ? err.message : String(err)}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Load credentials on mount\n  useEffect(() => {\n    // Try to restore selected credential from localStorage\n    const savedCredentialId = localStorage.getItem('selectedAwsCredentialId');\n    if (savedCredentialId) {\n      setSelectedCredentialId(savedCredentialId);\n    }\n    \n    fetchCredentials();\n  }, []);\n\n  // Find the selected credential object\n  const selectedCredential = credentials.find(c => c.id === selectedCredentialId) || null;\n\n  return {\n    credentials,\n    selectedCredential,\n    selectCredential,\n    addCredential,\n    updateCredential,\n    deleteCredential,\n    loading,\n    isLoading: loading, // Alias for loading\n    error,\n    refresh: fetchCredentials,\n  };\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/components/aws/CredentialSelector.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useAwsCredentials } from \"@/hooks/useAwsCredentials\";\r\nimport { useRouter } from \"next/navigation\";\r\n\r\nexport default function CredentialSelector() {\r\n  const { credentials, selectedCredential, selectCredential, loading } = useAwsCredentials();\r\n  const router = useRouter();\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"bg-white rounded-lg shadow-sm p-4 mb-6 flex items-center space-x-2\">\r\n        <span className=\"text-gray-700\">Carregando credenciais...</span>\r\n        <div className=\"animate-spin rounded-full h-4 w-4 border-t-2 border-b-2 border-indigo-500\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (credentials.length === 0) {\r\n    return (\r\n      <div className=\"bg-white rounded-lg shadow-sm p-4 mb-6\">\r\n        <div className=\"flex justify-between items-center\">\r\n          <span className=\"text-gray-700\">Nenhuma credencial AWS encontrada</span>\r\n          <button\r\n            onClick={() => router.push(\"/dashboard/credentials\")}\r\n            className=\"px-3 py-1 text-sm text-white bg-indigo-600 rounded-md hover:bg-indigo-700\"\r\n          >\r\n            Adicionar Credencial\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-sm p-4 mb-6\">\r\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\r\n        <label htmlFor=\"credential-selector\" className=\"block text-sm font-medium text-gray-700 mb-2 sm:mb-0\">\r\n          Selecionar Credencial AWS:\r\n        </label>\r\n        <div className=\"flex-1 sm:ml-4 max-w-md\">\r\n          <select\r\n            id=\"credential-selector\"\r\n            value={selectedCredential?.id || \"\"}\r\n            onChange={(e) => selectCredential(e.target.value)}\r\n            className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\r\n          >\r\n            <option value=\"\" disabled>\r\n              Selecione uma credencial\r\n            </option>\r\n            {credentials.map((cred) => (\r\n              <option key={cred.id} value={cred.id}>\r\n                {cred.name} ({cred.region})\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKe,SAAS;;IACtB,MAAM,EAAE,WAAW,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,oIAAA,CAAA,oBAAiB,AAAD;IACvF,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,IAAI,SAAS;QACX,qBACE,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAK,WAAU;8BAAgB;;;;;;8BAChC,6LAAC;oBAAI,WAAU;;;;;;;;;;;;IAGrB;IAEA,IAAI,YAAY,MAAM,KAAK,GAAG;QAC5B,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAK,WAAU;kCAAgB;;;;;;kCAChC,6LAAC;wBACC,SAAS,IAAM,OAAO,IAAI,CAAC;wBAC3B,WAAU;kCACX;;;;;;;;;;;;;;;;;IAMT;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAM,SAAQ;oBAAsB,WAAU;8BAAuD;;;;;;8BAGtG,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBACC,IAAG;wBACH,OAAO,oBAAoB,MAAM;wBACjC,UAAU,CAAC,IAAM,iBAAiB,EAAE,MAAM,CAAC,KAAK;wBAChD,WAAU;;0CAEV,6LAAC;gCAAO,OAAM;gCAAG,QAAQ;0CAAC;;;;;;4BAGzB,YAAY,GAAG,CAAC,CAAC,qBAChB,6LAAC;oCAAqB,OAAO,KAAK,EAAE;;wCACjC,KAAK,IAAI;wCAAC;wCAAG,KAAK,MAAM;wCAAC;;mCADf,KAAK,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;AASlC;GAvDwB;;QACiD,oIAAA,CAAA,oBAAiB;QACzE,qIAAA,CAAA,YAAS;;;KAFF","debugId":null}},
    {"offset": {"line": 322, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/app/dashboard/security/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { useAwsCredentials } from \"@/hooks/useAwsCredentials\";\nimport { motion } from \"framer-motion\";\nimport CredentialSelector from \"@/components/aws/CredentialSelector\";\nimport { Bell, Shield } from \"lucide-react\";\nimport Link from \"next/link\";\n\ninterface SecurityCheck {\n  id: string;\n  title: string;\n  description: string;\n  status: \"passed\" | \"failed\" | \"warning\" | \"info\";\n  resourceType: string;\n  resourceId?: string;\n  impact: \"critical\" | \"high\" | \"medium\" | \"low\";\n  recommendation: string;\n}\n\nexport default function SecurityPage() {\n  const { selectedCredential } = useAwsCredentials();\n  const [securityChecks, setSecurityChecks] = useState<SecurityCheck[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [backgroundLoading, setBackgroundLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [scanning, setScanning] = useState(false);\n  const [scanProgress, setScanProgress] = useState(0);\n  const [filterStatus, setFilterStatus] = useState<string | null>(null);\n  const [filterImpact, setFilterImpact] = useState<string | null>(null);\n  const [lastCredentialId, setLastCredentialId] = useState<string | null>(null);\n\n  useEffect(() => {\n    // Tenta restaurar dados do cache ao iniciar\n    if (!selectedCredential) {\n      setLoading(false);\n      return;\n    }\n\n    try {\n      // Verificar se já temos dados no localStorage\n      const securityCache = localStorage.getItem('securityChecks');\n      const cachedCredentialId = localStorage.getItem('securityLastCredentialId');\n\n      if (securityCache && cachedCredentialId === selectedCredential.id) {\n        // Usar dados do cache\n        const parsedChecks = JSON.parse(securityCache);\n        setSecurityChecks(parsedChecks);\n        setLoading(false);\n        \n        // Atualizar em background após 5 minutos do último carregamento\n        const lastUpdateTime = localStorage.getItem('securityLastUpdateTime');\n        if (lastUpdateTime) {\n          const timeSinceLastUpdate = Date.now() - parseInt(lastUpdateTime);\n          const fiveMinutesInMs = 5 * 60 * 1000;\n          \n          if (timeSinceLastUpdate > fiveMinutesInMs) {\n            // Atualiza em background se passou mais de 5 minutos\n            fetchSecurityIssuesInBackground();\n          }\n        }\n      } else {\n        // Se não tem cache ou a credencial mudou, buscar novos dados\n        fetchSecurityIssues();\n      }\n      \n      setLastCredentialId(selectedCredential.id);\n    } catch (error) {\n      console.error(\"Erro ao restaurar cache:\", error);\n      fetchSecurityIssues();\n    }\n  }, [selectedCredential]);\n  \n  // Função para atualizar dados em background\n  const fetchSecurityIssuesInBackground = async () => {\n    if (!selectedCredential) return;\n    \n    try {\n      setBackgroundLoading(true);\n      \n      // Buscar problemas de segurança reais\n      const response = await fetch(`/api/aws/resources?credentialId=${selectedCredential.id}`);\n      \n      if (!response.ok) {\n        throw new Error(\"Erro na atualização em background\");\n      }\n      \n      const data = await response.json();\n      \n      // Processar os problemas de segurança\n      const issues = data.securityIssues || [];\n      \n      // Adicionar verificações simuladas para demonstração (manter consistência)\n      const demoChecks: SecurityCheck[] = [\n        {\n          id: \"sec-1\",\n          title: \"Acesso ao Root Account não protegido por MFA\",\n          description: \"A conta root AWS não tem autenticação multifator (MFA) habilitada\",\n          status: \"failed\",\n          resourceType: \"IAM\",\n          resourceId: \"root\",\n          impact: \"critical\",\n          recommendation: \"Ative a autenticação multifator (MFA) para a conta root da AWS\"\n        },\n        {\n          id: \"sec-2\",\n          title: \"Políticas IAM muito permissivas\",\n          description: \"Usuários com permissões administrativas ('*:*') completas\",\n          status: \"warning\",\n          resourceType: \"IAM\",\n          resourceId: \"policy/AdministratorAccess\",\n          impact: \"high\",\n          recommendation: \"Remova permissões excessivas e aplique o princípio de privilégio mínimo\"\n        },\n        {\n          id: \"sec-3\", \n          title: \"Rotação de chaves de acesso\",\n          description: \"Chaves de acesso não foram rotacionadas nos últimos 90 dias\",\n          status: \"warning\",\n          resourceType: \"IAM\",\n          resourceId: selectedCredential.id,\n          impact: \"medium\",\n          recommendation: \"Rotacione as chaves de acesso regularmente (a cada 90 dias)\"\n        }\n      ];\n      \n      // Mapear os problemas de segurança reais para o formato de verificação\n      const mappedIssues: SecurityCheck[] = issues.map((issue: any) => ({\n        id: `aws-${Math.random().toString(36).substring(7)}`,\n        title: issue.title,\n        description: issue.description,\n        status: issue.severity === \"CRITICAL\" || issue.severity === \"HIGH\" ? \"failed\" : \"warning\",\n        resourceType: issue.resourceType,\n        resourceId: issue.resourceId,\n        impact: issue.severity.toLowerCase(),\n        recommendation: issue.description.includes(\"público\") \n          ? \"Restrinja o acesso público e configure ACLs adequadas\" \n          : \"Revise as configurações de segurança deste recurso\"\n      }));\n      \n      // Combinar verificações demo com reais\n      const allChecks = [...demoChecks, ...mappedIssues];\n      \n      // Adicionar verificações passadas para demonstração\n      const passedChecks: SecurityCheck[] = [\n        {\n          id: \"sec-4\",\n          title: \"Registro de atividade CloudTrail\",\n          description: \"O CloudTrail está habilitado e configurado corretamente\",\n          status: \"passed\",\n          resourceType: \"CloudTrail\",\n          impact: \"high\",\n          recommendation: \"Continue monitorando os logs do CloudTrail regularmente\"\n        },\n        {\n          id: \"sec-5\",\n          title: \"Criptografia de volumes EBS\",\n          description: \"Os volumes EBS estão criptografados\",\n          status: \"passed\",\n          resourceType: \"EC2\",\n          impact: \"medium\",\n          recommendation: \"Mantenha a criptografia habilitada para todos os novos volumes\"\n        }\n      ];\n      \n      const finalChecks = [...allChecks, ...passedChecks];\n      setSecurityChecks(finalChecks);\n      \n      // Salvar no cache\n      localStorage.setItem('securityChecks', JSON.stringify(finalChecks));\n      localStorage.setItem('securityLastCredentialId', selectedCredential.id);\n      localStorage.setItem('securityLastUpdateTime', Date.now().toString());\n      \n      console.log(\"Atualização em background de verificações de segurança concluída\");\n    } catch (err) {\n      console.error(\"Erro na atualização em background:\", err);\n      // Não exibimos erros de background para o usuário\n    } finally {\n      setBackgroundLoading(false);\n    }\n  };\n\n  const fetchSecurityIssues = async () => {\n    if (!selectedCredential) {\n      setLoading(false);\n      return;\n    }\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      // Simular um scan progressivo para UX melhor\n      setScanning(true);\n      setScanProgress(0);\n      \n      const scanTimer = setInterval(() => {\n        setScanProgress(prev => {\n          if (prev >= 95) {\n            clearInterval(scanTimer);\n            return 95;\n          }\n          return prev + Math.floor(Math.random() * 5) + 1;\n        });\n      }, 300);\n      \n      // Buscar problemas de segurança reais\n      const response = await fetch(`/api/aws/resources?credentialId=${selectedCredential.id}`);\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || \"Erro ao buscar problemas de segurança\");\n      }\n      \n      const data = await response.json();\n      \n      // Processar os problemas de segurança\n      const issues = data.securityIssues || [];\n      \n      // Adicionar algumas verificações simuladas para demonstração\n      const demoChecks: SecurityCheck[] = [\n        {\n          id: \"sec-1\",\n          title: \"Acesso ao Root Account não protegido por MFA\",\n          description: \"A conta root AWS não tem autenticação multifator (MFA) habilitada\",\n          status: \"failed\",\n          resourceType: \"IAM\",\n          resourceId: \"root\",\n          impact: \"critical\",\n          recommendation: \"Ative a autenticação multifator (MFA) para a conta root da AWS\"\n        },\n        {\n          id: \"sec-2\",\n          title: \"Políticas IAM muito permissivas\",\n          description: \"Usuários com permissões administrativas ('*:*') completas\",\n          status: \"warning\",\n          resourceType: \"IAM\",\n          resourceId: \"policy/AdministratorAccess\",\n          impact: \"high\",\n          recommendation: \"Remova permissões excessivas e aplique o princípio de privilégio mínimo\"\n        },\n        {\n          id: \"sec-3\", \n          title: \"Rotação de chaves de acesso\",\n          description: \"Chaves de acesso não foram rotacionadas nos últimos 90 dias\",\n          status: \"warning\",\n          resourceType: \"IAM\",\n          resourceId: selectedCredential.id,\n          impact: \"medium\",\n          recommendation: \"Rotacione as chaves de acesso regularmente (a cada 90 dias)\"\n        }\n      ];\n      \n      // Mapear os problemas de segurança reais para o formato de verificação\n      const mappedIssues: SecurityCheck[] = issues.map((issue: any) => ({\n        id: `aws-${Math.random().toString(36).substring(7)}`,\n        title: issue.title,\n        description: issue.description,\n        status: issue.severity === \"CRITICAL\" || issue.severity === \"HIGH\" ? \"failed\" : \"warning\",\n        resourceType: issue.resourceType,\n        resourceId: issue.resourceId,\n        impact: issue.severity.toLowerCase(),\n        recommendation: issue.description.includes(\"público\") \n          ? \"Restrinja o acesso público e configure ACLs adequadas\" \n          : \"Revise as configurações de segurança deste recurso\"\n      }));\n      \n      // Combinar verificações demo com reais\n      const allChecks = [...demoChecks, ...mappedIssues];\n      \n      // Adicionar verificações passadas para demonstração\n      const passedChecks: SecurityCheck[] = [\n        {\n          id: \"sec-4\",\n          title: \"Registro de atividade CloudTrail\",\n          description: \"O CloudTrail está habilitado e configurado corretamente\",\n          status: \"passed\",\n          resourceType: \"CloudTrail\",\n          impact: \"high\",\n          recommendation: \"Continue monitorando os logs do CloudTrail regularmente\"\n        },\n        {\n          id: \"sec-5\",\n          title: \"Criptografia de volumes EBS\",\n          description: \"Os volumes EBS estão criptografados\",\n          status: \"passed\",\n          resourceType: \"EC2\",\n          impact: \"medium\",\n          recommendation: \"Mantenha a criptografia habilitada para todos os novos volumes\"\n        }\n      ];\n      \n      // Atrasar um pouco para simular o processamento\n      setTimeout(() => {\n        const finalChecks = [...allChecks, ...passedChecks];\n        setSecurityChecks(finalChecks);\n        setScanning(false);\n        setScanProgress(100);\n        setLoading(false);\n        \n        // Salvar no cache\n        localStorage.setItem('securityChecks', JSON.stringify(finalChecks));\n        localStorage.setItem('securityLastCredentialId', selectedCredential.id);\n        localStorage.setItem('securityLastUpdateTime', Date.now().toString());\n      }, 2000);\n      \n      clearInterval(scanTimer);\n    } catch (err) {\n      console.error(\"Erro ao buscar problemas de segurança:\", err);\n      setError(err instanceof Error ? err.message : \"Erro ao buscar problemas de segurança\");\n      setScanning(false);\n      setLoading(false);\n    }\n  };\n\n  const runNewScan = () => {\n    fetchSecurityIssues();\n  };\n\n  // Filtrar verificações\n  const filteredChecks = securityChecks.filter(check => {\n    if (filterStatus && check.status !== filterStatus) return false;\n    if (filterImpact && check.impact !== filterImpact) return false;\n    return true;\n  });\n\n  // Contadores para resumo\n  const criticalCount = securityChecks.filter(c => c.impact === \"critical\").length;\n  const highCount = securityChecks.filter(c => c.impact === \"high\").length;\n  const mediumCount = securityChecks.filter(c => c.impact === \"medium\").length;\n  const lowCount = securityChecks.filter(c => c.impact === \"low\").length;\n  const passedCount = securityChecks.filter(c => c.status === \"passed\").length;\n  const failedCount = securityChecks.filter(c => c.status === \"failed\").length;\n  const warningCount = securityChecks.filter(c => c.status === \"warning\").length;\n\n  // Helper para cores\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case \"passed\": return \"bg-green-100 text-green-800\";\n      case \"failed\": return \"bg-red-100 text-red-800\";\n      case \"warning\": return \"bg-yellow-100 text-yellow-800\";\n      case \"info\": return \"bg-blue-100 text-blue-800\";\n      default: return \"bg-gray-100 text-gray-800\";\n    }\n  };\n  \n  const getImpactColor = (impact: string) => {\n    switch (impact) {\n      case \"critical\": return \"bg-red-100 text-red-800\";\n      case \"high\": return \"bg-orange-100 text-orange-800\";\n      case \"medium\": return \"bg-yellow-100 text-yellow-800\";\n      case \"low\": return \"bg-blue-100 text-blue-800\";\n      default: return \"bg-gray-100 text-gray-800\";\n    }\n  };\n\n  return (\n    <div>\n      <motion.div\n        className=\"mb-6\"\n        initial={{ opacity: 0, y: -20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.3 }}\n      >\n        <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-900 flex items-center\">\n              <Bell className=\"mr-2 h-6 w-6 text-indigo-600\" />\n              Alertas de Segurança\n            </h1>\n            <p className=\"mt-2 text-gray-600\">\n              Monitore e gerencie alertas de segurança dos seus recursos AWS.\n            </p>\n          </div>\n          <div className=\"flex gap-2 self-end sm:self-auto\">\n            <Link href=\"/dashboard/security/unified\">\n              <button\n                className=\"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors flex items-center gap-1\"\n              >\n                <Shield className=\"h-4 w-4\" />\n                <span>Ver Segurança Unificada</span>\n              </button>\n            </Link>\n            \n            <button\n              onClick={runNewScan}\n              disabled={scanning}\n              className=\"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors flex items-center gap-1\"\n            >\n              {scanning ? (\n                <>\n                  <div className=\"animate-spin rounded-full h-4 w-4 mr-2\">\n                    <div className=\"w-full h-full border-2 border-t-2 border-b-2 border-white rounded-full\"></div>\n                  </div>\n                  <span>Escaneando...</span>\n                </>\n              ) : (\n                <span>Iniciar Nova Verificação</span>\n              )}\n            </button>\n            <button\n              className=\"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors flex items-center gap-1\"\n            >\n              <span>Exportar Relatório</span>\n            </button>\n          </div>\n        </div>\n      </motion.div>\n\n      <CredentialSelector />\n\n      {!selectedCredential ? (\n        <motion.div\n          className=\"bg-white rounded-lg shadow-md p-6 text-center\"\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.3 }}\n        >\n          <p className=\"text-gray-500 mb-4\">Selecione uma credencial AWS para começar a análise de segurança.</p>\n        </motion.div>\n      ) : (\n        <>\n          {/* Painel de controle e resumo */}\n          <motion.div\n            className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.3 }}\n          >\n            {/* Cartão de status */}\n            <div className=\"bg-white rounded-lg shadow-md p-4\">\n              <div className=\"flex justify-between items-center mb-3\">\n                <h3 className=\"text-lg font-medium text-gray-900\">Status</h3>\n                {backgroundLoading && (\n                  <div className=\"flex items-center text-xs text-gray-500\">\n                    <div className=\"animate-spin h-3 w-3 border-t-2 border-b-2 border-indigo-500 mr-1\"></div>\n                    Atualizando...\n                  </div>\n                )}\n              </div>\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-500\">Aprovados</span>\n                  <span className=\"text-sm font-medium text-green-600\">{passedCount}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-500\">Falhas</span>\n                  <span className=\"text-sm font-medium text-red-600\">{failedCount}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-500\">Avisos</span>\n                  <span className=\"text-sm font-medium text-yellow-600\">{warningCount}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-500\">Total</span>\n                  <span className=\"text-sm font-medium\">{securityChecks.length}</span>\n                </div>\n              </div>\n            </div>\n            \n            {/* Cartão de severidade */}\n            <div className=\"bg-white rounded-lg shadow-md p-4\">\n              <h3 className=\"text-lg font-medium text-gray-900 mb-3\">Severidade</h3>\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-500\">Crítica</span>\n                  <span className=\"text-sm font-medium text-red-600\">{criticalCount}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-500\">Alta</span>\n                  <span className=\"text-sm font-medium text-orange-600\">{highCount}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-500\">Média</span>\n                  <span className=\"text-sm font-medium text-yellow-600\">{mediumCount}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-500\">Baixa</span>\n                  <span className=\"text-sm font-medium text-blue-600\">{lowCount}</span>\n                </div>\n              </div>\n            </div>\n            \n            {/* Cartão de ações */}\n            <div className=\"bg-white rounded-lg shadow-md p-4\">\n              <h3 className=\"text-lg font-medium text-gray-900 mb-3\">Ações</h3>\n              <div className=\"space-y-3\">\n                <button\n                  onClick={runNewScan}\n                  disabled={scanning}\n                  className=\"w-full flex items-center justify-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\"\n                >\n                  {scanning ? (\n                    <>\n                      <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                        <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                        <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                      </svg>\n                      Escaneando... {scanProgress}%\n                    </>\n                  ) : (\n                    \"Iniciar Nova Verificação\"\n                  )}\n                </button>\n                <button\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                >\n                  Exportar Relatório\n                </button>\n              </div>\n            </div>\n          </motion.div>\n          \n          {/* Filtros e lista de verificações */}\n          <motion.div\n            className=\"bg-white rounded-lg shadow-md overflow-hidden\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.3, delay: 0.1 }}\n          >\n            {/* Filtros */}\n            <div className=\"border-b border-gray-200 bg-gray-50 p-4 flex flex-wrap gap-4\">\n              <div>\n                <label htmlFor=\"filter-status\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Status\n                </label>\n                <select\n                  id=\"filter-status\"\n                  value={filterStatus || \"\"}\n                  onChange={(e) => setFilterStatus(e.target.value || null)}\n                  className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n                >\n                  <option value=\"\">Todos</option>\n                  <option value=\"passed\">Aprovado</option>\n                  <option value=\"failed\">Falha</option>\n                  <option value=\"warning\">Aviso</option>\n                </select>\n              </div>\n              <div>\n                <label htmlFor=\"filter-impact\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Severidade\n                </label>\n                <select\n                  id=\"filter-impact\"\n                  value={filterImpact || \"\"}\n                  onChange={(e) => setFilterImpact(e.target.value || null)}\n                  className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n                >\n                  <option value=\"\">Todas</option>\n                  <option value=\"critical\">Crítica</option>\n                  <option value=\"high\">Alta</option>\n                  <option value=\"medium\">Média</option>\n                  <option value=\"low\">Baixa</option>\n                </select>\n              </div>\n            </div>\n            \n            {/* Lista de verificações */}\n            <div className=\"divide-y divide-gray-200\">\n              {loading ? (\n                <div className=\"p-6 text-center\">\n                  <div className=\"animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-indigo-500 mx-auto mb-4\"></div>\n                  <p className=\"text-gray-500\">Carregando verificações de segurança...</p>\n                </div>\n              ) : error ? (\n                <div className=\"p-6 text-center\">\n                  <div className=\"p-4 bg-red-50 rounded-md\">\n                    <p className=\"text-red-700\">{error}</p>\n                  </div>\n                </div>\n              ) : filteredChecks.length === 0 ? (\n                <div className=\"p-6 text-center\">\n                  <p className=\"text-gray-500\">Nenhuma verificação encontrada com os filtros atuais.</p>\n                </div>\n              ) : (\n                filteredChecks.map((check) => (\n                  <div key={check.id} className=\"p-4 hover:bg-gray-50\">\n                    <div className=\"flex items-start\">\n                      {/* Indicador de status */}\n                      <div className={`w-2 h-2 mt-2 rounded-full ${\n                        check.status === 'passed' ? 'bg-green-500' : \n                        check.status === 'failed' ? 'bg-red-500' : \n                        check.status === 'warning' ? 'bg-yellow-500' : 'bg-blue-500'\n                      } mr-4`}></div>\n                      \n                      {/* Conteúdo principal */}\n                      <div className=\"flex-1\">\n                        <div className=\"flex justify-between mb-2\">\n                          <h4 className=\"text-base font-medium text-gray-900\">{check.title}</h4>\n                          <div className=\"flex space-x-2\">\n                            <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusColor(check.status)}`}>\n                              {check.status === 'passed' ? 'Aprovado' : \n                               check.status === 'failed' ? 'Falha' : \n                               check.status === 'warning' ? 'Aviso' : 'Info'}\n                            </span>\n                            <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${getImpactColor(check.impact)}`}>\n                              {check.impact === 'critical' ? 'Crítica' : \n                               check.impact === 'high' ? 'Alta' : \n                               check.impact === 'medium' ? 'Média' : 'Baixa'}\n                            </span>\n                          </div>\n                        </div>\n                        \n                        <p className=\"text-sm text-gray-500 mb-2\">{check.description}</p>\n                        \n                        <div className=\"mb-2\">\n                          <span className=\"text-xs font-medium text-gray-500\">Recurso: </span>\n                          <span className=\"text-xs text-gray-700\">{check.resourceType}{check.resourceId ? ` (${check.resourceId})` : ''}</span>\n                        </div>\n                        \n                        {check.status !== 'passed' && (\n                          <div className=\"mt-3 p-3 bg-blue-50 rounded-md\">\n                            <h5 className=\"text-xs font-medium text-blue-800 mb-1\">Recomendação:</h5>\n                            <p className=\"text-sm text-blue-700\">{check.recommendation}</p>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                ))\n              )}\n            </div>\n          </motion.div>\n        </>\n      )}\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}}]
}