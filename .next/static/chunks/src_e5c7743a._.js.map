{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/hooks/useAwsCredentials.ts"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from 'react';\n\nexport interface AwsCredential {\n  id: string;\n  name: string;\n  accountId?: string;\n  accessKeyId: string;\n  secretAccessKey: string;\n  region: string;\n}\n\nexport interface UseAwsCredentialsResult {\n  credentials: AwsCredential[];\n  selectedCredential: AwsCredential | null;\n  selectCredential: (id: string) => void;\n  addCredential: (credential: Omit<AwsCredential, 'id'>) => Promise<void>;\n  updateCredential: (id: string, data: Partial<Omit<AwsCredential, 'id'>>) => Promise<void>;\n  deleteCredential: (id: string) => Promise<void>;\n  loading: boolean;\n  isLoading: boolean; // Alias for loading - needed for compatibility\n  error: string | null;\n  refresh: () => Promise<void>;\n}\n\nexport function useAwsCredentials(): UseAwsCredentialsResult {\n  const [credentials, setCredentials] = useState<AwsCredential[]>([]);\n  const [selectedCredentialId, setSelectedCredentialId] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Function to fetch credentials from the API\n  const fetchCredentials = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch('/api/aws/credentials');\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch credentials: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      setCredentials(data);\n      \n      // If we have credentials but none selected, select the first one\n      if (data.length > 0 && !selectedCredentialId) {\n        setSelectedCredentialId(data[0].id);\n        // Save to localStorage\n        localStorage.setItem('selectedAwsCredentialId', data[0].id);\n      }\n      \n      return data;\n    } catch (err) {\n      setError(`Error fetching credentials: ${err instanceof Error ? err.message : String(err)}`);\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to select a credential\n  const selectCredential = (id: string) => {\n    setSelectedCredentialId(id);\n    localStorage.setItem('selectedAwsCredentialId', id);\n  };\n\n  // Function to add a new credential\n  const addCredential = async (credential: Omit<AwsCredential, 'id'>) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch('/api/aws/credentials', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(credential),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to add credential: ${response.status}`);\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      setError(`Error adding credential: ${err instanceof Error ? err.message : String(err)}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to update an existing credential\n  const updateCredential = async (id: string, data: Partial<Omit<AwsCredential, 'id'>>) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch(`/api/aws/credentials/${id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to update credential: ${response.status}`);\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      setError(`Error updating credential: ${err instanceof Error ? err.message : String(err)}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to delete a credential\n  const deleteCredential = async (id: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch(`/api/aws/credentials/${id}`, {\n        method: 'DELETE',\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to delete credential: ${response.status}`);\n      }\n      \n      // If we delete the selected credential, select another one\n      if (id === selectedCredentialId) {\n        const remainingCredentials = credentials.filter(c => c.id !== id);\n        if (remainingCredentials.length > 0) {\n          selectCredential(remainingCredentials[0].id);\n        } else {\n          setSelectedCredentialId(null);\n          localStorage.removeItem('selectedAwsCredentialId');\n        }\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      setError(`Error deleting credential: ${err instanceof Error ? err.message : String(err)}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Load credentials on mount\n  useEffect(() => {\n    // Try to restore selected credential from localStorage\n    const savedCredentialId = localStorage.getItem('selectedAwsCredentialId');\n    if (savedCredentialId) {\n      setSelectedCredentialId(savedCredentialId);\n    }\n    \n    fetchCredentials();\n  }, []);\n\n  // Find the selected credential object\n  const selectedCredential = credentials.find(c => c.id === selectedCredentialId) || null;\n\n  return {\n    credentials,\n    selectedCredential,\n    selectCredential,\n    addCredential,\n    updateCredential,\n    deleteCredential,\n    loading,\n    isLoading: loading, // Alias for loading\n    error,\n    refresh: fetchCredentials,\n  };\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/hooks/useAlerts.ts"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useCallback, useEffect } from \"react\";\r\nimport { useAwsCredentials } from \"./useAwsCredentials\";\r\n\r\ninterface Alert {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  resourceId: string;\r\n  resourceType: string;\r\n  severity: string;\r\n  status: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  credentialId?: string;\r\n  credential?: {\r\n    name: string;\r\n  };\r\n}\r\n\r\ninterface AlertFilters {\r\n  status?: string;\r\n  severity?: string;\r\n  resourceType?: string;\r\n  credentialId?: string;\r\n}\r\n\r\ninterface UseAlertsResult {\r\n  alerts: Alert[];\r\n  loading: boolean;\r\n  error: string | null;\r\n  filters: AlertFilters;\r\n  setFilters: (filters: AlertFilters) => void;\r\n  fetchAlerts: () => Promise<void>;\r\n  dismissAlert: (id: string) => Promise<boolean>;\r\n  resolveAlert: (id: string) => Promise<boolean>;\r\n}\r\n\r\nexport function useAlerts(): UseAlertsResult {\r\n  const { selectedCredential } = useAwsCredentials();\r\n  const [alerts, setAlerts] = useState<Alert[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [filters, setFilters] = useState<AlertFilters>({});\r\n\r\n  const fetchAlerts = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      let url = \"/api/alerts\";\r\n      const params = new URLSearchParams();\r\n      \r\n      if (filters.status) {\r\n        params.append(\"status\", filters.status);\r\n      }\r\n      if (filters.severity) {\r\n        params.append(\"severity\", filters.severity);\r\n      }\r\n      if (filters.resourceType) {\r\n        params.append(\"resourceType\", filters.resourceType);\r\n      }\r\n      // Use the selected credential or a specific credentialId from filters\r\n      const credentialId = filters.credentialId || selectedCredential?.id;\r\n      if (credentialId) {\r\n        params.append(\"credentialId\", credentialId);\r\n      }\r\n      \r\n      if (params.toString()) {\r\n        url += `?${params.toString()}`;\r\n      }\r\n      \r\n      console.log('Buscando alertas em:', url);\r\n      const response = await fetch(url);\r\n      \r\n      if (!response.ok) {\r\n        const { error } = await response.json();\r\n        throw new Error(error || \"Erro ao buscar alertas\");\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log('Alertas recebidos:', data.alerts?.length || 0);\r\n      setAlerts(data.alerts || []);\r\n    } catch (err) {\r\n      console.error('Erro ao buscar alertas:', err);\r\n      setError(err instanceof Error ? err.message : \"Erro ao buscar alertas\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [filters, selectedCredential]);\r\n\r\n  const updateAlertStatus = useCallback(async (id: string, action: \"dismiss\" | \"resolve\") => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await fetch(\"/api/alerts\", {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          id,\r\n          action,\r\n        }),\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const { error } = await response.json();\r\n        throw new Error(error || `Erro ao ${action === \"dismiss\" ? \"arquivar\" : \"resolver\"} alerta`);\r\n      }\r\n      \r\n      // Atualizar lista de alertas\r\n      await fetchAlerts();\r\n      return true;\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : `Erro ao ${action === \"dismiss\" ? \"arquivar\" : \"resolver\"} alerta`);\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [fetchAlerts]);\r\n\r\n  const dismissAlert = useCallback((id: string) => {\r\n    return updateAlertStatus(id, \"dismiss\");\r\n  }, [updateAlertStatus]);\r\n\r\n  const resolveAlert = useCallback((id: string) => {\r\n    return updateAlertStatus(id, \"resolve\");\r\n  }, [updateAlertStatus]);\r\n\r\n  // Buscar alertas ao montar o componente ou quando os filtros ou a credencial selecionada mudarem\r\n  useEffect(() => {\r\n    fetchAlerts();\r\n  }, [fetchAlerts, selectedCredential]);\r\n\r\n  return {\r\n    alerts,\r\n    loading,\r\n    error,\r\n    filters,\r\n    setFilters,\r\n    fetchAlerts,\r\n    dismissAlert,\r\n    resolveAlert,\r\n  };\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 301, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/components/dashboard/AlertsCard.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport Link from \"next/link\";\r\nimport { useAlerts } from \"@/hooks/useAlerts\";\r\nimport { useEffect } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nexport default function AlertsCard() {\r\n  const { alerts, loading, error, fetchAlerts } = useAlerts();\r\n  \r\n  useEffect(() => {\r\n    fetchAlerts();\r\n  }, [fetchAlerts]);\r\n  \r\n  // Filtrar apenas alertas ativos\r\n  const activeAlerts = alerts.filter(alert => alert.status === 'active');\r\n  \r\n  // Agrupar alertas por severidade\r\n  const criticalAlerts = activeAlerts.filter(alert => alert.severity === 'CRITICAL');\r\n  const highAlerts = activeAlerts.filter(alert => alert.severity === 'HIGH');\r\n  const mediumAlerts = activeAlerts.filter(alert => alert.severity === 'MEDIUM');\r\n  const lowAlerts = activeAlerts.filter(alert => alert.severity === 'LOW');\r\n  \r\n  const getColorBySeverity = (severity: string) => {\r\n    switch (severity) {\r\n      case 'CRITICAL':\r\n        return 'bg-red-500';\r\n      case 'HIGH':\r\n        return 'bg-orange-500';\r\n      case 'MEDIUM':\r\n        return 'bg-yellow-500';\r\n      case 'LOW':\r\n        return 'bg-blue-500';\r\n      default:\r\n        return 'bg-gray-500';\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <motion.div \r\n      className=\"bg-white rounded-lg shadow-md p-6\"\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: 0.3 }}\r\n    >\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h2 className=\"text-xl font-semibold text-gray-800\">Alertas de Segurança</h2>\r\n        <Link\r\n          href=\"/dashboard/security\"\r\n          className=\"text-sm text-indigo-600 hover:text-indigo-800\"\r\n        >\r\n          Ver todos\r\n        </Link>\r\n      </div>\r\n      \r\n      {loading ? (\r\n        <div className=\"flex justify-center py-8\">\r\n          <div className=\"animate-spin rounded-full h-6 w-6 border-t-2 border-b-2 border-indigo-500\"></div>\r\n        </div>\r\n      ) : error ? (\r\n        <div className=\"py-8 text-center text-red-500\">{error}</div>\r\n      ) : activeAlerts.length === 0 ? (\r\n        <div className=\"py-8 text-center text-gray-500\">\r\n          Nenhum alerta de segurança ativo.\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <div className=\"grid grid-cols-4 gap-4 mb-6\">\r\n            <div className=\"bg-red-100 p-3 rounded-lg text-center\">\r\n              <div className=\"text-2xl font-bold text-red-700\">{criticalAlerts.length}</div>\r\n              <div className=\"text-xs text-red-600\">Críticos</div>\r\n            </div>\r\n            <div className=\"bg-orange-100 p-3 rounded-lg text-center\">\r\n              <div className=\"text-2xl font-bold text-orange-700\">{highAlerts.length}</div>\r\n              <div className=\"text-xs text-orange-600\">Altos</div>\r\n            </div>\r\n            <div className=\"bg-yellow-100 p-3 rounded-lg text-center\">\r\n              <div className=\"text-2xl font-bold text-yellow-700\">{mediumAlerts.length}</div>\r\n              <div className=\"text-xs text-yellow-600\">Médios</div>\r\n            </div>\r\n            <div className=\"bg-blue-100 p-3 rounded-lg text-center\">\r\n              <div className=\"text-2xl font-bold text-blue-700\">{lowAlerts.length}</div>\r\n              <div className=\"text-xs text-blue-600\">Baixos</div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"space-y-3\">\r\n            {activeAlerts.slice(0, 5).map((alert) => (\r\n              <div\r\n                key={alert.id}\r\n                className=\"flex items-center p-3 border rounded-lg hover:bg-gray-50 transition-colors\"\r\n              >\r\n                <div className={`w-3 h-3 rounded-full ${getColorBySeverity(alert.severity)} mr-3`}></div>\r\n                <div className=\"flex-1\">\r\n                  <h3 className=\"text-sm font-medium text-gray-800\">{alert.title}</h3>\r\n                  <p className=\"text-xs text-gray-500 truncate\">\r\n                    {alert.resourceType}: {alert.resourceId}\r\n                  </p>\r\n                </div>\r\n                <div className=\"text-xs text-gray-500\">\r\n                  {new Date(alert.createdAt).toLocaleDateString()}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </motion.div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}}]
}