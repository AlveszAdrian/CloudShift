{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/hooks/useAwsCredentials.ts"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useCallback, useEffect } from \"react\";\r\n\r\ninterface AwsCredential {\r\n  id: string;\r\n  name: string;\r\n  region: string;\r\n  createdAt: string;\r\n}\r\n\r\ninterface UseAwsCredentialsResult {\r\n  credentials: AwsCredential[];\r\n  selectedCredential: AwsCredential | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n  fetchCredentials: () => Promise<void>;\r\n  selectCredential: (id: string) => void;\r\n  addCredential: (\r\n    name: string,\r\n    accessKeyId: string,\r\n    secretKey: string,\r\n    region: string\r\n  ) => Promise<boolean>;\r\n}\r\n\r\nexport function useAwsCredentials(): UseAwsCredentialsResult {\r\n  const [credentials, setCredentials] = useState<AwsCredential[]>([]);\r\n  const [selectedCredential, setSelectedCredential] = useState<AwsCredential | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const fetchCredentials = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await fetch(\"/api/aws/credentials\");\r\n      \r\n      if (!response.ok) {\r\n        const { error } = await response.json();\r\n        throw new Error(error || \"Erro ao buscar credenciais\");\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setCredentials(data);\r\n      \r\n      // Auto-selecionar a primeira credencial, se disponível\r\n      if (data.length > 0 && !selectedCredential) {\r\n        setSelectedCredential(data[0]);\r\n      }\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : \"Erro ao buscar credenciais\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [selectedCredential]);\r\n\r\n  const selectCredential = useCallback((id: string) => {\r\n    const credential = credentials.find(cred => cred.id === id);\r\n    if (credential) {\r\n      setSelectedCredential(credential);\r\n    }\r\n  }, [credentials]);\r\n\r\n  const addCredential = useCallback(async (\r\n    name: string,\r\n    accessKeyId: string,\r\n    secretKey: string,\r\n    region: string\r\n  ) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await fetch(\"/api/aws/credentials\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          name,\r\n          accessKeyId,\r\n          secretKey,\r\n          region,\r\n        }),\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const { error } = await response.json();\r\n        throw new Error(error || \"Erro ao adicionar credencial\");\r\n      }\r\n      \r\n      // Atualizar lista de credenciais\r\n      await fetchCredentials();\r\n      return true;\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : \"Erro ao adicionar credencial\");\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [fetchCredentials]);\r\n\r\n  // Buscar credenciais ao montar o componente\r\n  useEffect(() => {\r\n    fetchCredentials();\r\n  }, [fetchCredentials]);\r\n\r\n  return {\r\n    credentials,\r\n    selectedCredential,\r\n    loading,\r\n    error,\r\n    fetchCredentials,\r\n    selectCredential,\r\n    addCredential,\r\n  };\r\n} "],"names":[],"mappings":";;;AAEA;;AAFA;;AA0BO,SAAS;;IACd,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAmB,EAAE;IAClE,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAwB;IACnF,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAChD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,MAAM,mBAAmB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;2DAAE;YACnC,IAAI;gBACF,WAAW;gBACX,SAAS;gBAET,MAAM,WAAW,MAAM,MAAM;gBAE7B,IAAI,CAAC,SAAS,EAAE,EAAE;oBAChB,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI;oBACrC,MAAM,IAAI,MAAM,SAAS;gBAC3B;gBAEA,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,eAAe;gBAEf,uDAAuD;gBACvD,IAAI,KAAK,MAAM,GAAG,KAAK,CAAC,oBAAoB;oBAC1C,sBAAsB,IAAI,CAAC,EAAE;gBAC/B;YACF,EAAE,OAAO,KAAK;gBACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;YAChD,SAAU;gBACR,WAAW;YACb;QACF;0DAAG;QAAC;KAAmB;IAEvB,MAAM,mBAAmB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;2DAAE,CAAC;YACpC,MAAM,aAAa,YAAY,IAAI;8EAAC,CAAA,OAAQ,KAAK,EAAE,KAAK;;YACxD,IAAI,YAAY;gBACd,sBAAsB;YACxB;QACF;0DAAG;QAAC;KAAY;IAEhB,MAAM,gBAAgB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;wDAAE,OAChC,MACA,aACA,WACA;YAEA,IAAI;gBACF,WAAW;gBACX,SAAS;gBAET,MAAM,WAAW,MAAM,MAAM,wBAAwB;oBACnD,QAAQ;oBACR,SAAS;wBACP,gBAAgB;oBAClB;oBACA,MAAM,KAAK,SAAS,CAAC;wBACnB;wBACA;wBACA;wBACA;oBACF;gBACF;gBAEA,IAAI,CAAC,SAAS,EAAE,EAAE;oBAChB,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI;oBACrC,MAAM,IAAI,MAAM,SAAS;gBAC3B;gBAEA,iCAAiC;gBACjC,MAAM;gBACN,OAAO;YACT,EAAE,OAAO,KAAK;gBACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;gBAC9C,OAAO;YACT,SAAU;gBACR,WAAW;YACb;QACF;uDAAG;QAAC;KAAiB;IAErB,4CAA4C;IAC5C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;uCAAE;YACR;QACF;sCAAG;QAAC;KAAiB;IAErB,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;IACF;AACF;GA5FgB","debugId":null}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/components/aws/AwsCredentialForm.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, FormEvent } from \"react\";\r\nimport { useAwsCredentials } from \"@/hooks/useAwsCredentials\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst AWS_REGIONS = [\r\n  { value: \"us-east-1\", label: \"US East (N. Virginia)\" },\r\n  { value: \"us-east-2\", label: \"US East (Ohio)\" },\r\n  { value: \"us-west-1\", label: \"US West (N. California)\" },\r\n  { value: \"us-west-2\", label: \"US West (Oregon)\" },\r\n  { value: \"af-south-1\", label: \"Africa (Cape Town)\" },\r\n  { value: \"ap-east-1\", label: \"Asia Pacific (Hong Kong)\" },\r\n  { value: \"ap-south-1\", label: \"Asia Pacific (Mumbai)\" },\r\n  { value: \"ap-northeast-1\", label: \"Asia Pacific (Tokyo)\" },\r\n  { value: \"ap-northeast-2\", label: \"Asia Pacific (Seoul)\" },\r\n  { value: \"ap-northeast-3\", label: \"Asia Pacific (Osaka)\" },\r\n  { value: \"ap-southeast-1\", label: \"Asia Pacific (Singapore)\" },\r\n  { value: \"ap-southeast-2\", label: \"Asia Pacific (Sydney)\" },\r\n  { value: \"ca-central-1\", label: \"Canada (Central)\" },\r\n  { value: \"eu-central-1\", label: \"Europe (Frankfurt)\" },\r\n  { value: \"eu-west-1\", label: \"Europe (Ireland)\" },\r\n  { value: \"eu-west-2\", label: \"Europe (London)\" },\r\n  { value: \"eu-west-3\", label: \"Europe (Paris)\" },\r\n  { value: \"eu-north-1\", label: \"Europe (Stockholm)\" },\r\n  { value: \"eu-south-1\", label: \"Europe (Milan)\" },\r\n  { value: \"me-south-1\", label: \"Middle East (Bahrain)\" },\r\n  { value: \"sa-east-1\", label: \"South America (São Paulo)\" },\r\n];\r\n\r\nexport default function AwsCredentialForm() {\r\n  const { addCredential, loading, error } = useAwsCredentials();\r\n  const [name, setName] = useState(\"\");\r\n  const [accessKeyId, setAccessKeyId] = useState(\"\");\r\n  const [secretKey, setSecretKey] = useState(\"\");\r\n  const [region, setRegion] = useState(\"us-east-1\");\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const handleSubmit = async (e: FormEvent) => {\r\n    e.preventDefault();\r\n    setSuccess(false);\r\n    \r\n    const result = await addCredential(name, accessKeyId, secretKey, region);\r\n    \r\n    if (result) {\r\n      setSuccess(true);\r\n      // Limpar o formulário\r\n      setName(\"\");\r\n      setAccessKeyId(\"\");\r\n      setSecretKey(\"\");\r\n      setRegion(\"us-east-1\");\r\n      \r\n      // Limpar a mensagem de sucesso após 3 segundos\r\n      setTimeout(() => {\r\n        setSuccess(false);\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <motion.div \r\n      className=\"bg-white rounded-lg shadow-md p-6\"\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: 0.3 }}\r\n    >\r\n      <h2 className=\"text-xl font-semibold text-gray-800 mb-6\">\r\n        Adicionar Credencial AWS\r\n      </h2>\r\n      \r\n      {error && (\r\n        <div className=\"p-3 mb-4 text-sm text-red-700 bg-red-100 rounded-md\">\r\n          {error}\r\n        </div>\r\n      )}\r\n      \r\n      {success && (\r\n        <div className=\"p-3 mb-4 text-sm text-green-700 bg-green-100 rounded-md\">\r\n          Credencial adicionada com sucesso!\r\n        </div>\r\n      )}\r\n      \r\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n        <div>\r\n          <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n            Nome da Credencial\r\n          </label>\r\n          <input\r\n            id=\"name\"\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            required\r\n            className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\r\n            placeholder=\"Minha Conta AWS\"\r\n          />\r\n        </div>\r\n        \r\n        <div>\r\n          <label htmlFor=\"accessKeyId\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n            Access Key ID\r\n          </label>\r\n          <input\r\n            id=\"accessKeyId\"\r\n            type=\"text\"\r\n            value={accessKeyId}\r\n            onChange={(e) => setAccessKeyId(e.target.value)}\r\n            required\r\n            className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\r\n            placeholder=\"AKIAIOSFODNN7EXAMPLE\"\r\n          />\r\n        </div>\r\n        \r\n        <div>\r\n          <label htmlFor=\"secretKey\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n            Secret Access Key\r\n          </label>\r\n          <input\r\n            id=\"secretKey\"\r\n            type=\"password\"\r\n            value={secretKey}\r\n            onChange={(e) => setSecretKey(e.target.value)}\r\n            required\r\n            className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\r\n            placeholder=\"wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\"\r\n          />\r\n        </div>\r\n        \r\n        <div>\r\n          <label htmlFor=\"region\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n            Região\r\n          </label>\r\n          <select\r\n            id=\"region\"\r\n            value={region}\r\n            onChange={(e) => setRegion(e.target.value)}\r\n            required\r\n            className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\r\n          >\r\n            {AWS_REGIONS.map((option) => (\r\n              <option key={option.value} value={option.value}>\r\n                {option.label}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        \r\n        <div className=\"pt-4\">\r\n          <button\r\n            type=\"submit\"\r\n            disabled={loading}\r\n            className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n          >\r\n            {loading ? \"Adicionando...\" : \"Adicionar Credencial\"}\r\n          </button>\r\n        </div>\r\n      </form>\r\n      \r\n      <div className=\"mt-6 p-4 bg-yellow-50 rounded-md\">\r\n        <h3 className=\"text-sm font-medium text-yellow-800\">Dica de segurança</h3>\r\n        <p className=\"mt-1 text-sm text-yellow-700\">\r\n          Por segurança, recomendamos criar credenciais IAM específicas para esta aplicação\r\n          com permissões limitadas às funcionalidades necessárias (EC2, S3, CloudWatch, etc).\r\n        </p>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAMA,MAAM,cAAc;IAClB;QAAE,OAAO;QAAa,OAAO;IAAwB;IACrD;QAAE,OAAO;QAAa,OAAO;IAAiB;IAC9C;QAAE,OAAO;QAAa,OAAO;IAA0B;IACvD;QAAE,OAAO;QAAa,OAAO;IAAmB;IAChD;QAAE,OAAO;QAAc,OAAO;IAAqB;IACnD;QAAE,OAAO;QAAa,OAAO;IAA2B;IACxD;QAAE,OAAO;QAAc,OAAO;IAAwB;IACtD;QAAE,OAAO;QAAkB,OAAO;IAAuB;IACzD;QAAE,OAAO;QAAkB,OAAO;IAAuB;IACzD;QAAE,OAAO;QAAkB,OAAO;IAAuB;IACzD;QAAE,OAAO;QAAkB,OAAO;IAA2B;IAC7D;QAAE,OAAO;QAAkB,OAAO;IAAwB;IAC1D;QAAE,OAAO;QAAgB,OAAO;IAAmB;IACnD;QAAE,OAAO;QAAgB,OAAO;IAAqB;IACrD;QAAE,OAAO;QAAa,OAAO;IAAmB;IAChD;QAAE,OAAO;QAAa,OAAO;IAAkB;IAC/C;QAAE,OAAO;QAAa,OAAO;IAAiB;IAC9C;QAAE,OAAO;QAAc,OAAO;IAAqB;IACnD;QAAE,OAAO;QAAc,OAAO;IAAiB;IAC/C;QAAE,OAAO;QAAc,OAAO;IAAwB;IACtD;QAAE,OAAO;QAAa,OAAO;IAA4B;CAC1D;AAEc,SAAS;;IACtB,MAAM,EAAE,aAAa,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,oIAAA,CAAA,oBAAiB,AAAD;IAC1D,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,WAAW;QAEX,MAAM,SAAS,MAAM,cAAc,MAAM,aAAa,WAAW;QAEjE,IAAI,QAAQ;YACV,WAAW;YACX,sBAAsB;YACtB,QAAQ;YACR,eAAe;YACf,aAAa;YACb,UAAU;YAEV,+CAA+C;YAC/C,WAAW;gBACT,WAAW;YACb,GAAG;QACL;IACF;IAEA,qBACE,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;QACT,WAAU;QACV,SAAS;YAAE,SAAS;YAAG,GAAG;QAAG;QAC7B,SAAS;YAAE,SAAS;YAAG,GAAG;QAAE;QAC5B,YAAY;YAAE,UAAU;QAAI;;0BAE5B,6LAAC;gBAAG,WAAU;0BAA2C;;;;;;YAIxD,uBACC,6LAAC;gBAAI,WAAU;0BACZ;;;;;;YAIJ,yBACC,6LAAC;gBAAI,WAAU;0BAA0D;;;;;;0BAK3E,6LAAC;gBAAK,UAAU;gBAAc,WAAU;;kCACtC,6LAAC;;0CACC,6LAAC;gCAAM,SAAQ;gCAAO,WAAU;0CAA+C;;;;;;0CAG/E,6LAAC;gCACC,IAAG;gCACH,MAAK;gCACL,OAAO;gCACP,UAAU,CAAC,IAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;gCACvC,QAAQ;gCACR,WAAU;gCACV,aAAY;;;;;;;;;;;;kCAIhB,6LAAC;;0CACC,6LAAC;gCAAM,SAAQ;gCAAc,WAAU;0CAA+C;;;;;;0CAGtF,6LAAC;gCACC,IAAG;gCACH,MAAK;gCACL,OAAO;gCACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;gCAC9C,QAAQ;gCACR,WAAU;gCACV,aAAY;;;;;;;;;;;;kCAIhB,6LAAC;;0CACC,6LAAC;gCAAM,SAAQ;gCAAY,WAAU;0CAA+C;;;;;;0CAGpF,6LAAC;gCACC,IAAG;gCACH,MAAK;gCACL,OAAO;gCACP,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;gCAC5C,QAAQ;gCACR,WAAU;gCACV,aAAY;;;;;;;;;;;;kCAIhB,6LAAC;;0CACC,6LAAC;gCAAM,SAAQ;gCAAS,WAAU;0CAA+C;;;;;;0CAGjF,6LAAC;gCACC,IAAG;gCACH,OAAO;gCACP,UAAU,CAAC,IAAM,UAAU,EAAE,MAAM,CAAC,KAAK;gCACzC,QAAQ;gCACR,WAAU;0CAET,YAAY,GAAG,CAAC,CAAC,uBAChB,6LAAC;wCAA0B,OAAO,OAAO,KAAK;kDAC3C,OAAO,KAAK;uCADF,OAAO,KAAK;;;;;;;;;;;;;;;;kCAO/B,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BACC,MAAK;4BACL,UAAU;4BACV,WAAU;sCAET,UAAU,mBAAmB;;;;;;;;;;;;;;;;;0BAKpC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAsC;;;;;;kCACpD,6LAAC;wBAAE,WAAU;kCAA+B;;;;;;;;;;;;;;;;;;AAOpD;GAzIwB;;QACoB,oIAAA,CAAA,oBAAiB;;;KADrC","debugId":null}},
    {"offset": {"line": 483, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/app/dashboard/credentials/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useAwsCredentials } from \"@/hooks/useAwsCredentials\";\r\nimport AwsCredentialForm from \"@/components/aws/AwsCredentialForm\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nexport default function CredentialsPage() {\r\n  const { credentials, loading, error } = useAwsCredentials();\r\n\r\n  return (\r\n    <div>\r\n      <motion.div\r\n        className=\"mb-6\"\r\n        initial={{ opacity: 0, y: -20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.3 }}\r\n      >\r\n        <h1 className=\"text-3xl font-bold text-gray-900\">Credenciais AWS</h1>\r\n        <p className=\"mt-2 text-gray-600\">\r\n          Gerencie suas credenciais AWS para monitorar seus recursos.\r\n        </p>\r\n      </motion.div>\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n        <motion.div \r\n          className=\"bg-white rounded-lg shadow-md p-6\"\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.3 }}\r\n        >\r\n          <h2 className=\"text-xl font-semibold text-gray-800 mb-6\">\r\n            Credenciais Cadastradas\r\n          </h2>\r\n          \r\n          {error && (\r\n            <div className=\"p-3 mb-4 text-sm text-red-700 bg-red-100 rounded-md\">\r\n              {error}\r\n            </div>\r\n          )}\r\n          \r\n          {loading ? (\r\n            <div className=\"flex justify-center py-8\">\r\n              <div className=\"animate-spin rounded-full h-6 w-6 border-t-2 border-b-2 border-indigo-500\"></div>\r\n            </div>\r\n          ) : credentials.length === 0 ? (\r\n            <div className=\"py-8 text-center text-gray-500\">\r\n              Você ainda não adicionou nenhuma credencial AWS.\r\n            </div>\r\n          ) : (\r\n            <div className=\"space-y-4\">\r\n              {credentials.map((credential) => (\r\n                <div\r\n                  key={credential.id}\r\n                  className=\"border rounded-lg p-4 hover:bg-gray-50 transition-colors\"\r\n                >\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <div>\r\n                      <h3 className=\"font-medium text-gray-800\">{credential.name}</h3>\r\n                      <p className=\"text-sm text-gray-500\">Região: {credential.region}</p>\r\n                      <p className=\"text-xs text-gray-400\">\r\n                        Adicionada em: {new Date(credential.createdAt).toLocaleDateString()}\r\n                      </p>\r\n                    </div>\r\n                    \r\n                    <span className=\"inline-flex px-2 py-1 text-xs font-medium bg-green-100 text-green-800 rounded-md\">\r\n                      Ativa\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </motion.div>\r\n        \r\n        <AwsCredentialForm />\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAMe,SAAS;;IACtB,MAAM,EAAE,WAAW,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,oIAAA,CAAA,oBAAiB,AAAD;IAExD,qBACE,6LAAC;;0BACC,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;gBACT,WAAU;gBACV,SAAS;oBAAE,SAAS;oBAAG,GAAG,CAAC;gBAAG;gBAC9B,SAAS;oBAAE,SAAS;oBAAG,GAAG;gBAAE;gBAC5B,YAAY;oBAAE,UAAU;gBAAI;;kCAE5B,6LAAC;wBAAG,WAAU;kCAAmC;;;;;;kCACjD,6LAAC;wBAAE,WAAU;kCAAqB;;;;;;;;;;;;0BAKpC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;wBACT,WAAU;wBACV,SAAS;4BAAE,SAAS;4BAAG,GAAG;wBAAG;wBAC7B,SAAS;4BAAE,SAAS;4BAAG,GAAG;wBAAE;wBAC5B,YAAY;4BAAE,UAAU;wBAAI;;0CAE5B,6LAAC;gCAAG,WAAU;0CAA2C;;;;;;4BAIxD,uBACC,6LAAC;gCAAI,WAAU;0CACZ;;;;;;4BAIJ,wBACC,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAI,WAAU;;;;;;;;;;uCAEf,YAAY,MAAM,KAAK,kBACzB,6LAAC;gCAAI,WAAU;0CAAiC;;;;;qDAIhD,6LAAC;gCAAI,WAAU;0CACZ,YAAY,GAAG,CAAC,CAAC,2BAChB,6LAAC;wCAEC,WAAU;kDAEV,cAAA,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;;sEACC,6LAAC;4DAAG,WAAU;sEAA6B,WAAW,IAAI;;;;;;sEAC1D,6LAAC;4DAAE,WAAU;;gEAAwB;gEAAS,WAAW,MAAM;;;;;;;sEAC/D,6LAAC;4DAAE,WAAU;;gEAAwB;gEACnB,IAAI,KAAK,WAAW,SAAS,EAAE,kBAAkB;;;;;;;;;;;;;8DAIrE,6LAAC;oDAAK,WAAU;8DAAmF;;;;;;;;;;;;uCAZhG,WAAW,EAAE;;;;;;;;;;;;;;;;kCAsB5B,6LAAC,iJAAA,CAAA,UAAiB;;;;;;;;;;;;;;;;;AAI1B;GAxEwB;;QACkB,oIAAA,CAAA,oBAAiB;;;KADnC","debugId":null}}]
}