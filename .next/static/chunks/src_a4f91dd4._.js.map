{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/hooks/useAwsCredentials.ts"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from 'react';\n\nexport interface AwsCredential {\n  id: string;\n  name: string;\n  accountId?: string;\n  accessKeyId: string;\n  secretAccessKey: string;\n  region: string;\n}\n\nexport interface UseAwsCredentialsResult {\n  credentials: AwsCredential[];\n  selectedCredential: AwsCredential | null;\n  selectCredential: (id: string) => void;\n  addCredential: (credential: Omit<AwsCredential, 'id'>) => Promise<void>;\n  updateCredential: (id: string, data: Partial<Omit<AwsCredential, 'id'>>) => Promise<void>;\n  deleteCredential: (id: string) => Promise<void>;\n  loading: boolean;\n  isLoading: boolean; // Alias for loading - needed for compatibility\n  error: string | null;\n  refresh: () => Promise<void>;\n}\n\nexport function useAwsCredentials(): UseAwsCredentialsResult {\n  const [credentials, setCredentials] = useState<AwsCredential[]>([]);\n  const [selectedCredentialId, setSelectedCredentialId] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Function to fetch credentials from the API\n  const fetchCredentials = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch('/api/aws/credentials');\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch credentials: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      setCredentials(data);\n      \n      // If we have credentials but none selected, select the first one\n      if (data.length > 0 && !selectedCredentialId) {\n        setSelectedCredentialId(data[0].id);\n        // Save to localStorage\n        localStorage.setItem('selectedAwsCredentialId', data[0].id);\n      }\n      \n      return data;\n    } catch (err) {\n      setError(`Error fetching credentials: ${err instanceof Error ? err.message : String(err)}`);\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to select a credential\n  const selectCredential = (id: string) => {\n    setSelectedCredentialId(id);\n    localStorage.setItem('selectedAwsCredentialId', id);\n  };\n\n  // Function to add a new credential\n  const addCredential = async (credential: Omit<AwsCredential, 'id'>) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch('/api/aws/credentials', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(credential),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to add credential: ${response.status}`);\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      setError(`Error adding credential: ${err instanceof Error ? err.message : String(err)}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to update an existing credential\n  const updateCredential = async (id: string, data: Partial<Omit<AwsCredential, 'id'>>) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch(`/api/aws/credentials/${id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to update credential: ${response.status}`);\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      setError(`Error updating credential: ${err instanceof Error ? err.message : String(err)}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to delete a credential\n  const deleteCredential = async (id: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch(`/api/aws/credentials/${id}`, {\n        method: 'DELETE',\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to delete credential: ${response.status}`);\n      }\n      \n      // If we delete the selected credential, select another one\n      if (id === selectedCredentialId) {\n        const remainingCredentials = credentials.filter(c => c.id !== id);\n        if (remainingCredentials.length > 0) {\n          selectCredential(remainingCredentials[0].id);\n        } else {\n          setSelectedCredentialId(null);\n          localStorage.removeItem('selectedAwsCredentialId');\n        }\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      setError(`Error deleting credential: ${err instanceof Error ? err.message : String(err)}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Load credentials on mount\n  useEffect(() => {\n    // Try to restore selected credential from localStorage\n    const savedCredentialId = localStorage.getItem('selectedAwsCredentialId');\n    if (savedCredentialId) {\n      setSelectedCredentialId(savedCredentialId);\n    }\n    \n    fetchCredentials();\n  }, []);\n\n  // Find the selected credential object\n  const selectedCredential = credentials.find(c => c.id === selectedCredentialId) || null;\n\n  return {\n    credentials,\n    selectedCredential,\n    selectCredential,\n    addCredential,\n    updateCredential,\n    deleteCredential,\n    loading,\n    isLoading: loading, // Alias for loading\n    error,\n    refresh: fetchCredentials,\n  };\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/components/aws/CredentialSelector.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useAwsCredentials } from \"@/hooks/useAwsCredentials\";\r\nimport { useRouter } from \"next/navigation\";\r\n\r\nexport default function CredentialSelector() {\r\n  const { credentials, selectedCredential, selectCredential, loading } = useAwsCredentials();\r\n  const router = useRouter();\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"bg-white rounded-lg shadow-sm p-4 mb-6 flex items-center space-x-2\">\r\n        <span className=\"text-gray-700\">Carregando credenciais...</span>\r\n        <div className=\"animate-spin rounded-full h-4 w-4 border-t-2 border-b-2 border-indigo-500\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (credentials.length === 0) {\r\n    return (\r\n      <div className=\"bg-white rounded-lg shadow-sm p-4 mb-6\">\r\n        <div className=\"flex justify-between items-center\">\r\n          <span className=\"text-gray-700\">Nenhuma credencial AWS encontrada</span>\r\n          <button\r\n            onClick={() => router.push(\"/dashboard/credentials\")}\r\n            className=\"px-3 py-1 text-sm text-white bg-indigo-600 rounded-md hover:bg-indigo-700\"\r\n          >\r\n            Adicionar Credencial\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-sm p-4 mb-6\">\r\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\r\n        <label htmlFor=\"credential-selector\" className=\"block text-sm font-medium text-gray-700 mb-2 sm:mb-0\">\r\n          Selecionar Credencial AWS:\r\n        </label>\r\n        <div className=\"flex-1 sm:ml-4 max-w-md\">\r\n          <select\r\n            id=\"credential-selector\"\r\n            value={selectedCredential?.id || \"\"}\r\n            onChange={(e) => selectCredential(e.target.value)}\r\n            className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\r\n          >\r\n            <option value=\"\" disabled>\r\n              Selecione uma credencial\r\n            </option>\r\n            {credentials.map((cred) => (\r\n              <option key={cred.id} value={cred.id}>\r\n                {cred.name} ({cred.region})\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKe,SAAS;;IACtB,MAAM,EAAE,WAAW,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,oIAAA,CAAA,oBAAiB,AAAD;IACvF,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,IAAI,SAAS;QACX,qBACE,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAK,WAAU;8BAAgB;;;;;;8BAChC,6LAAC;oBAAI,WAAU;;;;;;;;;;;;IAGrB;IAEA,IAAI,YAAY,MAAM,KAAK,GAAG;QAC5B,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAK,WAAU;kCAAgB;;;;;;kCAChC,6LAAC;wBACC,SAAS,IAAM,OAAO,IAAI,CAAC;wBAC3B,WAAU;kCACX;;;;;;;;;;;;;;;;;IAMT;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAM,SAAQ;oBAAsB,WAAU;8BAAuD;;;;;;8BAGtG,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBACC,IAAG;wBACH,OAAO,oBAAoB,MAAM;wBACjC,UAAU,CAAC,IAAM,iBAAiB,EAAE,MAAM,CAAC,KAAK;wBAChD,WAAU;;0CAEV,6LAAC;gCAAO,OAAM;gCAAG,QAAQ;0CAAC;;;;;;4BAGzB,YAAY,GAAG,CAAC,CAAC,qBAChB,6LAAC;oCAAqB,OAAO,KAAK,EAAE;;wCACjC,KAAK,IAAI;wCAAC;wCAAG,KAAK,MAAM;wCAAC;;mCADf,KAAK,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;AASlC;GAvDwB;;QACiD,oIAAA,CAAA,oBAAiB;QACzE,qIAAA,CAAA,YAAS;;;KAFF","debugId":null}},
    {"offset": {"line": 322, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/app/dashboard/security/unified/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { useAwsCredentials } from \"@/hooks/useAwsCredentials\";\r\nimport { motion } from \"framer-motion\";\r\nimport CredentialSelector from \"@/components/aws/CredentialSelector\";\r\nimport { \r\n  Shield, AlertTriangle, AlertCircle, Info, \r\n  CheckCircle, XCircle, Archive, Server, \r\n  Database, Network, Lock, Key, Users,\r\n  RefreshCw, Search, Filter\r\n} from \"lucide-react\";\r\n\r\n// Interface para Vulnerabilidade\r\ninterface Vulnerability {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  severity: \"critical\" | \"high\" | \"medium\" | \"low\";\r\n  resourceType: string;\r\n  resourceId: string;\r\n  detectedAt: string;\r\n  status: \"open\" | \"fixed\" | \"suppressed\";\r\n  cvss: number;\r\n  cve?: string;\r\n  remediation: string;\r\n  resourceName: string;\r\n  service: string;\r\n  region: string;\r\n}\r\n\r\n// Interface para Segurança EC2\r\ninterface SecurityIssue {\r\n  id: string;\r\n  type: string;\r\n  description: string;\r\n  severity: \"CRITICAL\" | \"HIGH\" | \"MEDIUM\" | \"LOW\";\r\n  resourceType: string;\r\n  resourceId: string;\r\n  service: string;\r\n  detectedAt: string;\r\n  details?: any;\r\n}\r\n\r\n// Interface unificada para exibição\r\ninterface UnifiedSecurityItem {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  severity: string;\r\n  resourceType: string;\r\n  resourceId: string;\r\n  service: string;\r\n  detectedAt: string;\r\n  status: string;\r\n  remediation?: string;\r\n  cvss?: number;\r\n  cve?: string;\r\n  details?: any;\r\n  source: \"vulnerability\" | \"security\";\r\n  originalItem: Vulnerability | SecurityIssue;\r\n}\r\n\r\n// Interface para filtros\r\ninterface SecurityFilters {\r\n  severity?: string;\r\n  status?: string;\r\n  resourceType?: string;\r\n  service?: string;\r\n  source?: string;\r\n}\r\n\r\nexport default function UnifiedSecurityPage() {\r\n  const { selectedCredential } = useAwsCredentials();\r\n  const [unifiedItems, setUnifiedItems] = useState<UnifiedSecurityItem[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [filters, setFilters] = useState<SecurityFilters>({});\r\n  const [lastUpdated, setLastUpdated] = useState<Date | null>(null);\r\n  const [showFilters, setShowFilters] = useState(false);\r\n  const [backgroundLoading, setBackgroundLoading] = useState(false);\r\n  \r\n  // Estatísticas\r\n  const [stats, setStats] = useState({\r\n    total: 0,\r\n    critical: 0,\r\n    high: 0, \r\n    medium: 0,\r\n    low: 0,\r\n    open: 0,\r\n    fixed: 0,\r\n    suppressed: 0\r\n  });\r\n\r\n  // Carregar dados quando a credencial mudar\r\n  useEffect(() => {\r\n    if (!selectedCredential) {\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    fetchSecurityData();\r\n  }, [selectedCredential]);\r\n\r\n  // Atualizar estatísticas quando os itens unificados mudarem\r\n  useEffect(() => {\r\n    if (unifiedItems.length === 0) {\r\n      setStats({\r\n        total: 0,\r\n        critical: 0,\r\n        high: 0,\r\n        medium: 0,\r\n        low: 0,\r\n        open: 0,\r\n        fixed: 0,\r\n        suppressed: 0\r\n      });\r\n      return;\r\n    }\r\n\r\n    const newStats = {\r\n      total: unifiedItems.length,\r\n      critical: unifiedItems.filter(item => item.severity.toLowerCase() === \"critical\").length,\r\n      high: unifiedItems.filter(item => item.severity.toLowerCase() === \"high\").length,\r\n      medium: unifiedItems.filter(item => item.severity.toLowerCase() === \"medium\").length,\r\n      low: unifiedItems.filter(item => item.severity.toLowerCase() === \"low\").length,\r\n      open: unifiedItems.filter(item => item.status === \"open\").length,\r\n      fixed: unifiedItems.filter(item => item.status === \"fixed\").length,\r\n      suppressed: unifiedItems.filter(item => item.status === \"suppressed\").length\r\n    };\r\n\r\n    setStats(newStats);\r\n  }, [unifiedItems]);\r\n\r\n  // Buscar dados de segurança e vulnerabilidades\r\n  const fetchSecurityData = async () => {\r\n    if (!selectedCredential) {\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      // Buscar vulnerabilidades\r\n      const vulnerabilitiesPromise = fetch(`/api/aws/security/vulnerabilities?credentialId=${selectedCredential.id}`)\r\n        .then(response => {\r\n          if (!response.ok) {\r\n            throw new Error(\"Erro ao buscar vulnerabilidades\");\r\n          }\r\n          return response.json();\r\n        })\r\n        .then(data => data.vulnerabilities || [])\r\n        .catch(err => {\r\n          console.error(\"Erro ao buscar vulnerabilidades:\", err);\r\n          return [];\r\n        });\r\n\r\n      // Buscar dados de segurança do EC2\r\n      const ec2SecurityPromise = fetch(`/api/aws/ec2/security?credentialId=${selectedCredential.id}`)\r\n        .then(response => {\r\n          if (!response.ok) {\r\n            throw new Error(\"Erro ao buscar dados de segurança do EC2\");\r\n          }\r\n          return response.json();\r\n        })\r\n        .then(data => {\r\n          // Extrair todos os problemas de segurança\r\n          const issues: SecurityIssue[] = [];\r\n          \r\n          // Processar grupos de segurança\r\n          if (data.results && data.results.securityGroups) {\r\n            data.results.securityGroups.forEach((sg: any) => {\r\n              if (sg.issues && sg.issues.length > 0) {\r\n                sg.issues.forEach((issue: any, index: number) => {\r\n                  issues.push({\r\n                    id: `sg-${sg.id}-${index}`,\r\n                    type: issue.type,\r\n                    description: issue.description,\r\n                    severity: issue.severity,\r\n                    resourceType: \"SecurityGroup\",\r\n                    resourceId: sg.id,\r\n                    service: \"EC2\",\r\n                    detectedAt: new Date().toISOString(),\r\n                    details: { affectedRule: issue.affectedRule }\r\n                  });\r\n                });\r\n              }\r\n            });\r\n          }\r\n          \r\n          // Processar ACLs de rede\r\n          if (data.results && data.results.networkAcls) {\r\n            data.results.networkAcls.forEach((acl: any) => {\r\n              if (acl.issues && acl.issues.length > 0) {\r\n                acl.issues.forEach((issue: any, index: number) => {\r\n                  issues.push({\r\n                    id: `acl-${acl.id}-${index}`,\r\n                    type: issue.type,\r\n                    description: issue.description,\r\n                    severity: issue.severity,\r\n                    resourceType: \"NetworkACL\",\r\n                    resourceId: acl.id,\r\n                    service: \"EC2\",\r\n                    detectedAt: new Date().toISOString(),\r\n                    details: { affectedRule: issue.affectedRule }\r\n                  });\r\n                });\r\n              }\r\n            });\r\n          }\r\n          \r\n          // Processar instâncias\r\n          if (data.results && data.results.instances) {\r\n            data.results.instances.forEach((instance: any) => {\r\n              if (instance.issues && instance.issues.length > 0) {\r\n                instance.issues.forEach((issue: any, index: number) => {\r\n                  issues.push({\r\n                    id: `instance-${instance.id}-${index}`,\r\n                    type: issue.type,\r\n                    description: issue.description,\r\n                    severity: issue.severity,\r\n                    resourceType: \"EC2Instance\",\r\n                    resourceId: instance.id,\r\n                    service: \"EC2\",\r\n                    detectedAt: new Date().toISOString()\r\n                  });\r\n                });\r\n              }\r\n            });\r\n          }\r\n          \r\n          // Processar volumes\r\n          if (data.results && data.results.volumes) {\r\n            data.results.volumes.forEach((volume: any) => {\r\n              if (volume.issues && volume.issues.length > 0) {\r\n                volume.issues.forEach((issue: any, index: number) => {\r\n                  issues.push({\r\n                    id: `volume-${volume.id}-${index}`,\r\n                    type: issue.type,\r\n                    description: issue.description,\r\n                    severity: issue.severity,\r\n                    resourceType: \"EBSVolume\",\r\n                    resourceId: volume.id,\r\n                    service: \"EC2\",\r\n                    detectedAt: new Date().toISOString()\r\n                  });\r\n                });\r\n              }\r\n            });\r\n          }\r\n          \r\n          // Processar IAM roles\r\n          if (data.results && data.results.iamRoles) {\r\n            data.results.iamRoles.forEach((role: any) => {\r\n              if (role.issues && role.issues.length > 0) {\r\n                role.issues.forEach((issue: any, index: number) => {\r\n                  issues.push({\r\n                    id: `iam-${role.name}-${index}`,\r\n                    type: issue.type,\r\n                    description: issue.description,\r\n                    severity: issue.severity,\r\n                    resourceType: \"IAMRole\",\r\n                    resourceId: role.name,\r\n                    service: \"IAM\",\r\n                    detectedAt: new Date().toISOString()\r\n                  });\r\n                });\r\n              }\r\n            });\r\n          }\r\n          \r\n          return issues;\r\n        })\r\n        .catch(err => {\r\n          console.error(\"Erro ao buscar segurança do EC2:\", err);\r\n          return [];\r\n        });\r\n\r\n      // Aguardar ambas as chamadas de API\r\n      const [vulnerabilities, securityIssues] = await Promise.all([\r\n        vulnerabilitiesPromise,\r\n        ec2SecurityPromise\r\n      ]);\r\n\r\n      // Unificar os resultados\r\n      const unified: UnifiedSecurityItem[] = [\r\n        ...vulnerabilities.map((v: Vulnerability) => ({\r\n          id: v.id,\r\n          title: v.title,\r\n          description: v.description,\r\n          severity: v.severity,\r\n          resourceType: v.resourceType,\r\n          resourceId: v.resourceId,\r\n          service: v.service,\r\n          detectedAt: v.detectedAt,\r\n          status: v.status,\r\n          remediation: v.remediation,\r\n          cvss: v.cvss,\r\n          cve: v.cve,\r\n          source: \"vulnerability\" as const,\r\n          originalItem: v\r\n        })),\r\n        ...securityIssues.map((s: SecurityIssue) => ({\r\n          id: s.id,\r\n          title: s.type,\r\n          description: s.description,\r\n          severity: s.severity,\r\n          resourceType: s.resourceType,\r\n          resourceId: s.resourceId,\r\n          service: s.service,\r\n          detectedAt: s.detectedAt,\r\n          status: \"open\",\r\n          details: s.details,\r\n          source: \"security\" as const,\r\n          originalItem: s\r\n        }))\r\n      ];\r\n\r\n      setUnifiedItems(unified);\r\n      setLastUpdated(new Date());\r\n    } catch (err) {\r\n      console.error(\"Erro ao buscar dados de segurança:\", err);\r\n      setError(err instanceof Error ? err.message : \"Erro ao buscar dados de segurança\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Filtrar itens de segurança\r\n  const filteredItems = unifiedItems.filter(item => {\r\n    if (filters.severity && item.severity.toLowerCase() !== filters.severity.toLowerCase()) return false;\r\n    if (filters.status && item.status !== filters.status) return false;\r\n    if (filters.resourceType && item.resourceType !== filters.resourceType) return false;\r\n    if (filters.service && item.service !== filters.service) return false;\r\n    if (filters.source && item.source !== filters.source) return false;\r\n    return true;\r\n  });\r\n\r\n  // Buscar tipos de recursos únicos para o filtro\r\n  const uniqueResourceTypes = Array.from(new Set(unifiedItems.map(item => item.resourceType)));\r\n  const uniqueServices = Array.from(new Set(unifiedItems.map(item => item.service)));\r\n\r\n  // Funções auxiliares para mostrar cores e ícones baseados na severidade\r\n  const getSeverityColor = (severity: string) => {\r\n    switch (severity.toLowerCase()) {\r\n      case \"critical\": return \"bg-red-100 text-red-800\";\r\n      case \"high\": return \"bg-orange-100 text-orange-800\";\r\n      case \"medium\": return \"bg-yellow-100 text-yellow-800\";\r\n      case \"low\": return \"bg-blue-100 text-blue-800\";\r\n      default: return \"bg-gray-100 text-gray-800\";\r\n    }\r\n  };\r\n\r\n  const getSeverityBorderColor = (severity: string) => {\r\n    switch (severity.toLowerCase()) {\r\n      case \"critical\": return \"#f87171\"; // red-400\r\n      case \"high\": return \"#fb923c\"; // orange-400\r\n      case \"medium\": return \"#facc15\"; // yellow-400\r\n      case \"low\": return \"#60a5fa\"; // blue-400\r\n      default: return \"#94a3b8\"; // slate-400\r\n    }\r\n  };\r\n  \r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case \"open\": return \"bg-red-100 text-red-800\";\r\n      case \"fixed\": return \"bg-green-100 text-green-800\";\r\n      case \"suppressed\": return \"bg-purple-100 text-purple-800\";\r\n      default: return \"bg-gray-100 text-gray-800\";\r\n    }\r\n  };\r\n\r\n  const getSeverityIcon = (severity: string) => {\r\n    switch (severity.toLowerCase()) {\r\n      case \"critical\": return <AlertCircle className=\"h-5 w-5 text-red-500\" />;\r\n      case \"high\": return <AlertTriangle className=\"h-5 w-5 text-orange-500\" />;\r\n      case \"medium\": return <AlertTriangle className=\"h-5 w-5 text-yellow-500\" />;\r\n      case \"low\": return <Info className=\"h-5 w-5 text-blue-500\" />;\r\n      default: return <Info className=\"h-5 w-5 text-gray-500\" />;\r\n    }\r\n  };\r\n\r\n  const getSourceIcon = (source: string) => {\r\n    switch (source) {\r\n      case \"vulnerability\": return <Shield className=\"h-4 w-4 text-indigo-500\" />;\r\n      case \"security\": return <Lock className=\"h-4 w-4 text-green-500\" />;\r\n      default: return <Info className=\"h-4 w-4 text-gray-500\" />;\r\n    }\r\n  };\r\n\r\n  const getServiceIcon = (service: string) => {\r\n    switch (service) {\r\n      case \"EC2\": return <Server className=\"h-4 w-4 text-indigo-500\" />;\r\n      case \"RDS\": return <Database className=\"h-4 w-4 text-blue-500\" />;\r\n      case \"S3\": return <Database className=\"h-4 w-4 text-yellow-500\" />;\r\n      case \"IAM\": return <Users className=\"h-4 w-4 text-orange-500\" />;\r\n      default: return <Shield className=\"h-4 w-4 text-gray-500\" />;\r\n    }\r\n  };\r\n\r\n  const getStatusText = (status: string) => {\r\n    switch (status) {\r\n      case \"open\": return \"Em Aberto\";\r\n      case \"fixed\": return \"Corrigido\";\r\n      case \"suppressed\": return \"Suprimido\";\r\n      default: return status;\r\n    }\r\n  };\r\n\r\n  const getSourceText = (source: string) => {\r\n    switch (source) {\r\n      case \"vulnerability\": return \"Vulnerabilidade\";\r\n      case \"security\": return \"Segurança\";\r\n      default: return source;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <motion.div\r\n        className=\"mb-6\"\r\n        initial={{ opacity: 0, y: -20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.3 }}\r\n      >\r\n        <div className=\"flex items-center gap-2 mb-2\">\r\n          <Shield className=\"h-6 w-6 text-indigo-600\" />\r\n          <h1 className=\"text-3xl font-bold text-gray-900\">Análise de Segurança Unificada</h1>\r\n        </div>\r\n        <p className=\"mt-2 text-gray-600\">\r\n          Visualize e gerencie problemas de segurança e vulnerabilidades em todos os seus recursos AWS.\r\n        </p>\r\n      </motion.div>\r\n\r\n      <CredentialSelector />\r\n\r\n      {/* Header com informações de última atualização */}\r\n      <div className=\"flex justify-between items-center mb-4\">\r\n        <div className=\"flex gap-2\">\r\n          <button\r\n            onClick={() => setShowFilters(!showFilters)}\r\n            className=\"p-2 bg-white text-gray-700 rounded-md border border-gray-300 hover:bg-gray-50 transition-colors\"\r\n            title=\"Filtros\"\r\n          >\r\n            <Filter className=\"h-5 w-5\" />\r\n          </button>\r\n          <button\r\n            onClick={fetchSecurityData}\r\n            disabled={loading || !selectedCredential}\r\n            className=\"p-2 bg-white text-gray-700 rounded-md border border-gray-300 hover:bg-gray-50 transition-colors disabled:opacity-50\"\r\n            title=\"Atualizar\"\r\n          >\r\n            <RefreshCw className={`h-5 w-5 ${loading ? 'animate-spin' : ''}`} />\r\n          </button>\r\n        </div>\r\n        {lastUpdated && (\r\n          <div className=\"text-sm text-gray-500\">\r\n            <span>Última atualização: {lastUpdated.toLocaleString()}</span>\r\n            {backgroundLoading && (\r\n              <span className=\"ml-3 inline-flex items-center\">\r\n                <RefreshCw className=\"animate-spin h-3 w-3 mr-1\" />\r\n                Atualizando...\r\n              </span>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Filtros */}\r\n      {showFilters && (\r\n        <motion.div \r\n          initial={{ opacity: 0, height: 0 }}\r\n          animate={{ opacity: 1, height: 'auto' }}\r\n          exit={{ opacity: 0, height: 0 }}\r\n          className=\"bg-white rounded-lg shadow-md mb-6 overflow-hidden\"\r\n        >\r\n          <div className=\"p-4 border-b border-gray-200 bg-gray-50\">\r\n            <h2 className=\"text-lg font-medium flex items-center\">\r\n              <Filter className=\"mr-2 h-5 w-5 text-indigo-600\" />\r\n              Filtros\r\n            </h2>\r\n          </div>\r\n          <div className=\"p-4\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n              <div>\r\n                <label htmlFor=\"severityFilter\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Severidade\r\n                </label>\r\n                <select\r\n                  id=\"severityFilter\"\r\n                  className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\r\n                  value={filters.severity || ''}\r\n                  onChange={(e) => setFilters({ ...filters, severity: e.target.value || undefined })}\r\n                >\r\n                  <option value=\"\">Todas</option>\r\n                  <option value=\"critical\">Crítica</option>\r\n                  <option value=\"high\">Alta</option>\r\n                  <option value=\"medium\">Média</option>\r\n                  <option value=\"low\">Baixa</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"statusFilter\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Status\r\n                </label>\r\n                <select\r\n                  id=\"statusFilter\"\r\n                  className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\r\n                  value={filters.status || ''}\r\n                  onChange={(e) => setFilters({ ...filters, status: e.target.value || undefined })}\r\n                >\r\n                  <option value=\"\">Todos</option>\r\n                  <option value=\"open\">Em Aberto</option>\r\n                  <option value=\"fixed\">Corrigidos</option>\r\n                  <option value=\"suppressed\">Suprimidos</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"sourceFilter\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Fonte\r\n                </label>\r\n                <select\r\n                  id=\"sourceFilter\"\r\n                  className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\r\n                  value={filters.source || ''}\r\n                  onChange={(e) => setFilters({ ...filters, source: e.target.value || undefined })}\r\n                >\r\n                  <option value=\"\">Todas</option>\r\n                  <option value=\"vulnerability\">Vulnerabilidades</option>\r\n                  <option value=\"security\">Segurança</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"resourceTypeFilter\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Tipo de Recurso\r\n                </label>\r\n                <select\r\n                  id=\"resourceTypeFilter\"\r\n                  className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\r\n                  value={filters.resourceType || ''}\r\n                  onChange={(e) => setFilters({ ...filters, resourceType: e.target.value || undefined })}\r\n                >\r\n                  <option value=\"\">Todos</option>\r\n                  {uniqueResourceTypes.map(type => (\r\n                    <option key={type} value={type}>{type}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"serviceFilter\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Serviço\r\n                </label>\r\n                <select\r\n                  id=\"serviceFilter\"\r\n                  className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\r\n                  value={filters.service || ''}\r\n                  onChange={(e) => setFilters({ ...filters, service: e.target.value || undefined })}\r\n                >\r\n                  <option value=\"\">Todos</option>\r\n                  {uniqueServices.map(service => (\r\n                    <option key={service} value={service}>{service}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      )}\r\n\r\n      {/* Estatísticas */}\r\n      <div className=\"mt-6 grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\r\n        <motion.div \r\n          initial={{ opacity: 0, y: 10 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.1 }}\r\n          className=\"bg-white shadow-sm rounded-lg p-4 border-l-4 border-red-500\"\r\n        >\r\n          <div className=\"flex justify-between items-center\">\r\n            <div>\r\n              <p className=\"text-sm text-gray-500\">Críticos</p>\r\n              <p className=\"text-2xl font-bold text-gray-900\">{stats.critical}</p>\r\n            </div>\r\n            <AlertCircle className=\"h-8 w-8 text-red-500 bg-red-100 p-1.5 rounded-full\" />\r\n          </div>\r\n        </motion.div>\r\n        \r\n        <motion.div \r\n          initial={{ opacity: 0, y: 10 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.2 }}\r\n          className=\"bg-white shadow-sm rounded-lg p-4 border-l-4 border-orange-500\"\r\n        >\r\n          <div className=\"flex justify-between items-center\">\r\n            <div>\r\n              <p className=\"text-sm text-gray-500\">Alta Severidade</p>\r\n              <p className=\"text-2xl font-bold text-gray-900\">{stats.high}</p>\r\n            </div>\r\n            <AlertTriangle className=\"h-8 w-8 text-orange-500 bg-orange-100 p-1.5 rounded-full\" />\r\n          </div>\r\n        </motion.div>\r\n        \r\n        <motion.div \r\n          initial={{ opacity: 0, y: 10 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.3 }}\r\n          className=\"bg-white shadow-sm rounded-lg p-4 border-l-4 border-yellow-500\"\r\n        >\r\n          <div className=\"flex justify-between items-center\">\r\n            <div>\r\n              <p className=\"text-sm text-gray-500\">Média Severidade</p>\r\n              <p className=\"text-2xl font-bold text-gray-900\">{stats.medium}</p>\r\n            </div>\r\n            <AlertTriangle className=\"h-8 w-8 text-yellow-500 bg-yellow-100 p-1.5 rounded-full\" />\r\n          </div>\r\n        </motion.div>\r\n        \r\n        <motion.div \r\n          initial={{ opacity: 0, y: 10 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.4 }}\r\n          className=\"bg-white shadow-sm rounded-lg p-4 border-l-4 border-blue-500\"\r\n        >\r\n          <div className=\"flex justify-between items-center\">\r\n            <div>\r\n              <p className=\"text-sm text-gray-500\">Baixa Severidade</p>\r\n              <p className=\"text-2xl font-bold text-gray-900\">{stats.low}</p>\r\n            </div>\r\n            <Info className=\"h-8 w-8 text-blue-500 bg-blue-100 p-1.5 rounded-full\" />\r\n          </div>\r\n        </motion.div>\r\n      </div>\r\n\r\n      {/* Conteúdo principal */}\r\n      {error && (\r\n        <motion.div\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          className=\"bg-red-50 border border-red-200 text-red-800 px-4 py-3 rounded-md flex items-start gap-2 mb-6\"\r\n        >\r\n          <AlertTriangle className=\"h-5 w-5 text-red-500 flex-shrink-0 mt-0.5\" />\r\n          <div>{error}</div>\r\n        </motion.div>\r\n      )}\r\n      \r\n      {loading ? (\r\n        <div className=\"flex flex-col items-center justify-center py-12 bg-white rounded-lg shadow-md\">\r\n          <RefreshCw className=\"h-8 w-8 text-indigo-500 animate-spin mb-4\" />\r\n          <p className=\"text-gray-500\">Carregando dados de segurança...</p>\r\n        </div>\r\n      ) : !selectedCredential ? (\r\n        <motion.div\r\n          className=\"bg-white rounded-lg shadow-md p-6 text-center\"\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.3 }}\r\n        >\r\n          <Shield className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n          <p className=\"text-gray-500 mb-4\">Selecione uma credencial AWS para começar a análise de segurança.</p>\r\n        </motion.div>\r\n      ) : filteredItems.length === 0 ? (\r\n        <motion.div \r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          className=\"bg-white rounded-lg shadow-md p-12 text-center\"\r\n        >\r\n          <Shield className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Nenhum problema encontrado</h3>\r\n          <p className=\"text-gray-500\">Não há problemas de segurança correspondentes aos filtros selecionados.</p>\r\n        </motion.div>\r\n      ) : (\r\n        <div className=\"space-y-3\">\r\n          {filteredItems.map((item) => (\r\n            <motion.div\r\n              key={item.id}\r\n              initial={{ opacity: 0, x: -10 }}\r\n              animate={{ opacity: 1, x: 0 }}\r\n              className=\"rounded-md shadow-sm bg-white border overflow-hidden flex\"\r\n              style={{ borderLeft: `4px solid ${getSeverityBorderColor(item.severity)}` }}\r\n            >\r\n              <div className=\"flex-grow p-3 flex items-center space-x-4\">\r\n                <div className=\"flex-shrink-0\">\r\n                  {getSeverityIcon(item.severity)}\r\n                </div>\r\n                \r\n                <div className=\"min-w-0 flex-1\">\r\n                  <div className=\"flex items-center text-sm\">\r\n                    <span className=\"font-medium truncate\">{item.title}</span>\r\n                    <span className=\"mx-2 text-gray-300\">•</span>\r\n                    <div className=\"flex items-center gap-1 text-gray-600\">\r\n                      {getServiceIcon(item.service)}\r\n                      <span>{item.service}</span>\r\n                      <span className=\"mx-1\">|</span>\r\n                      <span>{item.resourceType}</span>\r\n                      <span className=\"mx-1\">|</span>\r\n                      <span>{item.resourceId}</span>\r\n                    </div>\r\n                  </div>\r\n                  <p className=\"text-sm text-gray-600 line-clamp-1 mt-0.5\">{item.description}</p>\r\n                </div>\r\n                \r\n                <div className=\"flex-shrink-0 ml-auto flex items-center gap-2\">\r\n                  <div className={`px-2 py-1 rounded-full text-xs font-medium flex items-center ${getSeverityColor(item.severity)}`}>\r\n                    {getSeverityIcon(item.severity)}\r\n                    <span className=\"ml-1 capitalize\">{item.severity}</span>\r\n                  </div>\r\n                  \r\n                  <div className={`px-2 py-1 rounded-full text-xs font-medium flex items-center ${getStatusColor(item.status)}`}>\r\n                    <span>{getStatusText(item.status)}</span>\r\n                  </div>\r\n                  \r\n                  <div className=\"px-2 py-1 rounded-full text-xs font-medium flex items-center bg-gray-100 text-gray-800\">\r\n                    {getSourceIcon(item.source)}\r\n                    <span className=\"ml-1\">{getSourceText(item.source)}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </motion.div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}}]
}