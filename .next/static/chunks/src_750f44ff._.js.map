{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/hooks/useAwsCredentials.ts"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from 'react';\n\nexport interface AwsCredential {\n  id: string;\n  name: string;\n  accountId?: string;\n  accessKeyId: string;\n  secretAccessKey: string;\n  region: string;\n}\n\nexport interface UseAwsCredentialsResult {\n  credentials: AwsCredential[];\n  selectedCredential: AwsCredential | null;\n  selectCredential: (id: string) => void;\n  addCredential: (credential: Omit<AwsCredential, 'id'>) => Promise<void>;\n  updateCredential: (id: string, data: Partial<Omit<AwsCredential, 'id'>>) => Promise<void>;\n  deleteCredential: (id: string) => Promise<void>;\n  loading: boolean;\n  isLoading: boolean; // Alias for loading - needed for compatibility\n  error: string | null;\n  refresh: () => Promise<void>;\n}\n\nexport function useAwsCredentials(): UseAwsCredentialsResult {\n  const [credentials, setCredentials] = useState<AwsCredential[]>([]);\n  const [selectedCredentialId, setSelectedCredentialId] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Function to fetch credentials from the API\n  const fetchCredentials = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch('/api/aws/credentials');\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch credentials: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      setCredentials(data);\n      \n      // If we have credentials but none selected, select the first one\n      if (data.length > 0 && !selectedCredentialId) {\n        setSelectedCredentialId(data[0].id);\n        // Save to localStorage\n        localStorage.setItem('selectedAwsCredentialId', data[0].id);\n      }\n      \n      return data;\n    } catch (err) {\n      setError(`Error fetching credentials: ${err instanceof Error ? err.message : String(err)}`);\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to select a credential\n  const selectCredential = (id: string) => {\n    setSelectedCredentialId(id);\n    localStorage.setItem('selectedAwsCredentialId', id);\n  };\n\n  // Function to add a new credential\n  const addCredential = async (credential: Omit<AwsCredential, 'id'>) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch('/api/aws/credentials', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(credential),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to add credential: ${response.status}`);\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      setError(`Error adding credential: ${err instanceof Error ? err.message : String(err)}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to update an existing credential\n  const updateCredential = async (id: string, data: Partial<Omit<AwsCredential, 'id'>>) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch(`/api/aws/credentials/${id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to update credential: ${response.status}`);\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      setError(`Error updating credential: ${err instanceof Error ? err.message : String(err)}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to delete a credential\n  const deleteCredential = async (id: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch(`/api/aws/credentials/${id}`, {\n        method: 'DELETE',\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to delete credential: ${response.status}`);\n      }\n      \n      // If we delete the selected credential, select another one\n      if (id === selectedCredentialId) {\n        const remainingCredentials = credentials.filter(c => c.id !== id);\n        if (remainingCredentials.length > 0) {\n          selectCredential(remainingCredentials[0].id);\n        } else {\n          setSelectedCredentialId(null);\n          localStorage.removeItem('selectedAwsCredentialId');\n        }\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      setError(`Error deleting credential: ${err instanceof Error ? err.message : String(err)}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Load credentials on mount\n  useEffect(() => {\n    // Try to restore selected credential from localStorage\n    const savedCredentialId = localStorage.getItem('selectedAwsCredentialId');\n    if (savedCredentialId) {\n      setSelectedCredentialId(savedCredentialId);\n    }\n    \n    fetchCredentials();\n  }, []);\n\n  // Find the selected credential object\n  const selectedCredential = credentials.find(c => c.id === selectedCredentialId) || null;\n\n  return {\n    credentials,\n    selectedCredential,\n    selectCredential,\n    addCredential,\n    updateCredential,\n    deleteCredential,\n    loading,\n    isLoading: loading, // Alias for loading\n    error,\n    refresh: fetchCredentials,\n  };\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/hooks/useAlerts.ts"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useCallback, useEffect } from \"react\";\r\n\r\ninterface Alert {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  resourceId: string;\r\n  resourceType: string;\r\n  severity: string;\r\n  status: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\ninterface AlertFilters {\r\n  status?: string;\r\n  severity?: string;\r\n  resourceType?: string;\r\n}\r\n\r\ninterface UseAlertsResult {\r\n  alerts: Alert[];\r\n  loading: boolean;\r\n  error: string | null;\r\n  filters: AlertFilters;\r\n  setFilters: (filters: AlertFilters) => void;\r\n  fetchAlerts: () => Promise<void>;\r\n  dismissAlert: (id: string) => Promise<boolean>;\r\n  resolveAlert: (id: string) => Promise<boolean>;\r\n}\r\n\r\nexport function useAlerts(): UseAlertsResult {\r\n  const [alerts, setAlerts] = useState<Alert[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [filters, setFilters] = useState<AlertFilters>({});\r\n\r\n  const fetchAlerts = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      let url = \"/api/alerts\";\r\n      const params = new URLSearchParams();\r\n      \r\n      if (filters.status) {\r\n        params.append(\"status\", filters.status);\r\n      }\r\n      if (filters.severity) {\r\n        params.append(\"severity\", filters.severity);\r\n      }\r\n      if (filters.resourceType) {\r\n        params.append(\"resourceType\", filters.resourceType);\r\n      }\r\n      \r\n      if (params.toString()) {\r\n        url += `?${params.toString()}`;\r\n      }\r\n      \r\n      const response = await fetch(url);\r\n      \r\n      if (!response.ok) {\r\n        const { error } = await response.json();\r\n        throw new Error(error || \"Erro ao buscar alertas\");\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setAlerts(data.alerts || []);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : \"Erro ao buscar alertas\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [filters]);\r\n\r\n  const updateAlertStatus = useCallback(async (id: string, action: \"dismiss\" | \"resolve\") => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await fetch(\"/api/alerts\", {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          id,\r\n          action,\r\n        }),\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const { error } = await response.json();\r\n        throw new Error(error || `Erro ao ${action === \"dismiss\" ? \"arquivar\" : \"resolver\"} alerta`);\r\n      }\r\n      \r\n      // Atualizar lista de alertas\r\n      await fetchAlerts();\r\n      return true;\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : `Erro ao ${action === \"dismiss\" ? \"arquivar\" : \"resolver\"} alerta`);\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [fetchAlerts]);\r\n\r\n  const dismissAlert = useCallback((id: string) => {\r\n    return updateAlertStatus(id, \"dismiss\");\r\n  }, [updateAlertStatus]);\r\n\r\n  const resolveAlert = useCallback((id: string) => {\r\n    return updateAlertStatus(id, \"resolve\");\r\n  }, [updateAlertStatus]);\r\n\r\n  // Buscar alertas ao montar o componente ou quando os filtros mudarem\r\n  useEffect(() => {\r\n    fetchAlerts();\r\n  }, [fetchAlerts]);\r\n\r\n  return {\r\n    alerts,\r\n    loading,\r\n    error,\r\n    filters,\r\n    setFilters,\r\n    fetchAlerts,\r\n    dismissAlert,\r\n    resolveAlert,\r\n  };\r\n} "],"names":[],"mappings":";;;AAEA;;AAFA;;AAiCO,SAAS;;IACd,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW,EAAE;IAChD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAChD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAgB,CAAC;IAEtD,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;8CAAE;YAC9B,IAAI;gBACF,WAAW;gBACX,SAAS;gBAET,IAAI,MAAM;gBACV,MAAM,SAAS,IAAI;gBAEnB,IAAI,QAAQ,MAAM,EAAE;oBAClB,OAAO,MAAM,CAAC,UAAU,QAAQ,MAAM;gBACxC;gBACA,IAAI,QAAQ,QAAQ,EAAE;oBACpB,OAAO,MAAM,CAAC,YAAY,QAAQ,QAAQ;gBAC5C;gBACA,IAAI,QAAQ,YAAY,EAAE;oBACxB,OAAO,MAAM,CAAC,gBAAgB,QAAQ,YAAY;gBACpD;gBAEA,IAAI,OAAO,QAAQ,IAAI;oBACrB,OAAO,CAAC,CAAC,EAAE,OAAO,QAAQ,IAAI;gBAChC;gBAEA,MAAM,WAAW,MAAM,MAAM;gBAE7B,IAAI,CAAC,SAAS,EAAE,EAAE;oBAChB,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI;oBACrC,MAAM,IAAI,MAAM,SAAS;gBAC3B;gBAEA,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,UAAU,KAAK,MAAM,IAAI,EAAE;YAC7B,EAAE,OAAO,KAAK;gBACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;YAChD,SAAU;gBACR,WAAW;YACb;QACF;6CAAG;QAAC;KAAQ;IAEZ,MAAM,oBAAoB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;oDAAE,OAAO,IAAY;YACvD,IAAI;gBACF,WAAW;gBACX,SAAS;gBAET,MAAM,WAAW,MAAM,MAAM,eAAe;oBAC1C,QAAQ;oBACR,SAAS;wBACP,gBAAgB;oBAClB;oBACA,MAAM,KAAK,SAAS,CAAC;wBACnB;wBACA;oBACF;gBACF;gBAEA,IAAI,CAAC,SAAS,EAAE,EAAE;oBAChB,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI;oBACrC,MAAM,IAAI,MAAM,SAAS,CAAC,QAAQ,EAAE,WAAW,YAAY,aAAa,WAAW,OAAO,CAAC;gBAC7F;gBAEA,6BAA6B;gBAC7B,MAAM;gBACN,OAAO;YACT,EAAE,OAAO,KAAK;gBACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG,CAAC,QAAQ,EAAE,WAAW,YAAY,aAAa,WAAW,OAAO,CAAC;gBAChH,OAAO;YACT,SAAU;gBACR,WAAW;YACb;QACF;mDAAG;QAAC;KAAY;IAEhB,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;+CAAE,CAAC;YAChC,OAAO,kBAAkB,IAAI;QAC/B;8CAAG;QAAC;KAAkB;IAEtB,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;+CAAE,CAAC;YAChC,OAAO,kBAAkB,IAAI;QAC/B;8CAAG;QAAC;KAAkB;IAEtB,qEAAqE;IACrE,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+BAAE;YACR;QACF;8BAAG;QAAC;KAAY;IAEhB,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IACF;AACF;GAnGgB","debugId":null}},
    {"offset": {"line": 284, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/components/aws/CredentialSelector.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useAwsCredentials } from \"@/hooks/useAwsCredentials\";\r\nimport { useRouter } from \"next/navigation\";\r\n\r\nexport default function CredentialSelector() {\r\n  const { credentials, selectedCredential, selectCredential, loading } = useAwsCredentials();\r\n  const router = useRouter();\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"bg-white rounded-lg shadow-sm p-4 mb-6 flex items-center space-x-2\">\r\n        <span className=\"text-gray-700\">Carregando credenciais...</span>\r\n        <div className=\"animate-spin rounded-full h-4 w-4 border-t-2 border-b-2 border-indigo-500\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (credentials.length === 0) {\r\n    return (\r\n      <div className=\"bg-white rounded-lg shadow-sm p-4 mb-6\">\r\n        <div className=\"flex justify-between items-center\">\r\n          <span className=\"text-gray-700\">Nenhuma credencial AWS encontrada</span>\r\n          <button\r\n            onClick={() => router.push(\"/dashboard/credentials\")}\r\n            className=\"px-3 py-1 text-sm text-white bg-indigo-600 rounded-md hover:bg-indigo-700\"\r\n          >\r\n            Adicionar Credencial\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-sm p-4 mb-6\">\r\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\r\n        <label htmlFor=\"credential-selector\" className=\"block text-sm font-medium text-gray-700 mb-2 sm:mb-0\">\r\n          Selecionar Credencial AWS:\r\n        </label>\r\n        <div className=\"flex-1 sm:ml-4 max-w-md\">\r\n          <select\r\n            id=\"credential-selector\"\r\n            value={selectedCredential?.id || \"\"}\r\n            onChange={(e) => selectCredential(e.target.value)}\r\n            className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\r\n          >\r\n            <option value=\"\" disabled>\r\n              Selecione uma credencial\r\n            </option>\r\n            {credentials.map((cred) => (\r\n              <option key={cred.id} value={cred.id}>\r\n                {cred.name} ({cred.region})\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKe,SAAS;;IACtB,MAAM,EAAE,WAAW,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,oIAAA,CAAA,oBAAiB,AAAD;IACvF,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,IAAI,SAAS;QACX,qBACE,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAK,WAAU;8BAAgB;;;;;;8BAChC,6LAAC;oBAAI,WAAU;;;;;;;;;;;;IAGrB;IAEA,IAAI,YAAY,MAAM,KAAK,GAAG;QAC5B,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAK,WAAU;kCAAgB;;;;;;kCAChC,6LAAC;wBACC,SAAS,IAAM,OAAO,IAAI,CAAC;wBAC3B,WAAU;kCACX;;;;;;;;;;;;;;;;;IAMT;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAM,SAAQ;oBAAsB,WAAU;8BAAuD;;;;;;8BAGtG,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBACC,IAAG;wBACH,OAAO,oBAAoB,MAAM;wBACjC,UAAU,CAAC,IAAM,iBAAiB,EAAE,MAAM,CAAC,KAAK;wBAChD,WAAU;;0CAEV,6LAAC;gCAAO,OAAM;gCAAG,QAAQ;0CAAC;;;;;;4BAGzB,YAAY,GAAG,CAAC,CAAC,qBAChB,6LAAC;oCAAqB,OAAO,KAAK,EAAE;;wCACjC,KAAK,IAAI;wCAAC;wCAAG,KAAK,MAAM;wCAAC;;mCADf,KAAK,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;AASlC;GAvDwB;;QACiD,oIAAA,CAAA,oBAAiB;QACzE,qIAAA,CAAA,YAAS;;;KAFF","debugId":null}},
    {"offset": {"line": 445, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/app/dashboard/security/unified/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { useAwsCredentials } from \"@/hooks/useAwsCredentials\";\r\nimport { useAlerts } from \"@/hooks/useAlerts\";\r\nimport { motion } from \"framer-motion\";\r\nimport { \r\n  Shield, \r\n  User, \r\n  Server, \r\n  Database, \r\n  Key, \r\n  AlertCircle, \r\n  AlertTriangle, \r\n  Info, \r\n  RefreshCw,\r\n  ChevronRight,\r\n  ChevronDown,\r\n  CheckCircle,\r\n  XCircle\r\n} from \"lucide-react\";\r\nimport CredentialSelector from \"@/components/aws/CredentialSelector\";\r\n\r\nexport default function UnifiedSecurityPage() {\r\n  const { selectedCredential } = useAwsCredentials();\r\n  const { \r\n    alerts, \r\n    loading, \r\n    error, \r\n    fetchAlerts, \r\n    dismissAlert, \r\n    resolveAlert \r\n  } = useAlerts();\r\n  \r\n  const [expandedSections, setExpandedSections] = useState<string[]>([]);\r\n  const [activeTab, setActiveTab] = useState<string>(\"all\");\r\n  const [actionLoading, setActionLoading] = useState<string | null>(null);\r\n  const [scanningServices, setScanningServices] = useState<Record<string, boolean>>({});\r\n  \r\n  // Trigger scans for different services\r\n  const scanIAMSecurity = async () => {\r\n    if (!selectedCredential) return;\r\n    \r\n    try {\r\n      setScanningServices(prev => ({ ...prev, iam: true }));\r\n      \r\n      const response = await fetch('/api/alerts/iam', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ credentialId: selectedCredential.id })\r\n      });\r\n      \r\n      if (!response.ok) throw new Error('Falha ao verificar segurança do IAM');\r\n      \r\n      // Refresh alerts after scan\r\n      await fetchAlerts();\r\n      setActiveTab(\"iam\");\r\n    } catch (error) {\r\n      console.error('Erro ao verificar IAM:', error);\r\n    } finally {\r\n      setScanningServices(prev => ({ ...prev, iam: false }));\r\n    }\r\n  };\r\n  \r\n  const handleDismiss = async (id: string) => {\r\n    setActionLoading(id);\r\n    await dismissAlert(id);\r\n    setActionLoading(null);\r\n  };\r\n\r\n  const handleResolve = async (id: string) => {\r\n    setActionLoading(id);\r\n    await resolveAlert(id);\r\n    setActionLoading(null);\r\n  };\r\n  \r\n  const toggleSection = (section: string) => {\r\n    setExpandedSections(prev => \r\n      prev.includes(section) \r\n        ? prev.filter(s => s !== section) \r\n        : [...prev, section]\r\n    );\r\n  };\r\n  \r\n  // Filter alerts based on active tab\r\n  const filteredAlerts = alerts.filter(alert => {\r\n    if (activeTab === \"all\") return true;\r\n    if (activeTab === \"iam\") return [\"IAMUser\", \"IAMAccessKey\", \"IAMPolicy\", \"SecretManagerSecret\"].includes(alert.resourceType);\r\n    if (activeTab === \"ec2\") return [\"EC2Instance\", \"SecurityGroup\", \"Volume\"].includes(alert.resourceType);\r\n    if (activeTab === \"s3\") return alert.resourceType === \"S3Bucket\";\r\n    if (activeTab === \"rds\") return alert.resourceType === \"RDSInstance\";\r\n    if (activeTab === \"dynamodb\") return alert.resourceType === \"DynamoDB\";\r\n    if (activeTab === \"lambda\") return alert.resourceType === \"Lambda\";\r\n    return false;\r\n  });\r\n  \r\n  // Group alerts by service type\r\n  const alertsByService = filteredAlerts.reduce((acc, alert) => {\r\n    let service = \"other\";\r\n    \r\n    if ([\"IAMUser\", \"IAMAccessKey\", \"IAMPolicy\", \"SecretManagerSecret\"].includes(alert.resourceType)) {\r\n      service = \"iam\";\r\n    } else if ([\"EC2Instance\", \"SecurityGroup\", \"Volume\"].includes(alert.resourceType)) {\r\n      service = \"ec2\";\r\n    } else if (alert.resourceType === \"S3Bucket\") {\r\n      service = \"s3\";\r\n    } else if (alert.resourceType === \"RDSInstance\") {\r\n      service = \"rds\";\r\n    } else if (alert.resourceType === \"DynamoDB\") {\r\n      service = \"dynamodb\";\r\n    } else if (alert.resourceType === \"Lambda\") {\r\n      service = \"lambda\";\r\n    }\r\n    \r\n    if (!acc[service]) acc[service] = [];\r\n    acc[service].push(alert);\r\n    return acc;\r\n  }, {} as Record<string, any[]>);\r\n  \r\n  // Count alerts by severity (active only)\r\n  const criticalCount = filteredAlerts.filter(a => a.severity === \"CRITICAL\" && a.status === \"active\").length;\r\n  const highCount = filteredAlerts.filter(a => a.severity === \"HIGH\" && a.status === \"active\").length;\r\n  const mediumCount = filteredAlerts.filter(a => a.severity === \"MEDIUM\" && a.status === \"active\").length;\r\n  const lowCount = filteredAlerts.filter(a => a.severity === \"LOW\" && a.status === \"active\").length;\r\n  \r\n  // Utility functions for UI\r\n  const getServiceIcon = (service: string) => {\r\n    switch (service) {\r\n      case \"iam\": return <User className=\"h-5 w-5 text-orange-500\" />;\r\n      case \"ec2\": return <Server className=\"h-5 w-5 text-blue-500\" />;\r\n      case \"s3\": return <Database className=\"h-5 w-5 text-yellow-500\" />;\r\n      case \"rds\": return <Database className=\"h-5 w-5 text-green-500\" />;\r\n      case \"dynamodb\": return <Database className=\"h-5 w-5 text-purple-500\" />;\r\n      case \"lambda\": return <Key className=\"h-5 w-5 text-pink-500\" />;\r\n      default: return <Shield className=\"h-5 w-5 text-gray-500\" />;\r\n    }\r\n  };\r\n  \r\n  const getServiceLabel = (service: string) => {\r\n    switch (service) {\r\n      case \"iam\": return \"IAM & Secrets\";\r\n      case \"ec2\": return \"EC2 & Rede\";\r\n      case \"s3\": return \"S3 Storage\";\r\n      case \"rds\": return \"RDS Database\";\r\n      case \"dynamodb\": return \"DynamoDB\";\r\n      case \"lambda\": return \"Lambda\";\r\n      default: return \"Outros\";\r\n    }\r\n  };\r\n  \r\n  const getSeverityIcon = (severity: string) => {\r\n    switch (severity) {\r\n      case \"CRITICAL\": return <AlertCircle className=\"h-5 w-5 text-red-500\" />;\r\n      case \"HIGH\": return <AlertTriangle className=\"h-5 w-5 text-orange-500\" />;\r\n      case \"MEDIUM\": return <AlertTriangle className=\"h-5 w-5 text-yellow-500\" />;\r\n      case \"LOW\": return <Info className=\"h-5 w-5 text-blue-500\" />;\r\n      default: return <Info className=\"h-5 w-5 text-gray-500\" />;\r\n    }\r\n  };\r\n  \r\n  const getSeverityColor = (severity: string) => {\r\n    switch (severity) {\r\n      case \"CRITICAL\": return \"bg-red-50 text-red-800 border-red-200\";\r\n      case \"HIGH\": return \"bg-orange-50 text-orange-800 border-orange-200\";\r\n      case \"MEDIUM\": return \"bg-yellow-50 text-yellow-800 border-yellow-200\";\r\n      case \"LOW\": return \"bg-blue-50 text-blue-800 border-blue-200\";\r\n      default: return \"bg-gray-50 text-gray-800 border-gray-200\";\r\n    }\r\n  };\r\n  \r\n  const getSeverityBorderColor = (severity: string) => {\r\n    switch (severity) {\r\n      case \"CRITICAL\": return \"border-red-500\";\r\n      case \"HIGH\": return \"border-orange-500\";\r\n      case \"MEDIUM\": return \"border-yellow-500\";\r\n      case \"LOW\": return \"border-blue-500\";\r\n      default: return \"border-gray-300\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mx-auto max-w-7xl\">\r\n      <motion.div\r\n        initial={{ opacity: 0, y: -20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.3 }}\r\n        className=\"mb-6\"\r\n      >\r\n        <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center mb-4\">\r\n          <div>\r\n            <h1 className=\"text-3xl font-bold text-gray-900 flex items-center\">\r\n              <Shield className=\"mr-2 h-7 w-7 text-indigo-600\" />\r\n              Dashboard de Segurança Unificado\r\n            </h1>\r\n            <p className=\"mt-2 text-gray-600\">\r\n              Visão consolidada de problemas de segurança em todos os serviços AWS\r\n            </p>\r\n          </div>\r\n          \r\n          <div className=\"mt-4 sm:mt-0 flex flex-col sm:flex-row items-end sm:items-center gap-2\">\r\n            <CredentialSelector />\r\n            <button\r\n              onClick={() => fetchAlerts()}\r\n              disabled={loading}\r\n              className=\"px-3 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors flex items-center gap-1\"\r\n            >\r\n              <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\r\n              <span>Atualizar</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Tab Navigation */}\r\n        <div className=\"flex flex-wrap gap-2 mt-6 border-b border-gray-200\">\r\n          <button\r\n            onClick={() => setActiveTab(\"all\")}\r\n            className={`px-4 py-2 rounded-t-lg text-sm font-medium ${\r\n              activeTab === \"all\" \r\n                ? \"bg-white text-indigo-600 border-b-2 border-indigo-600\" \r\n                : \"text-gray-500 hover:text-gray-700\"\r\n            }`}\r\n          >\r\n            Todos os Serviços\r\n          </button>\r\n          <button\r\n            onClick={() => setActiveTab(\"iam\")}\r\n            className={`px-4 py-2 rounded-t-lg text-sm font-medium flex items-center ${\r\n              activeTab === \"iam\" \r\n                ? \"bg-white text-orange-600 border-b-2 border-orange-600\" \r\n                : \"text-gray-500 hover:text-gray-700\"\r\n            }`}\r\n          >\r\n            <User className=\"mr-1 h-4 w-4\" />\r\n            IAM & Secrets\r\n            {scanningServices.iam && <RefreshCw className=\"ml-1 h-3 w-3 animate-spin\" />}\r\n          </button>\r\n          <button\r\n            onClick={() => setActiveTab(\"ec2\")}\r\n            className={`px-4 py-2 rounded-t-lg text-sm font-medium flex items-center ${\r\n              activeTab === \"ec2\" \r\n                ? \"bg-white text-blue-600 border-b-2 border-blue-600\" \r\n                : \"text-gray-500 hover:text-gray-700\"\r\n            }`}\r\n          >\r\n            <Server className=\"mr-1 h-4 w-4\" />\r\n            EC2 & Rede\r\n          </button>\r\n          <button\r\n            onClick={() => setActiveTab(\"s3\")}\r\n            className={`px-4 py-2 rounded-t-lg text-sm font-medium flex items-center ${\r\n              activeTab === \"s3\" \r\n                ? \"bg-white text-yellow-600 border-b-2 border-yellow-600\" \r\n                : \"text-gray-500 hover:text-gray-700\"\r\n            }`}\r\n          >\r\n            <Database className=\"mr-1 h-4 w-4\" />\r\n            S3 Storage\r\n          </button>\r\n          <button\r\n            onClick={() => setActiveTab(\"rds\")}\r\n            className={`px-4 py-2 rounded-t-lg text-sm font-medium flex items-center ${\r\n              activeTab === \"rds\" \r\n                ? \"bg-white text-green-600 border-b-2 border-green-600\" \r\n                : \"text-gray-500 hover:text-gray-700\"\r\n            }`}\r\n          >\r\n            <Database className=\"mr-1 h-4 w-4\" />\r\n            RDS\r\n          </button>\r\n        </div>\r\n      </motion.div>\r\n      \r\n      {/* Service Actions */}\r\n      <div className=\"mb-6\">\r\n        <div className=\"bg-white rounded-lg shadow-sm p-4 border border-gray-200\">\r\n          <h2 className=\"text-lg font-medium mb-3\">Verificações de Segurança</h2>\r\n          <div className=\"flex flex-wrap gap-2\">\r\n            <button\r\n              onClick={scanIAMSecurity}\r\n              disabled={!selectedCredential || scanningServices.iam}\r\n              className=\"px-3 py-2 bg-orange-100 text-orange-800 rounded-md hover:bg-orange-200 transition-colors flex items-center gap-1 disabled:opacity-50\"\r\n            >\r\n              <User className=\"h-4 w-4\" />\r\n              <span>{scanningServices.iam ? \"Verificando IAM...\" : \"Verificar IAM\"}</span>\r\n              {scanningServices.iam && <RefreshCw className=\"animate-spin h-3 w-3 ml-1\" />}\r\n            </button>\r\n            {/* Add more scan buttons for other services as needed */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Alert Summary */}\r\n      <div className=\"mb-6 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n        <motion.div \r\n          initial={{ opacity: 0, y: 10 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.1 }}\r\n          className=\"bg-red-50 rounded-lg p-4 border border-red-200\"\r\n        >\r\n          <div className=\"flex items-center\">\r\n            <AlertCircle className=\"h-8 w-8 text-red-500 mr-3\" />\r\n            <div>\r\n              <p className=\"text-sm text-red-800\">Críticos</p>\r\n              <p className=\"text-3xl font-bold text-red-900\">{criticalCount}</p>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n        \r\n        <motion.div \r\n          initial={{ opacity: 0, y: 10 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.2 }}\r\n          className=\"bg-orange-50 rounded-lg p-4 border border-orange-200\"\r\n        >\r\n          <div className=\"flex items-center\">\r\n            <AlertTriangle className=\"h-8 w-8 text-orange-500 mr-3\" />\r\n            <div>\r\n              <p className=\"text-sm text-orange-800\">Alta Severidade</p>\r\n              <p className=\"text-3xl font-bold text-orange-900\">{highCount}</p>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n        \r\n        <motion.div \r\n          initial={{ opacity: 0, y: 10 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.3 }}\r\n          className=\"bg-yellow-50 rounded-lg p-4 border border-yellow-200\"\r\n        >\r\n          <div className=\"flex items-center\">\r\n            <AlertTriangle className=\"h-8 w-8 text-yellow-500 mr-3\" />\r\n            <div>\r\n              <p className=\"text-sm text-yellow-800\">Média Severidade</p>\r\n              <p className=\"text-3xl font-bold text-yellow-900\">{mediumCount}</p>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n        \r\n        <motion.div \r\n          initial={{ opacity: 0, y: 10 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.4 }}\r\n          className=\"bg-blue-50 rounded-lg p-4 border border-blue-200\"\r\n        >\r\n          <div className=\"flex items-center\">\r\n            <Info className=\"h-8 w-8 text-blue-500 mr-3\" />\r\n            <div>\r\n              <p className=\"text-sm text-blue-800\">Baixa Severidade</p>\r\n              <p className=\"text-3xl font-bold text-blue-900\">{lowCount}</p>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      </div>\r\n      \r\n      {/* Loading State */}\r\n      {loading && (\r\n        <div className=\"flex justify-center items-center py-12\">\r\n          <RefreshCw className=\"h-8 w-8 text-indigo-500 animate-spin\" />\r\n          <span className=\"ml-2 text-gray-700\">Carregando alertas de segurança...</span>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Error State */}\r\n      {error && (\r\n        <div className=\"bg-red-50 border border-red-200 text-red-800 px-4 py-3 rounded-md mb-6\">\r\n          <p className=\"flex items-center\">\r\n            <AlertCircle className=\"h-5 w-5 text-red-500 mr-2\" />\r\n            {error}\r\n          </p>\r\n        </div>\r\n      )}\r\n      \r\n      {/* No Results State */}\r\n      {!loading && !error && Object.keys(alertsByService).length === 0 && (\r\n        <div className=\"bg-white rounded-lg shadow-md p-8 text-center\">\r\n          <Shield className=\"mx-auto h-12 w-12 text-gray-400 mb-4\" />\r\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Nenhum alerta encontrado</h3>\r\n          <p className=\"text-gray-500 mb-4\">\r\n            {activeTab === \"all\" \r\n              ? \"Não há alertas de segurança para exibir no momento.\" \r\n              : `Não há alertas de segurança para ${getServiceLabel(activeTab)} no momento.`}\r\n          </p>\r\n          {activeTab === \"iam\" && (\r\n            <button\r\n              onClick={scanIAMSecurity}\r\n              disabled={!selectedCredential || scanningServices.iam}\r\n              className=\"mt-2 px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors\"\r\n            >\r\n              {scanningServices.iam ? \"Verificando IAM...\" : \"Verificar Segurança IAM\"}\r\n            </button>\r\n          )}\r\n        </div>\r\n      )}\r\n      \r\n      {/* Alerts by Service */}\r\n      {!loading && !error && Object.keys(alertsByService).length > 0 && (\r\n        <div className=\"space-y-6\">\r\n          {Object.entries(alertsByService).map(([service, serviceAlerts]) => (\r\n            <motion.div \r\n              key={service}\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              className=\"bg-white rounded-lg shadow-sm overflow-hidden border border-gray-200\"\r\n            >\r\n              <div \r\n                className={`px-4 py-3 flex items-center justify-between cursor-pointer ${\r\n                  expandedSections.includes(service) ? \"bg-gray-50\" : \"\"\r\n                }`}\r\n                onClick={() => toggleSection(service)}\r\n              >\r\n                <div className=\"flex items-center\">\r\n                  {getServiceIcon(service)}\r\n                  <h3 className=\"text-lg font-medium ml-2\">\r\n                    {getServiceLabel(service)} \r\n                    <span className=\"ml-2 text-sm font-normal text-gray-500\">\r\n                      {serviceAlerts.length} {serviceAlerts.length === 1 ? \"alerta\" : \"alertas\"}\r\n                    </span>\r\n                  </h3>\r\n                </div>\r\n                {expandedSections.includes(service) ? (\r\n                  <ChevronDown className=\"h-5 w-5 text-gray-500\" />\r\n                ) : (\r\n                  <ChevronRight className=\"h-5 w-5 text-gray-500\" />\r\n                )}\r\n              </div>\r\n              \r\n              {expandedSections.includes(service) && (\r\n                <div className=\"border-t border-gray-200\">\r\n                  <ul className=\"divide-y divide-gray-200\">\r\n                    {serviceAlerts.map(alert => (\r\n                      <li key={alert.id} className=\"px-4 py-3\">\r\n                        <div className=\"flex items-start\">\r\n                          <div className=\"flex-shrink-0 mt-1\">\r\n                            {getSeverityIcon(alert.severity)}\r\n                          </div>\r\n                          <div className=\"ml-3 flex-1\">\r\n                            <div className=\"flex flex-wrap justify-between items-start gap-2\">\r\n                              <h4 className=\"text-sm font-medium text-gray-900\">{alert.title}</h4>\r\n                              <div className=\"flex flex-wrap gap-2\">\r\n                                <span className={`px-2 py-0.5 rounded-full text-xs font-medium ${getSeverityColor(alert.severity)}`}>\r\n                                  {alert.severity}\r\n                                </span>\r\n                                <span className=\"px-2 py-0.5 bg-gray-100 text-gray-800 rounded-full text-xs\">\r\n                                  {alert.status === \"active\" ? \"Ativo\" : alert.status === \"resolved\" ? \"Resolvido\" : \"Arquivado\"}\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <p className=\"mt-1 text-sm text-gray-600\">{alert.description}</p>\r\n                            <div className=\"mt-2 flex items-center text-xs text-gray-500\">\r\n                              <span className=\"mr-2\">Recurso: {alert.resourceType}</span>\r\n                              <span className=\"mr-2\">ID: {alert.resourceId}</span>\r\n                              <span>Detectado: {new Date(alert.createdAt).toLocaleString()}</span>\r\n                            </div>\r\n                            \r\n                            {alert.status === \"active\" && (\r\n                              <div className=\"mt-3 flex gap-2\">\r\n                                <button\r\n                                  onClick={() => handleResolve(alert.id)}\r\n                                  disabled={actionLoading === alert.id}\r\n                                  className=\"px-2 py-1 bg-green-100 text-green-800 rounded-md text-xs flex items-center hover:bg-green-200\"\r\n                                >\r\n                                  <CheckCircle className=\"h-3 w-3 mr-1\" />\r\n                                  {actionLoading === alert.id ? \"...\" : \"Resolver\"}\r\n                                </button>\r\n                                <button\r\n                                  onClick={() => handleDismiss(alert.id)}\r\n                                  disabled={actionLoading === alert.id}\r\n                                  className=\"px-2 py-1 bg-gray-100 text-gray-800 rounded-md text-xs flex items-center hover:bg-gray-200\"\r\n                                >\r\n                                  <XCircle className=\"h-3 w-3 mr-1\" />\r\n                                  {actionLoading === alert.id ? \"...\" : \"Arquivar\"}\r\n                                </button>\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              )}\r\n            </motion.div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}}]
}