{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/hooks/useAwsCredentials.ts"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from 'react';\n\nexport interface AwsCredential {\n  id: string;\n  name: string;\n  accountId?: string;\n  accessKeyId: string;\n  secretAccessKey: string;\n  region: string;\n}\n\nexport interface UseAwsCredentialsResult {\n  credentials: AwsCredential[];\n  selectedCredential: AwsCredential | null;\n  selectCredential: (id: string) => void;\n  addCredential: (credential: Omit<AwsCredential, 'id'>) => Promise<void>;\n  updateCredential: (id: string, data: Partial<Omit<AwsCredential, 'id'>>) => Promise<void>;\n  deleteCredential: (id: string) => Promise<void>;\n  loading: boolean;\n  isLoading: boolean; // Alias for loading - needed for compatibility\n  error: string | null;\n  refresh: () => Promise<void>;\n}\n\nexport function useAwsCredentials(): UseAwsCredentialsResult {\n  const [credentials, setCredentials] = useState<AwsCredential[]>([]);\n  const [selectedCredentialId, setSelectedCredentialId] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Function to fetch credentials from the API\n  const fetchCredentials = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch('/api/aws/credentials');\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch credentials: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      setCredentials(data);\n      \n      // If we have credentials but none selected, select the first one\n      if (data.length > 0 && !selectedCredentialId) {\n        setSelectedCredentialId(data[0].id);\n        // Save to localStorage\n        localStorage.setItem('selectedAwsCredentialId', data[0].id);\n      }\n      \n      return data;\n    } catch (err) {\n      setError(`Error fetching credentials: ${err instanceof Error ? err.message : String(err)}`);\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to select a credential\n  const selectCredential = (id: string) => {\n    setSelectedCredentialId(id);\n    localStorage.setItem('selectedAwsCredentialId', id);\n  };\n\n  // Function to add a new credential\n  const addCredential = async (credential: Omit<AwsCredential, 'id'>) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch('/api/aws/credentials', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(credential),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to add credential: ${response.status}`);\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      setError(`Error adding credential: ${err instanceof Error ? err.message : String(err)}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to update an existing credential\n  const updateCredential = async (id: string, data: Partial<Omit<AwsCredential, 'id'>>) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch(`/api/aws/credentials/${id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to update credential: ${response.status}`);\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      setError(`Error updating credential: ${err instanceof Error ? err.message : String(err)}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to delete a credential\n  const deleteCredential = async (id: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch(`/api/aws/credentials/${id}`, {\n        method: 'DELETE',\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to delete credential: ${response.status}`);\n      }\n      \n      // If we delete the selected credential, select another one\n      if (id === selectedCredentialId) {\n        const remainingCredentials = credentials.filter(c => c.id !== id);\n        if (remainingCredentials.length > 0) {\n          selectCredential(remainingCredentials[0].id);\n        } else {\n          setSelectedCredentialId(null);\n          localStorage.removeItem('selectedAwsCredentialId');\n        }\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      setError(`Error deleting credential: ${err instanceof Error ? err.message : String(err)}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Load credentials on mount\n  useEffect(() => {\n    // Try to restore selected credential from localStorage\n    const savedCredentialId = localStorage.getItem('selectedAwsCredentialId');\n    if (savedCredentialId) {\n      setSelectedCredentialId(savedCredentialId);\n    }\n    \n    fetchCredentials();\n  }, []);\n\n  // Find the selected credential object\n  const selectedCredential = credentials.find(c => c.id === selectedCredentialId) || null;\n\n  return {\n    credentials,\n    selectedCredential,\n    selectCredential,\n    addCredential,\n    updateCredential,\n    deleteCredential,\n    loading,\n    isLoading: loading, // Alias for loading\n    error,\n    refresh: fetchCredentials,\n  };\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/components/aws/CredentialSelector.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useAwsCredentials } from \"@/hooks/useAwsCredentials\";\r\nimport { useRouter } from \"next/navigation\";\r\n\r\nexport default function CredentialSelector() {\r\n  const { credentials, selectedCredential, selectCredential, loading } = useAwsCredentials();\r\n  const router = useRouter();\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"bg-white rounded-lg shadow-sm p-4 mb-6 flex items-center space-x-2\">\r\n        <span className=\"text-gray-700\">Carregando credenciais...</span>\r\n        <div className=\"animate-spin rounded-full h-4 w-4 border-t-2 border-b-2 border-indigo-500\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (credentials.length === 0) {\r\n    return (\r\n      <div className=\"bg-white rounded-lg shadow-sm p-4 mb-6\">\r\n        <div className=\"flex justify-between items-center\">\r\n          <span className=\"text-gray-700\">Nenhuma credencial AWS encontrada</span>\r\n          <button\r\n            onClick={() => router.push(\"/dashboard/credentials\")}\r\n            className=\"px-3 py-1 text-sm text-white bg-indigo-600 rounded-md hover:bg-indigo-700\"\r\n          >\r\n            Adicionar Credencial\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-sm p-4 mb-6\">\r\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\r\n        <label htmlFor=\"credential-selector\" className=\"block text-sm font-medium text-gray-700 mb-2 sm:mb-0\">\r\n          Selecionar Credencial AWS:\r\n        </label>\r\n        <div className=\"flex-1 sm:ml-4 max-w-md\">\r\n          <select\r\n            id=\"credential-selector\"\r\n            value={selectedCredential?.id || \"\"}\r\n            onChange={(e) => selectCredential(e.target.value)}\r\n            className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\r\n          >\r\n            <option value=\"\" disabled>\r\n              Selecione uma credencial\r\n            </option>\r\n            {credentials.map((cred) => (\r\n              <option key={cred.id} value={cred.id}>\r\n                {cred.name} ({cred.region})\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKe,SAAS;;IACtB,MAAM,EAAE,WAAW,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,oIAAA,CAAA,oBAAiB,AAAD;IACvF,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,IAAI,SAAS;QACX,qBACE,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAK,WAAU;8BAAgB;;;;;;8BAChC,6LAAC;oBAAI,WAAU;;;;;;;;;;;;IAGrB;IAEA,IAAI,YAAY,MAAM,KAAK,GAAG;QAC5B,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAK,WAAU;kCAAgB;;;;;;kCAChC,6LAAC;wBACC,SAAS,IAAM,OAAO,IAAI,CAAC;wBAC3B,WAAU;kCACX;;;;;;;;;;;;;;;;;IAMT;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAM,SAAQ;oBAAsB,WAAU;8BAAuD;;;;;;8BAGtG,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBACC,IAAG;wBACH,OAAO,oBAAoB,MAAM;wBACjC,UAAU,CAAC,IAAM,iBAAiB,EAAE,MAAM,CAAC,KAAK;wBAChD,WAAU;;0CAEV,6LAAC;gCAAO,OAAM;gCAAG,QAAQ;0CAAC;;;;;;4BAGzB,YAAY,GAAG,CAAC,CAAC,qBAChB,6LAAC;oCAAqB,OAAO,KAAK,EAAE;;wCACjC,KAAK,IAAI;wCAAC;wCAAG,KAAK,MAAM;wCAAC;;mCADf,KAAK,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;AASlC;GAvDwB;;QACiD,oIAAA,CAAA,oBAAiB;QACzE,qIAAA,CAAA,YAAS;;;KAFF","debugId":null}},
    {"offset": {"line": 322, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nconst cardVariants = cva(\r\n  \"rounded-lg border shadow-sm\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-card text-card-foreground\",\r\n        cyber: \"bg-dark-cyber-card border-dark-cyber-border text-white\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof cardVariants>\r\n>(({ className, variant, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cardVariants({ variant, className })}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={`flex flex-col space-y-1.5 p-6 ${className}`}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h3\r\n    ref={ref}\r\n    className={`text-2xl font-semibold leading-none tracking-tight ${className}`}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <p\r\n    ref={ref}\r\n    className={`text-sm text-muted-foreground ${className}`}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={`p-6 pt-0 ${className}`} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={`flex items-center p-6 pt-0 ${className}`}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardTitle, CardDescription, CardContent, CardFooter } "],"names":[],"mappings":";;;;;;;;;AAAA;;;;;;;;;AAGA,MAAM,eAAe,IACnB,+BACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,OAAO;QACT;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,6LAAC;QACC,KAAK;QACL,WAAW,aAAa;YAAE;YAAS;QAAU;QAC5C,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAC,8BAA8B,EAAE,WAAW;QACtD,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAC,mDAAmD,EAAE,WAAW;QAC3E,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAC,8BAA8B,EAAE,WAAW;QACtD,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAC,SAAS,EAAE,WAAW;QAAG,GAAG,KAAK;;;;;;;AAE9D,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAC,2BAA2B,EAAE,WAAW;QACnD,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 443, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nconst alertVariants = cva(\r\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-background text-foreground\",\r\n        destructive:\r\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\r\n        warning: \r\n          \"border-orange-500/50 text-orange-600 dark:border-orange-500/50 [&>svg]:text-orange-600\",\r\n        success: \r\n          \"border-green-500/50 text-green-600 dark:border-green-500/50 [&>svg]:text-green-600\",\r\n        info: \r\n          \"border-blue-500/50 text-blue-600 dark:border-blue-500/50 [&>svg]:text-blue-600\",\r\n        cyber: \r\n          \"border-dark-cyber-accent bg-dark-cyber-card text-dark-cyber-accent dark:border-dark-cyber-border\"\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nconst Alert = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\r\n>(({ className, variant, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    role=\"alert\"\r\n    className={alertVariants({ variant, className })}\r\n    {...props}\r\n  />\r\n))\r\nAlert.displayName = \"Alert\"\r\n\r\nconst AlertTitle = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h5\r\n    ref={ref}\r\n    className={`mb-1 font-medium leading-none tracking-tight ${className}`}\r\n    {...props}\r\n  />\r\n))\r\nAlertTitle.displayName = \"AlertTitle\"\r\n\r\nconst AlertDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={`text-sm [&_p]:leading-relaxed ${className}`}\r\n    {...props}\r\n  />\r\n))\r\nAlertDescription.displayName = \"AlertDescription\"\r\n\r\nexport { Alert, AlertTitle, AlertDescription } "],"names":[],"mappings":";;;;;;AAAA;;;;;;;;;AAGA,MAAM,gBAAgB,IACpB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,SACE;YACF,MACE;YACF,OACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,6LAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,cAAc;YAAE;YAAS;QAAU;QAC7C,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAC,6CAA6C,EAAE,WAAW;QACrE,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAC,8BAA8B,EAAE,WAAW;QACtD,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 527, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/app/dashboard/iam/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useAwsCredentials } from \"@/hooks/useAwsCredentials\";\r\nimport { \r\n  AlertCircle, \r\n  AlertTriangle, \r\n  Check, \r\n  CheckCircle, \r\n  ChevronDown, \r\n  ChevronUp, \r\n  CircleAlert, \r\n  Database, \r\n  FileQuestion,\r\n  FileText, \r\n  Key, \r\n  Lock,\r\n  RefreshCw, \r\n  Shield, \r\n  ShieldAlert,\r\n  User, \r\n  UserCog,\r\n  Users,\r\n  AlertOctagon,\r\n  ShieldCheck\r\n} from \"lucide-react\";\r\nimport CredentialSelector from \"@/components/aws/CredentialSelector\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { \r\n  Alert,\r\n  AlertTitle,\r\n  AlertDescription\r\n} from \"@/components/ui/alert\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Spinner } from \"@/components/ui/spinner\";\r\n\r\n// Helper function to format date\r\nfunction formatDate(date: Date | string | undefined): string {\r\n  if (!date) return 'N/A';\r\n  \r\n  try {\r\n    const dateObj = new Date(date);\r\n    if (isNaN(dateObj.getTime())) return 'N/A';\r\n    \r\n    const now = new Date();\r\n    const diffMs = now.getTime() - dateObj.getTime();\r\n    const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));\r\n    \r\n    if (diffDays === 0) {\r\n      return 'Today';\r\n    } else if (diffDays === 1) {\r\n      return 'Yesterday';\r\n    } else if (diffDays < 30) {\r\n      return `${diffDays} days ago`;\r\n    } else if (diffDays < 365) {\r\n      const months = Math.floor(diffDays / 30);\r\n      return `${months} ${months === 1 ? 'month' : 'months'} ago`;\r\n    } else {\r\n      const years = Math.floor(diffDays / 365);\r\n      return `${years} ${years === 1 ? 'year' : 'years'} ago`;\r\n    }\r\n  } catch (e) {\r\n    console.error(\"Error formatting date:\", e);\r\n    return 'N/A';\r\n  }\r\n}\r\n\r\n// Define interfaces for IAM users\r\ninterface IAMUser {\r\n  id: string;\r\n  userName: string;\r\n  arn: string;\r\n  createDate: string;\r\n  passwordLastUsed?: string;\r\n  lastActivity?: string;\r\n  hasConsoleAccess: boolean;\r\n  hasAccessKeys: boolean;\r\n  hasMFA: boolean;\r\n}\r\n\r\n// Define interfaces for security issues\r\ninterface SecurityIssue {\r\n  id?: string;\r\n  title: string;\r\n  description: string;\r\n  severity?: string;\r\n  recommendation?: string;\r\n  userName?: string;\r\n  policyName?: string;\r\n  roleName?: string;\r\n  accessKeyId?: string;\r\n}\r\n\r\ninterface RootAccessIssue extends SecurityIssue {}\r\n\r\ninterface UserIssue extends SecurityIssue {\r\n  user: string;\r\n}\r\n\r\ninterface PolicyIssue extends SecurityIssue {\r\n  policyName: string;\r\n  policyArn: string;\r\n}\r\n\r\ninterface AccessKeyIssue extends SecurityIssue {\r\n  user: string;\r\n  accessKeyId: string;\r\n}\r\n\r\ninterface PasswordPolicyIssue extends SecurityIssue {}\r\n\r\ninterface IAMSecurityData {\r\n  rootAccountIssues: SecurityIssue[];\r\n  userIssues: SecurityIssue[];\r\n  policyIssues: SecurityIssue[];\r\n  roleIssues: SecurityIssue[];\r\n  accessKeyIssues: SecurityIssue[];\r\n  passwordPolicyIssues: SecurityIssue[];\r\n}\r\n\r\n// Security Summary Card Component\r\nconst SecuritySummaryCard = ({ \r\n  title, \r\n  count, \r\n  icon, \r\n  variant = \"default\" \r\n}: { \r\n  title: string; \r\n  count: number; \r\n  icon: React.ReactNode; \r\n  variant?: \"default\" | \"destructive\" | \"success\" \r\n}) => {\r\n  const variantClasses = {\r\n    default: \"bg-gray-100 text-gray-800\",\r\n    destructive: \"bg-red-100 text-red-800\",\r\n    success: \"bg-green-100 text-green-800\"\r\n  };\r\n\r\n  const getVariantClass = () => {\r\n    if (count === 0) return variantClasses.success;\r\n    return count > 0 ? variantClasses.destructive : variantClasses.default;\r\n  };\r\n\r\n  return (\r\n    <div className={`p-4 rounded-lg ${getVariantClass()} flex items-center space-x-4`}>\r\n      <div className=\"p-2 rounded-full bg-white\">\r\n        {icon}\r\n      </div>\r\n      <div>\r\n        <h3 className=\"font-medium\">{title}</h3>\r\n        <p className=\"text-2xl font-bold\">{count}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Main IAM page component\r\nexport default function IAMPage() {\r\n  const { selectedCredential, selectCredential } = useAwsCredentials();\r\n  const [users, setUsers] = useState<IAMUser[]>([]);\r\n  const [securityData, setSecurityData] = useState<IAMSecurityData | null>(null);\r\n  const [activeTab, setActiveTab] = useState(\"users\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [securityLoading, setSecurityLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [securityError, setSecurityError] = useState(\"\");\r\n\r\n  // Function to fetch IAM users\r\n  const fetchIAMUsers = async (credentialId: string) => {\r\n    setLoading(true);\r\n    setError(\"\");\r\n    \r\n    try {\r\n      const response = await fetch(`/api/aws/iam/users?credentialId=${credentialId}`);\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || \"Failed to fetch IAM users\");\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setUsers(data.users);\r\n    } catch (err) {\r\n      console.error(\"Error fetching IAM users:\", err);\r\n      setError(err instanceof Error ? err.message : \"An unknown error occurred\");\r\n      console.error(\"Failed to fetch IAM users:\", err instanceof Error ? err.message : \"An unknown error occurred\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Function to fetch security data\r\n  const fetchSecurityData = async (credentialId: string) => {\r\n    setSecurityLoading(true);\r\n    setSecurityError(\"\");\r\n    \r\n    try {\r\n      const response = await fetch(`/api/aws/iam/security?credentialId=${credentialId}`);\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || \"Failed to fetch security data\");\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setSecurityData(data);\r\n    } catch (err) {\r\n      console.error(\"Error fetching security data:\", err);\r\n      setSecurityError(err instanceof Error ? err.message : \"An unknown error occurred\");\r\n      console.error(\"Failed to fetch security data:\", err instanceof Error ? err.message : \"An unknown error occurred\");\r\n    } finally {\r\n      setSecurityLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch data when selected credential changes\r\n  useEffect(() => {\r\n    if (selectedCredential) {\r\n      fetchIAMUsers(selectedCredential.id);\r\n      \r\n      if (activeTab === \"security\") {\r\n        fetchSecurityData(selectedCredential.id);\r\n      }\r\n    } else {\r\n      setUsers([]);\r\n      setSecurityData(null);\r\n    }\r\n  }, [selectedCredential, activeTab]);\r\n\r\n  // Handle tab change\r\n  const handleTabChange = (value: string) => {\r\n    setActiveTab(value);\r\n    \r\n    if (value === \"security\" && selectedCredential && !securityData) {\r\n      fetchSecurityData(selectedCredential.id);\r\n    }\r\n  };\r\n\r\n  // Handle refresh\r\n  const handleRefresh = () => {\r\n    if (!selectedCredential) return;\r\n    \r\n    if (activeTab === \"users\") {\r\n      fetchIAMUsers(selectedCredential.id);\r\n    } else if (activeTab === \"security\") {\r\n      fetchSecurityData(selectedCredential.id);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto py-6 space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex flex-col space-y-2 md:flex-row md:justify-between md:items-center\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold tracking-tight\">IAM Security</h1>\r\n          <p className=\"text-gray-500\">\r\n            Monitor users, access keys, and security issues for IAM\r\n          </p>\r\n        </div>\r\n        \r\n        <div className=\"flex items-center space-x-4\">\r\n          <button \r\n            onClick={handleRefresh}\r\n            className=\"px-3 py-2 border rounded-md hover:bg-gray-100\"\r\n          >\r\n            <RefreshCw className=\"h-4 w-4\" />\r\n            <span className=\"sr-only\">Refresh</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <CredentialSelector />\r\n\r\n      {/* Main Content */}\r\n      <div className=\"space-y-4\">\r\n        {!selectedCredential ? (\r\n          <div className=\"p-4 bg-yellow-50 border-l-4 border-yellow-400 text-yellow-700\">\r\n            <div className=\"flex\">\r\n              <AlertCircle className=\"h-5 w-5 mr-2\" />\r\n              <div>\r\n                <h3 className=\"font-medium\">No credential selected</h3>\r\n                <p>Please select an AWS credential to view IAM information</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"space-y-4\">\r\n            {/* Tabs */}\r\n            <div className=\"border-b border-gray-200\">\r\n              <div className=\"flex -mb-px space-x-8\">\r\n                <button\r\n                  onClick={() => handleTabChange(\"users\")}\r\n                  className={`flex items-center gap-2 py-4 px-1 border-b-2 font-medium text-sm ${\r\n                    activeTab === \"users\"\r\n                      ? \"border-indigo-500 text-indigo-600\"\r\n                      : \"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300\"\r\n                  }`}\r\n                >\r\n                  <Users className=\"h-4 w-4\" />\r\n                  <span>Users</span>\r\n                </button>\r\n                <button\r\n                  onClick={() => handleTabChange(\"security\")}\r\n                  className={`flex items-center gap-2 py-4 px-1 border-b-2 font-medium text-sm ${\r\n                    activeTab === \"security\"\r\n                      ? \"border-indigo-500 text-indigo-600\"\r\n                      : \"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300\"\r\n                  }`}\r\n                >\r\n                  <Shield className=\"h-4 w-4\" />\r\n                  <span>Security</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Tab Content */}\r\n            <div className=\"mt-4\">\r\n              {activeTab === \"users\" && (\r\n                <UsersTab\r\n                  users={users}\r\n                  loading={loading}\r\n                  error={error}\r\n                  selectedCredential={selectedCredential.id}\r\n                />\r\n              )}\r\n              {activeTab === \"security\" && (\r\n                <SecurityTab\r\n                  securityData={securityData}\r\n                  loading={securityLoading}\r\n                  error={securityError}\r\n                  selectedCredential={selectedCredential.id}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Users Tab Component\r\nfunction UsersTab({ \r\n  users, \r\n  loading, \r\n  error, \r\n  selectedCredential \r\n}: { \r\n  users: IAMUser[]; \r\n  loading: boolean; \r\n  error: string; \r\n  selectedCredential: string; \r\n}) {\r\n  if (loading) {\r\n    return (\r\n      <div className=\"space-y-4\">\r\n        {Array.from({ length: 5 }).map((_, index) => (\r\n          <div key={index} className=\"border rounded-md p-4\">\r\n            <div className=\"animate-pulse\">\r\n              <div className=\"h-5 bg-gray-200 rounded w-1/3 mb-4\"></div>\r\n              <div className=\"space-y-2\">\r\n                <div className=\"h-4 bg-gray-200 rounded w-full\"></div>\r\n                <div className=\"h-4 bg-gray-200 rounded w-4/5\"></div>\r\n                <div className=\"h-4 bg-gray-200 rounded w-2/3\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"p-4 bg-red-50 border-l-4 border-red-400 text-red-700\">\r\n        <div className=\"flex\">\r\n          <AlertCircle className=\"h-5 w-5 mr-2\" />\r\n          <div>\r\n            <h3 className=\"font-medium\">Error</h3>\r\n            <p>{error}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!users.length) {\r\n    return (\r\n      <div className=\"p-4 bg-blue-50 border-l-4 border-blue-400 text-blue-700\">\r\n        <div className=\"flex\">\r\n          <AlertCircle className=\"h-5 w-5 mr-2\" />\r\n          <div>\r\n            <h3 className=\"font-medium\">No users found</h3>\r\n            <p>No IAM users were found for the selected AWS credential.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\r\n        <div className=\"bg-white border rounded-lg p-4 shadow-sm\">\r\n          <div className=\"pb-2\">\r\n            <h3 className=\"text-lg font-medium\">Total Users</h3>\r\n          </div>\r\n          <div className=\"text-3xl font-bold\">{users.length}</div>\r\n        </div>\r\n        <div className=\"bg-white border rounded-lg p-4 shadow-sm\">\r\n          <div className=\"pb-2\">\r\n            <h3 className=\"text-lg font-medium\">Without MFA</h3>\r\n          </div>\r\n          <div className=\"text-3xl font-bold text-orange-500\">\r\n            {users.filter(user => user.hasConsoleAccess && !user.hasMFA).length}\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-white border rounded-lg p-4 shadow-sm\">\r\n          <div className=\"pb-2\">\r\n            <h3 className=\"text-lg font-medium\">With Access Keys</h3>\r\n          </div>\r\n          <div className=\"text-3xl font-bold\">\r\n            {users.filter(user => user.hasAccessKeys).length}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"rounded-md border\">\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"w-full text-sm\">\r\n            <thead>\r\n              <tr className=\"bg-gray-100\">\r\n                <th className=\"whitespace-nowrap px-4 py-3 text-left font-medium\">Username</th>\r\n                <th className=\"whitespace-nowrap px-4 py-3 text-left font-medium\">Created</th>\r\n                <th className=\"whitespace-nowrap px-4 py-3 text-left font-medium\">Last Activity</th>\r\n                <th className=\"whitespace-nowrap px-4 py-3 text-left font-medium\">Console Access</th>\r\n                <th className=\"whitespace-nowrap px-4 py-3 text-left font-medium\">MFA</th>\r\n                <th className=\"whitespace-nowrap px-4 py-3 text-left font-medium\">Access Keys</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {users.map((user) => (\r\n                <tr key={user.id} className=\"border-t\">\r\n                  <td className=\"whitespace-nowrap px-4 py-3 font-medium\">{user.userName}</td>\r\n                  <td className=\"whitespace-nowrap px-4 py-3\">\r\n                    {formatDate(user.createDate)}\r\n                  </td>\r\n                  <td className=\"whitespace-nowrap px-4 py-3\">\r\n                    {formatDate(user.passwordLastUsed)}\r\n                  </td>\r\n                  <td className=\"whitespace-nowrap px-4 py-3\">\r\n                    {user.hasConsoleAccess ? (\r\n                      <Check className=\"h-5 w-5 text-green-500\" />\r\n                    ) : (\r\n                      <span className=\"text-gray-500\">—</span>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"whitespace-nowrap px-4 py-3\">\r\n                    {user.hasConsoleAccess ? (\r\n                      user.hasMFA ? (\r\n                        <Check className=\"h-5 w-5 text-green-500\" />\r\n                      ) : (\r\n                        <AlertCircle className=\"h-5 w-5 text-orange-500\" />\r\n                      )\r\n                    ) : (\r\n                      <span className=\"text-gray-500\">—</span>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"whitespace-nowrap px-4 py-3\">\r\n                    {user.hasAccessKeys ? (\r\n                      <Check className=\"h-5 w-5 text-green-500\" />\r\n                    ) : (\r\n                      <span className=\"text-gray-500\">—</span>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Security Tab Component\r\nfunction SecurityTab({ \r\n  securityData, \r\n  loading, \r\n  error,\r\n  selectedCredential\r\n}: { \r\n  securityData: IAMSecurityData | null; \r\n  loading: boolean; \r\n  error: string;\r\n  selectedCredential: string;\r\n}) {\r\n  const [expandedSections, setExpandedSections] = useState<Record<string, boolean>>({\r\n    users: false,\r\n    roles: false,\r\n    policies: false,\r\n    accessKeys: false,\r\n    passwordPolicy: false,\r\n  });\r\n\r\n  const toggleSection = (section: string) => {\r\n    setExpandedSections(prev => ({\r\n      ...prev,\r\n      [section]: !prev[section]\r\n    }));\r\n  };\r\n\r\n  if (!selectedCredential) {\r\n    return (\r\n      <div className=\"p-6 text-center\">\r\n        <Alert variant=\"warning\">\r\n          <AlertCircle className=\"h-4 w-4 mr-2\" />\r\n          <AlertTitle>Selecione uma credencial</AlertTitle>\r\n          <AlertDescription>\r\n            Selecione uma credencial AWS para visualizar os dados de segurança.\r\n          </AlertDescription>\r\n        </Alert>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"p-6 flex justify-center\">\r\n        <Spinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"p-6\">\r\n        <Alert variant=\"destructive\">\r\n          <AlertCircle className=\"h-4 w-4 mr-2\" />\r\n          <AlertTitle>Erro ao carregar dados</AlertTitle>\r\n          <AlertDescription>{error}</AlertDescription>\r\n        </Alert>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!securityData) {\r\n    return (\r\n      <div className=\"p-6 text-center\">\r\n        <Alert variant=\"warning\">\r\n          <AlertCircle className=\"h-4 w-4 mr-2\" />\r\n          <AlertTitle>Sem dados</AlertTitle>\r\n          <AlertDescription>\r\n            Não foram encontrados dados de segurança para esta credencial.\r\n          </AlertDescription>\r\n        </Alert>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const totalIssues = \r\n    (securityData.userIssues?.length || 0) + \r\n    (securityData.roleIssues?.length || 0) + \r\n    (securityData.policyIssues?.length || 0) + \r\n    (securityData.accessKeyIssues?.length || 0) + \r\n    (securityData.passwordPolicyIssues?.length || 0);\r\n\r\n  return (\r\n    <div className=\"p-6 space-y-6\">\r\n      <div className=\"mb-8\">\r\n        <h3 className=\"text-lg font-medium mb-4\">Resumo de Problemas de Segurança</h3>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n          <SecuritySummaryCard \r\n            title=\"Total de Problemas\"\r\n            count={totalIssues}\r\n            icon={<AlertOctagon className=\"h-5 w-5\" />}\r\n            variant={totalIssues > 0 ? \"destructive\" : \"success\"}\r\n          />\r\n          <SecuritySummaryCard\r\n            title=\"Usuários\"\r\n            count={securityData.userIssues?.length || 0}\r\n            icon={<User className=\"h-5 w-5\" />}\r\n            variant={(securityData.userIssues?.length || 0) > 0 ? \"destructive\" : \"success\"}\r\n          />\r\n          <SecuritySummaryCard\r\n            title=\"Perfis (Roles)\"\r\n            count={securityData.roleIssues?.length || 0}\r\n            icon={<ShieldCheck className=\"h-5 w-5\" />}\r\n            variant={(securityData.roleIssues?.length || 0) > 0 ? \"destructive\" : \"success\"}\r\n          />\r\n          <SecuritySummaryCard\r\n            title=\"Políticas\"\r\n            count={securityData.policyIssues?.length || 0}\r\n            icon={<FileText className=\"h-5 w-5\" />}\r\n            variant={(securityData.policyIssues?.length || 0) > 0 ? \"destructive\" : \"success\"}\r\n          />\r\n          <SecuritySummaryCard\r\n            title=\"Chaves de Acesso\"\r\n            count={securityData.accessKeyIssues?.length || 0}\r\n            icon={<Key className=\"h-5 w-5\" />}\r\n            variant={(securityData.accessKeyIssues?.length || 0) > 0 ? \"destructive\" : \"success\"}\r\n          />\r\n          <SecuritySummaryCard\r\n            title=\"Política de Senha\"\r\n            count={securityData.passwordPolicyIssues?.length || 0}\r\n            icon={<Lock className=\"h-5 w-5\" />}\r\n            variant={(securityData.passwordPolicyIssues?.length || 0) > 0 ? \"destructive\" : \"success\"}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Users section */}\r\n      <div className=\"border rounded-lg overflow-hidden\">\r\n        <button\r\n          className=\"w-full p-4 bg-gray-50 flex justify-between items-center\"\r\n          onClick={() => toggleSection('users')}\r\n        >\r\n          <div className=\"flex items-center space-x-2\">\r\n            <User className=\"h-5 w-5\" />\r\n            <h3 className=\"text-lg font-medium\">Usuários IAM</h3>\r\n            {securityData.userIssues && securityData.userIssues.length > 0 && (\r\n              <Badge variant=\"destructive\" className=\"ml-2\">{securityData.userIssues.length}</Badge>\r\n            )}\r\n          </div>\r\n          <ChevronDown className={`h-5 w-5 transition-transform ${expandedSections.users ? 'rotate-180' : ''}`} />\r\n        </button>\r\n        {expandedSections.users && securityData.userIssues && securityData.userIssues.length > 0 && (\r\n          <div className=\"p-4\">\r\n            <div className=\"space-y-4\">\r\n              {securityData.userIssues.map((issue, index) => (\r\n                <Card key={index} className=\"border-l-4 border-red-500\">\r\n                  <CardHeader className=\"pb-2\">\r\n                    <div className=\"flex justify-between items-start\">\r\n                      <CardTitle className=\"text-base\">{issue.userName}</CardTitle>\r\n                      <Badge variant={issue.severity === 'high' ? 'destructive' : issue.severity === 'medium' ? 'warning' : 'default'}>\r\n                        {issue.severity.toUpperCase()}\r\n                      </Badge>\r\n                    </div>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <p>{issue.description}</p>\r\n                  </CardContent>\r\n                </Card>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {expandedSections.users && (!securityData.userIssues || securityData.userIssues.length === 0) && (\r\n          <div className=\"p-4\">\r\n            <p className=\"text-green-600 flex items-center\">\r\n              <CheckCircle className=\"h-4 w-4 mr-2\" />\r\n              Nenhum problema encontrado com usuários IAM\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Roles section */}\r\n      <div className=\"border rounded-lg overflow-hidden\">\r\n        <button\r\n          className=\"w-full p-4 bg-gray-50 flex justify-between items-center\"\r\n          onClick={() => toggleSection('roles')}\r\n        >\r\n          <div className=\"flex items-center space-x-2\">\r\n            <ShieldCheck className=\"h-5 w-5\" />\r\n            <h3 className=\"text-lg font-medium\">Perfis IAM (Roles)</h3>\r\n            {securityData.roleIssues && securityData.roleIssues.length > 0 && (\r\n              <Badge variant=\"destructive\" className=\"ml-2\">{securityData.roleIssues.length}</Badge>\r\n            )}\r\n          </div>\r\n          <ChevronDown className={`h-5 w-5 transition-transform ${expandedSections.roles ? 'rotate-180' : ''}`} />\r\n        </button>\r\n        {expandedSections.roles && securityData.roleIssues && securityData.roleIssues.length > 0 && (\r\n          <div className=\"p-4\">\r\n            <div className=\"space-y-4\">\r\n              {securityData.roleIssues.map((issue, index) => (\r\n                <Card key={index} className=\"border-l-4 border-red-500\">\r\n                  <CardHeader className=\"pb-2\">\r\n                    <div className=\"flex justify-between items-start\">\r\n                      <CardTitle className=\"text-base\">{issue.roleName}</CardTitle>\r\n                      <Badge variant={issue.severity === 'high' ? 'destructive' : issue.severity === 'medium' ? 'warning' : 'default'}>\r\n                        {issue.severity.toUpperCase()}\r\n                      </Badge>\r\n                    </div>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <p>{issue.description}</p>\r\n                  </CardContent>\r\n                </Card>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {expandedSections.roles && (!securityData.roleIssues || securityData.roleIssues.length === 0) && (\r\n          <div className=\"p-4\">\r\n            <p className=\"text-green-600 flex items-center\">\r\n              <CheckCircle className=\"h-4 w-4 mr-2\" />\r\n              Nenhum problema encontrado com perfis IAM (roles)\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Policies section */}\r\n      <div className=\"border rounded-lg overflow-hidden\">\r\n        <button\r\n          className=\"w-full p-4 bg-gray-50 flex justify-between items-center\"\r\n          onClick={() => toggleSection('policies')}\r\n        >\r\n          <div className=\"flex items-center space-x-2\">\r\n            <FileText className=\"h-5 w-5\" />\r\n            <h3 className=\"text-lg font-medium\">Políticas IAM</h3>\r\n            {securityData.policyIssues && securityData.policyIssues.length > 0 && (\r\n              <Badge variant=\"destructive\" className=\"ml-2\">{securityData.policyIssues.length}</Badge>\r\n            )}\r\n          </div>\r\n          <ChevronDown className={`h-5 w-5 transition-transform ${expandedSections.policies ? 'rotate-180' : ''}`} />\r\n        </button>\r\n        {expandedSections.policies && securityData.policyIssues && securityData.policyIssues.length > 0 && (\r\n          <div className=\"p-4\">\r\n            <div className=\"space-y-4\">\r\n              {securityData.policyIssues.map((issue, index) => (\r\n                <Card key={index} className=\"border-l-4 border-red-500\">\r\n                  <CardHeader className=\"pb-2\">\r\n                    <div className=\"flex justify-between items-start\">\r\n                      <CardTitle className=\"text-base\">{issue.policyName}</CardTitle>\r\n                      <Badge variant={issue.severity === 'high' ? 'destructive' : issue.severity === 'medium' ? 'warning' : 'default'}>\r\n                        {issue.severity.toUpperCase()}\r\n                      </Badge>\r\n                    </div>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <p>{issue.description}</p>\r\n                  </CardContent>\r\n                </Card>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {expandedSections.policies && (!securityData.policyIssues || securityData.policyIssues.length === 0) && (\r\n          <div className=\"p-4\">\r\n            <p className=\"text-green-600 flex items-center\">\r\n              <CheckCircle className=\"h-4 w-4 mr-2\" />\r\n              Nenhum problema encontrado com políticas IAM\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Access Keys section */}\r\n      <div className=\"border rounded-lg overflow-hidden\">\r\n        <button\r\n          className=\"w-full p-4 bg-gray-50 flex justify-between items-center\"\r\n          onClick={() => toggleSection('accessKeys')}\r\n        >\r\n          <div className=\"flex items-center space-x-2\">\r\n            <Key className=\"h-5 w-5\" />\r\n            <h3 className=\"text-lg font-medium\">Chaves de Acesso</h3>\r\n            {securityData.accessKeyIssues && securityData.accessKeyIssues.length > 0 && (\r\n              <Badge variant=\"destructive\" className=\"ml-2\">{securityData.accessKeyIssues.length}</Badge>\r\n            )}\r\n          </div>\r\n          <ChevronDown className={`h-5 w-5 transition-transform ${expandedSections.accessKeys ? 'rotate-180' : ''}`} />\r\n        </button>\r\n        {expandedSections.accessKeys && securityData.accessKeyIssues && securityData.accessKeyIssues.length > 0 && (\r\n          <div className=\"p-4\">\r\n            <div className=\"space-y-4\">\r\n              {securityData.accessKeyIssues.map((issue, index) => (\r\n                <Card key={index} className=\"border-l-4 border-red-500\">\r\n                  <CardHeader className=\"pb-2\">\r\n                    <div className=\"flex justify-between items-start\">\r\n                      <CardTitle className=\"text-base\">{issue.userName}</CardTitle>\r\n                      <Badge variant={issue.severity === 'high' ? 'destructive' : issue.severity === 'medium' ? 'warning' : 'default'}>\r\n                        {issue.severity.toUpperCase()}\r\n                      </Badge>\r\n                    </div>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <p>{issue.description}</p>\r\n                    {issue.keyId && <p className=\"text-sm text-gray-600 mt-1\">ID da Chave: {issue.keyId}</p>}\r\n                    {issue.createdDate && <p className=\"text-sm text-gray-600\">Criada em: {new Date(issue.createdDate).toLocaleDateString()}</p>}\r\n                  </CardContent>\r\n                </Card>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {expandedSections.accessKeys && (!securityData.accessKeyIssues || securityData.accessKeyIssues.length === 0) && (\r\n          <div className=\"p-4\">\r\n            <p className=\"text-green-600 flex items-center\">\r\n              <CheckCircle className=\"h-4 w-4 mr-2\" />\r\n              Nenhum problema encontrado com chaves de acesso\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Password Policy section */}\r\n      <div className=\"border rounded-lg overflow-hidden\">\r\n        <button\r\n          className=\"w-full p-4 bg-gray-50 flex justify-between items-center\"\r\n          onClick={() => toggleSection('passwordPolicy')}\r\n        >\r\n          <div className=\"flex items-center space-x-2\">\r\n            <Lock className=\"h-5 w-5\" />\r\n            <h3 className=\"text-lg font-medium\">Política de Senha</h3>\r\n            {securityData.passwordPolicyIssues && securityData.passwordPolicyIssues.length > 0 && (\r\n              <Badge variant=\"destructive\" className=\"ml-2\">{securityData.passwordPolicyIssues.length}</Badge>\r\n            )}\r\n          </div>\r\n          <ChevronDown className={`h-5 w-5 transition-transform ${expandedSections.passwordPolicy ? 'rotate-180' : ''}`} />\r\n        </button>\r\n        {expandedSections.passwordPolicy && securityData.passwordPolicyIssues && securityData.passwordPolicyIssues.length > 0 && (\r\n          <div className=\"p-4\">\r\n            <div className=\"space-y-4\">\r\n              {securityData.passwordPolicyIssues.map((issue, index) => (\r\n                <Card key={index} className=\"border-l-4 border-red-500\">\r\n                  <CardHeader className=\"pb-2\">\r\n                    <div className=\"flex justify-between items-start\">\r\n                      <CardTitle className=\"text-base\">Problema na Política de Senha</CardTitle>\r\n                      <Badge variant={issue.severity === 'high' ? 'destructive' : issue.severity === 'medium' ? 'warning' : 'default'}>\r\n                        {issue.severity.toUpperCase()}\r\n                      </Badge>\r\n                    </div>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <p>{issue.description}</p>\r\n                  </CardContent>\r\n                </Card>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {expandedSections.passwordPolicy && (!securityData.passwordPolicyIssues || securityData.passwordPolicyIssues.length === 0) && (\r\n          <div className=\"p-4\">\r\n            <p className=\"text-green-600 flex items-center\">\r\n              <CheckCircle className=\"h-4 w-4 mr-2\" />\r\n              Nenhum problema encontrado com a política de senha\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}