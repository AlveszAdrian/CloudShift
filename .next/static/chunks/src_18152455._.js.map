{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/hooks/useAwsCredentials.ts"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from 'react';\n\nexport interface AwsCredential {\n  id: string;\n  name: string;\n  accountId?: string;\n  accessKeyId: string;\n  secretAccessKey: string;\n  region: string;\n}\n\nexport interface UseAwsCredentialsResult {\n  credentials: AwsCredential[];\n  selectedCredential: AwsCredential | null;\n  selectCredential: (id: string) => void;\n  addCredential: (credential: Omit<AwsCredential, 'id'>) => Promise<void>;\n  updateCredential: (id: string, data: Partial<Omit<AwsCredential, 'id'>>) => Promise<void>;\n  deleteCredential: (id: string) => Promise<void>;\n  loading: boolean;\n  isLoading: boolean; // Alias for loading - needed for compatibility\n  error: string | null;\n  refresh: () => Promise<void>;\n}\n\nexport function useAwsCredentials(): UseAwsCredentialsResult {\n  const [credentials, setCredentials] = useState<AwsCredential[]>([]);\n  const [selectedCredentialId, setSelectedCredentialId] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Function to fetch credentials from the API\n  const fetchCredentials = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch('/api/aws/credentials');\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch credentials: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      setCredentials(data);\n      \n      // If we have credentials but none selected, select the first one\n      if (data.length > 0 && !selectedCredentialId) {\n        setSelectedCredentialId(data[0].id);\n        // Save to localStorage\n        localStorage.setItem('selectedAwsCredentialId', data[0].id);\n      }\n      \n      return data;\n    } catch (err) {\n      setError(`Error fetching credentials: ${err instanceof Error ? err.message : String(err)}`);\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to select a credential\n  const selectCredential = (id: string) => {\n    setSelectedCredentialId(id);\n    localStorage.setItem('selectedAwsCredentialId', id);\n  };\n\n  // Function to add a new credential\n  const addCredential = async (credential: Omit<AwsCredential, 'id'>) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch('/api/aws/credentials', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(credential),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to add credential: ${response.status}`);\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      setError(`Error adding credential: ${err instanceof Error ? err.message : String(err)}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to update an existing credential\n  const updateCredential = async (id: string, data: Partial<Omit<AwsCredential, 'id'>>) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch(`/api/aws/credentials/${id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to update credential: ${response.status}`);\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      setError(`Error updating credential: ${err instanceof Error ? err.message : String(err)}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to delete a credential\n  const deleteCredential = async (id: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch(`/api/aws/credentials/${id}`, {\n        method: 'DELETE',\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to delete credential: ${response.status}`);\n      }\n      \n      // If we delete the selected credential, select another one\n      if (id === selectedCredentialId) {\n        const remainingCredentials = credentials.filter(c => c.id !== id);\n        if (remainingCredentials.length > 0) {\n          selectCredential(remainingCredentials[0].id);\n        } else {\n          setSelectedCredentialId(null);\n          localStorage.removeItem('selectedAwsCredentialId');\n        }\n      }\n      \n      await fetchCredentials();\n    } catch (err) {\n      setError(`Error deleting credential: ${err instanceof Error ? err.message : String(err)}`);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Load credentials on mount\n  useEffect(() => {\n    // Try to restore selected credential from localStorage\n    const savedCredentialId = localStorage.getItem('selectedAwsCredentialId');\n    if (savedCredentialId) {\n      setSelectedCredentialId(savedCredentialId);\n    }\n    \n    fetchCredentials();\n  }, []);\n\n  // Find the selected credential object\n  const selectedCredential = credentials.find(c => c.id === selectedCredentialId) || null;\n\n  return {\n    credentials,\n    selectedCredential,\n    selectCredential,\n    addCredential,\n    updateCredential,\n    deleteCredential,\n    loading,\n    isLoading: loading, // Alias for loading\n    error,\n    refresh: fetchCredentials,\n  };\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/components/aws/CredentialSelector.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useAwsCredentials } from \"@/hooks/useAwsCredentials\";\r\nimport { useRouter } from \"next/navigation\";\r\n\r\nexport default function CredentialSelector() {\r\n  const { credentials, selectedCredential, selectCredential, loading } = useAwsCredentials();\r\n  const router = useRouter();\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"bg-white rounded-lg shadow-sm p-4 mb-6 flex items-center space-x-2\">\r\n        <span className=\"text-gray-700\">Carregando credenciais...</span>\r\n        <div className=\"animate-spin rounded-full h-4 w-4 border-t-2 border-b-2 border-indigo-500\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (credentials.length === 0) {\r\n    return (\r\n      <div className=\"bg-white rounded-lg shadow-sm p-4 mb-6\">\r\n        <div className=\"flex justify-between items-center\">\r\n          <span className=\"text-gray-700\">Nenhuma credencial AWS encontrada</span>\r\n          <button\r\n            onClick={() => router.push(\"/dashboard/credentials\")}\r\n            className=\"px-3 py-1 text-sm text-white bg-indigo-600 rounded-md hover:bg-indigo-700\"\r\n          >\r\n            Adicionar Credencial\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-sm p-4 mb-6\">\r\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\r\n        <label htmlFor=\"credential-selector\" className=\"block text-sm font-medium text-gray-700 mb-2 sm:mb-0\">\r\n          Selecionar Credencial AWS:\r\n        </label>\r\n        <div className=\"flex-1 sm:ml-4 max-w-md\">\r\n          <select\r\n            id=\"credential-selector\"\r\n            value={selectedCredential?.id || \"\"}\r\n            onChange={(e) => selectCredential(e.target.value)}\r\n            className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\r\n          >\r\n            <option value=\"\" disabled>\r\n              Selecione uma credencial\r\n            </option>\r\n            {credentials.map((cred) => (\r\n              <option key={cred.id} value={cred.id}>\r\n                {cred.name} ({cred.region})\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKe,SAAS;;IACtB,MAAM,EAAE,WAAW,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,oIAAA,CAAA,oBAAiB,AAAD;IACvF,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,IAAI,SAAS;QACX,qBACE,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAK,WAAU;8BAAgB;;;;;;8BAChC,6LAAC;oBAAI,WAAU;;;;;;;;;;;;IAGrB;IAEA,IAAI,YAAY,MAAM,KAAK,GAAG;QAC5B,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAK,WAAU;kCAAgB;;;;;;kCAChC,6LAAC;wBACC,SAAS,IAAM,OAAO,IAAI,CAAC;wBAC3B,WAAU;kCACX;;;;;;;;;;;;;;;;;IAMT;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAM,SAAQ;oBAAsB,WAAU;8BAAuD;;;;;;8BAGtG,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBACC,IAAG;wBACH,OAAO,oBAAoB,MAAM;wBACjC,UAAU,CAAC,IAAM,iBAAiB,EAAE,MAAM,CAAC,KAAK;wBAChD,WAAU;;0CAEV,6LAAC;gCAAO,OAAM;gCAAG,QAAQ;0CAAC;;;;;;4BAGzB,YAAY,GAAG,CAAC,CAAC,qBAChB,6LAAC;oCAAqB,OAAO,KAAK,EAAE;;wCACjC,KAAK,IAAI;wCAAC;wCAAG,KAAK,MAAM;wCAAC;;mCADf,KAAK,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;AASlC;GAvDwB;;QACiD,oIAAA,CAAA,oBAAiB;QACzE,qIAAA,CAAA,YAAS;;;KAFF","debugId":null}},
    {"offset": {"line": 322, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/app/dashboard/compliance/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { useAwsCredentials } from \"@/hooks/useAwsCredentials\";\r\nimport { motion } from \"framer-motion\";\r\nimport CredentialSelector from \"@/components/aws/CredentialSelector\";\r\n\r\ninterface ComplianceFramework {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  totalControls: number;\r\n  passedControls: number;\r\n  failedControls: number;\r\n  warningControls: number;\r\n  lastScan: string;\r\n}\r\n\r\ninterface ComplianceControl {\r\n  id: string;\r\n  frameworkId: string;\r\n  name: string;\r\n  description: string;\r\n  status: 'passed' | 'failed' | 'warning';\r\n  severity: 'critical' | 'high' | 'medium' | 'low';\r\n  resourcesAffected: number;\r\n  remediationSteps: string;\r\n}\r\n\r\nexport default function CompliancePage() {\r\n  const { selectedCredential } = useAwsCredentials();\r\n  const [frameworks, setFrameworks] = useState<ComplianceFramework[]>([]);\r\n  const [controls, setControls] = useState<ComplianceControl[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [selectedFramework, setSelectedFramework] = useState<string | null>(null);\r\n  const [viewMode, setViewMode] = useState<'summary' | 'details'>('summary');\r\n\r\n  useEffect(() => {\r\n    if (selectedCredential) {\r\n      loadComplianceData();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, [selectedCredential]);\r\n\r\n  const loadComplianceData = async () => {\r\n    if (!selectedCredential) return;\r\n    \r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // Simular carregamento de dados de frameworks de compliance\r\n      // Em uma implementação real, isso viria da API\r\n      setTimeout(() => {\r\n        const demoFrameworks: ComplianceFramework[] = [\r\n          {\r\n            id: \"gdpr\",\r\n            name: \"GDPR\",\r\n            description: \"General Data Protection Regulation - Regulamentação europeia de proteção de dados\",\r\n            totalControls: 35,\r\n            passedControls: 28,\r\n            failedControls: 4,\r\n            warningControls: 3,\r\n            lastScan: \"2023-10-12T15:32:44Z\"\r\n          },\r\n          {\r\n            id: \"pci-dss\",\r\n            name: \"PCI DSS\",\r\n            description: \"Payment Card Industry Data Security Standard - Padrão de segurança para dados de cartão de pagamento\",\r\n            totalControls: 42,\r\n            passedControls: 38,\r\n            failedControls: 2,\r\n            warningControls: 2,\r\n            lastScan: \"2023-10-10T09:15:22Z\"\r\n          },\r\n          {\r\n            id: \"hipaa\",\r\n            name: \"HIPAA\",\r\n            description: \"Health Insurance Portability and Accountability Act - Regulamento para informações de saúde protegidas\",\r\n            totalControls: 28,\r\n            passedControls: 24,\r\n            failedControls: 1,\r\n            warningControls: 3,\r\n            lastScan: \"2023-10-08T14:27:55Z\"\r\n          },\r\n          {\r\n            id: \"nist\",\r\n            name: \"NIST 800-53\",\r\n            description: \"National Institute of Standards and Technology - Controles de segurança para sistemas federais\",\r\n            totalControls: 54,\r\n            passedControls: 45,\r\n            failedControls: 5,\r\n            warningControls: 4,\r\n            lastScan: \"2023-10-05T11:42:18Z\"\r\n          },\r\n          {\r\n            id: \"iso27001\",\r\n            name: \"ISO 27001\",\r\n            description: \"International Standard for Information Security Management\",\r\n            totalControls: 47,\r\n            passedControls: 42,\r\n            failedControls: 3,\r\n            warningControls: 2,\r\n            lastScan: \"2023-10-11T16:38:29Z\"\r\n          }\r\n        ];\r\n        \r\n        const demoControls: ComplianceControl[] = [\r\n          // GDPR Controls\r\n          {\r\n            id: \"gdpr-1\",\r\n            frameworkId: \"gdpr\",\r\n            name: \"Criptografia de Dados Pessoais\",\r\n            description: \"Dados pessoais devem ser criptografados em repouso e em trânsito\",\r\n            status: \"passed\",\r\n            severity: \"high\",\r\n            resourcesAffected: 0,\r\n            remediationSteps: \"N/A - Controle aprovado\"\r\n          },\r\n          {\r\n            id: \"gdpr-2\",\r\n            frameworkId: \"gdpr\",\r\n            name: \"Logs de Acesso a Dados Sensíveis\",\r\n            description: \"Deve haver logs de todos os acessos a dados pessoais sensíveis\",\r\n            status: \"warning\",\r\n            severity: \"medium\",\r\n            resourcesAffected: 2,\r\n            remediationSteps: \"Habilitar logs detalhados para os buckets S3 que contêm dados pessoais\"\r\n          },\r\n          {\r\n            id: \"gdpr-3\",\r\n            frameworkId: \"gdpr\",\r\n            name: \"Exposição Pública de Dados Pessoais\",\r\n            description: \"Dados pessoais não devem estar expostos publicamente\",\r\n            status: \"failed\",\r\n            severity: \"critical\",\r\n            resourcesAffected: 1,\r\n            remediationSteps: \"Remover acesso público do bucket S3 'customer-data-backup'\"\r\n          },\r\n          \r\n          // PCI DSS Controls\r\n          {\r\n            id: \"pci-1\",\r\n            frameworkId: \"pci-dss\",\r\n            name: \"Segmentação de Rede para Dados de Cartão\",\r\n            description: \"Ambiente de dados de cartão deve estar isolado logicamente\",\r\n            status: \"passed\",\r\n            severity: \"high\",\r\n            resourcesAffected: 0,\r\n            remediationSteps: \"N/A - Controle aprovado\"\r\n          },\r\n          {\r\n            id: \"pci-2\",\r\n            frameworkId: \"pci-dss\",\r\n            name: \"Criptografia TLS 1.2+ para Transmissão\",\r\n            description: \"Comunicações contendo dados de cartão devem usar TLS 1.2 ou superior\",\r\n            status: \"failed\",\r\n            severity: \"critical\",\r\n            resourcesAffected: 1,\r\n            remediationSteps: \"Atualizar configuração do ELB para só aceitar TLS 1.2 ou superior\"\r\n          },\r\n          \r\n          // HIPAA Controls\r\n          {\r\n            id: \"hipaa-1\",\r\n            frameworkId: \"hipaa\",\r\n            name: \"Backups de Informações de Saúde\",\r\n            description: \"Backups regulares de PHI devem ser realizados e testados\",\r\n            status: \"passed\",\r\n            severity: \"high\",\r\n            resourcesAffected: 0,\r\n            remediationSteps: \"N/A - Controle aprovado\"\r\n          },\r\n          {\r\n            id: \"hipaa-2\",\r\n            frameworkId: \"hipaa\",\r\n            name: \"Logs de Acesso a Registros Médicos\",\r\n            description: \"Todos os acessos a registros médicos devem ser logados e auditáveis\",\r\n            status: \"warning\",\r\n            severity: \"high\",\r\n            resourcesAffected: 3,\r\n            remediationSteps: \"Configurar CloudTrail para capturar todos os eventos de API em serviços relacionados a saúde\"\r\n          },\r\n          \r\n          // NIST Controls\r\n          {\r\n            id: \"nist-1\",\r\n            frameworkId: \"nist\",\r\n            name: \"Controle de Acesso por Privilégio Mínimo\",\r\n            description: \"Usuários devem ter apenas permissões mínimas necessárias\",\r\n            status: \"failed\",\r\n            severity: \"high\",\r\n            resourcesAffected: 5,\r\n            remediationSteps: \"Revisar e restringir permissões IAM dos usuários listados no relatório\"\r\n          },\r\n          {\r\n            id: \"nist-2\",\r\n            frameworkId: \"nist\",\r\n            name: \"Proteção de Fronteira\",\r\n            description: \"Implementação de controles de fronteira entre diferentes zonas de segurança\",\r\n            status: \"passed\",\r\n            severity: \"medium\",\r\n            resourcesAffected: 0,\r\n            remediationSteps: \"N/A - Controle aprovado\"\r\n          },\r\n          \r\n          // ISO 27001 Controls\r\n          {\r\n            id: \"iso-1\",\r\n            frameworkId: \"iso27001\",\r\n            name: \"Gestão de Incidentes\",\r\n            description: \"Processo formal para gestão e resposta a incidentes de segurança\",\r\n            status: \"warning\",\r\n            severity: \"medium\",\r\n            resourcesAffected: 1,\r\n            remediationSteps: \"Configurar alertas SNS para notificações automáticas de eventos de segurança\"\r\n          },\r\n          {\r\n            id: \"iso-2\",\r\n            frameworkId: \"iso27001\",\r\n            name: \"Classificação de Informações\",\r\n            description: \"Informações devem ser classificadas de acordo com sua sensibilidade\",\r\n            status: \"passed\",\r\n            severity: \"low\",\r\n            resourcesAffected: 0,\r\n            remediationSteps: \"N/A - Controle aprovado\"\r\n          }\r\n        ];\r\n        \r\n        setFrameworks(demoFrameworks);\r\n        setControls(demoControls);\r\n        \r\n        // Selecionar o primeiro framework por padrão se não houver nenhum selecionado\r\n        if (!selectedFramework && demoFrameworks.length > 0) {\r\n          setSelectedFramework(demoFrameworks[0].id);\r\n        }\r\n        \r\n        setLoading(false);\r\n      }, 1500);\r\n    } catch (err) {\r\n      setError(\"Erro ao carregar dados de compliance: \" + (err instanceof Error ? err.message : String(err)));\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getFrameworkById = (id: string) => {\r\n    return frameworks.find(f => f.id === id);\r\n  };\r\n\r\n  const getControlsByFramework = (frameworkId: string) => {\r\n    return controls.filter(c => c.frameworkId === frameworkId);\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case \"passed\": return \"bg-green-100 text-green-800\";\r\n      case \"failed\": return \"bg-red-100 text-red-800\";\r\n      case \"warning\": return \"bg-yellow-100 text-yellow-800\";\r\n      default: return \"bg-gray-100 text-gray-800\";\r\n    }\r\n  };\r\n\r\n  const getSeverityColor = (severity: string) => {\r\n    switch (severity) {\r\n      case \"critical\": return \"bg-red-100 text-red-800\";\r\n      case \"high\": return \"bg-orange-100 text-orange-800\";\r\n      case \"medium\": return \"bg-yellow-100 text-yellow-800\";\r\n      case \"low\": return \"bg-blue-100 text-blue-800\";\r\n      default: return \"bg-gray-100 text-gray-800\";\r\n    }\r\n  };\r\n\r\n  const renderComplianceScore = (framework: ComplianceFramework) => {\r\n    const percentPassed = Math.round((framework.passedControls / framework.totalControls) * 100);\r\n    let colorClass = \"\";\r\n    \r\n    if (percentPassed >= 90) colorClass = \"text-green-600\";\r\n    else if (percentPassed >= 70) colorClass = \"text-yellow-600\";\r\n    else colorClass = \"text-red-600\";\r\n    \r\n    return (\r\n      <div className=\"flex items-center\">\r\n        <span className={`text-2xl font-bold ${colorClass}`}>{percentPassed}%</span>\r\n        <div className=\"ml-3 w-full max-w-xs bg-gray-200 rounded-full h-2.5\">\r\n          <div \r\n            className={`h-2.5 rounded-full ${percentPassed >= 90 ? 'bg-green-500' : percentPassed >= 70 ? 'bg-yellow-500' : 'bg-red-500'}`}\r\n            style={{ width: `${percentPassed}%` }}>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <motion.div\r\n        className=\"mb-6\"\r\n        initial={{ opacity: 0, y: -20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.3 }}\r\n      >\r\n        <h1 className=\"text-3xl font-bold text-gray-900\">Compliance e Conformidade</h1>\r\n        <p className=\"mt-2 text-gray-600\">\r\n          Monitore a conformidade da sua infraestrutura AWS com diversas normas e regulamentações.\r\n        </p>\r\n      </motion.div>\r\n\r\n      <CredentialSelector />\r\n\r\n      {!selectedCredential ? (\r\n        <motion.div\r\n          className=\"bg-white rounded-lg shadow-md p-6 text-center\"\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.3 }}\r\n        >\r\n          <p className=\"text-gray-500 mb-4\">Selecione uma credencial AWS para visualizar os dados de compliance.</p>\r\n        </motion.div>\r\n      ) : loading ? (\r\n        <motion.div\r\n          className=\"bg-white rounded-lg shadow-md p-6 flex justify-center\"\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.3 }}\r\n        >\r\n          <div className=\"flex flex-col items-center\">\r\n            <div className=\"animate-spin rounded-full h-10 w-10 border-t-2 border-b-2 border-indigo-500 mb-4\"></div>\r\n            <p className=\"text-gray-500\">Carregando dados de compliance...</p>\r\n          </div>\r\n        </motion.div>\r\n      ) : error ? (\r\n        <motion.div\r\n          className=\"bg-white rounded-lg shadow-md p-6\"\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.3 }}\r\n        >\r\n          <div className=\"p-4 bg-red-50 rounded-md\">\r\n            <p className=\"text-red-700\">{error}</p>\r\n          </div>\r\n        </motion.div>\r\n      ) : (\r\n        <>\r\n          {/* Frameworks Grid */}\r\n          <motion.div\r\n            className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-6\"\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.3 }}\r\n          >\r\n            {frameworks.map((framework) => (\r\n              <div \r\n                key={framework.id}\r\n                className={`bg-white rounded-lg shadow-md p-5 cursor-pointer hover:shadow-lg transition-shadow duration-200 ${selectedFramework === framework.id ? 'ring-2 ring-indigo-500' : ''}`}\r\n                onClick={() => {\r\n                  setSelectedFramework(framework.id);\r\n                  setViewMode('summary');\r\n                }}\r\n              >\r\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">{framework.name}</h3>\r\n                <p className=\"text-sm text-gray-600 mb-4 line-clamp-2\">{framework.description}</p>\r\n                \r\n                {renderComplianceScore(framework)}\r\n                \r\n                <div className=\"mt-4 flex justify-between text-sm\">\r\n                  <div>\r\n                    <span className=\"font-medium text-green-600\">{framework.passedControls}</span>\r\n                    <span className=\"text-gray-500\"> aprovados</span>\r\n                  </div>\r\n                  <div>\r\n                    <span className=\"font-medium text-red-600\">{framework.failedControls}</span>\r\n                    <span className=\"text-gray-500\"> falhas</span>\r\n                  </div>\r\n                  <div>\r\n                    <span className=\"font-medium text-yellow-600\">{framework.warningControls}</span>\r\n                    <span className=\"text-gray-500\"> avisos</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </motion.div>\r\n\r\n          {/* Framework Details */}\r\n          {selectedFramework && (\r\n            <motion.div\r\n              className=\"bg-white rounded-lg shadow-md overflow-hidden\"\r\n              initial={{ opacity: 0, y: 20 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              transition={{ duration: 0.3, delay: 0.1 }}\r\n            >\r\n              {/* Header */}\r\n              <div className=\"p-6 border-b border-gray-200\">\r\n                <div className=\"flex justify-between items-center\">\r\n                  <div>\r\n                    <h2 className=\"text-xl font-bold text-gray-900\">\r\n                      {getFrameworkById(selectedFramework)?.name}\r\n                    </h2>\r\n                    <p className=\"text-sm text-gray-600 mt-1\">\r\n                      {getFrameworkById(selectedFramework)?.description}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"flex space-x-2\">\r\n                    <button\r\n                      className={`px-3 py-1 text-sm rounded-md ${viewMode === 'summary' ? 'bg-indigo-100 text-indigo-700' : 'bg-gray-100 text-gray-700'}`}\r\n                      onClick={() => setViewMode('summary')}\r\n                    >\r\n                      Resumo\r\n                    </button>\r\n                    <button\r\n                      className={`px-3 py-1 text-sm rounded-md ${viewMode === 'details' ? 'bg-indigo-100 text-indigo-700' : 'bg-gray-100 text-gray-700'}`}\r\n                      onClick={() => setViewMode('details')}\r\n                    >\r\n                      Detalhes\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                \r\n                {viewMode === 'summary' && (\r\n                  <div className=\"mt-4 grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                    <div className=\"bg-green-50 rounded-lg p-4\">\r\n                      <div className=\"flex items-center\">\r\n                        <div className=\"rounded-full bg-green-200 p-2 mr-3\">\r\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-green-600\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                            <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\r\n                          </svg>\r\n                        </div>\r\n                        <div>\r\n                          <p className=\"text-sm text-green-800\">Controles Aprovados</p>\r\n                          <p className=\"text-2xl font-bold text-green-800\">\r\n                            {getFrameworkById(selectedFramework)?.passedControls}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"bg-red-50 rounded-lg p-4\">\r\n                      <div className=\"flex items-center\">\r\n                        <div className=\"rounded-full bg-red-200 p-2 mr-3\">\r\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-red-600\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                            <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n                          </svg>\r\n                        </div>\r\n                        <div>\r\n                          <p className=\"text-sm text-red-800\">Controles com Falha</p>\r\n                          <p className=\"text-2xl font-bold text-red-800\">\r\n                            {getFrameworkById(selectedFramework)?.failedControls}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"bg-yellow-50 rounded-lg p-4\">\r\n                      <div className=\"flex items-center\">\r\n                        <div className=\"rounded-full bg-yellow-200 p-2 mr-3\">\r\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-yellow-600\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                            <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\r\n                          </svg>\r\n                        </div>\r\n                        <div>\r\n                          <p className=\"text-sm text-yellow-800\">Controles com Aviso</p>\r\n                          <p className=\"text-2xl font-bold text-yellow-800\">\r\n                            {getFrameworkById(selectedFramework)?.warningControls}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              \r\n              {/* Controls List */}\r\n              <div className=\"overflow-x-auto\">\r\n                <table className=\"min-w-full divide-y divide-gray-200\">\r\n                  <thead className=\"bg-gray-50\">\r\n                    <tr>\r\n                      <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Controle\r\n                      </th>\r\n                      <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Status\r\n                      </th>\r\n                      <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Severidade\r\n                      </th>\r\n                      <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Recursos Afetados\r\n                      </th>\r\n                      {viewMode === 'details' && (\r\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          Remediação\r\n                        </th>\r\n                      )}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                    {getControlsByFramework(selectedFramework).map((control) => (\r\n                      <tr key={control.id} className=\"hover:bg-gray-50\">\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <div className=\"text-sm font-medium text-gray-900\">{control.name}</div>\r\n                          <div className=\"text-xs text-gray-500 mt-1\">{control.description}</div>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusColor(control.status)}`}>\r\n                            {control.status === 'passed' ? 'Aprovado' : \r\n                             control.status === 'failed' ? 'Falha' : 'Aviso'}\r\n                          </span>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${getSeverityColor(control.severity)}`}>\r\n                            {control.severity === 'critical' ? 'Crítico' : \r\n                             control.severity === 'high' ? 'Alto' : \r\n                             control.severity === 'medium' ? 'Médio' : 'Baixo'}\r\n                          </span>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                          {control.resourcesAffected}\r\n                        </td>\r\n                        {viewMode === 'details' && (\r\n                          <td className=\"px-6 py-4 text-sm text-gray-500\">\r\n                            <p className=\"max-w-md\">{control.remediationSteps}</p>\r\n                          </td>\r\n                        )}\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              \r\n              {/* Footer */}\r\n              <div className=\"bg-gray-50 px-6 py-4\">\r\n                <p className=\"text-sm text-gray-500\">\r\n                  <span className=\"font-medium\">Última verificação:</span> {getFrameworkById(selectedFramework) ? new Date(getFrameworkById(selectedFramework)!.lastScan).toLocaleString() : '-'}\r\n                </p>\r\n              </div>\r\n            </motion.div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}}]
}