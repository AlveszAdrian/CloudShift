{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/components/aws/iam/AccessKeyManager.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { \r\n  Key, \r\n  Plus, \r\n  RefreshCw, \r\n  Trash2, \r\n  ShieldOff, \r\n  Shield, \r\n  RotateCw, \r\n  Copy, \r\n  CheckCircle, \r\n  AlertTriangle, \r\n  XCircle,\r\n  Clipboard,\r\n  Download,\r\n  Eye,\r\n  EyeOff\r\n} from \"lucide-react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\ninterface AccessKey {\r\n  AccessKeyId: string;\r\n  Status: string;\r\n  CreateDate: string;\r\n  UserName?: string;\r\n  SecretAccessKey?: string;\r\n}\r\n\r\ninterface AccessKeyManagerProps {\r\n  userName: string;\r\n  credentialId: string;\r\n  onUpdate?: () => void;\r\n}\r\n\r\nexport default function AccessKeyManager({ userName, credentialId, onUpdate }: AccessKeyManagerProps) {\r\n  const [accessKeys, setAccessKeys] = useState<AccessKey[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [successMessage, setSuccessMessage] = useState<string | null>(null);\r\n  const [newKey, setNewKey] = useState<AccessKey | null>(null);\r\n  const [showSecretKey, setShowSecretKey] = useState(false);\r\n  const [copied, setCopied] = useState<{[key: string]: boolean}>({});\r\n  const [deleteConfirm, setDeleteConfirm] = useState<string | null>(null);\r\n  const [deactivateConfirm, setDeactivateConfirm] = useState<string | null>(null);\r\n  const [activateConfirm, setActivateConfirm] = useState<string | null>(null);\r\n  const [rotateConfirm, setRotateConfirm] = useState<string | null>(null);\r\n  \r\n  // Buscar chaves ao carregar o componente\r\n  useEffect(() => {\r\n    fetchAccessKeys();\r\n  }, [userName, credentialId]);\r\n  \r\n  // Limpar mensagens após alguns segundos\r\n  useEffect(() => {\r\n    if (successMessage) {\r\n      const timer = setTimeout(() => {\r\n        setSuccessMessage(null);\r\n      }, 5000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n    \r\n    if (error) {\r\n      const timer = setTimeout(() => {\r\n        setError(null);\r\n      }, 5000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [successMessage, error]);\r\n\r\n  const fetchAccessKeys = async () => {\r\n    if (!userName || !credentialId) return;\r\n    \r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await fetch(\r\n        `/api/aws/iam/users/access-keys?userName=${encodeURIComponent(userName)}&credentialId=${encodeURIComponent(credentialId)}`\r\n      );\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Erro ao buscar chaves de acesso');\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setAccessKeys(data.accessKeys || []);\r\n    } catch (err) {\r\n      setError((err as Error).message || 'Erro ao buscar chaves de acesso');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCreateKey = async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    setNewKey(null);\r\n    \r\n    try {\r\n      const response = await fetch('/api/aws/iam/users/access-keys', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          userName,\r\n          credentialId\r\n        })\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Erro ao criar chave de acesso');\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setNewKey(data.accessKey);\r\n      setShowSecretKey(true);\r\n      setSuccessMessage('Chave de acesso criada com sucesso! Salve a chave secreta, ela não será mostrada novamente.');\r\n      \r\n      // Atualizar a lista de chaves\r\n      fetchAccessKeys();\r\n      \r\n      // Notificar o componente pai sobre a atualização\r\n      if (onUpdate) onUpdate();\r\n    } catch (err) {\r\n      setError((err as Error).message || 'Erro ao criar chave de acesso');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteKey = async (accessKeyId: string) => {\r\n    if (deleteConfirm !== accessKeyId) {\r\n      setDeleteConfirm(accessKeyId);\r\n      return;\r\n    }\r\n    \r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await fetch(\r\n        `/api/aws/iam/users/access-keys?userName=${encodeURIComponent(userName)}&credentialId=${encodeURIComponent(credentialId)}&accessKeyId=${encodeURIComponent(accessKeyId)}`,\r\n        {\r\n          method: 'DELETE'\r\n        }\r\n      );\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Erro ao excluir chave de acesso');\r\n      }\r\n      \r\n      setSuccessMessage('Chave de acesso excluída com sucesso');\r\n      setDeleteConfirm(null);\r\n      \r\n      // Atualizar a lista de chaves\r\n      fetchAccessKeys();\r\n      \r\n      // Notificar o componente pai sobre a atualização\r\n      if (onUpdate) onUpdate();\r\n    } catch (err) {\r\n      setError((err as Error).message || 'Erro ao excluir chave de acesso');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDeactivateKey = async (accessKeyId: string) => {\r\n    if (deactivateConfirm !== accessKeyId) {\r\n      setDeactivateConfirm(accessKeyId);\r\n      return;\r\n    }\r\n    \r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await fetch('/api/aws/iam/users/access-keys', {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          userName,\r\n          credentialId,\r\n          accessKeyId,\r\n          status: 'Inactive'\r\n        })\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Erro ao desativar chave de acesso');\r\n      }\r\n      \r\n      setSuccessMessage('Chave de acesso desativada com sucesso');\r\n      setDeactivateConfirm(null);\r\n      \r\n      // Atualizar a lista de chaves\r\n      fetchAccessKeys();\r\n      \r\n      // Notificar o componente pai sobre a atualização\r\n      if (onUpdate) onUpdate();\r\n    } catch (err) {\r\n      setError((err as Error).message || 'Erro ao desativar chave de acesso');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleActivateKey = async (accessKeyId: string) => {\r\n    if (activateConfirm !== accessKeyId) {\r\n      setActivateConfirm(accessKeyId);\r\n      return;\r\n    }\r\n    \r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await fetch('/api/aws/iam/users/access-keys', {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          userName,\r\n          credentialId,\r\n          accessKeyId,\r\n          status: 'Active'\r\n        })\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Erro ao ativar chave de acesso');\r\n      }\r\n      \r\n      setSuccessMessage('Chave de acesso ativada com sucesso');\r\n      setActivateConfirm(null);\r\n      \r\n      // Atualizar a lista de chaves\r\n      fetchAccessKeys();\r\n      \r\n      // Notificar o componente pai sobre a atualização\r\n      if (onUpdate) onUpdate();\r\n    } catch (err) {\r\n      setError((err as Error).message || 'Erro ao ativar chave de acesso');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRotateKey = async (accessKeyId: string) => {\r\n    if (rotateConfirm !== accessKeyId) {\r\n      setRotateConfirm(accessKeyId);\r\n      return;\r\n    }\r\n    \r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // 1. Criar uma nova chave\r\n      const createResponse = await fetch('/api/aws/iam/users/access-keys', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          userName,\r\n          credentialId\r\n        })\r\n      });\r\n      \r\n      if (!createResponse.ok) {\r\n        const errorData = await createResponse.json();\r\n        throw new Error(errorData.error || 'Erro ao criar nova chave de acesso');\r\n      }\r\n      \r\n      const createData = await createResponse.json();\r\n      setNewKey(createData.accessKey);\r\n      setShowSecretKey(true);\r\n      \r\n      // 2. Desativar a chave antiga\r\n      const deactivateResponse = await fetch('/api/aws/iam/users/access-keys', {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          userName,\r\n          credentialId,\r\n          accessKeyId,\r\n          status: 'Inactive'\r\n        })\r\n      });\r\n      \r\n      if (!deactivateResponse.ok) {\r\n        const errorData = await deactivateResponse.json();\r\n        console.error('Erro ao desativar chave antiga:', errorData.error);\r\n        // Não lançar erro para continuar o processo\r\n      }\r\n      \r\n      setSuccessMessage('Chave de acesso rotacionada com sucesso! Salve a nova chave secreta, ela não será mostrada novamente.');\r\n      setRotateConfirm(null);\r\n      \r\n      // Atualizar a lista de chaves\r\n      fetchAccessKeys();\r\n      \r\n      // Notificar o componente pai sobre a atualização\r\n      if (onUpdate) onUpdate();\r\n    } catch (err) {\r\n      setError((err as Error).message || 'Erro ao rotacionar chave de acesso');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const copyToClipboard = (text: string, id: string) => {\r\n    navigator.clipboard.writeText(text).then(() => {\r\n      setCopied({ ...copied, [id]: true });\r\n      setTimeout(() => {\r\n        setCopied({ ...copied, [id]: false });\r\n      }, 2000);\r\n    });\r\n  };\r\n\r\n  const downloadCredentials = () => {\r\n    if (!newKey || !newKey.SecretAccessKey) return;\r\n    \r\n    const credentials = {\r\n      AccessKeyId: newKey.AccessKeyId,\r\n      SecretAccessKey: newKey.SecretAccessKey\r\n    };\r\n    \r\n    const blob = new Blob([JSON.stringify(credentials, null, 2)], { type: 'application/json' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `aws-credentials-${userName}-${new Date().toISOString().split('T')[0]}.json`;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const formatDate = (dateString: string) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleString('pt-BR');\r\n  };\r\n\r\n  const canCreateNewKey = accessKeys.length < 2;\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      {/* Header */}\r\n      <div className=\"flex justify-between items-center\">\r\n        <div className=\"flex items-center gap-2\">\r\n          <Key className=\"h-5 w-5 text-blue-600\" />\r\n          <h3 className=\"text-lg font-semibold text-gray-900\">Chaves de Acesso</h3>\r\n        </div>\r\n        \r\n        <div className=\"flex items-center gap-2\">\r\n          <button\r\n            onClick={fetchAccessKeys}\r\n            className=\"p-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-md transition-colors\"\r\n            disabled={isLoading}\r\n          >\r\n            <RefreshCw className={`h-4 w-4 ${isLoading ? 'animate-spin' : ''}`} />\r\n          </button>\r\n          \r\n          <button\r\n            onClick={handleCreateKey}\r\n            disabled={!canCreateNewKey || isLoading}\r\n            className={`flex items-center gap-1 px-3 py-2 rounded-md text-sm transition-colors\r\n              ${canCreateNewKey \r\n                ? 'bg-blue-600 hover:bg-blue-700 text-white' \r\n                : 'bg-gray-200 text-gray-500 cursor-not-allowed'}`}\r\n          >\r\n            <Plus className=\"h-4 w-4\" />\r\n            <span>Nova Chave</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Messages */}\r\n      {error && (\r\n        <motion.div\r\n          initial={{ opacity: 0, y: -10 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className=\"bg-red-50 border border-red-200 text-red-800 px-4 py-3 rounded-md flex items-start gap-2\"\r\n        >\r\n          <AlertTriangle className=\"h-5 w-5 text-red-500 flex-shrink-0 mt-0.5\" />\r\n          <div>\r\n            <p className=\"font-medium\">Erro</p>\r\n            <p className=\"text-sm\">{error}</p>\r\n          </div>\r\n        </motion.div>\r\n      )}\r\n      \r\n      {successMessage && (\r\n        <motion.div\r\n          initial={{ opacity: 0, y: -10 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className=\"bg-green-50 border border-green-200 text-green-800 px-4 py-3 rounded-md flex items-start gap-2\"\r\n        >\r\n          <CheckCircle className=\"h-5 w-5 text-green-500 flex-shrink-0 mt-0.5\" />\r\n          <p>{successMessage}</p>\r\n        </motion.div>\r\n      )}\r\n      \r\n      {/* New Key Display */}\r\n      {newKey && (\r\n        <motion.div\r\n          initial={{ opacity: 0, height: 0 }}\r\n          animate={{ opacity: 1, height: 'auto' }}\r\n          className=\"bg-blue-50 border border-blue-200 rounded-lg p-4 mb-4\"\r\n        >\r\n          <div className=\"flex justify-between items-start mb-2\">\r\n            <h4 className=\"text-blue-800 font-medium\">Nova Chave de Acesso Criada</h4>\r\n            <div className=\"flex gap-2\">\r\n              <button\r\n                onClick={downloadCredentials}\r\n                className=\"text-blue-700 hover:text-blue-900 p-1\"\r\n                title=\"Baixar Credenciais\"\r\n              >\r\n                <Download className=\"h-4 w-4\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"space-y-3 mt-3\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-blue-700 mb-1\">\r\n                ID da Chave de Acesso\r\n              </label>\r\n              <div className=\"flex items-center\">\r\n                <input\r\n                  type=\"text\"\r\n                  readOnly\r\n                  value={newKey.AccessKeyId}\r\n                  className=\"flex-1 p-2 bg-white border border-blue-300 rounded-l-md text-sm focus:outline-none\"\r\n                />\r\n                <button\r\n                  onClick={() => copyToClipboard(newKey.AccessKeyId, 'access-key-id')}\r\n                  className=\"p-2 bg-blue-100 border border-blue-300 border-l-0 rounded-r-md hover:bg-blue-200 transition-colors\"\r\n                >\r\n                  {copied['access-key-id'] ? (\r\n                    <CheckCircle className=\"h-4 w-4 text-green-600\" />\r\n                  ) : (\r\n                    <Copy className=\"h-4 w-4 text-blue-700\" />\r\n                  )}\r\n                </button>\r\n              </div>\r\n            </div>\r\n            \r\n            <div>\r\n              <label className=\"block text-sm font-medium text-blue-700 mb-1 flex justify-between\">\r\n                <span>Chave de Acesso Secreta</span>\r\n                <button\r\n                  onClick={() => setShowSecretKey(!showSecretKey)}\r\n                  className=\"text-blue-600 hover:text-blue-800 text-xs flex items-center\"\r\n                >\r\n                  {showSecretKey ? (\r\n                    <>\r\n                      <EyeOff className=\"h-3 w-3 mr-1\" />\r\n                      Ocultar\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <Eye className=\"h-3 w-3 mr-1\" />\r\n                      Mostrar\r\n                    </>\r\n                  )}\r\n                </button>\r\n              </label>\r\n              <div className=\"flex items-center\">\r\n                <input\r\n                  type={showSecretKey ? \"text\" : \"password\"}\r\n                  readOnly\r\n                  value={newKey.SecretAccessKey || ''}\r\n                  className=\"flex-1 p-2 bg-white border border-blue-300 rounded-l-md text-sm focus:outline-none\"\r\n                />\r\n                <button\r\n                  onClick={() => copyToClipboard(newKey.SecretAccessKey || '', 'secret-access-key')}\r\n                  className=\"p-2 bg-blue-100 border border-blue-300 border-l-0 rounded-r-md hover:bg-blue-200 transition-colors\"\r\n                >\r\n                  {copied['secret-access-key'] ? (\r\n                    <CheckCircle className=\"h-4 w-4 text-green-600\" />\r\n                  ) : (\r\n                    <Copy className=\"h-4 w-4 text-blue-700\" />\r\n                  )}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"mt-4 p-3 bg-yellow-50 border border-yellow-200 rounded-md text-yellow-800 text-sm\">\r\n            <div className=\"flex items-start gap-2\">\r\n              <AlertTriangle className=\"h-5 w-5 text-yellow-600 flex-shrink-0 mt-0.5\" />\r\n              <div>\r\n                <p className=\"font-medium\">Importante</p>\r\n                <p>Esta é a única vez que a chave de acesso secreta será mostrada. Salve-a em um local seguro.</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      )}\r\n      \r\n      {/* Access Keys Table */}\r\n      <div className=\"bg-white shadow-sm rounded-lg border overflow-hidden\">\r\n        <table className=\"min-w-full divide-y divide-gray-200\">\r\n          <thead className=\"bg-gray-50\">\r\n            <tr>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                ID da Chave\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                Status\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                Data de Criação\r\n              </th>\r\n              <th scope=\"col\" className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                Ações\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"bg-white divide-y divide-gray-200\">\r\n            {isLoading && !accessKeys.length ? (\r\n              <tr>\r\n                <td colSpan={4} className=\"px-6 py-4 text-center text-gray-500\">\r\n                  <RefreshCw className=\"h-5 w-5 animate-spin mx-auto\" />\r\n                  <p className=\"mt-2\">Carregando chaves de acesso...</p>\r\n                </td>\r\n              </tr>\r\n            ) : accessKeys.length === 0 ? (\r\n              <tr>\r\n                <td colSpan={4} className=\"px-6 py-4 text-center text-gray-500\">\r\n                  <Key className=\"h-8 w-8 text-gray-300 mx-auto mb-1\" />\r\n                  <p>Nenhuma chave de acesso encontrada</p>\r\n                </td>\r\n              </tr>\r\n            ) : (\r\n              accessKeys.map((key) => (\r\n                <tr key={key.AccessKeyId} className=\"hover:bg-gray-50\">\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                    {key.AccessKeyId}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\r\n                    {key.Status === 'Active' ? (\r\n                      <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\">\r\n                        <Shield className=\"h-3 w-3 mr-1\" />\r\n                        Ativa\r\n                      </span>\r\n                    ) : (\r\n                      <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800\">\r\n                        <ShieldOff className=\"h-3 w-3 mr-1\" />\r\n                        Inativa\r\n                      </span>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                    {formatDate(key.CreateDate)}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium space-x-2\">\r\n                    {key.Status === 'Active' ? (\r\n                      <button\r\n                        onClick={() => handleDeactivateKey(key.AccessKeyId)}\r\n                        className={`text-yellow-600 hover:text-yellow-900 ${isLoading ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n                        disabled={isLoading}\r\n                        title=\"Desativar Chave\"\r\n                      >\r\n                        {deactivateConfirm === key.AccessKeyId ? (\r\n                          <span className=\"text-xs bg-yellow-100 text-yellow-800 px-2 py-1 rounded\">Confirmar</span>\r\n                        ) : (\r\n                          <ShieldOff className=\"h-4 w-4 inline\" />\r\n                        )}\r\n                      </button>\r\n                    ) : (\r\n                      <button\r\n                        onClick={() => handleActivateKey(key.AccessKeyId)}\r\n                        className={`text-green-600 hover:text-green-900 ${isLoading ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n                        disabled={isLoading}\r\n                        title=\"Ativar Chave\"\r\n                      >\r\n                        {activateConfirm === key.AccessKeyId ? (\r\n                          <span className=\"text-xs bg-green-100 text-green-800 px-2 py-1 rounded\">Confirmar</span>\r\n                        ) : (\r\n                          <Shield className=\"h-4 w-4 inline\" />\r\n                        )}\r\n                      </button>\r\n                    )}\r\n                    \r\n                    <button\r\n                      onClick={() => handleRotateKey(key.AccessKeyId)}\r\n                      className={`text-blue-600 hover:text-blue-900 ${!canCreateNewKey || isLoading ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n                      disabled={!canCreateNewKey || isLoading}\r\n                      title={canCreateNewKey ? \"Rotacionar Chave\" : \"Exclua uma chave existente antes de rotacionar\"}\r\n                    >\r\n                      {rotateConfirm === key.AccessKeyId ? (\r\n                        <span className=\"text-xs bg-blue-100 text-blue-800 px-2 py-1 rounded\">Confirmar</span>\r\n                      ) : (\r\n                        <RotateCw className=\"h-4 w-4 inline\" />\r\n                      )}\r\n                    </button>\r\n                    \r\n                    <button\r\n                      onClick={() => handleDeleteKey(key.AccessKeyId)}\r\n                      className={`text-red-600 hover:text-red-900 ${isLoading ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n                      disabled={isLoading}\r\n                      title=\"Excluir Chave\"\r\n                    >\r\n                      {deleteConfirm === key.AccessKeyId ? (\r\n                        <span className=\"text-xs bg-red-100 text-red-800 px-2 py-1 rounded\">Confirmar</span>\r\n                      ) : (\r\n                        <Trash2 className=\"h-4 w-4 inline\" />\r\n                      )}\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      \r\n      {/* Best Practices */}\r\n      <div className=\"bg-gray-50 border border-gray-200 p-4 rounded-lg text-sm\">\r\n        <h4 className=\"font-medium text-gray-900 mb-2\">Melhores Práticas para Chaves de Acesso</h4>\r\n        <ul className=\"space-y-2 text-gray-700 ml-5 list-disc\">\r\n          <li>Rotacione as chaves regularmente (a cada 90 dias)</li>\r\n          <li>Nunca compartilhe chaves de acesso entre usuários ou aplicações</li>\r\n          <li>Armazene chaves de acesso de forma segura e criptografada</li>\r\n          <li>Use políticas IAM para restringir permissões das chaves de acesso</li>\r\n          <li>Desative ou exclua chaves que não estão em uso</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1138, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Teste%20AWS/aws-monitoring-platform/src/app/dashboard/iam/advanced/users/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { \r\n  UserCog, \r\n  PlusCircle, \r\n  RefreshCw, \r\n  Trash2, \r\n  Edit, \r\n  Shield, \r\n  KeyRound,\r\n  AlertTriangle,\r\n  User,\r\n  FileText,\r\n  Key,\r\n  Lock,\r\n  UserPlus,\r\n  X,\r\n  CheckCircle,\r\n  XCircle,\r\n  Users,\r\n  ShieldAlert\r\n} from \"lucide-react\";\r\nimport { motion } from \"framer-motion\";\r\nimport AccessKeyManager from \"@/components/aws/iam/AccessKeyManager\";\r\n\r\ninterface IAMUser {\r\n  userName: string;\r\n  userId: string;\r\n  arn: string;\r\n  createDate: string;\r\n  passwordLastUsed?: string;\r\n  hasMFA: boolean;\r\n  accessKeysCount: number;\r\n  policiesCount: number;\r\n  riskLevel: \"high\" | \"medium\" | \"low\";\r\n  groups: string[];\r\n}\r\n\r\nexport default function IamUsersPage() {\r\n  const router = useRouter();\r\n  const [users, setUsers] = useState<IAMUser[]>([]);\r\n  const [credentials, setCredentials] = useState<{ id: string; name: string }[]>([]);\r\n  const [selectedCredentialId, setSelectedCredentialId] = useState<string>(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  \r\n  // Modal states\r\n  const [showCreateModal, setShowCreateModal] = useState(false);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [showManageModal, setShowManageModal] = useState(false);\r\n  const [currentUser, setCurrentUser] = useState<IAMUser | null>(null);\r\n  \r\n  const [selectedUser, setSelectedUser] = useState<IAMUser | null>(null);\r\n  const [isUserDetailOpen, setIsUserDetailOpen] = useState(false);\r\n  const [activeTab, setActiveTab] = useState<'overview'|'security'|'groups'|'details'>('overview');\r\n  \r\n  // Fetching credentials for selection\r\n  useEffect(() => {\r\n    const fetchCredentials = async () => {\r\n      try {\r\n        const response = await fetch('/api/aws/credentials');\r\n        if (!response.ok) throw new Error('Falha ao carregar credenciais');\r\n        \r\n        const data = await response.json();\r\n        setCredentials(data);\r\n        \r\n        if (data.length > 0) {\r\n          setSelectedCredentialId(data[0].id);\r\n        }\r\n      } catch (err) {\r\n        setError('Erro ao buscar credenciais AWS: ' + (err instanceof Error ? err.message : String(err)));\r\n      }\r\n    };\r\n    \r\n    fetchCredentials();\r\n  }, []);\r\n  \r\n  // Fetch users when credential changes\r\n  useEffect(() => {\r\n    if (selectedCredentialId) {\r\n      fetchUsers();\r\n    }\r\n  }, [selectedCredentialId]);\r\n  \r\n  const fetchUsers = async () => {\r\n    if (!selectedCredentialId) return;\r\n    \r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await fetch(`/api/aws/iam/users?credentialId=${selectedCredentialId}`);\r\n      if (!response.ok) throw new Error('Falha ao carregar usuários');\r\n      \r\n      const data = await response.json();\r\n      setUsers(data.users || []);\r\n    } catch (err) {\r\n      setError('Erro ao buscar usuários IAM: ' + (err instanceof Error ? err.message : String(err)));\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Handle user creation\r\n  const handleCreateUser = () => {\r\n    setShowCreateModal(true);\r\n  };\r\n  \r\n  // Handle user edit\r\n  const handleEditUser = (user: IAMUser) => {\r\n    setCurrentUser(user);\r\n    setShowEditModal(true);\r\n  };\r\n  \r\n  // Handle user deletion\r\n  const handleDeleteUser = (user: IAMUser) => {\r\n    setCurrentUser(user);\r\n    setShowDeleteModal(true);\r\n  };\r\n  \r\n  const handleGoToGroups = () => {\r\n    router.push(\"/dashboard/iam/advanced/groups\");\r\n  };\r\n  \r\n  const handleViewGroupDetails = (groupName: string) => {\r\n    router.push(`/dashboard/iam/advanced/groups/${encodeURIComponent(groupName)}`);\r\n  };\r\n  \r\n  // Handle user management \r\n  const handleManageUser = (user: IAMUser) => {\r\n    setCurrentUser(user);\r\n    setShowManageModal(true);\r\n  };\r\n  \r\n  const viewUserDetails = (user: IAMUser) => {\r\n    setSelectedUser(user);\r\n    setIsUserDetailOpen(true);\r\n    setActiveTab('overview');\r\n  };\r\n  \r\n  // Add gradient and visual indicators for risk level\r\n  const getRiskBadge = (riskLevel: \"high\" | \"medium\" | \"low\") => {\r\n    if (riskLevel === \"high\") {\r\n      return (\r\n        <div className=\"flex items-center gap-1\">\r\n          <span className=\"relative flex h-3 w-3\">\r\n            <span className=\"animate-ping absolute inline-flex h-full w-full rounded-full bg-red-400 opacity-75\"></span>\r\n            <span className=\"relative inline-flex rounded-full h-3 w-3 bg-red-500\"></span>\r\n          </span>\r\n          <span className=\"font-medium text-red-700\">Alto</span>\r\n        </div>\r\n      );\r\n    } else if (riskLevel === \"medium\") {\r\n      return (\r\n        <div className=\"flex items-center gap-1\">\r\n          <span className=\"relative flex h-3 w-3\">\r\n            <span className=\"animate-ping absolute inline-flex h-full w-full rounded-full bg-yellow-400 opacity-75\"></span>\r\n            <span className=\"relative inline-flex rounded-full h-3 w-3 bg-yellow-500\"></span>\r\n          </span>\r\n          <span className=\"font-medium text-yellow-700\">Médio</span>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"flex items-center gap-1\">\r\n          <span className=\"inline-flex rounded-full h-3 w-3 bg-green-500\"></span>\r\n          <span className=\"font-medium text-green-700\">Baixo</span>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  \r\n  // Format date nicely\r\n  const formatDate = (dateString?: string) => {\r\n    if (!dateString) return \"Nunca\";\r\n    \r\n    const date = new Date(dateString);\r\n    const now = new Date();\r\n    const diffDays = Math.floor((now.getTime() - date.getTime()) / (1000 * 60 * 60 * 24));\r\n    \r\n    if (diffDays === 0) {\r\n      return \"Hoje\";\r\n    } else if (diffDays === 1) {\r\n      return \"Ontem\";\r\n    } else if (diffDays < 30) {\r\n      return `${diffDays} dias atrás`;\r\n    } else {\r\n      return date.toLocaleDateString('pt-BR');\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header with actions */}\r\n      <div className=\"flex justify-between items-center\">\r\n        <div className=\"flex items-center gap-2\">\r\n          <UserCog className=\"h-5 w-5 text-blue-600\" />\r\n          <h2 className=\"text-lg font-semibold text-gray-900\">Usuários IAM</h2>\r\n        </div>\r\n        \r\n        <div className=\"flex items-center gap-3\">\r\n          <button\r\n            onClick={handleGoToGroups}\r\n            className=\"text-sm text-blue-600 hover:text-blue-800 hover:underline\"\r\n          >\r\n            Ver grupos IAM\r\n          </button>\r\n          <select\r\n            value={selectedCredentialId}\r\n            onChange={(e) => setSelectedCredentialId(e.target.value)}\r\n            className=\"border border-gray-300 rounded-md text-sm p-2\"\r\n          >\r\n            {credentials.map((cred) => (\r\n              <option key={cred.id} value={cred.id}>\r\n                {cred.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          \r\n          <button\r\n            onClick={fetchUsers}\r\n            className=\"p-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-md transition-colors\"\r\n            disabled={isLoading}\r\n          >\r\n            <RefreshCw className={`h-4 w-4 ${isLoading ? 'animate-spin' : ''}`} />\r\n          </button>\r\n          \r\n          <button\r\n            onClick={handleCreateUser}\r\n            className=\"flex items-center gap-1 bg-blue-600 hover:bg-blue-700 text-white px-3 py-2 rounded-md text-sm transition-colors\"\r\n          >\r\n            <PlusCircle className=\"h-4 w-4\" />\r\n            <span>Novo Usuário</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Error message */}\r\n      {error && (\r\n        <motion.div\r\n          initial={{ opacity: 0, y: -10 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className=\"bg-red-50 border border-red-200 text-red-800 px-4 py-3 rounded-md flex items-start gap-2\"\r\n        >\r\n          <AlertTriangle className=\"h-5 w-5 text-red-500 flex-shrink-0 mt-0.5\" />\r\n          <div>\r\n            <p className=\"font-medium\">Erro</p>\r\n            <p className=\"text-sm\">{error}</p>\r\n          </div>\r\n        </motion.div>\r\n      )}\r\n      \r\n      {/* Users table */}\r\n      <div className=\"bg-white shadow-sm rounded-lg border\">\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"w-full text-sm text-left text-gray-600\">\r\n            <thead className=\"text-xs text-gray-700 uppercase bg-gray-50\">\r\n              <tr>\r\n                <th className=\"px-6 py-4\">Usuário</th>\r\n                <th className=\"px-6 py-4\">Grupos</th>\r\n                <th className=\"px-6 py-4\">Último Acesso</th>\r\n                <th className=\"px-6 py-4\">MFA</th>\r\n                <th className=\"px-6 py-4\">Chaves</th>\r\n                <th className=\"px-6 py-4\">Políticas</th>\r\n                <th className=\"px-6 py-4\">Risco</th>\r\n                <th className=\"px-6 py-4 text-right\">Ações</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {isLoading ? (\r\n                <tr>\r\n                  <td colSpan={8} className=\"px-6 py-10 text-center text-gray-500\">\r\n                    <div className=\"flex justify-center items-center gap-2\">\r\n                      <RefreshCw className=\"h-4 w-4 animate-spin\" />\r\n                      <span>Carregando usuários...</span>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ) : users.length === 0 ? (\r\n                <tr>\r\n                  <td colSpan={8} className=\"px-6 py-10 text-center text-gray-500\">\r\n                    Nenhum usuário IAM encontrado\r\n                  </td>\r\n                </tr>\r\n              ) : (\r\n                users.map((user) => (\r\n                  <tr key={user.userName} className=\"border-b hover:bg-gray-50\">\r\n                    <td className=\"px-6 py-4 font-medium text-gray-900\">\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <div className=\"w-8 h-8 rounded-full bg-blue-100 flex items-center justify-center text-blue-700 font-bold\">\r\n                          {user.userName.charAt(0).toUpperCase()}\r\n                        </div>\r\n                        <div>\r\n                          <button \r\n                            onClick={() => viewUserDetails(user)}\r\n                            className=\"hover:text-blue-600 hover:underline transition-colors text-left\"\r\n                          >\r\n                            {user.userName}\r\n                          </button>\r\n                          <div className=\"text-xs text-gray-500 truncate max-w-[200px]\">\r\n                            {user.arn}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4\">\r\n                      {user.groups.length > 0 ? (\r\n                        <div className=\"flex flex-wrap gap-1\">\r\n                          {user.groups.map((group) => (\r\n                            <button\r\n                              key={group}\r\n                              onClick={() => handleViewGroupDetails(group)}\r\n                              className=\"px-2 py-1 bg-gray-100 hover:bg-gray-200 text-gray-700 text-xs rounded-full cursor-pointer transition-colors\"\r\n                            >\r\n                              {group}\r\n                            </button>\r\n                          ))}\r\n                        </div>\r\n                      ) : (\r\n                        <span className=\"text-gray-400 text-xs\">Nenhum grupo</span>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"px-6 py-4\">\r\n                      {formatDate(user.passwordLastUsed)}\r\n                    </td>\r\n                    <td className=\"px-6 py-4\">\r\n                      {user.hasMFA ? (\r\n                        <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800\">\r\n                          <Shield className=\"h-3 w-3 mr-1\" />\r\n                          Ativado\r\n                        </span>\r\n                      ) : (\r\n                        <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-red-100 text-red-800\">\r\n                          <AlertTriangle className=\"h-3 w-3 mr-1\" />\r\n                          Desativado\r\n                        </span>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"px-6 py-4\">\r\n                      <div className=\"flex items-center gap-1\">\r\n                        <KeyRound className=\"h-3 w-3 text-gray-500\" />\r\n                        <span>{user.accessKeysCount}</span>\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4\">\r\n                      {user.policiesCount}\r\n                    </td>\r\n                    <td className=\"px-6 py-4\">\r\n                      {getRiskBadge(user.riskLevel)}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 text-right space-x-2\">\r\n                      <button\r\n                        onClick={() => viewUserDetails(user)}\r\n                        className=\"text-blue-600 hover:text-blue-900\"\r\n                      >\r\n                        <Edit className=\"h-4 w-4\" />\r\n                      </button>\r\n                      <button\r\n                        onClick={() => handleDeleteUser(user)}\r\n                        className=\"text-red-600 hover:text-red-900\"\r\n                      >\r\n                        <Trash2 className=\"h-4 w-4\" />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Best practices section */}\r\n      <div className=\"bg-blue-50 border border-blue-100 rounded-lg p-4\">\r\n        <h3 className=\"text-blue-800 font-medium flex items-center gap-1 mb-2\">\r\n          <Shield className=\"h-4 w-4\" />\r\n          Boas Práticas de Segurança\r\n        </h3>\r\n        <ul className=\"text-sm text-blue-700 space-y-1 ml-5 list-disc\">\r\n          <li>Ative a autenticação multifator (MFA) para todos os usuários com acesso ao console</li>\r\n          <li>Atribua permissões mínimas necessárias seguindo o princípio de privilégio mínimo</li>\r\n          <li>Use grupos IAM para gerenciar permissões em vez de atribuir diretamente aos usuários</li>\r\n          <li>Revise e rotacione regularmente as chaves de acesso</li>\r\n          <li>Remova usuários inativos e credenciais não utilizadas</li>\r\n        </ul>\r\n      </div>\r\n      \r\n      {/* User Management Modal */}\r\n      {showManageModal && currentUser && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n          <motion.div \r\n            initial={{ opacity: 0, scale: 0.95 }}\r\n            animate={{ opacity: 1, scale: 1 }}\r\n            exit={{ opacity: 0, scale: 0.95 }}\r\n            className=\"bg-white rounded-lg shadow-xl max-w-4xl w-full max-h-[90vh] overflow-auto\"\r\n          >\r\n            {/* Modal Header */}\r\n            <div className=\"flex items-center justify-between px-6 py-4 border-b\">\r\n              <h2 className=\"text-xl font-semibold text-gray-900 flex items-center gap-2\">\r\n                <User className=\"h-5 w-5 text-blue-600\" />\r\n                Gerenciar Usuário: {currentUser.userName}\r\n              </h2>\r\n              <button\r\n                onClick={() => setShowManageModal(false)}\r\n                className=\"text-gray-500 hover:text-gray-700 transition-colors\"\r\n              >\r\n                <X className=\"h-5 w-5\" />\r\n              </button>\r\n            </div>\r\n            \r\n            {/* Modal Content */}\r\n            <div className=\"p-6 space-y-6\">\r\n              {/* User Info Section */}\r\n              <div>\r\n                <h3 className=\"text-base font-semibold mb-4 text-gray-900 flex items-center gap-1\">\r\n                  <FileText className=\"h-4 w-4 text-blue-600\" />\r\n                  Informações do Usuário\r\n                </h3>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\r\n                  <div className=\"space-y-2\">\r\n                    <div>\r\n                      <span className=\"font-medium block text-gray-700\">Nome:</span>\r\n                      <span className=\"text-gray-900\">{currentUser.userName}</span>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"font-medium block text-gray-700\">ID:</span>\r\n                      <span className=\"text-gray-900\">{currentUser.userId}</span>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"font-medium block text-gray-700\">Data de Criação:</span>\r\n                      <span className=\"text-gray-900\">{new Date(currentUser.createDate).toLocaleString('pt-BR')}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"space-y-2\">\r\n                    <div>\r\n                      <span className=\"font-medium block text-gray-700\">Último Acesso:</span>\r\n                      <span className=\"text-gray-900\">\r\n                        {currentUser.passwordLastUsed\r\n                          ? new Date(currentUser.passwordLastUsed).toLocaleString('pt-BR')\r\n                          : \"Nunca\"}\r\n                      </span>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"font-medium block text-gray-700\">ARN:</span>\r\n                      <span className=\"text-gray-500 text-xs break-all\">{currentUser.arn}</span>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"font-medium block text-gray-700\">Nível de Risco:</span>\r\n                      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\r\n                        currentUser.riskLevel === 'high'\r\n                          ? 'bg-red-100 text-red-800'\r\n                          : currentUser.riskLevel === 'medium'\r\n                          ? 'bg-yellow-100 text-yellow-800'\r\n                          : 'bg-blue-100 text-blue-800'\r\n                      }`}>\r\n                        {currentUser.riskLevel === 'high'\r\n                          ? 'Alto'\r\n                          : currentUser.riskLevel === 'medium'\r\n                          ? 'Médio'\r\n                          : 'Baixo'}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Security Section */}\r\n              <div>\r\n                <h3 className=\"text-base font-semibold mb-4 text-gray-900 flex items-center gap-1\">\r\n                  <Shield className=\"h-4 w-4 text-blue-600\" />\r\n                  Segurança\r\n                </h3>\r\n                <div className=\"space-y-4\">\r\n                  <div className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Lock className=\"h-4 w-4 text-gray-700\" />\r\n                      <div>\r\n                        <span className=\"font-medium text-gray-900\">Autenticação Multi-fator (MFA)</span>\r\n                        <p className=\"text-xs text-gray-600\">Proteção adicional para o login no console</p>\r\n                      </div>\r\n                    </div>\r\n                    <div>\r\n                      {currentUser.hasMFA ? (\r\n                        <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800\">\r\n                          Ativado\r\n                        </span>\r\n                      ) : (\r\n                        <button className=\"text-xs bg-blue-600 hover:bg-blue-700 text-white px-2 py-1 rounded-full transition-colors\">\r\n                          Ativar MFA\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Access Keys Section */}\r\n              <div>\r\n                <h3 className=\"text-base font-semibold mb-4 text-gray-900 flex items-center gap-1\">\r\n                  <Key className=\"h-4 w-4 text-blue-600\" />\r\n                  Chaves de Acesso\r\n                </h3>\r\n                <div className=\"space-y-4\">\r\n                  <AccessKeyManager\r\n                    userName={currentUser.userName}\r\n                    credentialId={selectedCredentialId}\r\n                    onUpdate={fetchUsers}\r\n                  />\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Groups Section */}\r\n              <div>\r\n                <h3 className=\"text-base font-semibold mb-4 text-gray-900 flex items-center gap-1\">\r\n                  <UserPlus className=\"h-4 w-4 text-blue-600\" />\r\n                  Grupos\r\n                </h3>\r\n                <div className=\"space-y-4\">\r\n                  {currentUser.groups.length > 0 ? (\r\n                    <div className=\"grid grid-cols-2 gap-2\">\r\n                      {currentUser.groups.map(group => (\r\n                        <div key={group} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\r\n                          <span className=\"font-medium text-gray-900\">{group}</span>\r\n                          <button \r\n                            onClick={() => handleViewGroupDetails(group)}\r\n                            className=\"text-xs bg-gray-200 hover:bg-gray-300 text-gray-800 px-2 py-1 rounded transition-colors\"\r\n                          >\r\n                            Ver Grupo\r\n                          </button>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"text-center p-4 bg-gray-50 rounded-lg text-gray-500\">\r\n                      Usuário não pertence a nenhum grupo\r\n                    </div>\r\n                  )}\r\n                  <div className=\"text-right\">\r\n                    <button className=\"text-sm bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded transition-colors\">\r\n                      Adicionar a Grupos\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Policies Section */}\r\n              <div>\r\n                <h3 className=\"text-base font-semibold mb-4 text-gray-900 flex items-center gap-1\">\r\n                  <FileText className=\"h-4 w-4 text-blue-600\" />\r\n                  Políticas ({currentUser.policiesCount})\r\n                </h3>\r\n                <div className=\"space-y-4\">\r\n                  <div className=\"text-center p-4 bg-gray-50 rounded-lg text-gray-500\">\r\n                    <p>Clique no botão abaixo para gerenciar as políticas atribuídas a este usuário</p>\r\n                  </div>\r\n                  <div className=\"text-right\">\r\n                    <button className=\"text-sm bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded transition-colors\">\r\n                      Gerenciar Políticas\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Modal Footer with action buttons */}\r\n            <div className=\"px-6 py-4 border-t flex justify-between items-center\">\r\n              <div>\r\n                <button\r\n                  onClick={() => {\r\n                    setShowManageModal(false);\r\n                    setShowDeleteModal(true);\r\n                  }}\r\n                  className=\"flex items-center gap-1 px-3 py-2 border border-red-300 text-red-700 hover:bg-red-50 rounded-md text-sm transition-colors\"\r\n                >\r\n                  <Trash2 className=\"h-4 w-4\" />\r\n                  Excluir Usuário\r\n                </button>\r\n              </div>\r\n              <div className=\"flex gap-2\">\r\n                <button\r\n                  onClick={() => setShowManageModal(false)}\r\n                  className=\"px-4 py-2 border border-gray-300 text-gray-700 hover:bg-gray-50 rounded-md text-sm transition-colors\"\r\n                >\r\n                  Fechar\r\n                </button>\r\n                <button\r\n                  onClick={() => {\r\n                    setShowManageModal(false);\r\n                    handleEditUser(currentUser);\r\n                  }}\r\n                  className=\"flex items-center gap-1 px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-md text-sm transition-colors\"\r\n                >\r\n                  <Edit className=\"h-4 w-4\" />\r\n                  Editar Usuário\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </motion.div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* User Detail Modal */}\r\n      {isUserDetailOpen && selectedUser && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white rounded-lg shadow-xl w-full max-w-4xl max-h-[90vh] overflow-hidden flex flex-col\">\r\n            {/* Header with gradient and user info */}\r\n            <div className={`bg-gradient-to-r ${\r\n              selectedUser.riskLevel === 'high' \r\n                ? 'from-red-500 to-red-700' \r\n                : selectedUser.riskLevel === 'medium'\r\n                ? 'from-yellow-500 to-amber-600'\r\n                : 'from-green-500 to-green-700'\r\n            } px-6 py-4 text-white relative`}>\r\n              <button\r\n                className=\"absolute top-4 right-4 text-white hover:text-gray-200\"\r\n                onClick={() => setIsUserDetailOpen(false)}\r\n              >\r\n                <X className=\"h-6 w-6\" />\r\n              </button>\r\n              \r\n              <div className=\"flex items-center\">\r\n                <div className=\"h-12 w-12 rounded-full bg-white text-gray-800 flex items-center justify-center font-bold text-xl mr-4\">\r\n                  {selectedUser.userName.charAt(0).toUpperCase()}\r\n                </div>\r\n                <div>\r\n                  <h2 className=\"text-2xl font-bold\">{selectedUser.userName}</h2>\r\n                  <div className=\"flex items-center mt-1\">\r\n                    <div className=\"bg-white bg-opacity-30 px-3 py-1 rounded-full text-sm font-medium\">\r\n                      {getRiskBadge(selectedUser.riskLevel)}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Tabs */}\r\n            <div className=\"border-b border-gray-200\">\r\n              <nav className=\"flex -mb-px px-6\">\r\n                <button\r\n                  onClick={() => setActiveTab('overview')}\r\n                  className={`mr-8 py-4 px-1 border-b-2 font-medium text-sm ${\r\n                    activeTab === 'overview'\r\n                      ? 'border-blue-500 text-blue-600'\r\n                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n                  }`}\r\n                >\r\n                  Visão Geral\r\n                </button>\r\n                <button\r\n                  onClick={() => setActiveTab('security')}\r\n                  className={`mr-8 py-4 px-1 border-b-2 font-medium text-sm ${\r\n                    activeTab === 'security'\r\n                      ? 'border-blue-500 text-blue-600'\r\n                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n                  }`}\r\n                >\r\n                  Segurança\r\n                </button>\r\n                <button\r\n                  onClick={() => setActiveTab('groups')}\r\n                  className={`mr-8 py-4 px-1 border-b-2 font-medium text-sm ${\r\n                    activeTab === 'groups'\r\n                      ? 'border-blue-500 text-blue-600'\r\n                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n                  }`}\r\n                >\r\n                  Grupos\r\n                </button>\r\n                <button\r\n                  onClick={() => setActiveTab('details')}\r\n                  className={`mr-8 py-4 px-1 border-b-2 font-medium text-sm ${\r\n                    activeTab === 'details'\r\n                      ? 'border-blue-500 text-blue-600'\r\n                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n                  }`}\r\n                >\r\n                  Detalhes\r\n                </button>\r\n              </nav>\r\n            </div>\r\n            \r\n            {/* Content */}\r\n            <div className=\"p-6 overflow-y-auto\">\r\n              {activeTab === 'overview' && (\r\n                <div className=\"space-y-6\">\r\n                  <div className=\"grid grid-cols-3 gap-4\">\r\n                    <div className=\"bg-gray-50 p-4 rounded-lg border\">\r\n                      <h3 className=\"text-sm font-medium text-gray-500\">Grupos</h3>\r\n                      <p className=\"mt-1 text-2xl font-semibold text-gray-900\">{selectedUser.groups.length}</p>\r\n                    </div>\r\n                    <div className=\"bg-gray-50 p-4 rounded-lg border\">\r\n                      <h3 className=\"text-sm font-medium text-gray-500\">Chaves de Acesso</h3>\r\n                      <p className=\"mt-1 text-2xl font-semibold text-gray-900\">{selectedUser.accessKeysCount}</p>\r\n                    </div>\r\n                    <div className=\"bg-gray-50 p-4 rounded-lg border\">\r\n                      <h3 className=\"text-sm font-medium text-gray-500\">Políticas</h3>\r\n                      <p className=\"mt-1 text-2xl font-semibold text-gray-900\">{selectedUser.policiesCount}</p>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"bg-white p-4 rounded-lg border\">\r\n                    <h3 className=\"text-base font-medium text-gray-900 mb-4\">Status de Segurança</h3>\r\n                    <div className=\"space-y-3\">\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <span className=\"text-sm text-gray-600\">MFA Ativado</span>\r\n                        <span>\r\n                          {selectedUser.hasMFA ? (\r\n                            <div className=\"flex items-center text-green-600\">\r\n                              <CheckCircle className=\"h-5 w-5 mr-1\" />\r\n                              <span>Sim</span>\r\n                            </div>\r\n                          ) : (\r\n                            <div className=\"flex items-center text-red-600\">\r\n                              <XCircle className=\"h-5 w-5 mr-1\" />\r\n                              <span>Não</span>\r\n                            </div>\r\n                          )}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <span className=\"text-sm text-gray-600\">Chaves de Acesso</span>\r\n                        <div className=\"flex items-center\">\r\n                          <span className={`text-sm font-medium ${\r\n                            selectedUser.accessKeysCount > 0 ? 'text-yellow-600' : 'text-green-600'\r\n                          }`}>\r\n                            {selectedUser.accessKeysCount} ativa{selectedUser.accessKeysCount !== 1 ? 's' : ''}\r\n                          </span>\r\n                          <button\r\n                            onClick={() => setActiveTab('security')}\r\n                            className=\"ml-2 text-xs text-blue-600 hover:text-blue-800 hover:underline\"\r\n                          >\r\n                            Gerenciar\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <span className=\"text-sm text-gray-600\">Último Acesso</span>\r\n                        <span className=\"text-sm font-medium\">\r\n                          {formatDate(selectedUser.passwordLastUsed)}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"bg-white p-4 rounded-lg border\">\r\n                    <h3 className=\"text-base font-medium text-gray-900 mb-4\">Ações Rápidas</h3>\r\n                    <div className=\"flex space-x-2\">\r\n                      <button \r\n                        className=\"flex items-center px-3 py-2 border border-gray-300 rounded text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n                        onClick={() => {\r\n                          setActiveTab('security');\r\n                        }}\r\n                      >\r\n                        <ShieldAlert className=\"h-4 w-4 mr-2\" />\r\n                        Verificar Segurança\r\n                      </button>\r\n                      <button \r\n                        className=\"flex items-center px-3 py-2 border border-gray-300 rounded text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n                        onClick={() => {\r\n                          setActiveTab('groups');\r\n                        }}\r\n                      >\r\n                        <Users className=\"h-4 w-4 mr-2\" />\r\n                        Gerenciar Grupos\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              \r\n              {activeTab === 'security' && (\r\n                <div className=\"space-y-6\">\r\n                  <div className=\"bg-white p-6 rounded-lg border\">\r\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Configurações de Segurança</h3>\r\n                    \r\n                    <div className=\"space-y-6\">\r\n                      <div>\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div>\r\n                            <h4 className=\"text-sm font-medium text-gray-900\">Autenticação de múltiplos fatores (MFA)</h4>\r\n                            <p className=\"text-sm text-gray-500\">Adiciona uma camada extra de segurança à conta</p>\r\n                          </div>\r\n                          <span>\r\n                            {selectedUser.hasMFA ? (\r\n                              <div className=\"flex items-center text-green-600\">\r\n                                <CheckCircle className=\"h-5 w-5 mr-1\" />\r\n                                <span>Ativado</span>\r\n                              </div>\r\n                            ) : (\r\n                              <div className=\"flex items-center text-red-600\">\r\n                                <XCircle className=\"h-5 w-5 mr-1\" />\r\n                                <span>Desativado</span>\r\n                              </div>\r\n                            )}\r\n                          </span>\r\n                        </div>\r\n                        {!selectedUser.hasMFA && (\r\n                          <div className=\"mt-2\">\r\n                            <button className=\"inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\">\r\n                              Ativar MFA\r\n                            </button>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      \r\n                      <div className=\"pt-6 border-t border-gray-200\">\r\n                        <h4 className=\"text-sm font-medium text-gray-900 mb-3\">Chaves de Acesso</h4>\r\n                        <AccessKeyManager\r\n                          userName={selectedUser.userName}\r\n                          credentialId={selectedCredentialId}\r\n                          onUpdate={fetchUsers}\r\n                        />\r\n                      </div>\r\n                      \r\n                      <div className=\"pt-6 border-t border-gray-200\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div>\r\n                            <h4 className=\"text-sm font-medium text-gray-900\">Último acesso ao console</h4>\r\n                            <p className=\"text-sm text-gray-500\">Data do último login no console da AWS</p>\r\n                          </div>\r\n                          <span className=\"text-sm font-medium\">\r\n                            {formatDate(selectedUser.passwordLastUsed)}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              \r\n              {activeTab === 'groups' && (\r\n                <div className=\"space-y-6\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <h3 className=\"text-lg font-medium text-gray-900\">Grupos ({selectedUser.groups.length})</h3>\r\n                    <button className=\"inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\">\r\n                      Adicionar ao Grupo\r\n                    </button>\r\n                  </div>\r\n                  \r\n                  {selectedUser.groups.length > 0 ? (\r\n                    <div className=\"bg-white shadow overflow-hidden sm:rounded-md\">\r\n                      <ul className=\"divide-y divide-gray-200\">\r\n                        {selectedUser.groups.map((group, index) => (\r\n                          <li key={index}>\r\n                            <div className=\"px-4 py-4 flex items-center justify-between sm:px-6\">\r\n                              <div className=\"flex items-center\">\r\n                                <div className=\"flex-shrink-0\">\r\n                                  <Users className=\"h-6 w-6 text-gray-400\" />\r\n                                </div>\r\n                                <div className=\"ml-4\">\r\n                                  <div className=\"text-sm font-medium text-blue-600\">{group}</div>\r\n                                </div>\r\n                              </div>\r\n                              <div>\r\n                                <button className=\"inline-flex items-center px-2 py-1 border border-gray-300 text-xs leading-4 font-medium rounded text-gray-700 bg-white hover:bg-gray-50\">\r\n                                  <X className=\"h-4 w-4 mr-1\" />\r\n                                  Remover\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </li>\r\n                        ))}\r\n                      </ul>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"bg-gray-50 p-6 text-center rounded-lg border border-gray-200\">\r\n                      <Users className=\"mx-auto h-12 w-12 text-gray-400\" />\r\n                      <h3 className=\"mt-2 text-sm font-medium text-gray-900\">Sem Grupos</h3>\r\n                      <p className=\"mt-1 text-sm text-gray-500\">Este usuário não pertence a nenhum grupo.</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n              \r\n              {activeTab === 'details' && (\r\n                <div className=\"bg-white p-6 rounded-lg border\">\r\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Detalhes do Usuário</h3>\r\n                  \r\n                  <div className=\"grid grid-cols-2 gap-6\">\r\n                    <div>\r\n                      <h4 className=\"text-xs font-medium text-gray-500 uppercase tracking-wider mb-2\">Informações Básicas</h4>\r\n                      <dl className=\"space-y-2\">\r\n                        <div>\r\n                          <dt className=\"text-sm font-medium text-gray-500\">Nome do Usuário</dt>\r\n                          <dd className=\"mt-1 text-sm text-gray-900\">{selectedUser.userName}</dd>\r\n                        </div>\r\n                        <div>\r\n                          <dt className=\"text-sm font-medium text-gray-500\">ARN</dt>\r\n                          <dd className=\"mt-1 text-sm text-gray-900 break-all\">{selectedUser.arn}</dd>\r\n                        </div>\r\n                        <div>\r\n                          <dt className=\"text-sm font-medium text-gray-500\">ID do Usuário</dt>\r\n                          <dd className=\"mt-1 text-sm text-gray-900\">{selectedUser.userId}</dd>\r\n                        </div>\r\n                        <div>\r\n                          <dt className=\"text-sm font-medium text-gray-500\">Data de Criação</dt>\r\n                          <dd className=\"mt-1 text-sm text-gray-900\">\r\n                            {new Date(selectedUser.createDate).toLocaleDateString('pt-BR')}\r\n                          </dd>\r\n                        </div>\r\n                      </dl>\r\n                    </div>\r\n                    \r\n                    <div>\r\n                      <h4 className=\"text-xs font-medium text-gray-500 uppercase tracking-wider mb-2\">Acesso e Permissões</h4>\r\n                      <dl className=\"space-y-2\">\r\n                        <div>\r\n                          <dt className=\"text-sm font-medium text-gray-500\">Último Acesso ao Console</dt>\r\n                          <dd className=\"mt-1 text-sm text-gray-900\">{formatDate(selectedUser.passwordLastUsed)}</dd>\r\n                        </div>\r\n                        <div>\r\n                          <dt className=\"text-sm font-medium text-gray-500\">MFA Ativo</dt>\r\n                          <dd className=\"mt-1 text-sm text-gray-900\">{selectedUser.hasMFA ? 'Sim' : 'Não'}</dd>\r\n                        </div>\r\n                        <div>\r\n                          <dt className=\"text-sm font-medium text-gray-500\">Número de Grupos</dt>\r\n                          <dd className=\"mt-1 text-sm text-gray-900\">{selectedUser.groups.length}</dd>\r\n                        </div>\r\n                        <div>\r\n                          <dt className=\"text-sm font-medium text-gray-500\">Nível de Risco</dt>\r\n                          <dd className=\"mt-1\">{getRiskBadge(selectedUser.riskLevel)}</dd>\r\n                        </div>\r\n                      </dl>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n            \r\n            <div className=\"border-t border-gray-200 px-6 py-4 flex justify-end bg-gray-50\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n                onClick={() => setIsUserDetailOpen(false)}\r\n              >\r\n                Fechar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Modals will be implemented in a future update */}\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA;AACA;;;AAzBA;;;;;;AAwCe,SAAS;;IACtB,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAa,EAAE;IAChD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAkC,EAAE;IACjF,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACzE,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,eAAe;IACf,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAkB;IAE/D,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAkB;IACjE,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA4C;IAErF,qCAAqC;IACrC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,MAAM;2DAAmB;oBACvB,IAAI;wBACF,MAAM,WAAW,MAAM,MAAM;wBAC7B,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM,IAAI,MAAM;wBAElC,MAAM,OAAO,MAAM,SAAS,IAAI;wBAChC,eAAe;wBAEf,IAAI,KAAK,MAAM,GAAG,GAAG;4BACnB,wBAAwB,IAAI,CAAC,EAAE,CAAC,EAAE;wBACpC;oBACF,EAAE,OAAO,KAAK;wBACZ,SAAS,qCAAqC,CAAC,eAAe,QAAQ,IAAI,OAAO,GAAG,OAAO,IAAI;oBACjG;gBACF;;YAEA;QACF;iCAAG,EAAE;IAEL,sCAAsC;IACtC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,IAAI,sBAAsB;gBACxB;YACF;QACF;iCAAG;QAAC;KAAqB;IAEzB,MAAM,aAAa;QACjB,IAAI,CAAC,sBAAsB;QAE3B,aAAa;QACb,SAAS;QAET,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,CAAC,gCAAgC,EAAE,sBAAsB;YACtF,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM,IAAI,MAAM;YAElC,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,SAAS,KAAK,KAAK,IAAI,EAAE;QAC3B,EAAE,OAAO,KAAK;YACZ,SAAS,kCAAkC,CAAC,eAAe,QAAQ,IAAI,OAAO,GAAG,OAAO,IAAI;QAC9F,SAAU;YACR,aAAa;QACf;IACF;IAEA,uBAAuB;IACvB,MAAM,mBAAmB;QACvB,mBAAmB;IACrB;IAEA,mBAAmB;IACnB,MAAM,iBAAiB,CAAC;QACtB,eAAe;QACf,iBAAiB;IACnB;IAEA,uBAAuB;IACvB,MAAM,mBAAmB,CAAC;QACxB,eAAe;QACf,mBAAmB;IACrB;IAEA,MAAM,mBAAmB;QACvB,OAAO,IAAI,CAAC;IACd;IAEA,MAAM,yBAAyB,CAAC;QAC9B,OAAO,IAAI,CAAC,CAAC,+BAA+B,EAAE,mBAAmB,YAAY;IAC/E;IAEA,0BAA0B;IAC1B,MAAM,mBAAmB,CAAC;QACxB,eAAe;QACf,mBAAmB;IACrB;IAEA,MAAM,kBAAkB,CAAC;QACvB,gBAAgB;QAChB,oBAAoB;QACpB,aAAa;IACf;IAEA,oDAAoD;IACpD,MAAM,eAAe,CAAC;QACpB,IAAI,cAAc,QAAQ;YACxB,qBACE,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAK,WAAU;;0CACd,6LAAC;gCAAK,WAAU;;;;;;0CAChB,6LAAC;gCAAK,WAAU;;;;;;;;;;;;kCAElB,6LAAC;wBAAK,WAAU;kCAA2B;;;;;;;;;;;;QAGjD,OAAO,IAAI,cAAc,UAAU;YACjC,qBACE,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAK,WAAU;;0CACd,6LAAC;gCAAK,WAAU;;;;;;0CAChB,6LAAC;gCAAK,WAAU;;;;;;;;;;;;kCAElB,6LAAC;wBAAK,WAAU;kCAA8B;;;;;;;;;;;;QAGpD,OAAO;YACL,qBACE,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAK,WAAU;;;;;;kCAChB,6LAAC;wBAAK,WAAU;kCAA6B;;;;;;;;;;;;QAGnD;IACF;IAEA,qBAAqB;IACrB,MAAM,aAAa,CAAC;QAClB,IAAI,CAAC,YAAY,OAAO;QAExB,MAAM,OAAO,IAAI,KAAK;QACtB,MAAM,MAAM,IAAI;QAChB,MAAM,WAAW,KAAK,KAAK,CAAC,CAAC,IAAI,OAAO,KAAK,KAAK,OAAO,EAAE,IAAI,CAAC,OAAO,KAAK,KAAK,EAAE;QAEnF,IAAI,aAAa,GAAG;YAClB,OAAO;QACT,OAAO,IAAI,aAAa,GAAG;YACzB,OAAO;QACT,OAAO,IAAI,WAAW,IAAI;YACxB,OAAO,GAAG,SAAS,WAAW,CAAC;QACjC,OAAO;YACL,OAAO,KAAK,kBAAkB,CAAC;QACjC;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,+MAAA,CAAA,UAAO;gCAAC,WAAU;;;;;;0CACnB,6LAAC;gCAAG,WAAU;0CAAsC;;;;;;;;;;;;kCAGtD,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCACC,SAAS;gCACT,WAAU;0CACX;;;;;;0CAGD,6LAAC;gCACC,OAAO;gCACP,UAAU,CAAC,IAAM,wBAAwB,EAAE,MAAM,CAAC,KAAK;gCACvD,WAAU;0CAET,YAAY,GAAG,CAAC,CAAC,qBAChB,6LAAC;wCAAqB,OAAO,KAAK,EAAE;kDACjC,KAAK,IAAI;uCADC,KAAK,EAAE;;;;;;;;;;0CAMxB,6LAAC;gCACC,SAAS;gCACT,WAAU;gCACV,UAAU;0CAEV,cAAA,6LAAC,mNAAA,CAAA,YAAS;oCAAC,WAAW,CAAC,QAAQ,EAAE,YAAY,iBAAiB,IAAI;;;;;;;;;;;0CAGpE,6LAAC;gCACC,SAAS;gCACT,WAAU;;kDAEV,6LAAC,qNAAA,CAAA,aAAU;wCAAC,WAAU;;;;;;kDACtB,6LAAC;kDAAK;;;;;;;;;;;;;;;;;;;;;;;;YAMX,uBACC,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;gBACT,SAAS;oBAAE,SAAS;oBAAG,GAAG,CAAC;gBAAG;gBAC9B,SAAS;oBAAE,SAAS;oBAAG,GAAG;gBAAE;gBAC5B,WAAU;;kCAEV,6LAAC,2NAAA,CAAA,gBAAa;wBAAC,WAAU;;;;;;kCACzB,6LAAC;;0CACC,6LAAC;gCAAE,WAAU;0CAAc;;;;;;0CAC3B,6LAAC;gCAAE,WAAU;0CAAW;;;;;;;;;;;;;;;;;;0BAM9B,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAM,WAAU;;0CACf,6LAAC;gCAAM,WAAU;0CACf,cAAA,6LAAC;;sDACC,6LAAC;4CAAG,WAAU;sDAAY;;;;;;sDAC1B,6LAAC;4CAAG,WAAU;sDAAY;;;;;;sDAC1B,6LAAC;4CAAG,WAAU;sDAAY;;;;;;sDAC1B,6LAAC;4CAAG,WAAU;sDAAY;;;;;;sDAC1B,6LAAC;4CAAG,WAAU;sDAAY;;;;;;sDAC1B,6LAAC;4CAAG,WAAU;sDAAY;;;;;;sDAC1B,6LAAC;4CAAG,WAAU;sDAAY;;;;;;sDAC1B,6LAAC;4CAAG,WAAU;sDAAuB;;;;;;;;;;;;;;;;;0CAGzC,6LAAC;0CACE,0BACC,6LAAC;8CACC,cAAA,6LAAC;wCAAG,SAAS;wCAAG,WAAU;kDACxB,cAAA,6LAAC;4CAAI,WAAU;;8DACb,6LAAC,mNAAA,CAAA,YAAS;oDAAC,WAAU;;;;;;8DACrB,6LAAC;8DAAK;;;;;;;;;;;;;;;;;;;;;2CAIV,MAAM,MAAM,KAAK,kBACnB,6LAAC;8CACC,cAAA,6LAAC;wCAAG,SAAS;wCAAG,WAAU;kDAAuC;;;;;;;;;;2CAKnE,MAAM,GAAG,CAAC,CAAC,qBACT,6LAAC;wCAAuB,WAAU;;0DAChC,6LAAC;gDAAG,WAAU;0DACZ,cAAA,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAI,WAAU;sEACZ,KAAK,QAAQ,CAAC,MAAM,CAAC,GAAG,WAAW;;;;;;sEAEtC,6LAAC;;8EACC,6LAAC;oEACC,SAAS,IAAM,gBAAgB;oEAC/B,WAAU;8EAET,KAAK,QAAQ;;;;;;8EAEhB,6LAAC;oEAAI,WAAU;8EACZ,KAAK,GAAG;;;;;;;;;;;;;;;;;;;;;;;0DAKjB,6LAAC;gDAAG,WAAU;0DACX,KAAK,MAAM,CAAC,MAAM,GAAG,kBACpB,6LAAC;oDAAI,WAAU;8DACZ,KAAK,MAAM,CAAC,GAAG,CAAC,CAAC,sBAChB,6LAAC;4DAEC,SAAS,IAAM,uBAAuB;4DACtC,WAAU;sEAET;2DAJI;;;;;;;;;yEASX,6LAAC;oDAAK,WAAU;8DAAwB;;;;;;;;;;;0DAG5C,6LAAC;gDAAG,WAAU;0DACX,WAAW,KAAK,gBAAgB;;;;;;0DAEnC,6LAAC;gDAAG,WAAU;0DACX,KAAK,MAAM,iBACV,6LAAC;oDAAK,WAAU;;sEACd,6LAAC,yMAAA,CAAA,SAAM;4DAAC,WAAU;;;;;;wDAAiB;;;;;;yEAIrC,6LAAC;oDAAK,WAAU;;sEACd,6LAAC,2NAAA,CAAA,gBAAa;4DAAC,WAAU;;;;;;wDAAiB;;;;;;;;;;;;0DAKhD,6LAAC;gDAAG,WAAU;0DACZ,cAAA,6LAAC;oDAAI,WAAU;;sEACb,6LAAC,iNAAA,CAAA,WAAQ;4DAAC,WAAU;;;;;;sEACpB,6LAAC;sEAAM,KAAK,eAAe;;;;;;;;;;;;;;;;;0DAG/B,6LAAC;gDAAG,WAAU;0DACX,KAAK,aAAa;;;;;;0DAErB,6LAAC;gDAAG,WAAU;0DACX,aAAa,KAAK,SAAS;;;;;;0DAE9B,6LAAC;gDAAG,WAAU;;kEACZ,6LAAC;wDACC,SAAS,IAAM,gBAAgB;wDAC/B,WAAU;kEAEV,cAAA,6LAAC,8MAAA,CAAA,OAAI;4DAAC,WAAU;;;;;;;;;;;kEAElB,6LAAC;wDACC,SAAS,IAAM,iBAAiB;wDAChC,WAAU;kEAEV,cAAA,6LAAC,6MAAA,CAAA,SAAM;4DAAC,WAAU;;;;;;;;;;;;;;;;;;uCA3Ef,KAAK,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;0BAuFlC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;;0CACZ,6LAAC,yMAAA,CAAA,SAAM;gCAAC,WAAU;;;;;;4BAAY;;;;;;;kCAGhC,6LAAC;wBAAG,WAAU;;0CACZ,6LAAC;0CAAG;;;;;;0CACJ,6LAAC;0CAAG;;;;;;0CACJ,6LAAC;0CAAG;;;;;;0CACJ,6LAAC;0CAAG;;;;;;0CACJ,6LAAC;0CAAG;;;;;;;;;;;;;;;;;;YAKP,mBAAmB,6BAClB,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;oBACT,SAAS;wBAAE,SAAS;wBAAG,OAAO;oBAAK;oBACnC,SAAS;wBAAE,SAAS;wBAAG,OAAO;oBAAE;oBAChC,MAAM;wBAAE,SAAS;wBAAG,OAAO;oBAAK;oBAChC,WAAU;;sCAGV,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAG,WAAU;;sDACZ,6LAAC,qMAAA,CAAA,OAAI;4CAAC,WAAU;;;;;;wCAA0B;wCACtB,YAAY,QAAQ;;;;;;;8CAE1C,6LAAC;oCACC,SAAS,IAAM,mBAAmB;oCAClC,WAAU;8CAEV,cAAA,6LAAC,+LAAA,CAAA,IAAC;wCAAC,WAAU;;;;;;;;;;;;;;;;;sCAKjB,6LAAC;4BAAI,WAAU;;8CAEb,6LAAC;;sDACC,6LAAC;4CAAG,WAAU;;8DACZ,6LAAC,iNAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;gDAA0B;;;;;;;sDAGhD,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;;8EACC,6LAAC;oEAAK,WAAU;8EAAkC;;;;;;8EAClD,6LAAC;oEAAK,WAAU;8EAAiB,YAAY,QAAQ;;;;;;;;;;;;sEAEvD,6LAAC;;8EACC,6LAAC;oEAAK,WAAU;8EAAkC;;;;;;8EAClD,6LAAC;oEAAK,WAAU;8EAAiB,YAAY,MAAM;;;;;;;;;;;;sEAErD,6LAAC;;8EACC,6LAAC;oEAAK,WAAU;8EAAkC;;;;;;8EAClD,6LAAC;oEAAK,WAAU;8EAAiB,IAAI,KAAK,YAAY,UAAU,EAAE,cAAc,CAAC;;;;;;;;;;;;;;;;;;8DAGrF,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;;8EACC,6LAAC;oEAAK,WAAU;8EAAkC;;;;;;8EAClD,6LAAC;oEAAK,WAAU;8EACb,YAAY,gBAAgB,GACzB,IAAI,KAAK,YAAY,gBAAgB,EAAE,cAAc,CAAC,WACtD;;;;;;;;;;;;sEAGR,6LAAC;;8EACC,6LAAC;oEAAK,WAAU;8EAAkC;;;;;;8EAClD,6LAAC;oEAAK,WAAU;8EAAmC,YAAY,GAAG;;;;;;;;;;;;sEAEpE,6LAAC;;8EACC,6LAAC;oEAAK,WAAU;8EAAkC;;;;;;8EAClD,6LAAC;oEAAK,WAAW,CAAC,wEAAwE,EACxF,YAAY,SAAS,KAAK,SACtB,4BACA,YAAY,SAAS,KAAK,WAC1B,kCACA,6BACJ;8EACC,YAAY,SAAS,KAAK,SACvB,SACA,YAAY,SAAS,KAAK,WAC1B,UACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8CAQd,6LAAC;;sDACC,6LAAC;4CAAG,WAAU;;8DACZ,6LAAC,yMAAA,CAAA,SAAM;oDAAC,WAAU;;;;;;gDAA0B;;;;;;;sDAG9C,6LAAC;4CAAI,WAAU;sDACb,cAAA,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAI,WAAU;;0EACb,6LAAC,qMAAA,CAAA,OAAI;gEAAC,WAAU;;;;;;0EAChB,6LAAC;;kFACC,6LAAC;wEAAK,WAAU;kFAA4B;;;;;;kFAC5C,6LAAC;wEAAE,WAAU;kFAAwB;;;;;;;;;;;;;;;;;;kEAGzC,6LAAC;kEACE,YAAY,MAAM,iBACjB,6LAAC;4DAAK,WAAU;sEAAkG;;;;;iFAIlH,6LAAC;4DAAO,WAAU;sEAA4F;;;;;;;;;;;;;;;;;;;;;;;;;;;;8CAUxH,6LAAC;;sDACC,6LAAC;4CAAG,WAAU;;8DACZ,6LAAC,mMAAA,CAAA,MAAG;oDAAC,WAAU;;;;;;gDAA0B;;;;;;;sDAG3C,6LAAC;4CAAI,WAAU;sDACb,cAAA,6LAAC,uJAAA,CAAA,UAAgB;gDACf,UAAU,YAAY,QAAQ;gDAC9B,cAAc;gDACd,UAAU;;;;;;;;;;;;;;;;;8CAMhB,6LAAC;;sDACC,6LAAC;4CAAG,WAAU;;8DACZ,6LAAC,iNAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;gDAA0B;;;;;;;sDAGhD,6LAAC;4CAAI,WAAU;;gDACZ,YAAY,MAAM,CAAC,MAAM,GAAG,kBAC3B,6LAAC;oDAAI,WAAU;8DACZ,YAAY,MAAM,CAAC,GAAG,CAAC,CAAA,sBACtB,6LAAC;4DAAgB,WAAU;;8EACzB,6LAAC;oEAAK,WAAU;8EAA6B;;;;;;8EAC7C,6LAAC;oEACC,SAAS,IAAM,uBAAuB;oEACtC,WAAU;8EACX;;;;;;;2DALO;;;;;;;;;yEAYd,6LAAC;oDAAI,WAAU;8DAAsD;;;;;;8DAIvE,6LAAC;oDAAI,WAAU;8DACb,cAAA,6LAAC;wDAAO,WAAU;kEAAuF;;;;;;;;;;;;;;;;;;;;;;;8CAQ/G,6LAAC;;sDACC,6LAAC;4CAAG,WAAU;;8DACZ,6LAAC,iNAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;gDAA0B;gDAClC,YAAY,aAAa;gDAAC;;;;;;;sDAExC,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAI,WAAU;8DACb,cAAA,6LAAC;kEAAE;;;;;;;;;;;8DAEL,6LAAC;oDAAI,WAAU;8DACb,cAAA,6LAAC;wDAAO,WAAU;kEAAuF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sCASjH,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;8CACC,cAAA,6LAAC;wCACC,SAAS;4CACP,mBAAmB;4CACnB,mBAAmB;wCACrB;wCACA,WAAU;;0DAEV,6LAAC,6MAAA,CAAA,SAAM;gDAAC,WAAU;;;;;;4CAAY;;;;;;;;;;;;8CAIlC,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CACC,SAAS,IAAM,mBAAmB;4CAClC,WAAU;sDACX;;;;;;sDAGD,6LAAC;4CACC,SAAS;gDACP,mBAAmB;gDACnB,eAAe;4CACjB;4CACA,WAAU;;8DAEV,6LAAC,8MAAA,CAAA,OAAI;oDAAC,WAAU;;;;;;gDAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAUvC,oBAAoB,8BACnB,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;sCAEb,6LAAC;4BAAI,WAAW,CAAC,iBAAiB,EAChC,aAAa,SAAS,KAAK,SACvB,4BACA,aAAa,SAAS,KAAK,WAC3B,iCACA,8BACL,8BAA8B,CAAC;;8CAC9B,6LAAC;oCACC,WAAU;oCACV,SAAS,IAAM,oBAAoB;8CAEnC,cAAA,6LAAC,+LAAA,CAAA,IAAC;wCAAC,WAAU;;;;;;;;;;;8CAGf,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,WAAU;sDACZ,aAAa,QAAQ,CAAC,MAAM,CAAC,GAAG,WAAW;;;;;;sDAE9C,6LAAC;;8DACC,6LAAC;oDAAG,WAAU;8DAAsB,aAAa,QAAQ;;;;;;8DACzD,6LAAC;oDAAI,WAAU;8DACb,cAAA,6LAAC;wDAAI,WAAU;kEACZ,aAAa,aAAa,SAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sCAQ9C,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCACC,SAAS,IAAM,aAAa;wCAC5B,WAAW,CAAC,8CAA8C,EACxD,cAAc,aACV,kCACA,8EACJ;kDACH;;;;;;kDAGD,6LAAC;wCACC,SAAS,IAAM,aAAa;wCAC5B,WAAW,CAAC,8CAA8C,EACxD,cAAc,aACV,kCACA,8EACJ;kDACH;;;;;;kDAGD,6LAAC;wCACC,SAAS,IAAM,aAAa;wCAC5B,WAAW,CAAC,8CAA8C,EACxD,cAAc,WACV,kCACA,8EACJ;kDACH;;;;;;kDAGD,6LAAC;wCACC,SAAS,IAAM,aAAa;wCAC5B,WAAW,CAAC,8CAA8C,EACxD,cAAc,YACV,kCACA,8EACJ;kDACH;;;;;;;;;;;;;;;;;sCAOL,6LAAC;4BAAI,WAAU;;gCACZ,cAAc,4BACb,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAG,WAAU;sEAAoC;;;;;;sEAClD,6LAAC;4DAAE,WAAU;sEAA6C,aAAa,MAAM,CAAC,MAAM;;;;;;;;;;;;8DAEtF,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAG,WAAU;sEAAoC;;;;;;sEAClD,6LAAC;4DAAE,WAAU;sEAA6C,aAAa,eAAe;;;;;;;;;;;;8DAExF,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAG,WAAU;sEAAoC;;;;;;sEAClD,6LAAC;4DAAE,WAAU;sEAA6C,aAAa,aAAa;;;;;;;;;;;;;;;;;;sDAIxF,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAG,WAAU;8DAA2C;;;;;;8DACzD,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAI,WAAU;;8EACb,6LAAC;oEAAK,WAAU;8EAAwB;;;;;;8EACxC,6LAAC;8EACE,aAAa,MAAM,iBAClB,6LAAC;wEAAI,WAAU;;0FACb,6LAAC,8NAAA,CAAA,cAAW;gFAAC,WAAU;;;;;;0FACvB,6LAAC;0FAAK;;;;;;;;;;;6FAGR,6LAAC;wEAAI,WAAU;;0FACb,6LAAC,+MAAA,CAAA,UAAO;gFAAC,WAAU;;;;;;0FACnB,6LAAC;0FAAK;;;;;;;;;;;;;;;;;;;;;;;sEAKd,6LAAC;4DAAI,WAAU;;8EACb,6LAAC;oEAAK,WAAU;8EAAwB;;;;;;8EACxC,6LAAC;oEAAI,WAAU;;sFACb,6LAAC;4EAAK,WAAW,CAAC,oBAAoB,EACpC,aAAa,eAAe,GAAG,IAAI,oBAAoB,kBACvD;;gFACC,aAAa,eAAe;gFAAC;gFAAO,aAAa,eAAe,KAAK,IAAI,MAAM;;;;;;;sFAElF,6LAAC;4EACC,SAAS,IAAM,aAAa;4EAC5B,WAAU;sFACX;;;;;;;;;;;;;;;;;;sEAKL,6LAAC;4DAAI,WAAU;;8EACb,6LAAC;oEAAK,WAAU;8EAAwB;;;;;;8EACxC,6LAAC;oEAAK,WAAU;8EACb,WAAW,aAAa,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;;sDAMjD,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAG,WAAU;8DAA2C;;;;;;8DACzD,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DACC,WAAU;4DACV,SAAS;gEACP,aAAa;4DACf;;8EAEA,6LAAC,uNAAA,CAAA,cAAW;oEAAC,WAAU;;;;;;gEAAiB;;;;;;;sEAG1C,6LAAC;4DACC,WAAU;4DACV,SAAS;gEACP,aAAa;4DACf;;8EAEA,6LAAC,uMAAA,CAAA,QAAK;oEAAC,WAAU;;;;;;gEAAiB;;;;;;;;;;;;;;;;;;;;;;;;;gCAQ3C,cAAc,4BACb,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAG,WAAU;0DAAyC;;;;;;0DAEvD,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;;0EACC,6LAAC;gEAAI,WAAU;;kFACb,6LAAC;;0FACC,6LAAC;gFAAG,WAAU;0FAAoC;;;;;;0FAClD,6LAAC;gFAAE,WAAU;0FAAwB;;;;;;;;;;;;kFAEvC,6LAAC;kFACE,aAAa,MAAM,iBAClB,6LAAC;4EAAI,WAAU;;8FACb,6LAAC,8NAAA,CAAA,cAAW;oFAAC,WAAU;;;;;;8FACvB,6LAAC;8FAAK;;;;;;;;;;;iGAGR,6LAAC;4EAAI,WAAU;;8FACb,6LAAC,+MAAA,CAAA,UAAO;oFAAC,WAAU;;;;;;8FACnB,6LAAC;8FAAK;;;;;;;;;;;;;;;;;;;;;;;4DAKb,CAAC,aAAa,MAAM,kBACnB,6LAAC;gEAAI,WAAU;0EACb,cAAA,6LAAC;oEAAO,WAAU;8EAAyN;;;;;;;;;;;;;;;;;kEAOjP,6LAAC;wDAAI,WAAU;;0EACb,6LAAC;gEAAG,WAAU;0EAAyC;;;;;;0EACvD,6LAAC,uJAAA,CAAA,UAAgB;gEACf,UAAU,aAAa,QAAQ;gEAC/B,cAAc;gEACd,UAAU;;;;;;;;;;;;kEAId,6LAAC;wDAAI,WAAU;kEACb,cAAA,6LAAC;4DAAI,WAAU;;8EACb,6LAAC;;sFACC,6LAAC;4EAAG,WAAU;sFAAoC;;;;;;sFAClD,6LAAC;4EAAE,WAAU;sFAAwB;;;;;;;;;;;;8EAEvC,6LAAC;oEAAK,WAAU;8EACb,WAAW,aAAa,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gCAStD,cAAc,0BACb,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAG,WAAU;;wDAAoC;wDAAS,aAAa,MAAM,CAAC,MAAM;wDAAC;;;;;;;8DACtF,6LAAC;oDAAO,WAAU;8DAAyN;;;;;;;;;;;;wCAK5O,aAAa,MAAM,CAAC,MAAM,GAAG,kBAC5B,6LAAC;4CAAI,WAAU;sDACb,cAAA,6LAAC;gDAAG,WAAU;0DACX,aAAa,MAAM,CAAC,GAAG,CAAC,CAAC,OAAO,sBAC/B,6LAAC;kEACC,cAAA,6LAAC;4DAAI,WAAU;;8EACb,6LAAC;oEAAI,WAAU;;sFACb,6LAAC;4EAAI,WAAU;sFACb,cAAA,6LAAC,uMAAA,CAAA,QAAK;gFAAC,WAAU;;;;;;;;;;;sFAEnB,6LAAC;4EAAI,WAAU;sFACb,cAAA,6LAAC;gFAAI,WAAU;0FAAqC;;;;;;;;;;;;;;;;;8EAGxD,6LAAC;8EACC,cAAA,6LAAC;wEAAO,WAAU;;0FAChB,6LAAC,+LAAA,CAAA,IAAC;gFAAC,WAAU;;;;;;4EAAiB;;;;;;;;;;;;;;;;;;uDAZ7B;;;;;;;;;;;;;;iEAsBf,6LAAC;4CAAI,WAAU;;8DACb,6LAAC,uMAAA,CAAA,QAAK;oDAAC,WAAU;;;;;;8DACjB,6LAAC;oDAAG,WAAU;8DAAyC;;;;;;8DACvD,6LAAC;oDAAE,WAAU;8DAA6B;;;;;;;;;;;;;;;;;;gCAMjD,cAAc,2BACb,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAG,WAAU;sDAAyC;;;;;;sDAEvD,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;;sEACC,6LAAC;4DAAG,WAAU;sEAAkE;;;;;;sEAChF,6LAAC;4DAAG,WAAU;;8EACZ,6LAAC;;sFACC,6LAAC;4EAAG,WAAU;sFAAoC;;;;;;sFAClD,6LAAC;4EAAG,WAAU;sFAA8B,aAAa,QAAQ;;;;;;;;;;;;8EAEnE,6LAAC;;sFACC,6LAAC;4EAAG,WAAU;sFAAoC;;;;;;sFAClD,6LAAC;4EAAG,WAAU;sFAAwC,aAAa,GAAG;;;;;;;;;;;;8EAExE,6LAAC;;sFACC,6LAAC;4EAAG,WAAU;sFAAoC;;;;;;sFAClD,6LAAC;4EAAG,WAAU;sFAA8B,aAAa,MAAM;;;;;;;;;;;;8EAEjE,6LAAC;;sFACC,6LAAC;4EAAG,WAAU;sFAAoC;;;;;;sFAClD,6LAAC;4EAAG,WAAU;sFACX,IAAI,KAAK,aAAa,UAAU,EAAE,kBAAkB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;8DAM9D,6LAAC;;sEACC,6LAAC;4DAAG,WAAU;sEAAkE;;;;;;sEAChF,6LAAC;4DAAG,WAAU;;8EACZ,6LAAC;;sFACC,6LAAC;4EAAG,WAAU;sFAAoC;;;;;;sFAClD,6LAAC;4EAAG,WAAU;sFAA8B,WAAW,aAAa,gBAAgB;;;;;;;;;;;;8EAEtF,6LAAC;;sFACC,6LAAC;4EAAG,WAAU;sFAAoC;;;;;;sFAClD,6LAAC;4EAAG,WAAU;sFAA8B,aAAa,MAAM,GAAG,QAAQ;;;;;;;;;;;;8EAE5E,6LAAC;;sFACC,6LAAC;4EAAG,WAAU;sFAAoC;;;;;;sFAClD,6LAAC;4EAAG,WAAU;sFAA8B,aAAa,MAAM,CAAC,MAAM;;;;;;;;;;;;8EAExE,6LAAC;;sFACC,6LAAC;4EAAG,WAAU;sFAAoC;;;;;;sFAClD,6LAAC;4EAAG,WAAU;sFAAQ,aAAa,aAAa,SAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sCASvE,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCACC,MAAK;gCACL,WAAU;gCACV,SAAS,IAAM,oBAAoB;0CACpC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWf;GA54BwB;;QACP,qIAAA,CAAA,YAAS;;;KADF","debugId":null}}]
}