// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(cuid())
  name           String
  email          String          @unique
  password       String
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  awsCredentials AwsCredential[]
}

model AwsCredential {
  id          String      @id @default(cuid())
  name        String
  accessKeyId String
  secretKey   String
  region      String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  userId      String
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  alerts      Alert[]
  siemRules   SiemRule[]
  siemEvents  SiemEvent[]

  @@index([userId])
}

model Alert {
  id           String         @id @default(cuid())
  title        String
  description  String
  resourceId   String
  resourceType String
  severity     String
  status       String         @default("active")
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  credentialId String?
  credential   AwsCredential? @relation(fields: [credentialId], references: [id], onDelete: SetNull)

  @@index([credentialId])
}

model SiemRule {
  id            String        @id @default(cuid())
  name          String
  description   String
  type          String
  query         String
  severity      String
  status        String        @default("active")
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  triggers      Int           @default(0)
  lastTriggered DateTime?
  credentialId  String
  credential    AwsCredential @relation(fields: [credentialId], references: [id], onDelete: Cascade)
  events        SiemEvent[]

  @@index([credentialId])
}

model SiemEvent {
  id           String        @id @default(cuid())
  timestamp    DateTime
  source       String
  eventType    String
  severity     String
  status       String        @default("NEW")
  message      String
  rawData      String
  accountId    String?
  region       String?
  resource     String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  credentialId String
  credential   AwsCredential @relation(fields: [credentialId], references: [id], onDelete: Cascade)
  ruleId       String?
  rule         SiemRule?     @relation(fields: [ruleId], references: [id], onDelete: SetNull)

  @@index([credentialId])
  @@index([ruleId])
}
