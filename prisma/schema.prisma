// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id             String           @id @default(cuid())
  name           String
  email          String           @unique
  password       String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  awsCredentials AwsCredential[]
}

model AwsCredential {
  id            String    @id @default(cuid())
  name          String
  accessKeyId   String
  secretKey     String
  region        String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  userId        String
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  alerts        Alert[]
  insightsRules InsightsRule[]
  
  @@index([userId])
}

model Alert {
  id            String    @id @default(cuid())
  title         String
  description   String
  resourceId    String
  resourceType  String
  severity      String
  status        String    @default("active")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  credentialId  String?
  credential    AwsCredential? @relation(fields: [credentialId], references: [id], onDelete: SetNull)
  
  @@index([credentialId])
}

model InsightsRule {
  id            String      @id @default(cuid())
  name          String
  description   String?
  query         String
  logGroup      String
  severity      String
  isActive      Boolean     @default(true)
  triggers      Int         @default(0)
  lastTriggered DateTime?
  lastExecuted  DateTime?
  region        String?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  credentialId  String
  credential    AwsCredential @relation(fields: [credentialId], references: [id], onDelete: Cascade)
  detections    Detection[]

  @@index([credentialId])
}

model Detection {
  id          String      @id @default(cuid())
  ruleId      String
  timestamp   DateTime
  message     String
  severity    String
  fields      Json
  acknowledged Boolean    @default(false)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  rule        InsightsRule @relation(fields: [ruleId], references: [id], onDelete: Cascade)

  @@index([ruleId])
  @@index([timestamp])
  @@index([severity])
  @@index([acknowledged])
}
